{
    "repository": "HypothesisWorks/hypothesis",
    "stars": 6772,
    "language": "python",
    "size": 36056,
    "clone_url": "https://github.com/HypothesisWorks/hypothesis.git",
    "timestamp": "2023-07-01T09:34:55.225930Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-float64]",
                "time": 0.479,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-int32]",
                "time": 0.524,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape=(0, 1), min_dims=2, max_dims=4, min_side=2, max_side=3)]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=5, min_dims=0)]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_generate_unique_arrays_using_all_elements[mock-draft]",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-numeric_dtypes]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_excluded_min_in_float_arrays[mock-draft--2.0-float64]",
                "time": 0.828,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_discarding",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=(0, -1))]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_non_dead_root",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-complex_dtypes-valid_args10]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_indices",
                "name": "test_generate_tuples_and_non_tuples_for_1d_shape[mock-draft]",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_converts_long_tables_to_dicts",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-arrays(dtype=1, shape=5)]",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[inf-1.0]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-int8]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_choice_tree",
                "name": "test_extends_prefix_from_right",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_may_not_use_unrepresentable_elements[mock-draft-complex64-strat2-True]",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-float64]",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='int8', min_value=10, max_value=5)]",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-bool]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_does_not_save_on_interrupt",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='float32', min_value=-4e+38)]",
                "time": 0.343,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-real_dtypes-int16]",
                "time": 0.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-numeric_dtypes-int64]",
                "time": 0.347,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-from_dtype-valid_args0]",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_runs_optimisation_once_when_generating",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_exit_because_shrink_phase_timeout",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-complex_dtypes-complex128]",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_error_on_missing_dtypes[numeric_dtypes]",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_subnormal_generation[mock-draft-kwargs0]",
                "time": 0.513,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-array_shapes(min_side='not an int')]",
                "time": 0.356,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_encode_permutes_elements",
                "time": 0.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_going_from_interesting_to_invalid_is_flaky",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_branch_ending_in_write",
                "time": 0.567,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[18]",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[28]",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_examples_show_up_as_discarded",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[8]",
                "time": 0.379,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_copying_preserves_signature[<lambda>0]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_warning_on_partial_dtypes[floating_dtypes-keep_anys4]",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_sampler_distribution",
                "time": 1.905,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_double_pinning_does_not_increase_pin_count",
                "time": 0.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_dfas",
                "name": "test_learns_to_bridge_only_two",
                "time": 0.467,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_stops_after_max_examples_when_generating_more_bugs[1]",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrink_down_to_half",
                "time": 0.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'exclude_max': True})]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimize_arrays_with_0d_shape_strategy[mock-draft]",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[12-35-37]",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_ceil_agrees_with_math_ceil[-0.0]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_lstar",
                "name": "test_normalizing_defaults_to_zero",
                "time": 0.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_child_becomes_exhausted_after_split",
                "time": 0.424,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_dead_nodes[order2]",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_can_find_endpoints_of_a_range[True-13-100]",
                "time": 0.392,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_core",
                "name": "test_validates_strategies_for_test_method",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_nan[2-3]",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_can_load_data_from_a_corpus",
                "time": 0.457,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-integer_dtypes-int16]",
                "time": 0.379,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[140-171-221]",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_shrink_variable_draws_with_just_deletion[5]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_simultaneously_lower_non_duplicated_nearby_blocks[1]",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_union_empty",
                "time": 0.362,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_each_month[10]",
                "time": 0.554,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_does_draw_data_for_empty_range",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype_strategies[mock-draft-real_dtypes]",
                "time": 0.432,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_currently_in_hypothesis",
                "time": 0.548,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_simplifies_towards_midnight",
                "time": 0.385,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_composite_edits_annotations",
                "time": 0.401,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-512]",
                "time": 0.457,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-4]",
                "time": 0.483,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_numeric_arrays[mock-draft-float64]",
                "time": 0.447,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_stack_size_detection",
                "time": 0.749,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_strategies_namespace",
                "name": "test_complex_dtypes_raises_on_2021_12",
                "time": 0.383,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_attrs_inference",
                "name": "test_attrs_inference_from_type",
                "time": 3.942,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_before_the_year_2000",
                "time": 0.419,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_pareto",
                "name": "test_pareto_front_contains_different_interesting_reasons",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-64]",
                "time": 0.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-uint32]",
                "time": 0.629,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=2, min_side=-1)]",
                "time": 0.501,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_can_use_pure_args",
                "time": 0.415,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_an_absent_value_is_present_after_it_moves[memory]",
                "time": 0.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_rejection_eventually_terminates_many_invalid_for_min_size",
                "time": 0.387,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemods.TestFixPositionalKeywonlyArgs",
                "name": "test_noop_with_too_many_arguments_passed",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_arbitrary_data",
                "name": "test_errors_when_used_in_find",
                "time": 0.442,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-complex_dtypes(sizes=())]",
                "time": 0.524,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_ga_initialize",
                "time": 0.43,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-64]",
                "time": 0.428,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[65-72-97]",
                "time": 0.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_events_are_noted",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-uint16]",
                "time": 0.596,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-bool]",
                "time": 0.637,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_has_examples_even_when_empty",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_detection",
                "name": "test_detection_of_stateful_tests",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_zero_contained_examples",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_minimizer",
                "name": "test_can_sort_bytes_by_reordering_partially2",
                "time": 0.356,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-512]",
                "time": 0.38,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_signs[5--4-3]",
                "time": 0.459,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_max_magnitude_zero",
                "time": 0.748,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-complex64]",
                "time": 0.515,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_can_delete_a_key_that_is_not_present[memory]",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_pareto_front_contains_smallest_valid_when_not_targeting",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_run_nothing",
                "time": 0.366,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_all_generated_dtypes_are_of_group[mock-draft-real_dtypes-dtype_names3]",
                "time": 0.401,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[119-120-169]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_mutual_recursion",
                "time": 0.436,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_draw_past_end_sets_overflow",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_custom_reprs",
                "name": "test_reprs_as_created",
                "time": 1.579,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_replacement",
                "time": 0.387,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape='a')]",
                "time": 0.441,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_mutually_recursive_tuples_draw_nothing",
                "time": 0.47,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-int64]",
                "time": 0.912,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_reorder_examples",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_on_the_second",
                "time": 0.502,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_get_hints_through_partial[pf2-c d]",
                "time": 0.428,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_basic_access",
                "time": 0.516,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_allow_subnormal_validation[0.0]",
                "time": 0.477,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'max_value': (1+2j)})]",
                "time": 0.506,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_caching",
                "name": "test_does_not_error_on_unhashable_kwarg",
                "time": 0.521,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-integer_dtypes]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_can_reexecute_dead_examples",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_fractional_floats_are_worse_than_one",
                "time": 0.778,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_can_nest_build_context",
                "time": 0.52,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[inf-2.0]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_can_remove_discarded_data",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_combine_labels_is_distinct",
                "time": 0.549,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_choice_tree",
                "name": "test_starts_from_the_end",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='float32', min_value=10, max_value=5)]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_returns_written",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deadline",
                "name": "test_raises_flaky_if_a_test_becomes_fast_on_rerun",
                "time": 0.592,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_concluding_at_prefix_is_flaky",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_dependent_block_pairs_can_lower_to_zero",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-4]",
                "time": 0.691,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape=(5, 3, 2, 1), min_dims=3, max_dims=None, min_side=2, max_side=3)]",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-arrays-valid_args1]",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_intlist",
                "name": "test_error_on_invalid_value",
                "time": 0.589,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_error_on_missing_dtypes[integer_dtypes]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-complex64]",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_indices",
                "name": "test_generate_long_ellipsis[mock-draft]",
                "time": 0.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_minimise_scalar_dtypes[mock-draft]",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-numeric_dtypes-uint8]",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-int16]",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_floats_can_be_constrained[mock-draft]",
                "time": 1.241,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_shrink_variable_draws_with_just_deletion[8]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'min_value': (1+2j)})]",
                "time": 0.589,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-array_shapes(max_side='not an int')]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-int8]",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_floor_agrees_with_math_floor[-10.3]",
                "time": 0.612,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[161-240-289]",
                "time": 0.607,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_all_generated_dtypes_are_of_group[mock-draft-complex_dtypes-dtype_names4]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_may_fill_unique_arrays_with_nan[mock-draft]",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-real_dtypes-int32]",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_debug_data",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=(5,), min_dims=2)]",
                "time": 0.405,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-integer_dtypes-int32]",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_dfa_with_different_string_is_not_equivalent",
                "time": 1.641,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_copying_preserves_signature[<lambda>1]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_examples_support_negative_indexing",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[29]",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[integers(**{'min_value': nan})0]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-arrays(dtype=None, shape=5)]",
                "time": 0.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[60-221-229]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_pareto",
                "name": "test_database_contains_only_pareto_front",
                "time": 0.948,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[19]",
                "time": 0.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[52-165-173]",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=(0, 0), allow_newaxis=None)]",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_stops_after_max_examples_when_generating_more_bugs[5]",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_pareto_front_contains_different_interesting_reasons",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-valid_tuple_axes-valid_args11]",
                "time": 0.412,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_does_not_run_optimisation_when_max_examples_is_small",
                "time": 0.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_permits_but_ignores_raising_order",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-1000]",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_nan[2--3]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_can_add_new_keys_after_unpinning",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_minimizer",
                "name": "test_can_sort_bytes_by_reordering_partially_not_cross_stationary_element",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-100]",
                "time": 0.353,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemods.TestFixPositionalKeywonlyArgs",
                "name": "test_stateful_rule_noop",
                "time": 0.391,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_can_delete_a_key_that_is_not_present[directory]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[9-40-41]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_union_handles_totally_overlapped_gap",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_lstar",
                "name": "test_normalizing_can_be_made_to_distinguish_values",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-complex64]",
                "time": 0.77,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_does_not_shrink_across_one",
                "time": 0.364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_decode_permutes_elements",
                "time": 0.438,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemod_cli",
                "name": "test_codemod_single_file",
                "time": 2.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_can_find_endpoints_of_a_range[True-1000-65535]",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[dates(**{'max_value': 'fish'})]",
                "time": 0.692,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_zig_zags_quickly",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_an_absent_value_is_present_after_it_moves[directory]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_generate_naive_time",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_many_with_min_size",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-1000]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_will_generate_novel_prefix_to_avoid_exhausted_branches",
                "time": 0.362,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_has_cached_examples_even_when_overrun",
                "time": 0.4,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_ceil_agrees_with_math_ceil[0]",
                "time": 0.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_errors_on_non_function_define",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_int_list_cannot_contain_negative",
                "time": 0.421,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_notes_repr",
                "time": 0.424,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_each_month[1]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_terminates_shrinks[1]",
                "time": 0.675,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-complex_dtypes(sizes=(3,))]",
                "time": 0.386,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='float32', max_value=-4e+38)]",
                "time": 0.493,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_composite_of_lists",
                "time": 3.162,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_numeric_arrays[mock-draft-complex64]",
                "time": 0.446,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_given_edits_annotations[1]",
                "time": 0.383,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_novel_prefixes_are_novel",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_allow_subnormal_validation[False]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-100]",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype_strategies[mock-draft-complex_dtypes]",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[9]",
                "time": 0.428,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_off_the_second",
                "time": 0.343,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-unsigned_integer_dtypes]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'min_value': 1.8, 'width': 32})]",
                "time": 0.364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-uint64]",
                "time": 0.58,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape=(2, 2), min_side='a')]",
                "time": 0.517,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_get_hints_through_partial[pf3-c d]",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_ga_no_artifact",
                "time": 0.548,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-int64]",
                "time": 0.547,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_dead_nodes[order3]",
                "time": 0.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_uniform_float_shrinks_to_zero",
                "time": 0.44,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-int8]",
                "time": 0.527,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-complex128]",
                "time": 0.437,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_exhaust_space",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_discarding_iterates_to_fixed_point",
                "time": 0.447,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[inf-1.7976931348623157e+308]",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_fails_health_check_for_all_invalid",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_blocks_end_points",
                "time": 0.388,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_warning_on_partial_dtypes[real_dtypes-keep_anys5]",
                "time": 1.6,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_choice_tree",
                "name": "test_skips_over_exhausted_subtree",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_does_not_suppress_exceptions",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-8]",
                "time": 0.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_dfas",
                "name": "test_learns_to_bridge_only_two_with_overlap",
                "time": 0.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[20-99-101]",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_each_month[11]",
                "time": 0.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'places': -1})]",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_error_on_missing_dtypes[unsigned_integer_dtypes]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_shrink_variable_draws_with_just_deletion[15]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_handle_size_too_large_during_dependent_lowering",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_simultaneously_lower_non_duplicated_nearby_blocks[2]",
                "time": 0.49,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_signs[-5--4-3]",
                "time": 0.441,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_literals_strategy_is_valid",
                "time": 2.616,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_can_clear_a_cache",
                "time": 0.377,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control.test_currently_in_stateful_test",
                "name": "runTest",
                "time": 2.95,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_may_not_fill_unique_array_with_non_nan[mock-draft]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='int8', min_value=-999)]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-int16]",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-array_shapes(min_dims='not an int')]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_intlist",
                "name": "test_extend_by_too_large",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-complex128]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_caching",
                "name": "test_caches_floats_sensitively",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[105-208-233]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_kwonly_lambda_formatting[<lambda>-lambda *z, a: a]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'min_value': '0.1', 'max_value': '0.9', 'places': 0})]",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-real_dtypes-int64]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[integers(**{'min_value': 2, 'max_value': 1})]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-int32]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_can_override_label",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-array_shapes-valid_args2]",
                "time": 0.36,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape=(0, 3, 2, 1), min_dims=3, max_dims=None, min_side=2, max_side=3)]",
                "time": 0.37,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_subnormal_generation[mock-draft-kwargs1]",
                "time": 0.539,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_indices",
                "name": "test_indices_replaces_whole_axis_slices_with_ellipsis[mock-draft]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[30]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_can_specify_sizes_as_an_int[mock-draft-integer_dtypes-8]",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=(5,), max_dims=2)]",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_core",
                "name": "test_non_executed_tests_raise_skipped[no_phases]",
                "time": 0.596,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-integer_dtypes-int64]",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=(0, 0), allow_ellipsis=None)]",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_nan[2-inf]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_invalid_numpy_sample",
                "time": 0.437,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_block_deletion_can_delete_short_ranges",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-numeric_dtypes-uint16]",
                "time": 0.393,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[20]",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-8]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-broadcastable_shapes-valid_args12]",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_union_handles_partially_overlapped_gap",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_optimises_to_maximum",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[28-45-53]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_targeting_can_drive_length_very_high",
                "time": 1.95,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_floor_agrees_with_math_floor[-0.5]",
                "time": 0.39,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_self_organising_list_raises_not_found_when_none_satisfy",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_stops_after_max_examples_when_generating_more_bugs[20]",
                "time": 0.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_lstar",
                "name": "test_learning_large_dfa",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_all_generated_scalar_dtypes_are_scalar[mock-draft]",
                "time": 0.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_zero_irregular_examples",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[19-180-181]",
                "time": 0.375,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemods.TestFixPositionalKeywonlyArgs",
                "name": "test_substitution",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_an_absent_value_is_present_after_it_moves_to_self[memory]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_can_write_bytes_towards_the_end",
                "time": 0.453,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-1024]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_each_month[2]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_many_with_max_size",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_numeric_arrays[mock-draft-int8]",
                "time": 0.729,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_can_mark_interesting",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_arbitrary_data",
                "name": "test_errors_when_normal_strategy_functions_are_used[filter]",
                "time": 0.61,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_converts_floats_to_integer_form[2.0]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_ceil_agrees_with_math_ceil[0.5]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[dates(**{'min_value': datetime.date(2017, 8, 22),\\n 'max_value': datetime.date(2017, 8, 21)})]",
                "time": 0.343,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_minimal",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-1024]",
                "time": 0.371,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_iterates_over_remaining_keys",
                "time": 0.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-128]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[68-285-293]",
                "time": 0.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='float32', min_value=4e+38)]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_excluded_min_in_float_arrays[mock-draft--1.0-float32]",
                "time": 0.669,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_will_mark_changes_in_discard_as_flaky",
                "time": 0.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_uniform_float_can_draw_1",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_errors_if_define_does_not_return_search_strategy",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_blocks_lengths",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_naive_times_are_naive",
                "time": 0.664,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_can_write_empty_string",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-floating_dtypes]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[10]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_min_magnitude_respected",
                "time": 2.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deadline",
                "name": "test_deadlines_participate_in_shrinking",
                "time": 0.598,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_can_fetch_a_key_that_is_not_present[memory]",
                "time": 0.415,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_dead_nodes[order4]",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_given_edits_annotations[2]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_int_list_can_contain_arbitrary_size",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_discards_kill_branches",
                "time": 2.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_does_not_cache_extended_prefix",
                "time": 0.453,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_decode_encode",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype_name_strategies[mock-draft]",
                "time": 1.688,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_concluding_with_overrun_at_prefix_is_not_flaky",
                "time": 0.552,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-10]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_simplify_draws",
                "time": 0.502,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[60-91-109]",
                "time": 0.378,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_numeric_arrays[mock-draft-complex128]",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_choice_tree",
                "name": "test_exhausts_randomly",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[nan-0.0]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-128]",
                "time": 0.492,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_overruns_if_not_enough_bytes_for_block",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_dfas",
                "name": "test_learns_to_bridge_only_two_with_suffix",
                "time": 0.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_simultaneously_lower_non_duplicated_nearby_blocks[3]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_deletion_and_lowering_fails_to_shrink",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_suppresses_exceptions_in_teardown",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_fails_health_check_for_large_base",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'places': 0.5})]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_block_may_grow_during_lexical_shrinking",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='int8', max_value=-999)]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_error_on_missing_dtypes[floating_dtypes]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_database_contains_only_pareto_front",
                "time": 1.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'max_value': 1.8, 'width': 32})]",
                "time": 0.482,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_may_not_use_overflowing_integers[mock-draft-kwargs0]",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[120-209-241]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-array_shapes(max_dims='not an int')]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[dictionaries(**{'keys': booleans(), 'values': booleans(), 'min_size': 10, 'max_size': 1})]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_out_of_range",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_kwonly_lambda_formatting[<lambda>-lambda *z, a=1: a]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_max_size_cache_ignores",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_subnormal_underflow",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=2, min_dims=-1)]",
                "time": 0.824,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-int32]",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_will_mark_too_deep_examples_as_invalid",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-arrays(dtype='int8', shape=(0.5,))]",
                "time": 0.59,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[mock-draft-float32-kwargs0-<lambda>]",
                "time": 0.64,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[integers(**{'min_value': nan})1]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-real_dtypes-uint8]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-bool]",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=0)]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-uint32]",
                "time": 0.786,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_reverse_bits_table_reverses_bits",
                "time": 0.549,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_simplifies_towards_zero_delta",
                "time": 0.415,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=(0, 0), min_dims=-1)]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_make_strategies_namespace_raise_invalid_argument[mock-api_version0]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-uint8]",
                "time": 0.5,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_discarding_is_not_fooled_by_empty_discards",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_can_specify_sizes_as_an_int[mock-draft-unsigned_integer_dtypes-8]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_nan[2-nan]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_successive_union",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_ga_corrupted_artifact",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-unsigned_integer_dtypes-uint8]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_signs[0-0-0]",
                "time": 0.375,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-mutually_broadcastable_shapes-valid_args13]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[31]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[21]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-10]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-uint8]",
                "time": 0.472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_an_absent_value_is_present_after_it_moves_to_self[directory]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_valid_numpy_sample",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_core",
                "name": "test_non_executed_tests_raise_skipped[no_explicit]",
                "time": 0.35,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_stops_after_max_examples_when_generating_more_bugs[50]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_self_organising_list_moves_to_front",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[57-176-185]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[11-60-61]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_try_shrinking_blocks_ignores_overrun_blocks",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-scalar_dtypes-valid_args3]",
                "time": 0.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_optimises_multiple_targets",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-numeric_dtypes-uint32]",
                "time": 0.325,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_cache_is_threadsafe_issue_2433_regression",
                "time": 0.497,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-256]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[datetimes(**{'min_value': 'fish'})]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_coin_biased_towards_truth",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_errors_on_definition_as_self",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_drawing_zero_bits_is_free",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_retain_end_of_buffer",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_each_month[3]",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_biased_coin_can_be_forced",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-1]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-int64]",
                "time": 0.43,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='float32', max_value=4e+38)]",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[11]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-int16]",
                "time": 0.442,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-real_dtypes]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-1]",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_encode_decode",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_all_generated_numeric_dtypes_are_numeric[mock-draft]",
                "time": 0.38,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_int_list_of_length",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_indices",
                "name": "test_efficiently_generate_indexers[mock-draft]",
                "time": 0.446,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_given_edits_annotations[3]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[15-112-113]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_subnormal_generation[mock-draft-kwargs2]",
                "time": 0.498,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[nan-1.0]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_converts_floats_to_integer_form[10000000.0]",
                "time": 0.405,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_changing_n_bits_is_flaky_in_prefix",
                "time": 0.325,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_dead_nodes[order5]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_floor_agrees_with_math_floor[-0.0]",
                "time": 0.437,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_duplicate_blocks_that_go_away",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemods.TestHealthcheckAll",
                "name": "test_noop_other_attributes",
                "time": 0.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_lower_common_block_offset_does_nothing_when_changed_blocks_are_zero",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_runs_multiple_cleanup_with_teardown",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_fails_health_check_for_large_non_base",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_uniqueness_is_preserved_when_writing_at_beginning",
                "time": 0.385,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_ceil_agrees_with_math_ceil[10.3]",
                "time": 0.442,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_numeric_arrays[mock-draft-int16]",
                "time": 0.44,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deadline",
                "name": "test_keeps_you_well_above_the_deadline",
                "time": 0.507,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_blocks_preserve_identity",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_overruns_if_prefix",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='int8', min_value=999)]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_choice_tree",
                "name": "test_exhausts_randomly_when_filtering",
                "time": 0.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_error_on_missing_dtypes[real_dtypes]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_dfas",
                "name": "test_updating_the_file_makes_no_changes_normally",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_terminates_shrinks[5]",
                "time": 0.729,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-16]",
                "time": 0.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'min_value': nan})0]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'max_value': 0.0, 'min_value': 1.0})]",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_kwonly_lambda_formatting[<lambda>-lambda *, a: a]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_pass_through",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimize_large_uint_arrays[mock-draft]",
                "time": 0.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_minimal_nonzero_real",
                "time": 0.61,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_charmap_contains_all_unicode",
                "time": 0.466,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype=1)]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_can_fetch_a_key_that_is_not_present[directory]",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-float32]",
                "time": 0.62,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[32-255-257]",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[integers(**{'max_value': nan})]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-int64]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_reverse_bits_table_has_right_elements",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-int8]",
                "time": 0.398,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-valid_tuple_axes(ndim=-1)]",
                "time": 0.77,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=(0, 0), min_dims=1.0)]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes='a')]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_min_value_is_respected",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_pinning_prevents_eviction",
                "time": 0.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-256]",
                "time": 0.407,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_pareto",
                "name": "test_clears_defunct_pareto_front",
                "time": 0.432,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_ga_deletes_old_artifacts",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_discarding_can_fail",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_enumeration_when_sizes_do_not_agree",
                "time": 0.534,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_signs[1-0-1]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_nan[inf-inf]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_prefix_cannot_exceed_buffer_size",
                "time": 1.681,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_empty_strategy_is_invalid",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_can_pass_through_arguments",
                "time": 0.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_simple_underflow",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_can_handle_race_between_exist_and_create",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-indices-valid_args14]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[22]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-real_dtypes-uint16]",
                "time": 0.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape=(2, 2), min_dims='a')]",
                "time": 0.74,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_arbitrary_data",
                "name": "test_errors_when_normal_strategy_functions_are_used[map]",
                "time": 0.559,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_two_directory_databases_can_interact",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_lstar",
                "name": "test_can_learn_varint_predicate",
                "time": 1.371,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_lstar",
                "name": "test_can_learn_simple_predicate",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_interleaving_engines",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_core",
                "name": "test_non_executed_tests_raise_skipped[empty_db]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-unsigned_integer_dtypes-uint16]",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_each_month[12]",
                "time": 0.696,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_may_not_use_overflowing_integers[mock-draft-kwargs1]",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_does_cache_if_extend_is_not_used",
                "time": 0.517,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-16]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_can_mark_invalid",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_optimises_when_last_element_is_empty",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-numeric_dtypes-uint64]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-500]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_branches_pass_through_deferred",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[datetimes(**{'max_value': 'fish'})]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_dependent_block_pairs_is_up_to_shrinking_integers",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-boolean_dtypes-valid_args4]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_coin_biased_towards_falsehood",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-uint64]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_assert_biased_coin_always_treats_one_as_true",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-2]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_can_specify_sizes_as_an_int[mock-draft-floating_dtypes-32]",
                "time": 0.38,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-complex_dtypes]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[12]",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-integer_dtypes(sizes=())]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_each_month[4]",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_double_reverse_bounded",
                "time": 0.504,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_expand_zeroed_region",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[16-63-65]",
                "time": 0.37,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_child_indices",
                "time": 0.624,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_generate_datetime_with_fold_1",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-2]",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_int_list_equality",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-uint8]",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[104-153-185]",
                "time": 0.387,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_make_strategies_namespace_raise_invalid_argument[mock-latest]",
                "time": 0.448,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_indices",
                "name": "test_generate_valid_indices[mock-draft]",
                "time": 1.892,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-bool]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_max_length_of_recursive_dfa",
                "time": 0.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_excluded_min_in_float_arrays[mock-draft--1.0-float64]",
                "time": 0.656,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fractions(**{'min_value': 2, 'max_value': 1})]",
                "time": 0.533,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[nan-2.0]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[44-117-125]",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_attrs_inference_builds",
                "time": 0.466,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_accidental_duplication",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_lower_common_block_offset_ignores_zeros",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_inquisitor",
                "name": "test_inquisitor_comments_basic_fail_if_either",
                "time": 1.177,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_floor_agrees_with_math_floor[0]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_raises_error_if_cleanup_fails_but_block_does_not",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-complex128]",
                "time": 1.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemods.TestHealthcheckAll",
                "name": "test_substitution",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_fails_health_check_for_slow_draws",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_compact_blocks_during_generation",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_invalid_set_sample",
                "time": 0.475,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=2, min_side=1, max_side=0)]",
                "time": 0.546,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_ceil_agrees_with_math_ceil[10.7]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_saving_a_key_twice_fetches_it_once[memory]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='int8', max_value=999)]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-uint16]",
                "time": 0.563,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_floats_can_be_constrained_excluding_endpoints[mock-draft]",
                "time": 1.146,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_interface",
                "name": "test_debug_output",
                "time": 0.532,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_changing_n_bits_is_flaky_in_branch",
                "time": 0.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_dfas",
                "name": "test_updating_the_file_include_new_shrinkers",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_can_assign_without_changing_underlying",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_clears_out_its_database_on_shrinking[127-False]",
                "time": 0.393,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_kwonly_lambda_formatting[<lambda>-lambda *, a=1: a]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'min_value': 1.0, 'max_value': 0.0})]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_charmap_has_right_categories",
                "time": 0.798,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'max_value': nan})]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_can_lookup_cached_examples",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[mock-draft-float32-kwargs1-<lambda>]",
                "time": 0.746,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-int32]",
                "time": 0.838,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-arrays(dtype='int8', shape=1, fill=3)]",
                "time": 0.579,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[integers(**{'min_value': Decimal('1.5')})]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype=None)]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-uint8]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_numeric_arrays[mock-draft-int32]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-uint16]",
                "time": 0.667,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_stores_the_tree_flat_until_needed",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=(0, 0), max_dims=-1)]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-32]",
                "time": 0.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_error_on_missing_dtypes[complex_dtypes]",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_unpinning_allows_eviction",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_will_error_on_find",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_shrinking_from_mostly_zero",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_max_value_is_respected",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_always_leq_hypot",
                "time": 0.75,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_enumeration_of_very_long_strings",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_custom_reprs",
                "name": "test_reprs_as_created_interactive",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[1.0-0.0]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[23]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_can_handle_disappearing_files",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_custom_reprs",
                "name": "test_includes_non_default_args_in_repr",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape=(2, 2), max_side='a')]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_can_mark_invalid_with_why",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_can_draw_one_of_self",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[datetimes(**{'allow_imaginary': 0})]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_can_optimise_last_with_following_empty",
                "time": 0.471,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_infinite[inf-3]",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_exception_in_write_does_not_lead_to_broken_charmap",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_phases_can_disable_shrinking",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_huge_no_overflow",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-512]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_pin_and_unpin_are_noops_if_dropped",
                "time": 0.419,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-numeric_dtypes-valid_args5]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimize_float_arrays[mock-draft]",
                "time": 0.517,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_min_year_is_respected",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-numeric_dtypes-float32]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_can_draw_arbitrary_fractions",
                "time": 0.974,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_unbiased_coin_has_no_second_order",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_can_assume_in_draw",
                "time": 1.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_finding_a_minimal_balanced_binary_tree",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-valid_tuple_axes(ndim=2, min_size=-1)]",
                "time": 0.343,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_subnormal_generation[mock-draft-kwargs3]",
                "time": 0.537,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-4]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[13]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_arbitrary_data",
                "name": "test_errors_when_normal_strategy_functions_are_used[flatmap]",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-unsigned_integer_dtypes-uint32]",
                "time": 0.342,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_may_not_use_unrepresentable_elements[mock-draft-float32-strat0-False]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-500]",
                "time": 0.43,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=2, base_shape='a')]",
                "time": 0.43,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[33-56-65]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-integer_dtypes(sizes=(3,))]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-int16]",
                "time": 0.464,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-float32]",
                "time": 0.342,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_can_specify_sizes_as_an_int[mock-draft-complex_dtypes-64]",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-uint16]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_int_list_extend",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_make_strategies_namespace_raise_invalid_argument[mock-1970.01]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[95-168-193]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_generate_time_with_fold_1",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-valid_tuple_axes]",
                "time": 0.353,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_expand_deleted_region",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[23-264-265]",
                "time": 0.493,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_ga_triggers_fetching",
                "time": 0.413,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[88-105-137]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-4]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-real_dtypes-uint32]",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_inferred_version_strategies_namespace_repr[mock]",
                "time": 0.441,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_floor_agrees_with_math_floor[0.5]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_zero_subintervals",
                "time": 0.687,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[nan-1.7976931348623157e+308]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_pandas_hack",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-float64]",
                "time": 0.479,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_handles_indices_like_a_list",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-int8]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deadline",
                "name": "test_gives_a_deadline_specific_flaky_error_message",
                "time": 0.39,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_example_equality",
                "time": 0.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_choice_tree",
                "name": "test_can_enumerate_a_shallow_set",
                "time": 0.631,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_raises_if_note_out_of_context",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_each_month[5]",
                "time": 0.432,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_clears_defunct_pareto_front",
                "time": 0.42,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_can_shrink_variable_draws[1]",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_saving_a_key_twice_fetches_it_once[directory]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-32]",
                "time": 0.466,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_kwonly_lambda_formatting[<lambda>-lambda **kw: kw]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'min_value': (1+2j)})]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=2, min_dims=1, max_dims=0)]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='int8', min_value='not an int')]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fractions(**{'min_value': nan})]",
                "time": 0.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-uint16]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_can_lookup_cached_examples_with_forced",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_split_in_the_middle",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_pop",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_pareto",
                "name": "test_down_samples_the_pareto_front",
                "time": 0.915,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=(0, 0), max_dims=1.0)]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_valid_list_sample",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_numeric_arrays[mock-draft-int64]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_lstar",
                "name": "test_relearning_does_not_change_generation",
                "time": 0.531,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_extending_past_conclusion_is_flaky",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_can_note_non_str",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-64]",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'min_value': 0.0, 'max_value': 1.0, 'allow_infinity': True})]",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[integers(**{'max_value': Decimal('1.5')})]",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[2.0-0.0]",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_readonly_db_is_not_writable",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_custom_reprs",
                "name": "test_sampled_repr_leaves_range_as_range",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_transitions_out_of_dead_are_empty",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_attrs_inference_from_type",
                "time": 0.497,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_single_timedelta",
                "time": 1.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_does_result_for_reuse",
                "time": 0.582,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_clears_out_its_database_on_shrinking[127-True]",
                "time": 0.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_sampler_does_not_draw_minimum_if_zero",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_closes_interval_on_error_in_strategy",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[24]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[datetimes(**{'min_value': datetime.datetime(2017, 8, 22, 0, 0),\\n 'max_value': datetime.datetime(2017, 8, 21, 0, 0)})]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_double_reverse",
                "time": 0.63,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_dfas",
                "name": "test_will_error_if_does_not_normalise_and_cannot_update",
                "time": 0.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_interface",
                "name": "test_includes_name_in_repr_if_set",
                "time": 0.416,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_reuse_phase_runs_for_max_examples_if_generation_is_disabled",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_all_matching_regions_include_all_matches",
                "time": 1.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape=(2, 2), max_dims='a')]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-numeric_dtypes-float64]",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_regenerate_broken_charmap_file",
                "time": 0.636,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_max_year_is_respected",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_infinite[inf--3]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_no_type_hints",
                "time": 0.447,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_drawing_certain_coin_still_writes",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[14]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_arbitrary_data",
                "name": "test_errors_when_asked_for_example",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-1000]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_minimal_nonzero_imaginary",
                "time": 0.679,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_may_not_use_unrepresentable_elements[mock-draft-float32-strat0-True]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-unsigned_integer_dtypes-uint64]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=2, min_side='a')]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_float_shrink_can_run_when_canonicalisation_does_not_work",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-8]",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-valid_tuple_axes(ndim=2, min_size=3, max_size=10)]",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[48-55-73]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='uint8', min_value=-999)]",
                "time": 0.476,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_warning_on_partial_dtypes[scalar_dtypes-keep_anys0]",
                "time": 1.659,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_is_dead_with_cache_reuse",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_hidden_self_references_just_result_in_no_example",
                "time": 0.4,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-integer_dtypes-valid_args6]",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-arrays(dtype='int8', shape=1, elements='not a strategy')]",
                "time": 0.474,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_make_strategies_namespace_raise_invalid_argument[mock-42]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-float64]",
                "time": 0.325,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_strategies_namespace",
                "name": "test_caching[2021.12]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_binary_search[0]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-uint32]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_unpins_must_match_pins",
                "time": 0.436,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[17-144-145]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_ga_fallback_expired",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_detects_flakiness",
                "time": 0.505,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-uint32]",
                "time": 0.479,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_specified_version_strategies_namespace_repr[mock]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-8]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_floor_agrees_with_math_floor[10.3]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-unsigned_integer_dtypes(sizes=())]",
                "time": 0.365,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_shrink_pass_method_is_idempotent",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_warning_on_partial_dtypes[complex_dtypes-keep_anys6]",
                "time": 0.434,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_handles_nesting_of_discard_correctly",
                "time": 0.44,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_can_observe_draws",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[nan-inf]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_allow_imaginary_is_not_an_error_for_naive_datetimes",
                "time": 0.64,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_raises_if_current_build_context_out_of_context",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_cached_test_function_returns_right_value",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-int16]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_partial_buffer",
                "time": 0.443,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_indices",
                "name": "test_generate_optional_indices[mock-draft-<lambda>0]",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-uint32]",
                "time": 0.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_excluded_min_in_float_arrays[mock-draft-0.0-float32]",
                "time": 0.73,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_can_find_endpoints_of_a_range[False-0-1000]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-real_dtypes-uint64]",
                "time": 0.361,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_can_close_a_database_after_saving[memory]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_large_no_overflow",
                "time": 0.466,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='int8', max_value='not an int')]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-512]",
                "time": 0.403,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-uint32]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'max_value': (1+2j)})]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_can_shrink_variable_draws[5]",
                "time": 0.413,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_stores_forced_nodes",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_to_fill[mock-draft]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-64]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_each_month[6]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_given_notices_missing_kwonly_args",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_clamp",
                "time": 0.511,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_can_detect_when_tree_is_exhausted",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=(0, 0), min_dims=2, max_dims=1)]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_can_note_str_as_non_repr",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_lstar",
                "name": "test_can_learn_dead_nodes",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_choice",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_changing_to_forced_is_flaky",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_numeric_arrays[mock-draft-uint8]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[integers(**{'min_value': -1.5, 'max_value': -0.5})]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=2, base_shape=(5, 1), min_dims=2, max_dims=4, min_side=2, max_side=3)]",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fractions(**{'max_value': nan})]",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'min_value': 'inf'})]",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deadline",
                "name": "test_should_only_fail_a_deadline_if_the_test_is_slow[False-False]",
                "time": 0.483,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_integer_range_center_upper",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_does_not_double_freeze_in_interval_close",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-int32]",
                "time": 0.533,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'min_value': nan})]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_multiplexed_dbs_read_and_write_all",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_interface",
                "name": "test_normally_contains_no_space_for_name",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_custom_reprs",
                "name": "test_supports_positional_and_keyword_args_in_builds",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[25]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_drawing_impossible_coin_still_writes",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_infinite[inf-0]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_replaces_all_dominated",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_dfas",
                "name": "test_will_error_if_takes_too_long_to_normalize",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_caching",
                "name": "test_no_args",
                "time": 0.579,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[15]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_arbitrary_data",
                "name": "test_nice_repr",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[28-195-197]",
                "time": 0.519,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_single_date",
                "time": 1.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_resolve_fwd_refs[Foo-expected0]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_try_shrinking_blocks_out_of_bounds",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_may_not_use_unrepresentable_elements[mock-draft-float64-strat1-False]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_max_length_of_empty_dfa_is_zero",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='uint8', max_value=-999)]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-floating_dtypes-float32]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_does_not_cache_overrun_if_extending",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-valid_tuple_axes(ndim=2, min_size=2, max_size=1)]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape=(2, 2), min_side=-1)]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_clears_out_its_database_on_shrinking[128-False]",
                "time": 0.405,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-unsigned_integer_dtypes-valid_args7]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=2, min_dims='a')]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-bool]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[13-84-85]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_strategies_namespace",
                "name": "test_caching[None]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_binary_search[1]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-broadcastable_shapes]",
                "time": 0.57,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[24-143-145]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[96-247-265]",
                "time": 0.598,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_will_error_instead_of_evicting_pin",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_erratic_draws",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-uint64]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_minimal_quadrant1",
                "time": 0.401,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-1024]",
                "time": 0.379,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_all_generated_dtypes_are_of_group[mock-draft-integer_dtypes-dtype_names0]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend.TestGADReads",
                "name": "runTest",
                "time": 9.74,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-arrays(dtype='int8', shape='not a shape or strategy')]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-complex64]",
                "time": 1.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_floor_agrees_with_math_floor[10.7]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_calls_concluded_implicitly",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_recursion_error_is_not_flaky",
                "time": 0.371,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_self_recursive_flatmap",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-10]",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_current_build_context_is_current",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_custom_reprs",
                "name": "test_as_created_reprs_fallback_for_distinct_calls_same_obj",
                "time": 0.781,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_arbitrary_data",
                "name": "test_conditional_draw",
                "time": 0.513,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-10]",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_will_terminate_stalled_shrinks",
                "time": 1.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_can_close_a_database_after_saving[directory]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_can_find_endpoints_of_a_range[False-13-100]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_lstar",
                "name": "test_cannot_reuse_dfa",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-int32]",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_raises_on_inferring_with_no_dunder_version",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[mock-draft-float32-kwargs2-<lambda>]",
                "time": 0.814,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-real_dtypes-float32]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[3-4-5]",
                "time": 0.366,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_can_transition_from_dead",
                "time": 0.507,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-uint64]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='float32', min_value='not a float')]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-int64]",
                "time": 0.693,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-1000]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-100]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_shapes[mock-draft]",
                "time": 1.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_generate_arrays_from_shapes_strategy[mock-draft]",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_generate_unique_arrays[mock-draft]",
                "time": 0.567,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=(3, 3, 3), min_dims=4)]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_database_clears_secondary_key",
                "time": 0.39,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_each_month[7]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'exclude_min': None})]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_converter_handles_kwonly_args",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_result_is_overrun",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_indices",
                "name": "test_generate_optional_indices[mock-draft-<lambda>1]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_pass_to_an_indirect_descendant",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_can_detect_when_tree_is_exhausted_variable_size",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_lstar",
                "name": "test_iterates_over_learned_strings",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-1]",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_fractional_float",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_correctly_relocates_forced_nodes",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=2, base_shape=(0, 1), min_dims=2, max_dims=4, min_side=2, max_side=3)]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_changing_value_of_forced_is_flaky",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-unsigned_integer_dtypes(sizes=(3,))]",
                "time": 0.437,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'max_value': '-inf'})]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_nan[nan-3]",
                "time": 0.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_integer_range_center_lower",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_cached_test_function_does_not_reinvoke_on_prefix",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fractions(**{'max_denominator': 0})]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'max_value': nan})]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_custom_reprs",
                "name": "test_preserves_sequence_type_of_argument",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-numeric_dtypes-complex64]",
                "time": 0.569,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-uint64]",
                "time": 0.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[integers(**{'min_value': 0.1, 'max_value': 0.2})]",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_triviality",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_choice_tree",
                "name": "test_can_enumerate_a_nested_set",
                "time": 0.401,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_infinite[inf-nan]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_drawing_an_exact_fraction_coin",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_structural_coverage_is_cached",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_draw_write_round_trip",
                "time": 0.526,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[26]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[16]",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_block_programs_are_adaptive",
                "time": 1.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-100]",
                "time": 0.67,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_query_matches_categories",
                "time": 1.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-complex64]",
                "time": 0.527,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_can_shrink_variable_draws[8]",
                "time": 0.503,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_ga_require_readonly_wrapping",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_buffer_draws_as_self",
                "time": 0.655,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_may_not_use_unrepresentable_elements[mock-draft-float64-strat1-True]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_async_def.TestAsyncioRun",
                "name": "test_foo",
                "time": 0.694,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='uint8', min_value=999)]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_dfas",
                "name": "test_can_learn_to_normalize_the_unnormalized",
                "time": 3.736,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deadline",
                "name": "test_should_only_fail_a_deadline_if_the_test_is_slow[False-True]",
                "time": 0.452,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_mixed_dfa_initialization",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-valid_tuple_axes(ndim=2.0, min_size=2, max_size=1)]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_binary_search[30]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[51-140-149]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_does_not_duplicate_elements",
                "time": 0.365,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_strategies_namespace",
                "name": "test_inferred_namespace_shares_cache[None-2021.12]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_exclude_characters_are_included_in_key",
                "time": 0.383,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=2, max_side='a')]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_inquisitor",
                "name": "test_inquisitor_comments_basic_fail_if_not_all",
                "time": 15.825,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrink_to_integer_upper_bound",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-int64]",
                "time": 0.435,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-int8]",
                "time": 0.472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-float32]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_optimiser_when_test_grows_buffer_to_invalid",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_all_generated_dtypes_are_of_group[mock-draft-unsigned_integer_dtypes-dtype_names1]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_handles_start_indices_like_a_list",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[2.0-1.0]",
                "time": 0.766,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_samples_from_a_range_directly",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-floating_dtypes-valid_args8]",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_ceil_agrees_with_math_ceil[-10.7]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_self_reference_through_one_of_can_detect_emptiness",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_class_name_is_in_repr[memory]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[36-77-85]",
                "time": 0.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemod_cli",
                "name": "test_codemod_multiple_files",
                "time": 2.881,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_can_find_endpoints_of_a_range[False-1000-65535]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_does_cache_overrun_if_not_extending",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deadline",
                "name": "test_raises_deadline_on_slow_test",
                "time": 0.669,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_minimizer",
                "name": "test_shrink_to_zero",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_pop_without_mask",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_clears_out_its_database_on_shrinking[128-True]",
                "time": 0.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-array_shapes(min_side=2, max_side=1)]",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape=(2, 2), min_dims=-1)]",
                "time": 0.421,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_strategies_have_reusable_values[mock-draft-float32]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_is_still_unique_with_nan_fill[mock-draft]",
                "time": 0.365,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "NaNs not distinct",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-128]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-floating_dtypes-float64]",
                "time": 0.442,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_raises_on_invalid_dunder_version",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_uses_definitions_for_reprs",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_database_uses_values_from_secondary_key",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-16]",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_trivial_before_force_agrees_with_trivial_after",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'exclude_max': None})]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_custom_reprs",
                "name": "test_reprs_as_created_consistent_calls_despite_indentation",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-1024]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_no_read_no_shrink",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-16]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_generate_arrays_from_integers_strategy_as_shape[mock-draft]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_can_index_results",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_shrinking_blocks_from_common_offset",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[84-187-205]",
                "time": 0.498,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-real_dtypes-float64]",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_variadic_draw",
                "time": 0.377,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_indices",
                "name": "test_generate_optional_indices[mock-draft-<lambda>2]",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_converter_notices_missing_kwonly_args",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_numeric_arrays[mock-draft-uint16]",
                "time": 0.611,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-floating_dtypes(sizes=())]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'min_value': '-inf', 'allow_infinity': False})]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_caching",
                "name": "test_tuple_lengths",
                "time": 0.518,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_fixed_size_draw_many",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_does_not_truncate_if_unseen",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_each_month[8]",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_lstar",
                "name": "test_iteration_with_dead_nodes",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_can_go_from_interesting_to_valid",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_custom_reprs",
                "name": "test_errors_are_deferred_until_repr_is_calculated",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-int64]",
                "time": 0.407,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_nan[nan-0]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_excluded_min_in_float_arrays[mock-draft-0.0-float64]",
                "time": 0.581,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_prints_all_notes_in_verbose_mode",
                "time": 0.507,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=(3, 3, 3), max_dims=5)]",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_integer_range_lower_equals_upper",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_minimal_min_magnitude_zero",
                "time": 0.342,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-2]",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_resolve_fwd_refs[Bar-expected1]",
                "time": 0.558,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fractions(**{'max_denominator': 1.5})]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[69-260-269]",
                "time": 0.483,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-mutually_broadcastable_shapes]",
                "time": 0.509,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[5-12-13]",
                "time": 0.414,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_pareto",
                "name": "test_stops_loading_pareto_front_if_interesting",
                "time": 0.572,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_one_dead_branch",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[dates(**{'min_value': 'fish'})]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-uint64]",
                "time": 0.603,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_example_depth_marking",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=1, base_shape=(5, 3, 2, 1), min_dims=3, max_dims=4, min_side=2, max_side=3)]",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_examples_create_structural_coverage",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[27]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_may_not_use_unrepresentable_elements[mock-draft-complex64-strat2-False]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_will_evict_entries_from_the_cache",
                "time": 0.35,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[17]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_signs[-5-4-3]",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_includes_right_hand_side_targets_in_dominance",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_arbitrary_data",
                "name": "test_prints_on_failure",
                "time": 0.589,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_minimal_quadrant2",
                "time": 0.557,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_canonicalised_matches_same_strings",
                "time": 0.689,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-valid_tuple_axes(ndim=2, min_size=1.0, max_size=2)]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'min_value': 2, 'max_value': 1})]",
                "time": 0.37,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='float32', max_value='not a float')]",
                "time": 0.448,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-128]",
                "time": 0.325,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_too_small_to_be_useful_coin",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_will_error_for_bad_unpin",
                "time": 0.59,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_choice_tree",
                "name": "test_can_enumerate_empty",
                "time": 0.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=2, max_dims='a')]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-complex128]",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_strategies_namespace",
                "name": "test_inferred_namespace_shares_cache[2021.12-None]",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-float32]",
                "time": 0.609,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_binary_search[70]",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_can_patch_up_examples",
                "time": 0.767,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-numeric_dtypes-complex128]",
                "time": 0.434,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrink_up_to_one",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_ceil_agrees_with_math_ceil[-10.3]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_p_continue_to_average_saturates",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_does_not_shrink_multiple_bugs_when_told_not_to",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[1.7976931348623157e+308-0.0]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-float64]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-from_dtype(dtype='uint8', max_value=999)]",
                "time": 0.402,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_ga_empty_read",
                "time": 0.412,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_does_not_cache_extended_prefix_if_overrun",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_strategies_repr[mock-draft-real_dtypes-valid_args9]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_pop_with_mask",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_class_name_is_in_repr[directory]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-from_dtype]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_max_length_of_long_dfa[1]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fractions(**{'min_value': '0', 'max_value': '1/3', 'max_denominator': 2})]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[85-132-157]",
                "time": 0.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_last_block_length",
                "time": 0.353,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_cannot_draw_unique_arrays_with_too_small_elements[mock-draft]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_self_tuple_draws_nothing",
                "time": 0.353,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deadline",
                "name": "test_should_only_fail_a_deadline_if_the_test_is_slow[True-False]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'max_magnitude': 2, 'allow_nan': True})]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_non_cloneable_intervals",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-256]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_all_generated_dtypes_are_of_group[mock-draft-floating_dtypes-dtype_names2]",
                "time": 0.37,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-1]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_error_writing_charmap_file_is_suppressed",
                "time": 0.747,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-uint8]",
                "time": 0.438,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_errors_given_default_for_draw",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_backend_returns_what_you_put_in",
                "time": 1.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_generate_arrays_from_zero_dimensions[mock-draft]",
                "time": 0.452,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_unique_array_with_fill_can_use_all_elements[mock-draft]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "NaNs not distinct",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_detects_too_small_block_starts",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[mock-draft-float32-kwargs3-<lambda>]",
                "time": 0.494,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_minimizer",
                "name": "test_shrink_to_smallest",
                "time": 0.38,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[39-80-89]",
                "time": 0.392,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_draw_to_overrun",
                "time": 0.424,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_lstar",
                "name": "test_learning_is_just_checking_when_fully_explored",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_exit_because_max_iterations",
                "time": 0.621,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[integers(**{'min_value': 11})]",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_one_dead_branch",
                "time": 0.633,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'max_value': 0.0, 'min_value': 1.0})]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-complex_dtypes-complex64]",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[1]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[fractions(**{'min_value': -1, 'max_value': 1, 'max_denominator': 1000})]",
                "time": 0.67,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_indices",
                "name": "test_generate_optional_indices[mock-draft-<lambda>3]",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_integer_range_center_default",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_floats_round_trip",
                "time": 0.573,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'exclude_min': True})]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[floats(**{'max_value': 1.0, 'min_value': -1.0, 'allow_nan': False})]",
                "time": 0.427,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[slices(**{'size': 'chips'})]",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-real_dtypes-int8]",
                "time": 0.378,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_minimal_min_magnitude_positive",
                "time": 0.375,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{'width': 128})]",
                "time": 0.473,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-int16]",
                "time": 0.526,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_custom_reprs",
                "name": "test_iterables_repr_is_useful",
                "time": 0.673,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[timedeltas(**{'min_value': 'fish'})]",
                "time": 0.377,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_can_find_endpoints_of_a_range[True-0-1000]",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_can_shrink_variable_draws[15]",
                "time": 0.882,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-mutually_broadcastable_shapes(num_shapes=2, base_shape=(0, 3, 2, 1), min_dims=3, max_dims=4, min_side=2, max_side=3)]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_get_hints_through_partial[pf0-b c d]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_chained_filter",
                "time": 0.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[8-15-17]",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[sets(**{'min_size': 10, 'max_size': 10, 'elements': integers()})]",
                "time": 0.652,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-array_shapes(min_dims=3, max_dims=2)]",
                "time": 0.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-floating_dtypes(sizes=(3,))]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_cannot_draw_after_freeze",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_builds_raises_if_non_callable_as_first_arg[non_callable2]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[133-156-205]",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_args[tuples(1)]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_numeric_arrays[mock-draft-uint32]",
                "time": 0.422,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-uint8]",
                "time": 0.481,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-indices]",
                "time": 0.342,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_pareto",
                "name": "test_uses_tags_in_calculating_pareto_front",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_nan[nan-inf]",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_smaller_interesting_dominates_larger_valid",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_discarded_examples_do_not_create_structural_coverage",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_astronomically_unlikely_draw_many",
                "time": 0.426,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[115-252-277]",
                "time": 0.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_no_infinity_for_min_max_values[0-max_value]",
                "time": 0.571,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_choice_tree",
                "name": "test_all_filtered_child",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_caching",
                "name": "test_values",
                "time": 0.429,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[10-32]",
                "time": 0.416,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-valid_tuple_axes(ndim=2, min_size=1, max_size=2.0)]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-scalar_dtypes-uint8]",
                "time": 0.393,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape=(2, 2), min_side=1, max_side=0)]",
                "time": 0.49,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_int_shapes[mock-draft]",
                "time": 0.697,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[integers()]",
                "time": 0.582,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_each_month[9]",
                "time": 0.502,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_has_an_annotation",
                "time": 0.541,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-numeric_dtypes-int8]",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fractions(**{'min_value': (1+2j)})]",
                "time": 0.461,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_ok_example_via",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_asyncio.TestAsyncio",
                "name": "test_foo",
                "time": 0.788,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_simplifies_towards_millenium",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_still_inserts_if_score_is_worse",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_impossible_self_recursion",
                "time": 0.479,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-integer_dtypes-int8]",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_error_on_unexpected_pass_base",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_not_currently_in_hypothesis",
                "time": 0.365,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'max_value': '-snan'})]",
                "time": 0.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_ceil_agrees_with_math_ceil[-0.5]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_junkdrawer",
                "name": "test_assignment",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[floats(min_value=-2.0)]",
                "time": 0.448,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_handle_empty_draws",
                "time": 0.484,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_can_be_set_to_ignore_limits",
                "time": 0.371,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_data_tree",
                "name": "test_truncates_if_seen",
                "time": 0.449,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[fixed_dictionaries({'a': integers(), 'b': booleans()})]",
                "time": 0.393,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_does_not_keep_generating_when_multiple_bugs",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-arrays]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[tuples()]",
                "time": 0.587,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.5-32]",
                "time": 0.525,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_max_length_of_long_dfa[10]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[ip_addresses(**{})]",
                "time": 0.562,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[fractions()]",
                "time": 0.594,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[text(**{'alphabet': [1]})]",
                "time": 0.405,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_helpful_message_when_example_fails_because_it_was_passed_a_strategy",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-complex128]",
                "time": 0.526,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fractions(**{'min_value': '1/3', 'max_value': '1/3', 'max_denominator': 2})]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_warning_on_noncompliant_xp",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'width': None})]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[floats(min_value=-1.7976931348623157e+308, max_value=1.7976931348623157e+308)]",
                "time": 0.639,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples.TestInstanceMethods",
                "name": "test_hi_3",
                "time": 0.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deadline",
                "name": "test_should_only_fail_a_deadline_if_the_test_is_slow[True-True]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_fractions",
                "time": 0.651,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[binary()]",
                "time": 0.954,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_minimal_quadrant3",
                "time": 0.482,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_shrinks_both_interesting_examples",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deadline",
                "name": "test_slow_tests_are_errors_by_default",
                "time": 0.817,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-float32]",
                "time": 0.722,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_will_let_fixate_shrink_passes_do_a_full_run_through",
                "time": 0.466,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[decimals(**{'max_value': 'inf', 'allow_infinity': False})]",
                "time": 0.568,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_deletable_draws",
                "time": 0.706,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[2]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_excluded_min_in_float_arrays[mock-draft-1.0-float32]",
                "time": 0.831,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_center_in_middle_below",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-256]",
                "time": 0.52,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_erroring_rewrite_unsatisfiable_filter[s1-pred0]",
                "time": 1.489,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'min_value': 0.0, 'allow_nan': True})]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_filter_chains_with_some_unhandled[s1]",
                "time": 1.874,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[timedeltas(**{'max_value': 'fish'})]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[slices(**{'size': -1})]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_lstar",
                "name": "test_canonicalises_values_to_zero_where_appropriate",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-500]",
                "time": 0.387,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_cannot_fill_arrays_with_non_castable_value[mock-draft]",
                "time": 0.414,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_indices",
                "name": "test_cannot_generate_newaxis_when_disabled[mock-draft]",
                "time": 1.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_get_hints_through_partial[pf1-c d]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_can_double_freeze",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_generate_unique_arrays_without_fill[mock-draft]",
                "time": 0.822,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_tuples_raise_error_on_bad_kwargs",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[integers(**{'min_value': 11, 'max_value': 100})]",
                "time": 0.392,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_args[one_of(booleans(), tuples(booleans()))]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-array_shapes(min_dims=-1)]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_pareto",
                "name": "test_optimises_the_pareto_front",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_floats_can_skip_subnormals[lt-min_value--1.1125369292536007e-308-0]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[7-24-25]",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_errors_given_function_of_no_arguments",
                "time": 0.434,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_generate_arrays_from_zero_sided_shapes[mock-draft]",
                "time": 1.242,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_caching",
                "name": "test_alphabet_key",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_minimal_minmax_magnitude",
                "time": 0.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-uint16]",
                "time": 0.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_no_single_floats_in_range",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[21-220-221]",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_prints_output_for_explicit_examples",
                "time": 0.419,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-functools.partial(<built-in function eq>, 3)-3-3]",
                "time": 0.644,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_updown_roundtrip",
                "time": 0.474,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_core",
                "name": "test_stops_after_max_examples_if_satisfying",
                "time": 0.403,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[1.7976931348623157e+308-1.0]",
                "time": 0.549,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1, max_value=5)-functools.partial(<built-in function le>, 3.5)-4-5]",
                "time": 0.4,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_arbitrary_data",
                "name": "test_prints_labels_if_given_on_failure",
                "time": 0.656,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_runs_full_set_of_examples",
                "time": 1.97,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_choice_tree",
                "name": "test_skips_over_exhausted_children",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_cathetus_nan[nan-nan]",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s0-pred3]",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_warning_on_partial_dtypes[numeric_dtypes-keep_anys1]",
                "time": 2.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_midnight",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape=(2, 2), min_dims=1, max_dims=0)]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-valid_tuple_axes(ndim=2, min_size=1, max_size=3)]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_escalation",
                "name": "test_multiplefailures_deprecation",
                "time": 0.485,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{})]",
                "time": 0.433,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=0)]",
                "time": 0.398,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_rejection_eventually_terminates_many",
                "time": 0.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_children_of_discarded_examples_do_not_create_structural_coverage",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_error_on_unexpected_pass_single",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[list-strategy1]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1, max_value=5)-functools.partial(<built-in function lt>, 3.5)-3.5000000000000004-5]",
                "time": 0.67,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_can_fuzz_with_database_eq_None",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_invalid_example_via",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_shrink_after_max_examples",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_strategy_with_kwonly_args",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_default_datetimes_are_naive",
                "time": 0.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[160-231-281]",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_does_insert_if_score_is_better",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_fuzzing_floats_bounds[nonfloat0]",
                "time": 1.572,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[9.99-2]",
                "time": 0.544,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_minimizer",
                "name": "test_float_hack_fails",
                "time": 0.509,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_dtype[mock-draft-uint16]",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[mock-draft-float32-kwargs4-isfinite]",
                "time": 0.544,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_given_error_conditions",
                "name": "test_raises_unsatisfiable_if_passed_explicit_nothing",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[text(**{'alphabet': ['abc']})]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_chained_filter_tracks_all_conditions",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'width': 16})]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_stop_silently_dropping_examples_when_decorator_is_applied_to_itself",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_error_on_missing_attr[from_dtype-args0-iinfo]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-array_shapes]",
                "time": 0.325,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[lists(**{'elements': integers(), 'min_size': 10, 'max_size': 9})]",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_max_length_of_long_dfa[100]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_debug_information",
                "name": "test_reports_passes",
                "time": 0.621,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_has_string_of_max_length",
                "time": 1.556,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_cannot_exclude_endpoint_with_zero_interval[True-False-0.0--0.0]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_floats_order_worse_than_their_integral_part",
                "time": 0.766,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: 0 < x < 5-1-4]",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_center_in_middle_above",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[dictionaries(keys=booleans(), values=integers())]",
                "time": 0.442,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_query_matches_categories_codepoints",
                "time": 0.757,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[floats()2]",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_very_deep_deferral",
                "time": 0.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_zero_examples_with_variable_min_size",
                "time": 0.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_can_convert_non_weakref_types_to_event_strings",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fractions(**{'min_value': '1/3', 'max_value': '1/2', 'max_denominator': 2})]",
                "time": 0.426,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_numeric_arrays[mock-draft-uint64]",
                "time": 0.503,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[timedeltas(**{'min_value': datetime.timedelta(seconds=3600),\\n 'max_value': datetime.timedelta(seconds=60)})]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_optimiser",
                "name": "test_optimiser_when_test_grows_buffer_to_overflow",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_rare_types[<class 'collections.abc.ByteString'>]",
                "time": 0.559,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_can_navigate_to_a_valid_example",
                "time": 0.517,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_can_handle_brackets_in_decorator_argument",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: 3 < x-3.0000000000000004-inf]",
                "time": 1.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_compat",
                "name": "test_our_floor_agrees_with_math_floor[-10.7]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[slices(**{'size': 2.3})]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[bool-strategy1]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'max_value': 0.0, 'allow_nan': True})]",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_has_specified_length",
                "time": 0.518,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-functools.partial(<built-in function ge>, 3)-None-3]",
                "time": 0.552,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_generate_both_zeros_when_in_interval[1--2.2250738585072014e-308-2.2250738585072014e-308]",
                "time": 0.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_no_infinity_for_min_max_values[1-min_value]",
                "time": 0.511,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_shrinks_downwards_to_integers[1.1-500]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[ip_addresses(**{'v': 4})]",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_args[one_of(booleans())]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[sampled_from(**{'elements': [1]})]",
                "time": 0.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-array_shapes(min_side=-1)]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[fractions(**{'min_value': 1, 'max_value': 1})]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-numeric_dtypes-int16]",
                "time": 0.538,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_floats_can_skip_subnormals[lt-min_value-1.1125369292536007e-308-2.2250738585072014e-308]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[3]",
                "time": 0.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_generate_unique_arrays_with_high_collision_elements[mock-draft]",
                "time": 0.832,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_intervalset",
                "name": "test_index_above_is_index_if_present",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_minimal_quadrant4",
                "time": 0.468,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_pareto",
                "name": "test_does_not_optimise_the_pareto_front_if_interesting",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[integers(min_value=3)]",
                "time": 0.594,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_weird_types[typing.Sequence]",
                "time": 0.476,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_collapses_whitespace_nicely",
                "time": 0.434,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_prints_verbose_output_for_explicit_examples",
                "time": 0.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_mapping_types[typing.ChainMap[tests.cover.test_lookup.Elem, tests.cover.test_lookup.ElemValue]-typing.ChainMap]",
                "time": 1.469,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[1.7976931348623157e+308-2.0]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-float64]",
                "time": 0.725,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_no_args",
                "time": 0.532,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_test_data",
                "name": "test_can_draw_zero_bytes",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_errors_given_kwargs_only",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[booleans(**{})]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[sets(none(), max_size=0)]",
                "time": 0.943,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_finite_min_bound_does_not_overflow",
                "time": 0.61,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cathetus",
                "name": "test_pythagorean_triples[20-21-29]",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-bool]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[list-strategy2]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_caching",
                "name": "test_does_not_error_on_unhashable_posarg",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_error_on_unexpected_pass_single_elem_tuple",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_invalid_example_xfail_arguments[{'condition': None}]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_escalation",
                "name": "test_errors_attribute_error",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_kwarg_example_on_testcase",
                "time": 0.593,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_required_args[args4-kwargs4-AnnotatedTarget]",
                "time": 0.386,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_minmax_magnitude_equal",
                "time": 1.383,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_typevar_type_is_consistent[V-object]",
                "time": 1.143,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_non_midnight",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-broadcastable_shapes(shape=(5, 1), min_dims=2, max_dims=4, min_side=2, max_side=3)]",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_annotations",
                "name": "test_copying_preserves_signature[has_annotation]",
                "time": 0.361,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_shrink_after_max_iterations",
                "time": 0.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_pure_with_same_args",
                "time": 0.548,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_can_get_type_hints[annotated_func]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_lazy_slow_initialization_issue_2108_regression",
                "time": 0.399,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[text(**{'alphabet': just('abc')})]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.List[tests.cover.test_lookup.Elem]-<class 'list'>]",
                "time": 1.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'width': 196})]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_ipaddress_from_network_is_always_correct_version[4]",
                "time": 1.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_enum",
                "time": 0.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_falsifying_example_output",
                "name": "test_inserts_line_breaks_only_at_appropriate_lengths[10]",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_core",
                "name": "test_stops_after_ten_times_max_examples_if_not_satisfying",
                "time": 1.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_error_on_missing_attr[arrays-args1-asarray]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_max_length_of_long_dfa[1000]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[none()]",
                "time": 0.505,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-scalar_dtypes]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_variable_length_tuples[1]",
                "time": 1.84,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_argument_validation",
                "name": "test_raise_invalid_argument[mock-draft-indices(shape=('1', '2'))]",
                "time": 0.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype_strategies[mock-draft-scalar_dtypes]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_restricted_bits",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_flakiness",
                "name": "test_failure_sequence_inducing",
                "time": 9.179,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_given_error_conditions",
                "name": "test_error_if_has_no_hints",
                "time": 0.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_simultaneously_lower_non_duplicated_nearby_blocks[0]",
                "time": 0.392,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_cannot_exclude_endpoint_with_zero_interval[True-False--0.0-0.0]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_fuzzing_unsatisfiable_test_always_returns_None",
                "time": 0.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_decimals",
                "time": 0.623,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{'min_magnitude': 3, 'max_magnitude': 3})]",
                "time": 0.51,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_can_shrink_matrices_with_length_param",
                "time": 1.685,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_attrs_inference",
                "name": "test_cannot_infer[Required]",
                "time": 0.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_callable_with_arg_to_function",
                "time": 0.589,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_minimizer",
                "name": "test_can_sort_bytes_by_reordering",
                "time": 0.387,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolving_recursive_typeddict",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s0-pred4]",
                "time": 0.444,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1, max_value=5)-functools.partial(<built-in function ge>, 3.5)-1-3]",
                "time": 0.47,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[integers(**{'max_value': 0})]",
                "time": 0.507,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[property]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[lists(**{'elements': integers(), 'min_size': -10, 'max_size': -9})]",
                "time": 0.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_stops_after_max_examples_when_reading",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_recursion_in_middle",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[sampled_from(**{'elements': ()})]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_order_shrinking",
                "name": "test_shrinks_down_to_sorted_the_slow_way",
                "time": 0.559,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_can_handle_nested_lambda_in_decorator_argument",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[bool-strategy2]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[decimals()]",
                "time": 0.662,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_asyncio.TestAsyncioRun",
                "name": "test_foo",
                "time": 0.654,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_float32_can_exclude_infinity",
                "time": 0.526,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_args[text()]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_repr_passthrough[typ5-from_type(hypothesis.strategies.SearchStrategy[str])]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[times(**{'min_value': 'fish'})]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimizes_numeric_arrays[mock-draft-float32]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_suppressing_filtering_health_check",
                "time": 2.129,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[RecursionError]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_floats_can_skip_subnormals[gt-max_value-1.1125369292536007e-308-0]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[fractions(**{'min_value': 1, 'max_value': 1, 'max_denominator': 2})]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'min_value': 0.0, 'max_value': 1.0, 'allow_infinity': True})1]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_does_not_generate_negative_if_right_boundary_is_positive",
                "time": 0.569,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[sampled_from(**{'elements': [1, 2, 3]})]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[memoryview]",
                "time": 0.516,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_bordering_on_a_leap_year",
                "time": 2.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-float64]",
                "time": 0.505,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_feature_flags",
                "name": "test_repr_can_be_evalled",
                "time": 3.926,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: 0 < x >= 1-1-None]",
                "time": 0.719,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-uint32]",
                "time": 0.84,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[just(**{'value': 'hi'})]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_intervalset",
                "name": "test_index_above_is_length_if_higher",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[floats(max_value=-0.0)]",
                "time": 0.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[dictionaries(keys=text(), values=booleans())]",
                "time": 1.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[list-strategy3]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[mock-draft-int8-kwargs5-<lambda>]",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_escalation",
                "name": "test_handles_null_traceback",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_warning_given_no_drawfn_call",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_pareto",
                "name": "test_stops_optimising_once_interesting",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[KeyError]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ZeroDivisionError]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[ip_addresses(**{'v': 6})]",
                "time": 0.419,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_invalid_example_xfail_arguments[{'reason': None}]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[GeneratorExit]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-int8]",
                "time": 0.443,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[RuntimeWarning]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_can_get_type_hints[N]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-functools.partial(<built-in function ge>, 3)--inf-3]",
                "time": 0.633,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_with_args",
                "time": 0.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_arbitrary_data",
                "name": "test_given_twice_is_same",
                "time": 0.49,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_scalar_dtypes",
                "name": "test_strategy_can_generate_every_dtype[mock-draft-numeric_dtypes-int32]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_efficiently_generate_unique_arrays_using_all_elements[mock-draft]",
                "time": 3.658,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[text(**{'alphabet': sampled_from(['abc', 'def'])})]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_bytestring_is_valid_sequence_of_int_and_parent_classes[type_3]",
                "time": 0.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_error_on_unexpected_pass_multi",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ConnectionAbortedError]",
                "time": 0.36,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_dfa_with_cached_dead",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deadline",
                "name": "test_non_numeric_deadline_is_an_error",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_excluded_min_in_float_arrays[mock-draft-1.0-float64]",
                "time": 0.656,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_is_not_confused_by_tuples",
                "time": 0.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_flag_enum[from_type]",
                "time": 0.996,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_pretty",
                "name": "test_namespaced_methods_meta[mock-draft-boolean_dtypes]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[TimeoutError]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_utils",
                "name": "test_sampler_shrinks",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_given_error_conditions",
                "name": "test_error_if_infer_all_and_has_no_hints",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_error_on_missing_dtypes[scalar_dtypes]",
                "time": 0.325,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_can_shrink_downwards[inf-0.0]",
                "time": 0.385,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1, max_value=5)-functools.partial(<built-in function le>, 3.5)-3.5-5]",
                "time": 0.808,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[float]",
                "time": 0.632,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype_strategies[mock-draft-boolean_dtypes]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_attrs_inference",
                "name": "test_cannot_infer[UnhelpfulConverter]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'width': 256})]",
                "time": 0.362,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[4]",
                "time": 0.501,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s0-pred5]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_deferred_supports_find",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_no_infinity_for_min_max_values[1-max_value]",
                "time": 0.636,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[int]",
                "time": 0.364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_has_upper_bound",
                "time": 0.464,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_captures_original_repr_of_example",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_weird_types[typing.Container]",
                "time": 0.493,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_does_not_trigger_health_check_on_simple_strategies",
                "time": 1.907,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[lists(**{'elements': integers(), 'max_size': -9})]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-functools.partial(<built-in function gt>, 3)-None-2]",
                "time": 0.605,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[ip_addresses(**{'v': '4'})]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[booleans()]",
                "time": 0.535,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_cannot_exclude_endpoint_with_zero_interval[True-False--0.0--0.0]",
                "time": 0.353,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_minimizer",
                "name": "test_can_sort_bytes_by_reordering_partially",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_autopruning_of_returned_buffer",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[bool-strategy3]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deferred_strategies",
                "name": "test_binary_tree",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_args[binary()]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forward_references_outside_annotations",
                "time": 1.141,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[slice]",
                "time": 0.574,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_can_delete_keys",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_falsifying_example_output",
                "name": "test_inserts_line_breaks_only_at_appropriate_lengths[100]",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolving_recursive_type_with_defaults",
                "time": 0.563,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[NotImplementedError]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[fractions(**{'min_value': 1.0})]",
                "time": 0.532,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_errors_when_run_with_not_enough_args",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_floats_can_skip_subnormals[gt-max_value--1.1125369292536007e-308--2.2250738585072014e-308]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1, max_value=5)-functools.partial(<built-in function gt>, 3.5)-1-3]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-complex64]",
                "time": 0.86,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_exclude_only_excludes_from_that_category",
                "time": 0.582,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[integers(**{'min_value': -2, 'max_value': -1})]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lazy_import",
                "name": "test_hypothesis_does_not_import_test_runners",
                "time": 1.644,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_rare_types[typing.Match]",
                "time": 0.834,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[fixed_dictionaries(**{'mapping': {1: integers()}})]",
                "time": 0.416,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_required_args[args4-kwargs4-method]",
                "time": 0.532,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[integers(min_value=-4294967296, max_value=18446744073709551616)]",
                "time": 0.584,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_stops_after_max_examples_when_generating",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[times(**{'max_value': 'fish'})]",
                "time": 0.347,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_intervalset",
                "name": "test_subtraction_of_intervals",
                "time": 0.902,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_on_the_minute",
                "time": 0.427,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_populates_the_pareto_front",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[integers(**{'min_value': 12, 'max_value': 12})]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_max_magnitude_respected",
                "time": 1.147,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[lambda x: x-strategy0]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'min_value': inf, 'allow_infinity': False})]",
                "time": 0.342,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[LookupError]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_finite_max_bound_does_not_overflow",
                "time": 0.505,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[randoms(use_true_random=True)]",
                "time": 0.498,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ValueError]",
                "time": 0.635,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[FutureWarning]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_invalid_example_xfail_arguments[{'raises': None}]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[SystemError]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[mock-draft-uint8-kwargs6-<lambda>]",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_example_of_none_is_none",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_can_get_type_hints[int]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[StopAsyncIteration]",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[SystemExit]",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[bool]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_executors",
                "name": "test_must_use_result_of_test",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_float16_can_exclude_infinity",
                "time": 0.614,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_kw_args",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_strips_comments_from_the_end",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[BrokenPipeError]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[PendingDeprecationWarning]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_dead_nodes[order0]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[EOFError]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_given_error_conditions",
                "name": "test_error_if_infer_is_posarg",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_deadline",
                "name": "test_slow_with_none_deadline",
                "time": 0.412,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_attrs_inference",
                "name": "test_cannot_infer_takes_self",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[floats()3]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fixed_dictionaries(**{'mapping': 'fish'})]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_non_float_decimal",
                "time": 0.7,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_detection",
                "name": "test_functions_default_to_not_tests",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_float_encoding",
                "name": "test_integral_floats_order_as_integers",
                "time": 1.726,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[lists(lists(booleans()))]",
                "time": 1.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[5]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_ellipses_callable_to_function",
                "time": 1.154,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[lists(**{'elements': integers(), 'min_size': -10})]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-complex64]",
                "time": 0.644,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_order_shrinking",
                "name": "test_can_partially_sort_a_list",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype_strategies[mock-draft-integer_dtypes]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_pure_with_different_args",
                "time": 1.377,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_cannot_exclude_endpoint_with_zero_interval[False-True-0.0-0.0]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_examples_are_tried_in_order",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[reversed]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[ip_addresses(**{'v': 4.0})]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[bytearray]",
                "time": 0.554,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[str]",
                "time": 0.579,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[ip_addresses(**{'network': '127.0.0.0/8'})]",
                "time": 0.435,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_bytestring_is_valid_sequence_of_int_and_parent_classes[type_4]",
                "time": 0.39,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[len-strategy0]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinker",
                "name": "test_can_shrink_variable_draws_with_just_deletion[1]",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_default_database_is_in_memory",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_falsifying_example_output",
                "name": "test_vararg_output[generate_phase]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_errors_when_run_with_not_enough_kwargs",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[NameError]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ConnectionRefusedError]",
                "time": 0.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filtered_strategy",
                "name": "test_filter_iterations_are_marked_as_discarded",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_can_access_strategy_for_wrapped_test",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-int16]",
                "time": 0.455,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[text(**{'alphabet': just(123)})]",
                "time": 0.451,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{'max_magnitude': 0})]",
                "time": 0.625,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[FloatingPointError]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[times(**{'min_value': datetime.time(2, 0), 'max_value': datetime.time(1, 0)})]",
                "time": 0.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_does_not_generate_positive_if_right_boundary_is_negative",
                "time": 0.511,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[decimals(**{'min_value': 1.0, 'max_value': 1.5})]",
                "time": 0.517,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[Exception]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[list]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_args[builds(lambda x, y: x + y, integers(), integers())]",
                "time": 0.643,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[PermissionError]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[lambda x: x-strategy1]",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[OSError1]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'max_value': -inf, 'allow_infinity': False})]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_indices",
                "name": "test_generate_indices_for_0d_shape[mock-draft]",
                "time": 0.504,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[floats(**{})]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ImportWarning]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_attrs_inference",
                "name": "test_attrs_inference_builds",
                "time": 2.694,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_exception_in_compare_can_still_have_example",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_invalid_example_xfail_arguments[{'raises': <class 'int'>}]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_has_lower_bound",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: 1 > x <= 0-None-0]",
                "time": 0.64,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ReferenceError]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_can_minimize_floats[mock-draft]",
                "time": 0.342,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_generate_arrays_from_unsigned_ints[mock-draft]",
                "time": 0.992,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_force_builds_to_infer_strategies_for_default_args",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s0-pred6]",
                "time": 0.506,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_weird_types[typing.Mapping]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_off_the_minute",
                "time": 0.435,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_error_on_missing_dtypes[boolean_dtypes]",
                "time": 0.534,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[tuples(booleans(), booleans())]",
                "time": 0.504,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_given_error_conditions",
                "name": "test_error_if_infer_is_posarg_mixed_with_kwarg",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_does_not_strip_hashes_within_a_string",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[RuntimeError]",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[frozensets(none(), max_size=0)]",
                "time": 0.856,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[memoryview]",
                "time": 0.706,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[floats(min_value=0.0)]",
                "time": 0.43,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_dfa",
                "name": "test_dead_nodes[order1]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[dictionaries(**{'keys': booleans(), 'values': integers()})]",
                "time": 0.54,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_argless_lambda",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_detection",
                "name": "test_methods_default_to_not_tests",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[IndexError]",
                "time": 0.421,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1, max_value=5)-functools.partial(<built-in function lt>, -inf)-1-5]",
                "time": 0.49,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[6]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_executors.TestTryReallyHard",
                "name": "test_something",
                "time": 0.633,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_order_shrinking",
                "name": "test_can_partially_sort_a_list_2",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[SyntaxWarning]",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fixed_dictionaries(**{'mapping': {1: 'fish'}})]",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_required_args[args5-kwargs5-AnnotatedTarget]",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_cannot_exclude_endpoint_with_zero_interval[False-True-0.0--0.0]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_does_not_reuse_distinct_integers[mock-draft]",
                "time": 10.703,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[set]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[StopIteration]",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype_strategies[mock-draft-unsigned_integer_dtypes]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ChildProcessError]",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.Tuple[tests.cover.test_lookup.Elem]-<class 'tuple'>]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[frozenset]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[lists(**{'elements': integers(), 'min_size': nan})]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[fractions(**{'min_value': Decimal('1.0')})]",
                "time": 0.609,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_falsifying_example_output",
                "name": "test_vararg_output[explicit_phase]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[UnboundLocalError]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_can_use_examples_after_given",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-functools.partial(<built-in function gt>, 3)--inf-2.9999999999999996]",
                "time": 0.944,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_default_on_disk_database_is_dir",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[staticmethod]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ConnectionResetError]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[UnicodeWarning]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filtered_strategy",
                "name": "test_filtered_branches_are_all_filtered",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_fuzz_one_input_does_not_add_redundant_entries_to_database[buffers0-1]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_supportsop_types_support_protocol[SupportsAbs]",
                "time": 1.711,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[len-strategy1]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: x < 3-None-2]",
                "time": 0.802,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_misc_sat_filter_rewrites[strategy0-isinf]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-uint64]",
                "time": 0.642,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_exclude_endpoints",
                "time": 0.57,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[ip_addresses(**{'v': 5})]",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[booleans().flatmap(lambda x: booleans() if x else complex_numbers())]",
                "time": 0.774,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[OverflowError]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[text(**{'alphabet': sampled_from([123, 456])})]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[BufferError]",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ProcessLookupError]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[map]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_core",
                "name": "test_is_not_normally_default",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[lambda x: x-strategy2]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[uuids(**{'version': 6})]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[TypeError]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_ipaddress_from_network_is_always_correct_version[6]",
                "time": 0.623,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_reload_charmap",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[KeyboardInterrupt]",
                "time": 0.465,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'min_magnitude': None})]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[floats(**{'min_value': 1.0})]",
                "time": 0.407,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[OSError2]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_behaves_like_a_dict_with_losses[LRUCache]",
                "time": 1.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[floats()0]",
                "time": 0.645,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_invalid_example_xfail_arguments[{'raises': [<class 'Exception'>]}]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_no_nan_for_min_max_values[-1-min_value]",
                "time": 0.67,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_does_not_always_give_the_same_example",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[UnicodeTranslateError]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[UnicodeWarning]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[MemoryError]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-int32]",
                "time": 0.486,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_recursive_type_with_defaults_minimizes_to_defaults",
                "time": 0.532,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1, max_value=5)-functools.partial(<built-in function ge>, 3.5)-1-3.5]",
                "time": 0.646,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: 0 < x < 5-5e-324-4.999999999999999]",
                "time": 1.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_weird_types[typing.Reversible]",
                "time": 0.518,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[ip_addresses(**{'network': '::/64'})]",
                "time": 0.53,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_typevar_type_is_consistent[V-int]",
                "time": 0.715,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_given_error_conditions",
                "name": "test_given_twice_is_an_error",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[UnicodeError]",
                "time": 0.626,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ConnectionResetError]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_can_distinguish_between_two_lambdas_with_different_args",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s1-isinf]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_generator_as_generic",
                "time": 1.173,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_mutable_mapping_as_generic",
                "time": 0.838,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_detection",
                "name": "test_detection_of_functions",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_cannot_exclude_endpoint_with_zero_interval[False-True--0.0-0.0]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_lambda_with_arg",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_half_bounded_generates_zero",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_fuzzing_floats_bounds[nonfloat1]",
                "time": 0.969,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_cannot_pass_infer_as_posarg",
                "time": 0.353,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_set_as_generic",
                "time": 0.835,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[lists(**{'elements': nothing(), 'max_size': 1})]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.Tuple[tests.cover.test_lookup.Elem, ...]-<class 'tuple'>]",
                "time": 0.847,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_generic_collections_only_use_hashable_elements[typ0]",
                "time": 4.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1, max_value=5)-functools.partial(<built-in function gt>, inf)-1-5]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[GeneratorExit]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fixed_dictionaries(**{'mapping': {}, 'optional': 'fish'})]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_required_args[args5-kwargs5-method]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_number_of_examples_in_integer_range_is_bounded[7]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[slice]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_feature_flags",
                "name": "test_can_all_be_enabled",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_prints_note_in_failing_example",
                "time": 0.564,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[RuntimeWarning]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[bytes]",
                "time": 0.545,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[decimals(**{'min_value': '1.0', 'max_value': '1.5'})]",
                "time": 0.519,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_can_use_examples_before_given",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_recreate_charmap",
                "time": 1.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filtered_strategy",
                "name": "test_filter_conditions_may_be_empty",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[characters(**{'min_codepoint': -1})]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[super]",
                "time": 0.387,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ImportError]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_dictionaries_of_at_least_minimum_size",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[EOFError]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[KeyError]",
                "time": 0.398,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[AttributeError]",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[lambda x: x-strategy3]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[FileExistsError]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{'allow_nan': True})]",
                "time": 0.518,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[text(**{'alphabet': builds(lambda: \"abc\")})]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[floats(min_value=3.14, max_value=3.14)]",
                "time": 0.45,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_produces_castable_instances_from_name[mock-draft-complex128]",
                "time": 0.644,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_out_of_range[kwargs0]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_bracket_whitespace_is_striped",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[AssertionError]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[StopAsyncIteration]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ConnectionAbortedError]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_does_not_change_arguments",
                "time": 0.843,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_allow_subnormal[True-0-None]",
                "time": 0.391,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[BytesWarning]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_core",
                "name": "test_settings_are_default_in_given",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_flag_enum[sampled_from]",
                "time": 0.767,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_build_class_with_target_kwarg",
                "time": 0.398,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[text(**{'alphabet': 'abc'})]",
                "time": 0.523,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewriting_partially_understood_filters[1-4-<lambda>]",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'min_magnitude': nan})]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_rare_types[typing.Pattern]",
                "time": 0.438,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_invalid_example_xfail_arguments[{'raises': (None,)}]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[ip_addresses(**{'v': 4, 'network': '::/64'})]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[property]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[TimeoutError]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_fuzz_one_input_does_not_add_redundant_entries_to_database[buffers1-4]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_misc_sat_filter_rewrites[strategy1-isinf]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype_strategies[mock-draft-floating_dtypes]",
                "time": 0.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_is_in_bounds",
                "time": 0.325,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[len-strategy2]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[str]",
                "time": 0.615,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_mapping_types[typing.DefaultDict[tests.cover.test_lookup.Elem, tests.cover.test_lookup.ElemValue]-typing.DefaultDict]",
                "time": 1.511,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_order_shrinking",
                "name": "test_adaptively_shrinks_around_hole",
                "time": 0.347,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[BytesWarning]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[object]",
                "time": 1.144,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[Warning]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[RecursionError]",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ZeroDivisionError]",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[BufferError]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[frozensets(integers())]",
                "time": 1.558,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_selects_directory_based_if_already_directory",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_raises_on_no_examples",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_given_error_conditions",
                "name": "test_given_is_not_a_class_decorator",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: x > 0 and x > 0-1-None]",
                "time": 0.64,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_detection",
                "name": "test_detection_of_methods",
                "time": 0.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[floats(**{'max_value': 1.0})]",
                "time": 0.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_does_not_error_if_it_cannot_distinguish_between_two_lambdas",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s1-isnan]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_cannot_exclude_endpoint_with_zero_interval[False-True--0.0--0.0]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolving_mutually_recursive_types",
                "time": 0.534,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_cannot_force_inference_for_unannotated_arg",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[lists(**{'elements': 'hi'})]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[staticmethod]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[FileExistsError]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[SystemExit]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_invalid_arguments[None-returns0-False]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_can_use_examples_around_given",
                "time": 0.547,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_fraction_is_in_bounds",
                "time": 0.6,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_feature_flags",
                "name": "test_minimizes_open",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[one_of(integers(), tuples(booleans()))]",
                "time": 0.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[len-strategy3]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_compat_get_type_hints_aware_of_None_default",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filtered_strategy",
                "name": "test_nested_filteredstrategy_flattens_conditions",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[enumerate]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_fuzz_one_input_does_not_add_redundant_entries_to_database[buffers2-2]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ResourceWarning]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_must_agree_with_number_of_arguments",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[FileNotFoundError]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[ip_addresses(**{'v': 6, 'network': '127.0.0.0/8'})]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[int]",
                "time": 0.412,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_half_bounded_respects_sign_of_upper_bound",
                "time": 0.496,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1)-functools.partial(<built-in function lt>, 3)-4-None]",
                "time": 0.516,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_scalar_names[mock-draft-float32]",
                "time": 0.59,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_misc_sat_filter_rewrites[strategy2-isnan]",
                "time": 0.467,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_infers_args_for_namedtuple_builds",
                "time": 0.65,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[text(**{'alphabet': builds(lambda: 123)})]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'max_magnitude': nan})]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[FutureWarning]",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_posonly_lambda_formatting[<lambda>-lambda a, /, b: a]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[bool]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ConnectionRefusedError]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_out_of_range[kwargs1]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_re_pattern_bytes_as_generic",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemod_cli",
                "name": "test_codemod_from_stdin",
                "time": 1.918,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_exclude_neg_infinite_endpoint",
                "time": 0.482,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_executors",
                "name": "test_boom",
                "time": 1.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_ipaddress_from_network_is_always_in_network",
                "time": 1.228,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_typing_Literal_nested",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[SyntaxError]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[bytearray]",
                "time": 0.611,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ValueError]",
                "time": 0.702,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[characters(**{'min_codepoint': '1'})]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ModuleNotFoundError]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[NotImplementedError]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_core",
                "name": "test_given_shrinks_pytest_helper_errors",
                "time": 0.474,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[RuntimeError]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_rare_types[<class 're.Match'>]",
                "time": 0.818,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[tuple]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_dictionaries_respect_size",
                "time": 0.455,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[UserWarning]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[ip_addresses(**{'v': 4, 'network': '127.0.0.0/8'})]",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_invalid_example_xfail_arguments[{'raises': ()}]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_warning_on_partial_dtypes[integer_dtypes-keep_anys2]",
                "time": 1.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_weird_types[SupportsBytes]",
                "time": 0.496,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_no_whitespace_before_colon_with_no_args",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_draw_arrays_from_dtype[mock-draft-complex128]",
                "time": 1.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_no_nan_for_min_max_values[-1-max_value]",
                "time": 0.74,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ArithmeticError]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[fractions(**{'min_value': Fraction(1, 2)})]",
                "time": 0.659,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_can_resolve_registered_protocol",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ResourceWarning]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[Warning]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fixed_dictionaries(**{'mapping': {}, 'optional': {1: 'fish'}})]",
                "time": 0.461,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[fixed_dictionaries({})]",
                "time": 0.587,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[floats(min_value=-2.0, max_value=3.0)]",
                "time": 0.614,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{'allow_nan': True, 'allow_infinity': True})]",
                "time": 0.455,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_given_error_conditions",
                "name": "test_specific_error_for_coroutine_functions",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_example_inside_given",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_mock",
                "name": "test_can_mock_inside_given_without_fixture",
                "time": 0.647,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_allow_subnormal[True-1-None]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewriting_partially_understood_filters[0-9-<lambda>]",
                "time": 0.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_lambda_source_break_after_def_with_brackets",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_builds_raises_with_no_target",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[classmethod]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[decimals(**{'min_value': Decimal('1.5')})]",
                "time": 0.522,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[UnicodeEncodeError]",
                "time": 0.544,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_variable_length_tuples[2]",
                "time": 1.641,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: x <= 3-None-3]",
                "time": 0.713,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[lists(floats(min_value=0.0, max_value=0.0))]",
                "time": 0.741,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s1-pred2]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[text()]",
                "time": 0.542,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1, max_value=5)-functools.partial(<built-in function gt>, 3.5)-1-3.4999999999999996]",
                "time": 0.552,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_typevar_type_is_consistent[V-expected2]",
                "time": 0.538,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[SystemError]",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[FileNotFoundError]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_builds_for_unknown_annotated_type",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[str]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_invalid_arguments[<lambda>-not a strategy-True]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[recursive(booleans(), lambda x: lists(x, max_size=3), max_leaves=10)]",
                "time": 1.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[KeyboardInterrupt]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_generate_arrays_from_0d_arrays[mock-draft]",
                "time": 2.617,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[tuple-strategy0]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[ip_addresses(**{'network': b'127.0.0.0/8'})]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_fuzz_one_input_does_not_add_redundant_entries_to_database[buffers3-2]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ConnectionError]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_runs_deadline_for_examples",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[filter]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[lists(**{'elements': integers(), 'unique_by': 1})]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_find",
                "name": "test_find_uses_provided_random",
                "time": 0.415,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_issue_2603_regression",
                "time": 0.8,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_engine",
                "name": "test_runs_optimisation_even_if_not_generating",
                "time": 0.597,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_out_of_range[kwargs2]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'max_magnitude': (1+2j)})]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[floats(**{'min_value': inf})]",
                "time": 0.427,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: x < 3--inf-2.9999999999999996]",
                "time": 1.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_cannot_exclude_endpoint_with_zero_interval[True-True-0.0-0.0]",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[StopIteration]",
                "time": 0.524,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_does_not_error_when_fetching_when_not_exist",
                "time": 0.414,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_posonly_lambda_formatting[<lambda>-lambda a=None, /, b=None: a]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_from_dtype",
                "name": "test_passing_inferred_strategies_in_arrays[mock-draft-bool]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[memoryview]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_can_resolve_abstract_class",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_pure_two_functions_different_args_different_result",
                "time": 0.714,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[binary(**{'min_size': 10, 'max_size': 9})]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ConnectionResetError]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_re_pattern_str_as_generic",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[IndentationError]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[super]",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[OSError0]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ImportWarning]",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[NameError]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[text(**{'alphabet': {'a', 'b', 'c'}})]",
                "time": 0.517,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[sampled_from(range(0, 10))]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[characters(**{'max_codepoint': -1})]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[type]",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[IsADirectoryError]",
                "time": 0.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_many_xfail_example_decorators",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[list]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ConnectionError]",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[DeprecationWarning]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_warns_on_suspicious_string_methods[lower]",
                "time": 0.634,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[UserWarning]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_can_have_unicode_in_lambda_sources",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_slow_generation_fails_a_health_check",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[FloatingPointError]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_lambda_source_break_after_def_with_line_continuation",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_builds_raises_if_non_callable_as_target_kwarg[1]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_half_bounded_respects_sign_of_lower_bound",
                "time": 0.448,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_allow_subnormal[False-0-None]",
                "time": 2.175,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[RecursionError]",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_required_args[args0-kwargs0-AnnotatedTarget]",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_sequence_as_generic",
                "time": 0.716,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_misc_unsat_filter_rewrites[strategy0-isinf]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[ip_addresses(**{'v': 6, 'network': '::/64'})]",
                "time": 0.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s1-pred3]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1)-functools.partial(<built-in function le>, 3)-3-None]",
                "time": 0.402,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_exclude_pos_infinite_endpoint",
                "time": 0.632,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_simple_typeddict",
                "time": 0.524,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewriting_partially_understood_filters[1-None-<lambda>]",
                "time": 0.676,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ReferenceError]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_is_a_thing[1-False]",
                "time": 0.388,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: x < 1 and x < 1-None-0]",
                "time": 0.653,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolving_mutually_recursive_types_with_limited_stack",
                "time": 0.762,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[tuple-strategy1]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[ip_addresses(**{'network': b'::/64'})]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.Iterator[tests.cover.test_lookup.Elem]-typing.Iterator]",
                "time": 0.959,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_fuzzing_invalid_test_raises_error",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_core",
                "name": "test_pytest_skip_skips_shrinking",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[BlockingIOError]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_dictionaries_respect_zero_size",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[float]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ImportError]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[complex]",
                "time": 0.559,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_frozenset_as_generic",
                "time": 0.849,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_nothing",
                "name": "test_fixed_dictionaries_detect_empty_values",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[lists(**{'elements': integers(), 'unique_by': ()})]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_example_inside_find",
                "time": 0.931,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_invalid_arguments[<lambda>-returns2-None]",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'min_magnitude': -1})]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_out_of_range[kwargs3]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_unsatisfied_assumption_during_explicit_example[0.5]",
                "time": 0.691,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_fraction_gt_positive",
                "time": 0.57,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_feature_flags",
                "name": "test_minimizes_individual_features_to_open",
                "time": 0.917,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_cannot_exclude_endpoint_with_zero_interval[True-True-0.0--0.0]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_does_not_convert_posonly_to_keyword",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[FileExistsError]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_typing_Final",
                "time": 0.402,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_cannot_resolve_abstract_class_with_no_concrete_subclass",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[super]",
                "time": 0.391,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[TabError]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[bytearray]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_weird_types[SupportsAbs]",
                "time": 0.521,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{'allow_nan': True, 'allow_infinity': False})]",
                "time": 0.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'min_value': nan})1]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_issue_739_regression",
                "time": 0.573,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_all_decimals_can_be_exact_floats",
                "time": 0.364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[UnicodeWarning]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_applying_composite_decorator_to_methods",
                "time": 0.672,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_have_correct_places[3]",
                "time": 0.458,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[characters(**{'max_codepoint': '1'})]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[bytes]",
                "time": 0.603,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[GeneratorExit]",
                "time": 0.343,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_infers_args_for_namedtuple_from_type",
                "time": 0.618,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[one_of(just('a'), just('b'), just('c'))]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_raises_for_arg_with_unresolvable_annotation",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[IndentationError]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[fractions(**{'min_value': '1/2', 'max_denominator': 2})]",
                "time": 0.579,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fixed_dictionaries(**{'mapping': {}, 'optional': OrderedDict()})]",
                "time": 0.521,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_utils",
                "name": "test_can_handle_straddling_zero",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_xfail_reraises_non_specified_exception",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[map]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_cannot_resolve_un_registered_protocol",
                "time": 0.517,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_flakiness",
                "name": "test_fails_only_once_is_flaky",
                "time": 0.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[tuple]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[DeprecationWarning]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[zip]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[BlockingIOError]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_can_get_descriptions_of_nested_lambdas_with_different_names",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[PendingDeprecationWarning]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[NotADirectoryError]",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_does_not_trigger_health_check_when_most_examples_are_small",
                "time": 1.58,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[IsADirectoryError]",
                "time": 0.489,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_can_extract_lambda_repr_in_a_decorator",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[builds(ABC, booleans(), booleans(), booleans())]",
                "time": 0.677,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[floats(**{'max_value': -inf})]",
                "time": 0.459,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[decimals(**{'max_value': 1.0, 'min_value': -1.0, 'allow_infinity': False})]",
                "time": 0.512,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[OverflowError]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_builds_raises_if_non_callable_as_target_kwarg[abc]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_slow_generation_inline_fails_a_health_check",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[OSError1]",
                "time": 0.408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolve_typing_module[typing.ByteString]",
                "time": 0.865,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_typevar_type_is_consistent[V-expected3]",
                "time": 0.717,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[UnicodeDecodeError]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[binary()]",
                "time": 0.513,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_behaves_like_a_dict_with_losses[LFUCache]",
                "time": 0.943,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s1-pred4]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_misc_unsat_filter_rewrites[strategy1-isnan]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[UnicodeError]",
                "time": 0.881,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[NotImplementedError]",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_annotated_extra_metadata",
                "time": 0.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_filtering_everything_fails_a_health_check",
                "time": 0.505,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1, max_value=5)-functools.partial(<built-in function lt>, -inf)-1-5]",
                "time": 0.631,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[randoms(**{'use_true_random': 'False'})]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_none_lists_respect_max_size",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[tuple-strategy2]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_charmap",
                "name": "test_uses_cached_charmap",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_given_error_conditions",
                "name": "test_raises_unsatisfiable_if_all_false_in_finite_set",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[frozenset]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[BrokenPipeError]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_core",
                "name": "test_can_find_with_db_eq_none",
                "time": 0.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[UnboundLocalError]",
                "time": 0.479,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_mock",
                "name": "test_can_mock_outside_given_with_fixture",
                "time": 0.584,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_no_nan_for_min_max_values[0-min_value]",
                "time": 0.541,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[lists(**{'elements': integers(), 'unique_by': (1,)})]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: 0 < x >= 1-1-inf]",
                "time": 1.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'max_magnitude': -1})]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_out_of_range[kwargs4]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ModuleNotFoundError]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[integers().flatmap(lambda right: integers(min_value=0).map(lambda length: OrderedPair(right - length, right)))]",
                "time": 0.569,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[bytes]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_cannot_resolve_type_with_forwardref",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_given_works_with_keyword_only_params",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'min_value': '0'})]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[ip_addresses(**{'network': IPv4Network('127.0.0.0/8')})]",
                "time": 0.364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_nothing",
                "name": "test_no_examples",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[floats()1]",
                "time": 0.444,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_filter_nan",
                "time": 0.485,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[BytesWarning]",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[LookupError]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_cannot_exclude_endpoint_with_zero_interval[True-True--0.0-0.0]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(max_value=5)-functools.partial(<built-in function ge>, 3)-None-3]",
                "time": 0.531,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[FileNotFoundError]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_is_a_thing[2-True]",
                "time": 0.504,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_typeddict_with_optional",
                "time": 0.559,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_warns_on_suspicious_string_methods[title]",
                "time": 0.518,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_can_use_type_hints",
                "time": 0.464,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: x == 3-3-3]",
                "time": 0.371,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[object]",
                "time": 5.778,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[range]",
                "time": 0.567,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[text(**{'alphabet': ''})]",
                "time": 0.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_strategy_return_type_inference",
                "time": 0.765,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_utils",
                "name": "test_next_float_equal[next_up-nan]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_fraction_addition_is_well_behaved",
                "time": 0.985,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[characters(**{'whitelist_categories': []})]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_must_raise_a_failure_exception",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[TabError]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[sampled_from(('a', 'b', 'c'))]",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[tuple]",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[BaseException]",
                "time": 3.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_rare_types[<class 're.Pattern'>]",
                "time": 0.36,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_after_the_year_2000",
                "time": 0.4,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[PendingDeprecationWarning]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[SystemExit]",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[type]",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_does_not_error_on_unparsable_source",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[SyntaxWarning]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[BrokenPipeError]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_can_extract_two_lambdas_from_a_decorator_if_args_differ",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_required_args[args0-kwargs0-method]",
                "time": 0.525,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_reversible_as_generic",
                "time": 1.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_builds_raises_if_non_callable_as_target_kwarg[non_callable2]",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[InterruptedError]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_typing_Literal[dog]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ZeroDivisionError]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_flakiness",
                "name": "test_gives_flaky_error_if_assumption_is_flaky",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_pure_two_functions_same_args_different_result",
                "time": 0.783,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[OSError2]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[UnicodeTranslateError]",
                "time": 0.526,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[MemoryError]",
                "time": 0.514,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s1-pred5]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{'allow_nan': False})]",
                "time": 0.469,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_have_correct_places[4]",
                "time": 0.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[dict]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_constructor_is_more_important",
                "time": 0.419,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[fixed_dictionaries(**{'mapping': {1: none()}, 'optional': {1: none()}})]",
                "time": 0.38,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_misc_unsat_filter_rewrites[strategy2-isnan]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[property]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[NameError]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[tuple-strategy3]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_partial_adoptors",
                "name": "test_warning_on_partial_dtypes[unsigned_integer_dtypes-keep_anys3]",
                "time": 0.943,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_default_health_check_can_weaken_specific",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[lists(**{'elements': sampled_from([0, 1]), 'min_size': 3, 'unique': True})]",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_weird_types[SupportsComplex]",
                "time": 0.455,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ChildProcessError]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[randoms(**{'note_method_calls': 'True'})]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[NotADirectoryError]",
                "time": 0.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[OSError0]",
                "time": 0.262,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_given_error_conditions",
                "name": "test_does_not_raise_unsatisfiable_if_some_false_in_finite_set",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_one_of",
                "name": "test_one_of_single_strategy_is_noop",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_fraction_lt_negative",
                "time": 0.567,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_exclude_infinite_endpoint_is_invalid",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'min_magnitude': 3, 'max_magnitude': 2})]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: x > 1 and x > 0-2-None]",
                "time": 0.619,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_none_lists_respect_max_and_min_size",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_mutable_sequence_as_generic",
                "time": 0.724,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_filtering_most_things_fails_a_health_check",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'max_value': '0'})]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_inference_on_generic_collections_abc_aliases[typ0]",
                "time": 8.676,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[floats(min_value=-2.0)]",
                "time": 0.581,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[classmethod]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_consistent_decimal_error",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_cannot_exclude_endpoint_with_zero_interval[True-True--0.0--0.0]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewriting_partially_understood_filters[None-None-<lambda>0]",
                "time": 0.604,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[AttributeError]",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_given_works_with_keyword_only_params_some_unbound",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_out_of_range[kwargs5]",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_core",
                "name": "test_no_such_example",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_dfas",
                "name": "test_will_error_on_uninteresting_test",
                "time": 0.905,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_warns_on_suspicious_string_methods[upper]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_typing_Annotated[annotated_type0-integers()]",
                "time": 0.526,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[floats(**{'max_value': 1.0, 'min_value': -1.0})]",
                "time": 0.413,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[IsADirectoryError]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[IndexError]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[fractions(**{'max_value': '1/2', 'max_denominator': 3})]",
                "time": 0.627,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[characters(**{'whitelist_categories': ['Nd'], 'blacklist_categories': ['Nd']})]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[text(**{'alphabet': just('a')})]",
                "time": 0.631,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_supportsop_types_support_protocol[SupportsRound]",
                "time": 0.982,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_unsatisfied_assumption_during_explicit_example[1]",
                "time": 0.476,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[LookupError]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_list",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolving_mutually_recursive_types_with_defaults",
                "time": 0.538,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_nothing",
                "name": "test_empty[s0]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[type]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_source_of_lambda_is_pretty",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: x <= 3--inf-3]",
                "time": 0.963,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[RuntimeWarning]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_override_args_for_namedtuple",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[ip_addresses(**{'network': IPv6Network('::/64')})]",
                "time": 0.421,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: x >= 3-3-None]",
                "time": 0.602,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_error_in_draw",
                "name": "test_error_is_in_finally",
                "time": 4.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[integers()]",
                "time": 0.401,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[booleans()]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[decimals(**{'min_value': 1.0, 'allow_nan': False})]",
                "time": 0.609,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_phases",
                "name": "test_sorts_and_dedupes_phases[arg0-expected0]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_typing_Literal[goldfish]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite",
                "name": "test_drawfn_cannot_be_instantiated",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_builds_raises_if_non_callable_as_first_arg[1]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_utils",
                "name": "test_next_float_equal[next_up-inf]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_can_extract_lambda_repr_in_a_decorator_with_spaces",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ChildProcessError]",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.Set[tests.cover.test_lookup.Elem]-<class 'set'>]",
                "time": 0.953,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[KeyboardInterrupt]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_string_forward_ref_message",
                "time": 0.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[EOFError]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s1-pred6]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolve_typing_module[typing.Type]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_executors",
                "name": "test_no_boom",
                "time": 0.444,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_deque_as_generic",
                "time": 0.928,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[SystemError]",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[zip]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[dictionaries(**{'keys': integers(), 'values': 1})]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ResourceWarning]",
                "time": 0.424,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[sets(frozensets(booleans()))]",
                "time": 3.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[int]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_mapping_types[typing.OrderedDict[tests.cover.test_lookup.Elem, tests.cover.test_lookup.ElemValue]-typing.OrderedDict]",
                "time": 1.505,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[PermissionError]",
                "time": 0.377,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_flakiness",
                "name": "test_does_not_attempt_to_shrink_flaky_errors",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[SyntaxWarning]",
                "time": 0.408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_example_inside_strategy",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_filter_infinity",
                "time": 0.566,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_unhandled_operator",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[list-strategy0]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ConnectionAbortedError]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[text(**{'min_size': 10, 'max_size': 9})]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[enumerate]",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[OSError1]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_required_args[args1-kwargs1-AnnotatedTarget]",
                "time": 0.384,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_one_of",
                "name": "test_one_of_without_strategies_suggests_sampled_from",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[builds(ABC, booleans(), booleans(), integers())]",
                "time": 0.707,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_no_args_and_kwargs",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_mock",
                "name": "test_can_mock_within_test_with_fixture",
                "time": 0.64,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[InterruptedError]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_error_if_has_unresolvable_hints",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_sets",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_builds_error_messages",
                "time": 0.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[classmethod]",
                "time": 0.483,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(max_value=5)-functools.partial(<built-in function gt>, 3)-None-2]",
                "time": 0.459,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[integers().flatmap(lambda v: lists(just(v)))]",
                "time": 0.528,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_exclude_entire_interval[True-False]",
                "time": 0.542,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[UnboundLocalError]",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_feature_flags",
                "name": "test_marks_unknown_features_as_enabled",
                "time": 0.553,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[integers(**{'min_value': 0})]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_floats_message[s0-allow_infinity=False excludes min_value=inf]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[BufferError]",
                "time": 0.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_have_correct_places[5]",
                "time": 0.379,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'min_value': 0.0, 'max_value': -0.0})]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_iterables_are_exhaustible",
                "time": 0.508,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1, max_value=5)-functools.partial(<built-in function gt>, inf)-1-5]",
                "time": 0.632,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_simple_optional_key_is_optional",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.Sequence[tests.cover.test_lookup.Elem]-typing.Sequence]",
                "time": 0.919,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_signature_is_the_most_important_source[AnnotatedConstructorWithSignature]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[reversed]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_given_works_with_positional_only_params",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[SyntaxError]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[complex]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_bumps_min_size_and_filters_for_content_str_methods[isidentifier]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_no_nan_for_min_max_values[0-max_value]",
                "time": 0.637,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_nan_reprs[obj4-(nan, nan)  # Saw 2 signaling NaNs]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_large_data_will_fail_a_health_check",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[-1-4.0]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_dict",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_collections_ordereddict",
                "time": 0.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{'allow_nan': False, 'allow_infinity': True})]",
                "time": 0.437,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[IndexError]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_nothing",
                "name": "test_empty[s1]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[FutureWarning]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_cannot_resolve_bare_forward_reference[thing0]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[zip]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_exception",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_variable_names_are_not_pretty",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[NotADirectoryError]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_phases",
                "name": "test_sorts_and_dedupes_phases[arg1-expected1]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[AssertionError]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_composite_kwonlyargs",
                "name": "test_composite_with_keyword_only_args",
                "time": 0.95,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[tuples(booleans(), booleans())]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_weird_types[SupportsFloat]",
                "time": 0.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_utils",
                "name": "test_next_float_equal[next_up--0.0]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_typing_Literal[42]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_typevar_type_is_consistent[V-expected4]",
                "time": 0.974,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[floats(**{'max_value': 1.0, 'min_value': -1.0, 'allow_infinity': False})]",
                "time": 0.44,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_issue_3080",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_erroring_rewrite_unsatisfiable_filter[s0-pred0]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_does_not_resolve_special_cases[typ0]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ReferenceError]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[dictionaries(**{'keys': 1, 'values': integers()})]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[BaseException]",
                "time": 4.863,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[UnicodeEncodeError]",
                "time": 0.617,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[128-0]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_out_of_range[kwargs6]",
                "time": 0.424,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[RuntimeError]",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ConnectionError]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ImportError]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[integers(min_value=3)]",
                "time": 0.37,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[list]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[1-None]",
                "time": 1.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_non_interactive_example_emits_warning",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_valid_within_given_invalid_outside",
                "time": 0.448,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[63-None]",
                "time": 2.689,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ProcessLookupError]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[4.0-3]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_no_empty_examples",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_seed_random_twice",
                "time": 0.52,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_builds_raises_if_non_callable_as_first_arg[abc]",
                "time": 0.399,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_permutations",
                "name": "test_can_find_non_trivial_permutation",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewriting_does_not_compare_decimal_snan",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[OSError2]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[PermissionError]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[filter]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_behaves_like_a_dict_with_losses[LRUReusedCache]",
                "time": 1.497,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_executors",
                "name": "test_no_boom_on_example",
                "time": 0.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[ip_addresses(**{'v': 4, 'network': IPv4Network('127.0.0.0/8')})]",
                "time": 0.405,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[4-None]",
                "time": 2.166,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_decimal_is_in_bounds",
                "time": 0.933,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[complex_numbers(**{'max_magnitude': 2, 'allow_infinity': True})]",
                "time": 0.551,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_floats_message[s1-exclude_min=True turns min_value=.+? into inf, but allow_infinity=False]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_shrinking_dfas",
                "name": "test_makes_no_changes_if_already_normalized",
                "time": 1.677,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[slices(**{'size': None})]",
                "time": 0.513,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[lists(none(), max_size=0)]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[floats(**{'min_value': 0.0, 'max_value': 1.0, 'allow_infinity': True})0]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_feature_flags",
                "name": "test_by_default_all_enabled",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[floats()2]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_typeddict_with_optional_then_required_again",
                "time": 0.858,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[set]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_signature_is_the_most_important_source[AnnotatedConstructorWithSelflessSignature]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolving_recursive_type_with_registered_constraint",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_cannot_pass_strategies_by_position_if_there_are_posonly_args",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[IndentationError]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[Warning]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[-1-256]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_required_args[args1-kwargs1-method]",
                "time": 0.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_tuple",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_repr_call[f]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: x < 1 and x < 2-None-0]",
                "time": 0.676,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewriting_partially_understood_filters[None-None-<lambda>1]",
                "time": 0.639,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_find_does_not_pollute_state",
                "time": 2.73,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_unsortable_set",
                "time": 0.434,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_collections_deque",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[KeyError]",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_note_all_calls_to_impure_functions",
                "time": 0.458,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[dict]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_returning_non_none_is_forbidden",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_cannot_resolve_bare_forward_reference[thing1]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[InterruptedError]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_nothing",
                "name": "test_empty[s2]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ImportWarning]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_NewType",
                "time": 0.712,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_phases",
                "name": "test_phases_default_to_all_except_explain",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_multiple_example_reporting[ExceptionGroup]",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[decimals(**{'max_value': 1.0, 'allow_nan': False})]",
                "time": 0.637,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_utils",
                "name": "test_next_float_equal[next_down-nan]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_have_correct_places[6]",
                "time": 0.393,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_container_as_generic",
                "time": 1.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[BaseException]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_typing_Annotated[annotated_type1-lists(floats())]",
                "time": 0.644,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_re_evals",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[AttributeError]",
                "time": 0.417,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: 1 > x <= 0--inf-0]",
                "time": 0.928,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_typing_Literal[63.4]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[ArithmeticError]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: x > 3-4-None]",
                "time": 0.599,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_variable_length_tuples[3]",
                "time": 3.489,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[lists(**{'elements': nothing(), 'max_size': 0})]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[text(**{'alphabet': sampled_from('abc')})]",
                "time": 0.538,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-functools.partial(<built-in function lt>, 3)-4-None]",
                "time": 0.415,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_union_of_forwardrefs_to_builtins",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lambda_formatting",
                "name": "test_does_not_error_on_dynamically_defined_functions",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_bumps_min_size_and_filters_for_content_str_methods[isalnum]",
                "time": 0.402,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_keysview_as_generic",
                "time": 0.837,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[128-3]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_out_of_range[kwargs7]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_randoms_can_be_synced[True]",
                "time": 0.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_state_is_consistent",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_does_not_resolve_special_cases[typ1]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[map]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[frozensets(integers())]",
                "time": 0.734,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_guard_against_draws_of_nan",
                "time": 0.5,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{'allow_nan': False, 'allow_infinity': False})]",
                "time": 0.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[4.0-4.0]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_exclude_entire_interval[False-True]",
                "time": 0.514,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_interactive_example_does_not_emit_warning",
                "time": 0.56,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_some_ranges_are_in_range",
                "time": 0.438,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[MemoryError]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[integers().filter(lambda x: abs(x) > 100)]",
                "time": 0.412,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_keyword_arguments[text(**{'alphabet': '', 'min_size': 1})]",
                "time": 0.342,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_does_not_print_on_explicit_examples_if_no_failure",
                "time": 0.387,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_minimal_iterable",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[uniform]",
                "time": 1.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_applying_noop_filter_returns_self[integers(min_value=0, max_value=1)]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[complex]",
                "time": 1.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_recursive",
                "name": "test_recursive_call_validates_base_is_strategy",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_floats_message[s2-allow_infinity=False excludes max_value=-inf]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemods",
                "name": "test_refactor_function_is_idempotent",
                "time": 0.536,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_no_nan_for_min_max_values[1-min_value]",
                "time": 0.524,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_permutations",
                "name": "test_permutation_values_are_permutations",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[tuples()]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ModuleNotFoundError]",
                "time": 0.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[integers(min_value=-4294967296, max_value=18446744073709551616)]",
                "time": 0.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_weird_types[SupportsInt]",
                "time": 0.481,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[betavariate]",
                "time": 1.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[floats(**{'min_value': 1.0, 'allow_nan': False})]",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[floats(max_value=-0.0)]",
                "time": 0.66,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_class_is_not_included_in_unbound_method",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[normalvariate]",
                "time": 1.2,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_cannot_pass_strategies_for_posonly_args",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolving_recursive_type_with_registered_constraint_not_none",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_nothing",
                "name": "test_resampling",
                "time": 0.839,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[slice]",
                "time": 0.458,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_long_list",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_dict_with_custom_repr",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_can_call_default_like_arg",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[0--1]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_supportscast_types_support_protocol_or_are_castable[SupportsFloat-float]",
                "time": 1.178,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_executors.TestNormal",
                "name": "test_stuff",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_signature_is_the_most_important_source[really_takes_str]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_repr_call[lambda: ...]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_collections_counter",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[BlockingIOError]",
                "time": 0.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[ip_addresses(**{'v': 6, 'network': IPv6Network('::/64')})]",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[fixed_dictionaries({'a': integers(), 'b': booleans()})]",
                "time": 0.83,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_name_does_not_clash_with_function_names",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_phases",
                "name": "test_does_not_reuse_saved_examples_if_reuse_not_in_phases",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[float]",
                "time": 0.554,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_cannot_resolve_bare_forward_reference[thing2]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[UserWarning]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_define_function_signature_works_with_conflicts",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ConnectionRefusedError]",
                "time": 0.707,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_nothing",
                "name": "test_empty[s3]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_multiple_example_reporting[AssertionError]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_from_type_with_tuple_works[TypingTuple]",
                "time": 2.474,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_utils",
                "name": "test_next_float_equal[next_down--inf]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_the_slow_test_health_check_can_be_disabled",
                "time": 0.361,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[TabError]",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1)-functools.partial(<built-in function lt>, 3)-3.0000000000000004-inf]",
                "time": 0.8,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_builds_suggests_from_type[type_0]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_typing_Literal[-80.5]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_unsortable_dict",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[lists(**{'elements': integers()})]",
                "time": 0.535,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_handle_repr_on_type",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_required_args[args5-kwargs5-expected5-method]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_include_nan",
                "time": 0.57,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_print_builtin_function",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[FloatingPointError]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_required_args[args2-kwargs2-AnnotatedTarget]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.FrozenSet[tests.cover.test_lookup.Elem]-<class 'frozenset'>]",
                "time": 1.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_feature_flags",
                "name": "test_eval_featureflags_repr",
                "time": 0.436,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[128-4.0]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_typing_Annotated[annotated_type2-text()]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: x == 3-3-3]",
                "time": 1.215,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_scalar_types[typ0-instance_of0]",
                "time": 0.686,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_does_not_use_true_random_by_default",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[4.0-256]",
                "time": 0.258,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ProcessLookupError]",
                "time": 0.502,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[object]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_does_not_fail_health_check_if_randomness_is_used",
                "time": 0.746,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[SyntaxError]",
                "time": 0.36,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_disallowed_width",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[UnicodeDecodeError]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_error_on_keyword_parameter_name",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_no_infinity_for_min_max_values[-1-min_value]",
                "time": 0.515,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_required_args[args1-kwargs1-expected1-method]",
                "time": 0.392,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_functions",
                "name": "test_functions_note_only_first_to_pure_functions",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_matching[False-True-\\\\d-is_digit]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_recursive",
                "name": "test_can_find_exactly_max_leaves",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_varkwargs_are_sorted_and_after_real_kwargs",
                "time": 0.386,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_applying_noop_filter_returns_self[floats(min_value=0, max_value=1)]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_floats_message[s3-exclude_max=True turns max_value=.+? into -inf, but allow_infinity=False]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[ValueError]",
                "time": 0.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_have_correct_places[7]",
                "time": 0.826,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-functools.partial(<built-in function le>, 3)-3-None]",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_defaultdict_as_generic",
                "time": 1.646,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_does_not_error_on_confused_sources",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[sets(none(), max_size=0)]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_set_with_custom_repr",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_stateful_returnvalue_healthcheck[ReturningRuleMachine]",
                "time": 0.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_permutations",
                "name": "test_empty_permutations_are_empty",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[OSError0]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_cyclic_list",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[floats(min_value=-1.7976931348623157e+308, max_value=1.7976931348623157e+308)]",
                "time": 0.443,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_long_set",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[0-0]",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_seeding_to_same_value_synchronizes[False]",
                "time": 3.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples.TestInstanceMethods",
                "name": "test_hi_1",
                "time": 0.44,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_array_element_rewriting[mock-draft]",
                "time": 1.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_repr_call[lambda *args: ...]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_from_type_can_be_default_or_annotation",
                "time": 0.343,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_define_function_signature_validates_function_name",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_copying_sets_name",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.Iterable[tests.cover.test_lookup.Elem]-typing.Iterable]",
                "time": 1.364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filestorage",
                "name": "test_defaults_to_the_default",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_invalid_range",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-(['\"])[a-z]+\\\\1]",
                "time": 1.145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_recursive",
                "name": "test_invalid_args[s4]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolving_recursive_type",
                "time": 2.769,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-[\\\\w]]",
                "time": 0.796,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[floats()0]",
                "time": 0.484,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_empty_Tuple_issue_1583_regression",
                "time": 0.362,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[DeprecationWarning]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_fuzz_floats_bounds",
                "time": 1.554,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[text(**{'alphabet': builds(lambda: \"a\")})]",
                "time": 1.643,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_handle_unicode_identifier_in_same_line_as_lambda_def",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_builds_suggests_from_type[type_1]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_clean_source[case-3]",
                "time": 0.361,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_utils",
                "name": "test_next_float_equal[next_down-0.0]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_pprint_nomod",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_typing_Literal[False]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemods.TestFixComplexMinMagnitude",
                "name": "test_noop",
                "time": 0.35,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_pretty_function",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[OverflowError]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_handle_repr_of_none",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_example_argument_validation",
                "time": 0.441,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewriting_partially_understood_filters[None-None-<lambda>2]",
                "time": 0.912,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1, max_value=5)-functools.partial(<built-in function lt>, 3)-3.0000000000000004-5]",
                "time": 0.767,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[64--1]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[floats(**{'max_value': 1.0, 'allow_nan': False})]",
                "time": 0.457,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples",
                "name": "test_example_decorator_accepts_strategies",
                "time": 0.718,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_include_inf",
                "time": 0.325,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{'max_magnitude': inf, 'allow_infinity': True})]",
                "time": 0.559,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_typing_Annotated[annotated_type3-lists(dictionaries(keys=text(), values=booleans()))]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_weird_types[SupportsRound]",
                "time": 0.477,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_handles_singleton_uniforms_correctly",
                "time": 0.837,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_phases",
                "name": "test_will_save_when_reuse_not_in_phases",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_distinct_typevars_same_constraint",
                "time": 0.379,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[decimals(**{'max_value': 1.0, 'min_value': -1.0, 'allow_nan': False})]",
                "time": 0.706,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: 3 > x-None-2]",
                "time": 0.775,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_very_narrow_interval",
                "time": 0.576,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_exclude_entire_interval[True-True]",
                "time": 0.987,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_range_with_arbitrary_step_is_in_range",
                "time": 0.766,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[range]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_no_nan_for_min_max_values[1-max_value]",
                "time": 0.778,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_matching[False-True-\\\\s-None]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-ab*]",
                "time": 1.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-.]",
                "time": 1.199,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[UnicodeTranslateError]",
                "time": 0.765,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-[a][b][c]]",
                "time": 0.808,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_param_is_called_within_func",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_one_of",
                "name": "test_one_of_empty",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_cannot_cleanup_with_no_context",
                "time": 0.353,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_args[one_of(1)]",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[frozenset]",
                "time": 0.343,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[staticmethod]",
                "time": 0.375,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_filter_chains_with_some_unhandled[s0]",
                "time": 1.91,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[frozensets(none(), max_size=0)]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-ab{5,10}]",
                "time": 1.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_digests_are_reasonably_unique",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_cyclic_dequeue",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_varargs_come_without_equals",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[sets(frozensets(booleans()))]",
                "time": 1.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_stateful_returnvalue_healthcheck[ReturningInitializeMachine]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_example",
                "name": "test_raises_keyboardinterrupt_immediately",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_typeddict_with_nested_value",
                "time": 0.458,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_recursive",
                "name": "test_can_exclude_branching_with_max_leaves",
                "time": 2.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_permutations",
                "name": "test_cannot_permute_non_sequence_types",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_copying_sets_docstring",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_simple_conversion",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_proxy_functions_with_mixed_args_and_varargs",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filestorage",
                "name": "test_can_set_homedir_and_it_will_exist",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_required_args[args2-kwargs2-expected2-Target]",
                "time": 0.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_pretty_prints_enums_as_code",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[128-256]",
                "time": 0.522,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[UnicodeError]",
                "time": 0.437,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-^abc]",
                "time": 0.964,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_invalid_sample",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_clean_source[case-4]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_builds_mentions_no_type_check",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_itemsview_as_generic",
                "time": 1.131,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_the_slow_test_health_only_runs_if_health_checks_are_on",
                "time": 0.709,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[lists(**{'elements': integers(), 'max_size': 5})]",
                "time": 0.86,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_float_can_find_max_value_inf",
                "time": 0.952,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_render_lambda_with_no_encoding",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_breakable_at_group_boundary",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[none()]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: x > 0 and x > 0-5e-324-inf]",
                "time": 1.545,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_phases",
                "name": "test_rejects_non_phases",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_no_infinity_for_min_max_values[-1-max_value]",
                "time": 0.872,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-True-[\\\\d]]",
                "time": 0.585,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[64-0]",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_kwargs_appear_in_arg_string",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_complex_numbers",
                "name": "test_allow_subnormal_validation[1]",
                "time": 0.47,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_distinct_typevars_distinct_type",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_list_with_custom_repr",
                "time": 0.474,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-True-[^\\\\S]]",
                "time": 0.526,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_required_args[args2-kwargs2-method]",
                "time": 0.672,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[0-3]",
                "time": 0.416,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_matching[True-False-\\\\w-is_word]",
                "time": 3.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_fuzz_one_input[bytes]",
                "time": 0.571,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_pprint_break",
                "time": 0.366,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_one_of",
                "name": "test_one_of_filtered",
                "time": 0.802,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-functools.partial(<built-in function eq>, 3)-3-3]",
                "time": 0.487,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-\\\\s]",
                "time": 1.408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[TimeoutError]",
                "time": 0.639,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_generates_only_the_provided_characters_given_boundaries",
                "time": 0.746,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_cannot_event_with_no_context",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_can_register_NewType",
                "time": 0.472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemods.TestFixComplexMinMagnitude",
                "name": "test_substitution",
                "time": 0.462,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1)-functools.partial(<built-in function le>, 3)-3-inf]",
                "time": 1.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[floats(min_value=-2.0, max_value=3.0)]",
                "time": 0.484,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_stateful_returnvalue_healthcheck[ReturningInvariantMachine]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[fixed_dictionaries({})]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_uses_defaults",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_can_disallow_nan",
                "time": 0.856,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{'width': 32})]",
                "time": 0.496,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_cyclic_counter",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_pad_empty_strings",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_phases",
                "name": "test_only_runs_explicit_examples",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_param_is_called_within_subfunc",
                "time": 0.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_scalar_types[typ1-instance_of1]",
                "time": 0.606,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_digest_returns_the_same_value_for_two_calls",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[floats()3]",
                "time": 0.554,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_leaves_unknown_kwargs_in_dict",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_mix_varargs_and_varkwargs",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_cannot_register_non_Random",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_required_args[args2-kwargs2-expected2-method]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filestorage",
                "name": "test_will_pick_up_location_from_env",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-False-\\\\d]",
                "time": 0.695,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[dict]",
                "time": 0.487,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-True-[^\\\\W]]",
                "time": 0.823,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_explicit_examples.TestInstanceMethods",
                "name": "test_hi_2",
                "time": 0.693,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[None-None]",
                "time": 2.167,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_shared_union",
                "time": 0.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[1-4]",
                "time": 1.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-False-\\\\w]",
                "time": 0.726,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_triangular_modes",
                "time": 1.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_tuple1_as_generic",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_clean_source[case-5]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_does_not_crash_on_utf8_lambda_without_encoding",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_collection_as_generic",
                "time": 1.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_utils",
                "name": "test_float_clamper",
                "time": 1.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_layered_optional_key_is_optional",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_posonly_args_py38",
                "name": "test_composite_with_posonly_args",
                "time": 0.53,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_long_tuple",
                "time": 0.69,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_up_means_greater",
                "time": 0.568,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-False-[\\\\s]]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_weird_types[SupportsIndex]",
                "time": 0.534,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_matches[[Aa]-\\\\A[Aa]\\\\Z]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[0-4.0]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_same_typevars_same_type",
                "time": 1.611,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_required_args[args3-kwargs3-AnnotatedTarget]",
                "time": 0.434,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[vonmisesvariate]",
                "time": 1.598,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[UnicodeEncodeError]",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[bool]",
                "time": 0.723,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_ItemsView",
                "time": 1.64,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_nothing",
                "name": "test_list_of_nothing",
                "time": 0.594,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_indentation",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_is_mock_with_negative_cases",
                "time": 0.405,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[decimals(**{'min_value': '-inf'})]",
                "time": 0.539,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_have_correct_places[8]",
                "time": 0.645,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_bare_callable_to_function",
                "time": 0.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_minimize_arrays_with_default_dtype_shape_strategies[mock-draft]",
                "time": 0.765,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_large_base_example_fails_health_check",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_annotated_positive_int",
                "time": 0.921,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_delegate_to_a_function_with_no_positional_args",
                "time": 0.519,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_is_URL",
                "time": 5.911,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_behaves_like_a_dict_with_losses[ValueScored]",
                "time": 1.626,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_phases",
                "name": "test_does_not_use_explicit_examples",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[paretovariate]",
                "time": 1.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_uses_varargs",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[randoms(use_true_random=True)]",
                "time": 0.617,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_internal_helpers",
                "name": "test_is_negative_gives_good_type_error",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_pad_strings_with_newlines",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_cyclic_dict",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_errors_on_bad_kwargs",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1, max_value=5)-functools.partial(<built-in function le>, 3)-3-5]",
                "time": 0.635,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_required_args[args3-kwargs3-expected3-Target]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_range_with_only_stop",
                "time": 0.722,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_pprint_break_repr",
                "time": 0.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_param_is_not_called_within_func",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: 3 >= x-None-3]",
                "time": 0.914,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filestorage",
                "name": "test_storage_directories_are_not_created_automatically",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_digest_a_built_in_function",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[dictionaries(keys=booleans(), values=integers())]",
                "time": 1.442,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_nan_reprs[nan-nan]",
                "time": 0.521,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_arg_string_does_not_include_unprovided_defaults",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_registering_a_Random_is_idempotent",
                "time": 0.67,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[AssertionError]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groupref_not_shared_between_regex",
                "time": 1.94,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[builds(ABC, booleans(), booleans(), booleans())]",
                "time": 0.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_issue_992_regression",
                "time": 1.254,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_clean_source[case-6]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_fuzz_one_input[bytearray]",
                "time": 0.626,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_validates_args[one_of(1, integers())]",
                "time": 0.744,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_handles_singleton_regions_of_triangular_correctly",
                "time": 1.201,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[floats(min_value=0.0)]",
                "time": 0.648,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-[^a][^b][^c]]",
                "time": 1.701,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_tuple2_as_generic",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-True-[^\\\\D]]",
                "time": 0.527,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.Dict[tests.cover.test_lookup.Elem, NoneType]-<class 'dict'>]",
                "time": 1.588,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_too_many_posargs_fails",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[choice]",
                "time": 0.917,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewriting_partially_understood_filters[None-None-<lambda>3]",
                "time": 1.456,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_can_resolve_recursive_dataclass",
                "time": 1.542,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_caret_in_the_middle_does_not_generate_anything",
                "time": 0.343,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_generate_0d_arrays_with_no_fill[mock-draft]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_matches[[ab]*-\\\\A[ab]*\\\\Z0]",
                "time": 0.759,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-False-[^\\\\S]]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[complex_numbers(**{'width': 64})]",
                "time": 0.451,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_long_dict",
                "time": 0.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemods.TestFixPositionalKeywonlyArgs",
                "name": "test_kwargs_noop",
                "time": 0.512,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[64-3]",
                "time": 0.639,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: x >= 3-3-inf]",
                "time": 1.458,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_control",
                "name": "test_cleanup_executes_on_leaving_build_context",
                "time": 0.55,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_positional_errors_if_too_many_args",
                "time": 0.366,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regressions",
                "name": "test_prng_state_unpolluted_by_given_issue_1266",
                "time": 0.535,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_data_explicitly_rejects_non_strategies[None-5]",
                "time": 0.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-False-[\\\\d]]",
                "time": 0.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_zero_intervals_are_OK",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_supportscast_types_support_protocol_or_are_castable[SupportsInt-int]",
                "time": 1.651,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-(?:[a-z])(['\"])[a-z]+\\\\1]",
                "time": 1.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[0-256]",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_exec_as_module_execs",
                "time": 0.262,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_dispatch",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[enumerate]",
                "time": 0.508,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_intervalset",
                "name": "test_intervals_are_equivalent_to_their_lists",
                "time": 0.681,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_cyclic_set",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_nothing",
                "name": "test_set_of_nothing",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_phases",
                "name": "test_this_would_fail_if_you_ran_it",
                "time": 0.287,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Hypothesis has been told to run no examples for this test.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-a]",
                "time": 0.801,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_param_called_within_defaults_on_error",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_efficient_dicts_with_sampled_keys",
                "time": 1.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_bad_repr",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1, max_value=5)-isfinite-1-5]",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_passes_varargs_correctly",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-ab+]",
                "time": 0.979,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_given_multiline_regex_can_insert_after_dollar",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_copying_preserves_signature[has_one_arg]",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_runner_strategy",
                "name": "test_is_default_in_find",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[lists(**{'elements': booleans(), 'min_size': 5})]",
                "time": 0.626,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_nan_reprs[nan--nan]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_is_mock_with_positive_cases",
                "time": 0.4,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[ArithmeticError]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-True-\\\\s]",
                "time": 0.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_type_of_builtin_types[UnicodeDecodeError]",
                "time": 0.422,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-\\\\d]",
                "time": 1.57,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_matching[False-False-\\\\w-is_word]",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_digest_a_unicode_lambda",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_posonly_args_py38",
                "name": "test_preserves_signature",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_can_disallow_inf",
                "time": 0.542,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-ab{,10}]",
                "time": 0.908,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[builds(ABC, booleans(), booleans(), integers())]",
                "time": 0.44,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-False-[\\\\w]]",
                "time": 0.683,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_down_means_lesser",
                "time": 0.827,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_typing_Type_int",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_invalid_base_64_gives_invalid_argument",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_overlapping_posarg_kwarg_fails",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_end_with_terminator_does_not_pad",
                "time": 0.723,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_proxy_lambdas[<lambda>-args0-None]",
                "time": 0.461,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_annotated_more_than_ten",
                "time": 0.637,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-[^\\\\W]]",
                "time": 1.223,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.Mapping[tests.cover.test_lookup.Elem, NoneType]-typing.Mapping]",
                "time": 0.965,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_data_explicitly_rejects_non_strategies[None-value1]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_can_sample_ordereddict_without_warning",
                "time": 0.37,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_tuple_variadic_as_generic",
                "time": 1.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_does_not_print_reproduction_for_simple_data_examples_by_default",
                "time": 0.531,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_required_args[args3-kwargs3-expected3-method]",
                "time": 0.48,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemods.TestFixPositionalKeywonlyArgs",
                "name": "test_noop_if_unsure",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_unbound_method",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_exec_as_module_caches",
                "time": 0.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_one_of",
                "name": "test_one_of_flatmapped",
                "time": 0.487,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_issue_1786_regression",
                "time": 0.856,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-False-[^\\\\D]]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_no_infinity_for_min_max_values[0-min_value]",
                "time": 0.975,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_positional_errors_if_too_few_args",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_have_correct_places[9]",
                "time": 0.601,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_group_backref_may_not_be_present",
                "time": 0.903,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_seed_printing",
                "name": "test_prints_seed_only_on_healthcheck[Verbosity.quiet-True-False]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_errors_if_keyword_precedes_positional",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[floats()1]",
                "time": 0.726,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_copying_preserves_signature[has_two_args]",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_float_can_find_min_value_inf",
                "time": 0.762,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_runner_strategy",
                "name": "test_is_default_without_self",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_really_bad_repr",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-True-\\\\d]",
                "time": 0.551,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_nothing",
                "name": "test_validates_min_size",
                "time": 0.258,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-True-\\\\w]",
                "time": 0.582,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(max_value=5)-functools.partial(<built-in function ge>, 3)--inf-3]",
                "time": 0.634,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1, max_value=5)-functools.partial(<built-in function eq>, 3)-3-3]",
                "time": 0.679,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_valuesview_as_generic",
                "time": 0.88,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_searchstrategy",
                "name": "test_just_strategy_uses_repr",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_fuzz_one_input[memoryview]",
                "time": 0.478,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_matching[False-False-\\\\d-is_digit]",
                "time": 0.262,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_nan_reprs[nan-nan  # Saw 1 signaling NaN]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_required_args[args0-kwargs0-expected0-Target]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reporting",
                "name": "test_does_not_print_debug_in_verbose",
                "time": 0.752,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[4-4]",
                "time": 2.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_cannot_delete_a_setting",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_inline_given_handles_self",
                "time": 0.249,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_example_that_shrinks_to_overrun_fails_health_check",
                "time": 0.649,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_given_multiline_regex_can_insert_before_caret",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_callability_checking",
                "time": 0.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[floats(min_value=3.14, max_value=3.14)]",
                "time": 0.644,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_digest_a_function_with_no_name",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_posonly_args_py38",
                "name": "test_builds_real_pos_only",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_can_find_end_of_range",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_fuzz_fractions_bounds",
                "time": 2.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_generic_collections_only_use_hashable_elements[typ1]",
                "time": 21.675,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[decimals(**{'max_value': 'inf'})]",
                "time": 0.773,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[4.0--1]",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[booleans().flatmap(lambda x: booleans() if x else complex_numbers())]",
                "time": 0.725,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_clean_source[case-0]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_manages_registered_Random_instance",
                "time": 0.726,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1, max_value=5)-functools.partial(<built-in function lt>, 3)-4-5]",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_ordered_dict_as_generic",
                "time": 1.187,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_excluded_min_in_float_arrays[mock-draft--2.0-float32]",
                "time": 1.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[filter]",
                "time": 0.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_reproduces_the_failure",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-True-[\\\\s]]",
                "time": 0.366,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_proxy_lambdas[<lambda>-args1-4]",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[complex_numbers()]",
                "time": 0.517,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_print_with_indent",
                "time": 0.482,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_cannot_exclude_endpoint_with_zero_interval[True-False-0.0-0.0]",
                "time": 0.529,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[characters(**{'whitelist_categories': ['N']})]",
                "time": 0.384,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regressions",
                "name": "test_exceptions_are_picklable[NoSuchExample('No examples found of condition foobarbaz')]",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_required_args[args4-kwargs4-expected4-Target]",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_nothing",
                "name": "test_function_composition",
                "time": 0.243,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_positional_does_not_error_if_extra_args_are_kwargs",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_required_args[args3-kwargs3-method]",
                "time": 0.956,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_searchstrategy",
                "name": "test_flatmap_with_invalid_expand",
                "time": 0.504,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_typing_Type_Union",
                "time": 0.471,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_matching[False-False-\\\\s-None]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_errors_if_not_enough_args",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.codemods.test_codemods.TestFixPositionalKeywonlyArgs",
                "name": "test_noop_with_new_floats_kw",
                "time": 0.35,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_data_explicitly_rejects_non_strategies[not a strategy-5]",
                "time": 0.402,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_cannot_define_settings_once_locked",
                "time": 0.36,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_required_args[args0-kwargs0-expected0-method]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_seed_printing",
                "name": "test_prints_seed_only_on_healthcheck[Verbosity.quiet-True-True]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_utils",
                "name": "test_float_clamper_with_allowed_zeros",
                "time": 1.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_super_repr",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_does_not_print_reproduction_for_large_data_examples_by_default",
                "time": 0.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_copying_preserves_signature[has_varargs]",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_metaclass_repr",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_have_correct_places[0]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_exclude_characters_of_specific_groups",
                "time": 1.222,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-False-\\\\w]",
                "time": 0.569,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_it_is_an_error_to_suppress_non_iterables",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[4.0-0]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_does_not_left_pad_beginning_of_string_marker",
                "time": 0.648,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_nan_reprs[nan--nan  # Saw 1 signaling NaN]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[64-4.0]",
                "time": 0.721,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_exec_leaves_sys_path_unchanged",
                "time": 0.427,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_matches[[Aa]-\\A[Aa]\\Z]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_deadline_given_valid_int",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: 3 == x-3-3]",
                "time": 0.375,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_can_sample_from_whole_range",
                "time": 0.559,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_sets_allow_multichar_output_in_ignorecase_mode",
                "time": 0.468,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1, max_value=5)-functools.partial(<built-in function le>, 3)-3-5]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_runner_strategy.TestStuff",
                "name": "test_runner_is_self",
                "time": 0.403,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_intervalset",
                "name": "test_intervals_match_indexes",
                "time": 0.686,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_clean_source[case-1]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_errors_if_provided_example_does_not_reproduce_failure",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_arg_string_is_in_order",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_transformed_just_strategy",
                "time": 0.399,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_can_sample_enums",
                "time": 0.453,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-[\\\\s]]",
                "time": 1.189,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_callable_ellipsis",
                "time": 0.528,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_samples_have_right_length",
                "time": 1.187,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[lists(**{'elements': booleans(), 'min_size': 5, 'max_size': 10})]",
                "time": 0.581,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_nonexistent_category_argument",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[choices]",
                "time": 0.873,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_issue_2495_regression",
                "time": 0.52,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-True-[\\\\d]]",
                "time": 0.473,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_settings_are_errors[kwargs6]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_setup_teardown",
                "name": "test_still_tears_down_on_failed_assume_in_reify",
                "time": 0.455,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_works_with_few_values",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_proxy_lambdas[<lambda>-args2-expected2]",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-False-[^\\\\W]]",
                "time": 0.366,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-abc]",
                "time": 0.758,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regressions",
                "name": "test_exceptions_are_picklable[DeadlineExceeded('Test took 1500.00ms, which exceeds the deadline of 1000.00ms')]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[63-4]",
                "time": 2.982,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[randint]",
                "time": 0.864,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-True-[^\\\\S]]",
                "time": 0.361,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_deprecated_settings_not_in_settings_all_list",
                "time": 0.458,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_annotated_with_two_strategies",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_fuzz_one_input",
                "name": "test_fuzz_one_input[BytesIO]",
                "time": 0.763,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[complex_numbers()]",
                "time": 0.759,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_seed_printing",
                "name": "test_prints_seed_only_on_healthcheck[Verbosity.normal-False-False]",
                "time": 1.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_positional_errors_if_given_bad_kwargs",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_can_assign_database[None]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[Exception]",
                "time": 0.922,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_cannot_set_settings",
                "time": 0.552,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_fixed_dictionaries_with_optional_and_empty_keys",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_unicode_repr",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_cannot_assign_default",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_from_type_with_tuple_works[BuiltinTuple]",
                "time": 1.755,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[dictionaries(keys=text(), values=booleans())]",
                "time": 7.762,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_end",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-True-[\\\\w]]",
                "time": 0.508,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-\\\\s]",
                "time": 1.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_regex_types[bytes-generic0]",
                "time": 0.733,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_lower_bounded_length[5]",
                "time": 1.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_minimizes_to_empty[list-lists]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_health_checks",
                "name": "test_it_is_an_error_to_suppress_non_healthchecks",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_does_not_print_reproduction_if_told_not_to",
                "time": 2.494,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_produces_valid_examples_from_keyword[characters(**{'blacklist_categories': []})]",
                "time": 0.437,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_fixed_length[5]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_sets_of_fixed_length[1]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_can_find_none_list",
                "time": 0.427,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[64-256]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_copying_preserves_signature[has_kwargs]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_deadline_given_valid_float",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_required_args[args4-kwargs4-expected4-method]",
                "time": 0.429,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_matches[[ab]*-\\A[ab]*\\Z]",
                "time": 0.693,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_empty_collection_gives_empty[col3-strat3]",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_have_correct_places[1]",
                "time": 0.465,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_generates_example[[ab]*-aBb]",
                "time": 2.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_matching[False-True-\\\\w-is_word]",
                "time": 0.364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(max_value=5)-functools.partial(<built-in function gt>, 3)--inf-2.9999999999999996]",
                "time": 0.687,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reporting",
                "name": "test_does_print_debug_in_debug",
                "time": 0.66,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_subpattern_flags",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_errors_with_did_not_reproduce_if_the_shape_changes",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_seed_printing",
                "name": "test_uses_global_force",
                "time": 2.526,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-ab{5,}]",
                "time": 1.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_errors_on_extra_kwargs",
                "time": 0.38,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_runner_strategy.TestStuff",
                "name": "test_runner_is_self_even_with_default",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-(?P<foo>['\"])[a-z]+(?P=foo)]",
                "time": 1.112,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: 3 <= x-3-None]",
                "time": 0.669,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_required_args[args1-kwargs1-expected1-Target]",
                "time": 0.37,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_derandomise_with_explicit_database_is_invalid",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1, max_value=5)-functools.partial(<built-in function eq>, 3)-3-3]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_raises_attribute_error",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[1-8]",
                "time": 1.551,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_outputs_random_calls[False]",
                "time": 0.713,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_callable_no_args",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_generates_example[a-a]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_bad_codepoint_arguments",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_max_size_is_respected_with_unique_sampled_from",
                "time": 0.511,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_whitelisted_characters_override",
                "time": 0.485,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_dictionaries_of_fixed_length[9]",
                "time": 3.2,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_settings_are_errors[kwargs7]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[weibullvariate]",
                "time": 1.245,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_direct_strategies",
                "name": "test_data_explicitly_rejects_non_strategies[not a strategy-value1]",
                "time": 0.468,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_single_example[recursive(booleans(), lambda x: lists(x, max_size=3), max_leaves=10)]",
                "time": 0.749,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_evil_prng_registration_nonsense",
                "time": 1.402,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_searchstrategy",
                "name": "test_just_strategy_does_not_draw",
                "time": 0.783,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_registered_Random_is_seeded_by_random_module_strategy",
                "time": 0.754,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regressions",
                "name": "test_exceptions_are_picklable[RewindRecursive(<class 'int'>)]",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-False-\\\\s]",
                "time": 0.557,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_can_draw_empty_list_from_unsatisfiable_strategy",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_sets_of_fixed_length[7]",
                "time": 1.611,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_positional_errors_if_given_duplicate_kwargs",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_settings_as_decorator_must_be_on_callable",
                "time": 0.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.Container[tests.cover.test_lookup.Elem]-typing.Container]",
                "time": 1.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_nothing",
                "name": "test_tuples_detect_empty_elements",
                "time": 0.626,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_can_have_none_database",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: x < 1 and x < 1--inf-0.9999999999999999]",
                "time": 1.706,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_basic_class",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_typevars_can_be_redefined",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_unsat_filtered_sampling",
                "time": 0.727,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_clean_source[case-2]",
                "time": 0.472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_can_assign_database[db1]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-False-\\\\d]",
                "time": 0.51,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_settings_in_strategies_are_from_test_scope",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_issue_725_regression",
                "time": 0.528,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_setup_teardown",
                "name": "test_sets_up_without_teardown",
                "time": 0.463,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_will_equal_size[7]",
                "time": 0.824,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_list_as_generic",
                "time": 0.869,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-False-[\\\\w]]",
                "time": 0.586,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_dictionaries_of_fixed_length[3]",
                "time": 0.58,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1, max_value=5)-functools.partial(<built-in function ge>, 3)-1-3]",
                "time": 0.938,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_fixed_length[0]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_will_equal_size[1]",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_sets_of_fixed_length[2]",
                "time": 0.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[128--1]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_fixed_length[6]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_setup_teardown",
                "name": "test_calls_setup_and_teardown_on_self_as_first_argument",
                "time": 0.988,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_can_sample_from_large_subset",
                "time": 0.505,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_behaves_like_a_dict_with_losses[RandomCache]",
                "time": 1.55,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_minimizes_to_empty[set-sets]",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_binary_respects_max_size",
                "time": 0.638,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-True-[^\\\\D]]",
                "time": 0.514,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_efficient_lists_of_tuples_first_element_sampled_from",
                "time": 11.429,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_slices_will_shrink[5]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_deadline_given_valid_timedelta",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_errors_with_did_not_reproduce_if_rejected",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-ab{5}]",
                "time": 1.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_respects_none_database",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groupref_exists",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_settings_are_errors[kwargs0]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_stay_within_bounds[5]",
                "time": 0.965,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_will_not_be_zero[5]",
                "time": 0.624,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_bare_caret_can_produce",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_handle_binary_regex_which_is_not_ascii",
                "time": 0.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_collections_set_as_generic",
                "time": 0.93,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_generates_example[[Aa]-A0]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_runner_strategy.TestState",
                "name": "runTest",
                "time": 3.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: x > 3-3.0000000000000004-inf]",
                "time": 1.118,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_stays_within_bounds[5]",
                "time": 0.585,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewriting_partially_understood_filters[None-None-predicate7]",
                "time": 0.506,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_can_handle_unicode_repr",
                "time": 0.543,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_parent",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1, max_value=5)-functools.partial(<built-in function ge>, 3)-1-3]",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_empty_collection_gives_empty[col4-strat4]",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_supportscast_types_support_protocol_or_are_castable[SupportsBytes-bytes]",
                "time": 0.769,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[text()]",
                "time": 2.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py38",
                "name": "test_can_register_new_type_for_typeddicts",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_blacklisted_characters",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_exclude_all_available_range",
                "time": 0.343,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_contextmanager_as_generic",
                "time": 0.469,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_internals_can_disable_newline_from_dollar_for_jsonschema",
                "time": 0.71,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.DefaultDict[tests.cover.test_lookup.Elem, NoneType]-<class 'collections.defaultdict'>]",
                "time": 1.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-True-[^\\\\W]]",
                "time": 0.51,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_intervalset",
                "name": "test_error_for_index_of_not_present_value",
                "time": 0.997,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reporting",
                "name": "test_does_print_verbose_in_debug",
                "time": 0.415,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_required_args[args5-kwargs5-expected5-Target]",
                "time": 0.432,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_decimals_have_correct_places[2]",
                "time": 0.375,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_searchstrategy",
                "name": "test_none_strategy_does_not_draw",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_names_of_functions_are_pretty",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_puts_the_database_in_the_home_dir_by_default",
                "time": 0.656,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_can_draw_empty_set_from_unsatisfiable_strategy",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_deadline[x4]",
                "time": 0.518,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_typevars_can_be_redefine_with_factory",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_will_equal_size[3]",
                "time": 0.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-[a-z0-9_]]",
                "time": 0.828,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_issue_2247_regression",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_will_reload_profile_when_default_is_absent",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_empty_collection_gives_empty[col9-strat9]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regressions",
                "name": "test_no_missed_custom_init_exceptions",
                "time": 0.38,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_database_type_must_be_ExampleDatabase[:memory:-None]",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_fixed_length[1]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_settings_alone",
                "time": 1.886,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_stops_immediately_on_replay",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_pretty",
                "name": "test_collections_defaultdict",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_counter_as_generic",
                "time": 1.131,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_fixed_length[7]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_deadline[0]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-[a][b][c]]",
                "time": 0.792,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_stays_within_bounds[5]",
                "time": 1.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[fractions()]",
                "time": 1.61,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_can_repeatedly_push_the_same_thing",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[random]",
                "time": 0.625,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[TypeError]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_recursive",
                "name": "test_issue_1502_regression",
                "time": 0.473,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[None-4]",
                "time": 2.527,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_bare_dollar_can_produce",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_impossible_negative_lookahead",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[lists(none(), max_size=0)]",
                "time": 0.721,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_shows_target_scores_with_multiple_failures",
                "time": 4.968,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_show_changed",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_matches[[ab]*-\\\\A[ab]*\\\\Z1]",
                "time": 0.773,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_minimizes_towards_ascii_zero",
                "time": 0.401,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_can_exclude_newlines_by_category",
                "time": 1.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_generates_example[[ab]*-abb0]",
                "time": 0.683,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_empty_collection_gives_empty[col5-strat5]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_sets_of_fixed_length[3]",
                "time": 0.579,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_not_literal_with_ignorecase[\\\\A[^a][^b]\\\\Z]",
                "time": 0.676,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[expovariate]",
                "time": 0.894,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_minimizes_to_empty[frozenset-frozensets]",
                "time": 0.378,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers()-lambda x: 3 < x-4-None]",
                "time": 0.708,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-functools.partial(<built-in function lt>, 3)-3.0000000000000004-inf]",
                "time": 0.712,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1, max_value=5)-functools.partial(<built-in function gt>, 3)-1-2]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_whitelist_characters_disjoint_blacklist_characters",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_no_variables_printed",
                "time": 0.518,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_when_nothing_could_be_produced",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_re_match_bytes_as_generic",
                "time": 0.712,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-[\\\\d]]",
                "time": 0.892,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_slices_will_shrink[10]",
                "time": 0.417,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-False-[\\\\d]]",
                "time": 0.537,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_class_names_are_not_included_in_class_method_prettiness",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_shrinks_both_failures",
                "time": 0.976,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_settings_are_errors[kwargs1]",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_regex_types[bytes-generic1]",
                "time": 0.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regressions",
                "name": "test_issue751",
                "time": 0.878,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_flaky_raises_flaky",
                "time": 0.477,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_will_equal_size[2]",
                "time": 0.603,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-False-[\\\\s]]",
                "time": 0.555,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_small_sized_sets",
                "time": 1.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_setup_teardown",
                "name": "test_tears_down_without_setup",
                "time": 0.53,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewriting_partially_understood_filters[None-None-<lambda>4]",
                "time": 0.776,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_outputs_random_calls[True]",
                "time": 1.704,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_deadline[x5]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-False-[^\\\\W]]",
                "time": 0.427,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_prints_reproduction_if_requested",
                "time": 0.654,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_variable_length_tuples[4]",
                "time": 2.754,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_recursive",
                "name": "test_respects_leaf_limit",
                "time": 2.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_issue_946_regression",
                "time": 0.458,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_group_ref_is_not_shared_between_identical_regex",
                "time": 2.121,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_choices_have_right_length",
                "time": 0.992,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-True-\\\\w]",
                "time": 0.513,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_mutability_1",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_fixed_length[2]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_database_type_must_be_ExampleDatabase[:memory:-db1]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_can_use_factory_for_tests",
                "time": 2.206,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_can_run_with_no_db",
                "time": 17.749,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_deadline[-0.7]",
                "time": 0.249,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_dictionaries_of_fixed_length[4]",
                "time": 0.885,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reporting",
                "name": "test_can_print_bytes",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_empty_collection_gives_empty[col10-strat10]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reporting",
                "name": "test_can_report_when_system_locale_is_ascii",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_fixed_length[8]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_searchstrategy",
                "name": "test_can_map",
                "time": 0.578,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_unsat_filtered_sampling_in_rejection_stage",
                "time": 0.442,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_can_set_verbosity",
                "time": 0.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_exclude_characters_of_major_categories",
                "time": 1.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_does_not_simplify_into_surrogates",
                "time": 1.89,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_recursive",
                "name": "test_invalid_args[s0]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_handle_boundaries_nested",
                "time": 0.856,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_stays_within_bounds[10]",
                "time": 0.581,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_note_deprecation_checks_date",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_will_actually_use_the_random_seed",
                "time": 0.528,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_empty_collection_gives_empty[col6-strat6]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_will_equal_size[4]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-[^\\\\S]]",
                "time": 0.927,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant_and_rule_are_incompatible[invariant-rule]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_lower_bounded_length[6]",
                "time": 1.169,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_will_not_be_zero[10]",
                "time": 0.776,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_characters_of_specific_groups",
                "time": 1.392,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_minimizes_list_of_lists",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_empty_collection_gives_empty[col0-strat0]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_load_profile",
                "time": 0.47,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_settings_are_errors[kwargs2]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_ints[integers(min_value=1, max_value=5)-functools.partial(<built-in function lt>, 3.5)-4-5]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-[\\\\s]]",
                "time": 0.838,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_can_not_set_print_blob_to_non_print_settings[always]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_slices_will_shrink[100]",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-True-\\\\s]",
                "time": 0.619,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_can_handle_large_codepoints",
                "time": 0.464,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_regex_types[str-generic0]",
                "time": 0.866,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_regex_have_same_type_as_pattern[.0]",
                "time": 0.803,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_seeding_to_same_value_synchronizes[True]",
                "time": 1.817,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_database_type_must_be_ExampleDatabase[.hypothesis/examples-None]",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-ab|cd|ef]",
                "time": 0.853,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_dict_as_generic",
                "time": 1.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_mutability_2",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_will_equal_size[8]",
                "time": 0.522,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_deadline[-1]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reporting",
                "name": "test_can_report_functions",
                "time": 0.254,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_setup_teardown",
                "name": "test_calls_setup_and_teardown_on_self_unbound",
                "time": 0.388,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_fixed_length[3]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_fixed_length[9]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_database_is_reference_preserved",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reporting",
                "name": "test_prints_output_by_default",
                "time": 1.555,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful.TestPrecondition",
                "name": "runTest",
                "time": 0.88,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-^abc]",
                "time": 0.876,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_consumes_typecheck",
                "time": 0.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_recursive",
                "name": "test_invalid_args[s1]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[StopAsyncIteration]",
                "time": 0.552,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-False-\\\\s]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_note_deprecation_checks_has_codemod",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful.TestMachineWithConsumingRule",
                "name": "runTest",
                "time": 10.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_shrink_budgeting",
                "name": "test_meets_budgetary_requirements[example0-Lexical]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_will_equal_size[3]",
                "time": 0.579,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_easy_filtered_sampling",
                "time": 0.461,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant_and_rule_are_incompatible[rule-invariant]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_can_not_set_verbosity_to_non_verbosity",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reflection",
                "name": "test_repr_is_included_in_bound_method_prettiness",
                "time": 0.492,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_seed_printing",
                "name": "test_prints_seed_only_on_healthcheck[Verbosity.normal-False-True]",
                "time": 1.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_empty_collection_gives_empty[col7-strat7]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[<class 'tests.cover.test_lookup.A_NamedTuple'>-<class 'tuple'>]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[randrange]",
                "time": 1.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_will_equal_size[5]",
                "time": 0.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_sets_of_fixed_length[4]",
                "time": 1.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_does_not_print_reproduction_for_simple_examples_by_default",
                "time": 1.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_collections_mutableset_as_generic",
                "time": 0.881,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_error_in_draw",
                "name": "test_warns_on_bool_strategy",
                "time": 0.563,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats(min_value=1, max_value=5)-functools.partial(<built-in function gt>, 3)-1-2.9999999999999996]",
                "time": 0.928,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-False-[^\\\\S]]",
                "time": 0.474,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_empty_collection_gives_empty[col1-strat1]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_not_literal_with_ignorecase[(?i)\\\\A[^a][^b]\\\\Z]",
                "time": 0.562,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_settings_are_errors[kwargs3]",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-False-[^\\\\D]]",
                "time": 0.579,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_searchstrategy",
                "name": "test_example_raises_unsatisfiable_when_too_filtered",
                "time": 14.849,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[1-255]",
                "time": 1.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[False-True-[\\\\w]]",
                "time": 0.593,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-ab{5,10}]",
                "time": 1.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_multiple_precondition_bug",
                "time": 48.958,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_sets_are_size_bounded",
                "time": 0.56,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_generates_example[[Aa]-A1]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_slices_will_shrink[1000]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-[^a-z0-9_]]",
                "time": 0.846,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings.test_settings_decorator_applies_to_rule_based_state_machine_class",
                "name": "runTest",
                "time": 1.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_deadline[8.64e+16]",
                "time": 0.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-[^a][^b][^c]]",
                "time": 0.815,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant_and_rule_are_incompatible[precondition-invariant-rule]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_supportscast_types_support_protocol_or_are_castable[SupportsComplex-complex]",
                "time": 1.635,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_intervalset",
                "name": "test_validates_index",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_passing_unreferenced_instance_raises",
                "time": 0.575,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-functools.partial(<built-in function le>, 3)-3-inf]",
                "time": 0.77,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_profile_names_must_be_strings",
                "time": 0.387,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_ratchetting_raises_flaky",
                "time": 0.508,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_initialize_rule",
                "time": 1.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[randbytes]",
                "time": 0.583,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant_checks_initial_state_if_no_initialize_rules",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_settings_apply_for_explicit_examples",
                "time": 0.419,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_fixed_length[4]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_suggests_elements_instead_of_annotations",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_empty_collection_gives_empty[col11-strat11]",
                "time": 0.595,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_stays_within_bounds[10]",
                "time": 0.566,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: x > 1 and x > 0-1.0000000000000002-inf]",
                "time": 1.189,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant_and_rule_are_incompatible[invariant-initialize]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_shrink_budgeting",
                "name": "test_meets_budgetary_requirements[example0-Ordering]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_encoding_loop",
                "time": 3.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_statistics_with_events_and_target",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_stay_within_bounds[10]",
                "time": 0.899,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_stays_within_bounds[100]",
                "time": 0.691,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_empty_collection_gives_empty[col8-strat8]",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-True-[\\\\s]]",
                "time": 0.511,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_settings_are_errors[kwargs4]",
                "time": 0.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-[^\\\\D]]",
                "time": 0.821,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_re_match_str_as_generic",
                "time": 1.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[gammavariate]",
                "time": 1.605,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.Counter[tests.cover.test_lookup.Elem]-typing.Counter]",
                "time": 1.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_recursive",
                "name": "test_invalid_args[s2]",
                "time": 0.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_setup_teardown",
                "name": "test_calls_setup_and_teardown_on_failure",
                "time": 0.613,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: 3 > x--inf-2.9999999999999996]",
                "time": 1.174,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_empty_collection_gives_empty[col2-strat2]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_can_find_mixed_ascii_and_non_ascii_strings",
                "time": 0.938,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_deprecated_settings_warn_on_set_settings",
                "time": 0.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_matches[[ab]-\\A[ab]\\Z]",
                "time": 0.457,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_given_does_not_pollute_state",
                "time": 1.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_inherits_an_empty_database[None]",
                "time": 0.393,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_handles_flaky_tests_where_only_one_is_flaky",
                "time": 0.885,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regressions",
                "name": "test_can_find_non_zero",
                "time": 0.97,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_sets_of_fixed_length[0]",
                "time": 0.455,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_database_type_must_be_ExampleDatabase[.hypothesis/examples-db1]",
                "time": 0.536,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_will_be_negative",
                "time": 2.729,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_can_restrict_to_ascii_only",
                "time": 0.631,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant_and_rule_are_incompatible[precondition-rule-invariant]",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py39",
                "name": "test_can_register_builtin_list",
                "time": 0.69,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_notes_hard_to_satisfy",
                "time": 1.532,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_will_equal_size[9]",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_next_float_normal[next_down_normal--0.0--2.2250738585072014e-308]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_will_equal_size[6]",
                "time": 0.399,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_filtered_sampling_finds_rare_value",
                "time": 0.542,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_chainmap_as_generic",
                "time": 1.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_targeting",
                "name": "test_respects_max_pool_size",
                "time": 1.805,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_dictionaries_of_fixed_length[5]",
                "time": 1.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_matching[True-False-\\\\d-is_digit]",
                "time": 3.145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewriting_partially_understood_filters[None-None-<lambda>5]",
                "time": 1.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[4-8]",
                "time": 2.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.KeysView[tests.cover.test_lookup.Elem]-<class 'dict_keys'>]",
                "time": 1.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators.TestCases",
                "name": "test_float_addition_cancels",
                "time": 3.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant_and_rule_are_incompatible[initialize-invariant]",
                "time": 0.244,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_builtin_types[StopIteration]",
                "time": 0.536,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_escalation",
                "name": "test_does_not_escalate_errors_in_non_hypothesis_file",
                "time": 0.436,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_non_empty_collection_gives_single_zero[list-lists]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_shrink_budgeting",
                "name": "test_integer_shrinking_is_parsimonious",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_loading_profile_keeps_expected_behaviour",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_literals_with_ignorecase[\\\\Aa\\\\Z]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_groups[True-True-\\\\d]",
                "time": 0.496,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_picks_up_settings_at_first_use_of_testcase",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_will_equal_size[4]",
                "time": 0.618,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_sets_of_fixed_length[8]",
                "time": 1.906,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_event_with_non_weakrefable_keys",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_numerics",
                "name": "test_fuzz_decimals_bounds",
                "time": 2.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings.TestGivenExampleSettingsExplicitCalled",
                "name": "test_example_explicit",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_searchstrategy",
                "name": "test_or_errors_when_given_non_strategy",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-[^\\\\S]]",
                "time": 0.823,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_any_doesnt_generate_newline",
                "time": 0.465,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_regex_have_same_type_as_pattern[.1]",
                "time": 0.821,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_invalid_settings_are_errors[kwargs5]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_recursive",
                "name": "test_invalid_args[s3]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_regex_types[str-generic1]",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_list_is_sorted",
                "time": 1.605,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_empty_text",
                "time": 0.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_is_not_ascii",
                "time": 0.51,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_ordered_dictionaries_preserve_keys",
                "time": 1.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=True, max_value=1]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_generates_example[[ab]*-abb1]",
                "time": 0.946,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invalid_rule_argument",
                "time": 0.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=False, min_value=-1, max_value=-2.2250738585072014e-308]",
                "time": 2.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_targeting",
                "name": "test_allowed_inputs_to_target",
                "time": 0.678,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_must_be_bool",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_inherits_an_empty_database[db1]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_integers_from_are_from",
                "time": 0.429,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_will_not_be_zero[100]",
                "time": 0.839,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[Exception]",
                "time": 0.724,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-(foo)+]",
                "time": 0.907,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_subnormal_validation[min_value=2.2250738585072014e-308]",
                "time": 0.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant_and_rule_are_incompatible[invariant-precondition-rule]",
                "time": 0.24,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_load_non_existent_profile",
                "time": 0.236,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_rand_below",
                "time": 0.497,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_empty_machine_is_invalid",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_stays_within_bounds[100]",
                "time": 0.551,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_passing_unreferenced_instance_within_function_scope_raises",
                "time": 0.87,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-\\\\d]",
                "time": 0.774,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_generates_example[[ab]-A]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_cache_implementation",
                "name": "test_always_evicts_the_lowest_scoring_value",
                "time": 2.674,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_run_with_database_in_thread",
                "time": 2.636,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_randbytes_have_right_length",
                "time": 0.745,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_will_equal_size[7]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_minimize_dicts_with_incompatible_keys",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_mix_sampling_with_generating",
                "time": 0.644,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_will_equal_size[9]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_escalation",
                "name": "test_does_escalate_errors_in_hypothesis_file",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_database_backend",
                "name": "test_gadb_coverage",
                "time": 0.361,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_non_empty_collection_gives_single_zero[set-sets]",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[NoneType]",
                "time": 0.364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_flaky_exit",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[list]",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_literals_with_ignorecase[(?i)\\\\Aa\\\\Z]",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_rule_non_bundle_target_oneof",
                "time": 0.507,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_targeting",
                "name": "test_targeting_with_following_empty",
                "time": 32.472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_multiple_rules_same_func",
                "time": 4.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_mixed_text",
                "time": 0.592,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_lower_bounded_length[7]",
                "time": 1.871,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[bytes]",
                "time": 0.581,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_can_manually_call_initialize_rule",
                "time": 0.759,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=True, max_value=-2.225073858507201e-308]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[range]",
                "time": 0.723,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_mapping_as_generic",
                "time": 1.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_setattr_on_settings_singleton_is_error",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-ab?]",
                "time": 0.784,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[frozenset]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_stays_within_bounds[1000]",
                "time": 0.62,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_fixed_size_bytes_just_draw_bytes",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-[a-z0-9_]]",
                "time": 0.85,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_Generator",
                "time": 0.986,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_will_equal_size[10]",
                "time": 0.618,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[timedelta]",
                "time": 0.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invalid_initialize_argument",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[decimals()]",
                "time": 1.143,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_subnormal_validation[min_value=10]",
                "time": 0.387,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_given_usable_inline_on_lambdas",
                "time": 0.353,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_efficient_sets_of_samples",
                "time": 0.982,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_subnormal_validation[min_value=2.225073858507201e-308, exclude_min=True]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_stay_within_bounds[100]",
                "time": 0.813,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant_failling_present_in_falsifying_example",
                "time": 0.75,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[datetime]",
                "time": 0.417,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_initialize_rule_populate_bundle",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_sets_of_fixed_length[5]",
                "time": 1.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_find_one",
                "time": 0.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_custom_type_resolution_with_function",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_any_with_dotall_generate_newline[\\\\A.\\\\Z]",
                "time": 0.563,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_unique_by_tuple_funcs",
                "time": 1.366,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_map",
                "name": "test_can_assume_in_map",
                "time": 1.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant_and_rule_are_incompatible[rule-precondition-invariant]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_matches[-\\\\A\\\\Z]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_positive_delta",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-\\\\w]",
                "time": 0.869,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_does_not_catch_interrupt_during_falsify",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_characters_of_major_categories",
                "time": 1.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_setup_teardown",
                "name": "test_still_tears_down_on_error_in_generation",
                "time": 0.705,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_find_string_with_duplicates",
                "time": 0.944,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_will_equal_size[8]",
                "time": 0.605,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_will_equal_size[10]",
                "time": 0.64,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[bool]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_find_non_empty_collection_gives_single_zero[frozenset-frozensets]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_escalation",
                "name": "test_does_not_escalate_errors_in_hypothesis_file_if_disabled",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_literals_with_ignorecase[\\\\A[ab]\\\\Z]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[function]",
                "time": 0.231,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=True, min_value=-1, max_value=1]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_can_set_max_size_large",
                "time": 0.585,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_will_equal_size[5]",
                "time": 0.539,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_settings_applied_twice_is_error",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_two_settings_decorators_applied_to_state_machine_class_raises_error",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_draw_timing[False-False]",
                "time": 0.422,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_subnormal_validation[min_value=11]",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_can_disable_multiple_error_reporting[True]",
                "time": 0.499,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_multiple_invariants",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_text",
                "name": "test_rewriting_integers_covers_right_range",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_machine_with_no_terminals_is_invalid",
                "time": 0.497,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_seed_printing",
                "name": "test_does_print_on_reuse_from_database",
                "time": 1.444,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_subnormal_validation[max_value=-2.2250738585072014e-308]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_beta_in_range",
                "time": 1.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_steps_printed_despite_pytest_fail",
                "time": 0.504,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_converts_kwargs_correctly_in_output[False]",
                "time": 0.572,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_will_find_ascii_examples_given_the_chance",
                "time": 0.506,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators.TestCases",
                "name": "test_abs_non_negative",
                "time": 0.587,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant_present_in_falsifying_example",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_will_not_be_zero[1000]",
                "time": 0.695,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_custom_type_resolution_with_function_non_strategy",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_stays_within_bounds[1000]",
                "time": 0.67,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regressions",
                "name": "test_mock_injection",
                "time": 0.679,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_uses_seed",
                "time": 0.737,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[bool]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[2-None]",
                "time": 1.793,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_deadline_given_none",
                "time": 0.402,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_flatmap_nameless",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_matches[-\\A\\Z]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-ab{,10}]",
                "time": 0.986,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[set]",
                "time": 0.463,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-.]",
                "time": 0.969,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_can_manage_very_long_ranges_with_step",
                "time": 0.562,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[Decimal]",
                "time": 0.534,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[sample]",
                "time": 1.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_initialize_rule_dont_mix_with_precondition",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_targeting",
                "name": "test_allowed_inputs_to_target_fewer_labels",
                "time": 0.552,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_removing_an_element_from_a_unique_list",
                "time": 0.695,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[time]",
                "time": 0.402,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[bytes]",
                "time": 0.572,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_raises_invalid_if_wrong_version",
                "time": 0.476,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: 3 >= x--inf-3]",
                "time": 0.994,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_datetimes",
                "name": "test_can_find_negative_delta",
                "time": 0.388,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=False, min_value=2.2250738585072014e-308]",
                "time": 2.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[deque]",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_int_addition_is_associative",
                "time": 0.491,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_find_something_rare",
                "time": 0.414,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_iterable_as_generic",
                "time": 1.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[TypeError]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_pad_strings_arbitrarily",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[complex]",
                "time": 0.512,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_find_large_sum_frozenset",
                "time": 1.508,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_seed_printing",
                "name": "test_prints_seed_only_on_healthcheck[Verbosity.normal-True-False]",
                "time": 0.49,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_literals_with_ignorecase[(?i)\\\\A[ab]\\\\Z]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_outer_ok",
                "time": 0.477,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_escalation",
                "name": "test_is_hypothesis_file_not_confused_by_prefix",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_settings_decorator_applied_to_non_state_machine_class_raises_error",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_when_set_to_no_simplifies_runs_failing_example_twice",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-[\\\\d]]",
                "time": 0.762,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: x < 1 and x < 2--inf-0.9999999999999999]",
                "time": 1.457,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-(['\"])[a-z]+\\\\1]",
                "time": 1.249,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_will_equal_size[1]",
                "time": 0.468,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_recursive",
                "name": "test_can_find_nested",
                "time": 0.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_traceback_elision",
                "name": "test_tracebacks_omit_hypothesis_internals[Verbosity.normal]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_subnormal_validation[min_value=-2.225073858507201e-308, exclude_max=True]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_errors_if_generic_resolves_empty",
                "time": 0.235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_minimizes_errors_in_teardown",
                "time": 4.667,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[int]",
                "time": 0.466,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_can_cast",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_stay_within_bounds[1]",
                "time": 0.759,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_sequence_filter_rewriting[bool-strategy0]",
                "time": 0.523,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=True, min_value=2.225073858507201e-308, max_value=2.2250738585072014e-308]",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_has_lambdas_in_output",
                "time": 0.672,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[63-8]",
                "time": 2.441,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_does_not_leak_groups",
                "time": 0.984,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[bytearray]",
                "time": 0.555,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_matches[(?#comment)-\\\\A\\\\Z]",
                "time": 0.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_respects_alphabet_if_list",
                "time": 0.634,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_passing_referenced_instance_within_function_scope_warns",
                "time": 0.557,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[reversed]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_any_with_dotall_generate_newline[(?s)\\\\A.\\\\Z]",
                "time": 0.623,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[timedelta]",
                "time": 0.621,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_always_runs_at_least_one_step",
                "time": 2.658,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[str]",
                "time": 0.657,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_draw_timing[False-True]",
                "time": 0.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_be_used_with_none_module",
                "time": 0.421,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_minimisation_consistent_with_characters",
                "time": 0.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_setup_teardown",
                "name": "test_still_tears_down_on_failed_assume",
                "time": 0.832,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Counter]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_copying_synchronizes",
                "time": 2.133,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_stay_within_bounds[1000]",
                "time": 0.966,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_escalation",
                "name": "test_is_hypothesis_file_does_not_error_on_invalid_paths_issue_2319[]",
                "time": 0.259,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_whitelisted_characters_alone",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_can_disable_multiple_error_reporting[False]",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_initialize_rule_dont_mix_with_regular_rule",
                "time": 0.377,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_seed_printing",
                "name": "test_prints_seed_only_on_healthcheck[Verbosity.normal-True-True]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_will_equal_size[6]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_dictionaries_of_fixed_length[6]",
                "time": 1.577,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_filtered_values_satisfy_condition",
                "time": 0.619,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[property]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-ab*]",
                "time": 0.988,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_stays_within_bounds[1]",
                "time": 0.889,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-[^a-z0-9_]]",
                "time": 0.753,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_explicit_invariant_call_with_precondition",
                "time": 0.726,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_will_equal_0",
                "time": 1.704,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_can_callback_with_a_string",
                "time": 0.456,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators.TestCases",
                "name": "test_abs_non_negative_varargs",
                "time": 0.435,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_subnormal_validation[max_value=-1]",
                "time": 0.582,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_steps_not_printed_with_pytest_skip",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_cannot_register_empty",
                "time": 0.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.ValuesView[tests.cover.test_lookup.Elem]-<class 'dict_values'>]",
                "time": 1.807,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_can_explicitly_pass_settings",
                "time": 2.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_timezone_lookup[timezone]",
                "time": 1.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_will_equal_size[2]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[timedelta]",
                "time": 0.567,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_does_not_print_reproduction_if_verbosity_set_to_quiet",
                "time": 0.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Fraction]",
                "time": 0.706,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_specialised_collection_types[typing.Deque[tests.cover.test_lookup.Elem]-typing.Deque]",
                "time": 1.254,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_Optional_minimises_to_None",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[enumerate]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=False, min_value=1]",
                "time": 2.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Number]",
                "time": 0.911,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=True, min_value=-2.2250738585072014e-308, max_value=-2.225073858507201e-308]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_reproduce_failure_works",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[str]",
                "time": 0.517,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[gauss]",
                "time": 1.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_matches[(?#comment)-\\A\\Z]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[IPv4Interface]",
                "time": 0.947,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[list]",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[None-8]",
                "time": 2.245,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_given_can_infer_from_manual_annotations[infer_token0]",
                "time": 0.417,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[dict]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_converts_kwargs_correctly_in_output[True]",
                "time": 1.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_assigning_to_settings_attribute_on_state_machine_raises_error",
                "time": 0.428,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_traceback_elision",
                "name": "test_tracebacks_omit_hypothesis_internals[Verbosity.debug]",
                "time": 0.399,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_recursive",
                "name": "test_recursive_call_validates_expand_returns_strategies",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_targeting",
                "name": "test_target_without_label",
                "time": 1.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_resolves_forwardrefs_to_builtin_types[set]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[OrderedDict]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[NoneType]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-[\\\\w]]",
                "time": 0.906,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_floats_are_in_range[9.9792015476736e+291-1.7976931348623157e+308]",
                "time": 0.783,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[list]",
                "time": 0.42,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[complex]",
                "time": 0.91,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_initialize_rule_cannot_be_double_applied",
                "time": 0.235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[date]",
                "time": 0.362,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[complex]",
                "time": 0.565,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regressions",
                "name": "test_regression_issue_1230",
                "time": 7.888,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_float_addition_is_associative",
                "time": 16.838,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_inner_ok",
                "time": 0.462,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_lower_bounded_length[0]",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_will_not_be_zero[1]",
                "time": 0.673,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_characters",
                "name": "test_whitelisted_characters_overlap_blacklisted_characters",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_seed_printing",
                "name": "test_prints_seed_only_on_healthcheck[Verbosity.quiet-False-False]",
                "time": 1.726,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_escalation",
                "name": "test_is_hypothesis_file_does_not_error_on_invalid_paths_issue_2319[<ipython-input-18-f7c304bea5eb>]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_slices_will_shrink[1]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_draw_timing[True-False]",
                "time": 0.388,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_finds_single_element_strings",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_does_not_print_notes_if_all_succeed",
                "time": 0.428,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Random]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_removing_an_element_from_a_non_unique_list",
                "time": 1.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_sets_of_fixed_length[6]",
                "time": 1.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[lists(lists(booleans()))]",
                "time": 4.248,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_infer_all[_pos_and_kwd_only]",
                "time": 0.554,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_map",
                "name": "test_assume_in_just_raises_immediately",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_stops_after_x_shrinks",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_variable_length_tuples[0]",
                "time": 3.724,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_register_random_within_nested_function_scope",
                "time": 0.542,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup_forward_ref",
                "name": "test_bound_type_cheking_only_forward_ref",
                "time": 0.254,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_without_type_args[generic0]",
                "time": 0.35,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[bytes]",
                "time": 0.523,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_fullmatch_matches[a-\\\\Aa\\\\Z]",
                "time": 0.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_has_ascii",
                "time": 0.884,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_abstract_resolver_fallback",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_pulic_interface_works",
                "time": 0.473,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_uuids",
                "name": "test_can_only_allow_nil_uuid_with_none_version",
                "time": 0.429,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[set]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Callable]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[timezone]",
                "time": 0.755,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_respects_alphabet_if_string",
                "time": 0.699,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[map]",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators.TestCases",
                "name": "test_abs_non_negative_varargs_kwargs",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_variable_length_tuples[5]",
                "time": 3.666,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_float_finite_range_and_allow_infinity_cannot_both_be_enabled",
                "time": 0.239,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_finds_multiple_failures_in_generation",
                "time": 0.524,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_is_an_endpoint",
                "time": 0.528,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[tuple]",
                "time": 0.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_any_with_dotall_generate_newline_binary[\\A.\\Z]",
                "time": 0.35,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[NotImplementedType]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_filter_validates",
                "time": 0.223,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_slices_will_shrink[2]",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_errors_on_any_varargs",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_unicode_identifiers",
                "name": "test_can_handle_unicode_identifier_in_same_line_as_lambda_def",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[reversed]",
                "time": 0.503,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_sequence_of_integers_may_be_lists_or_bytes",
                "time": 0.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[BaseExceptionGroup]",
                "time": 20.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_lower_bounded_length[1]",
                "time": 0.407,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[datetime]",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_given_can_infer_from_manual_annotations[infer_token1]",
                "time": 0.42,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-ab{5,}]",
                "time": 1.188,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_multiple_randoms_are_unrelated",
                "time": 1.119,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_formats_are_evaluated_only_once",
                "time": 0.51,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-a]",
                "time": 0.718,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_reproduce_failure_fails_if_no_error",
                "time": 0.47,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[super]",
                "time": 0.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_map_nameless",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_map",
                "name": "test_identity_map_is_noop",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[tuple]",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_cannot_sample_sets",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup_forward_ref",
                "name": "test_bound_type_checking_only_forward_ref_wrong_type",
                "time": 0.239,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_targeting",
                "name": "test_disallowed_inputs_to_target",
                "time": 1.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: 3 == x-3-3]",
                "time": 0.997,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_stay_within_bounds[2]",
                "time": 0.89,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_initialize_rule_in_state_machine_with_inheritance",
                "time": 0.841,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_unittest",
                "name": "test_subTest_no_self[err0]",
                "time": 1.721,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_stateful_states_are_deduped",
                "time": 10.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_valid_sizes[0-101-binary]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[shuffle]",
                "time": 0.978,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_floats_are_in_range[-1.7976931348623157e+308-1.7976931348623157e+308]",
                "time": 0.574,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[float]",
                "time": 0.734,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_runner_strategy",
                "name": "test_cannot_use_without_a_runner",
                "time": 0.608,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_check_strategy_might_suggest_sampled_from",
                "time": 0.226,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[Decimal]",
                "time": 0.675,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_rule_deprecation_targets_and_target",
                "time": 0.575,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_prints_notes_once_on_failure",
                "time": 0.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[range]",
                "time": 1.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_infer_all[_one_arg]",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[memoryview]",
                "time": 0.592,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[4-255]",
                "time": 2.706,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Iterator]",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_draw_timing[True-True]",
                "time": 0.492,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup_py37",
                "name": "test_resolving_standard_iterator_as_generic",
                "time": 0.93,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_recursion_validates_base_case",
                "time": 0.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-[^\\\\D]]",
                "time": 1.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-ab?]",
                "time": 0.95,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_does_not_error_if_min_size_is_bigger_than_default_size",
                "time": 16.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Generator]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[UnicodeDecodeError]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[date]",
                "time": 0.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_timezone_aware_datetimes_are_timezone_aware",
                "time": 1.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_without_type_args[generic1]",
                "time": 0.422,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_can_put_arguments_in_the_middle",
                "time": 0.433,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_verbosity",
                "name": "test_prints_initial_attempts_on_find",
                "time": 0.449,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_can_minimize_up_to_zero",
                "time": 0.446,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[date]",
                "time": 0.413,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_sets_of_fixed_length[9]",
                "time": 2.955,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_positive_lookbehind",
                "time": 0.491,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_unicode_identifiers",
                "name": "test_regression_issue_1700",
                "time": 0.766,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_unicode_identifiers",
                "name": "test_can_copy_signature_of_unicode_args",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_will_not_be_zero[2]",
                "time": 0.541,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_has_docstrings",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_stuff_positional",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_stops_immediately_if_not_report_multiple_bugs",
                "time": 0.229,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators.TestCases",
                "name": "test_abs_non_negative_varargs_kwargs_only",
                "time": 0.426,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[set]",
                "time": 0.347,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[classmethod]",
                "time": 0.248,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_stays_within_bounds[1]",
                "time": 0.631,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_dateutil_exists_our_not_exists_are_inverse",
                "time": 1.194,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_with_type_args[strategy0-typing.Union[str, int]]",
                "time": 0.521,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_errors_when_given_varargs",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[frozenset]",
                "time": 0.388,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_stop_stays_within_bounds[2]",
                "time": 0.594,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Rational]",
                "time": 0.632,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[UUID]",
                "time": 0.444,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_does_not_add_param_empty_to_type_hints",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=False, min_value=2.2250738585072014e-308, max_value=1]",
                "time": 1.935,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_implements_all_random_methods",
                "time": 0.262,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_can_generate_non_naive_time",
                "time": 0.65,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_verbosity",
                "name": "test_prints_intermediate_in_success",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_error_if_enum_is_empty",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_check_type_with_tuple_of_length_two",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_lower_bounded_length[8]",
                "time": 1.714,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_does_not_report_on_examples",
                "time": 0.402,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_lower_bounded_length[2]",
                "time": 0.622,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-ab+]",
                "time": 0.952,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_can_sample_sequence_without_warning",
                "time": 0.392,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[time]",
                "time": 0.575,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[ItemsView]",
                "time": 0.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_rule_deprecation_bundle_by_name",
                "time": 0.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-(?:[a-z])(['\"])[a-z]+\\\\1]",
                "time": 1.262,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_breaks_bounds",
                "time": 1.577,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_any_with_dotall_generate_newline_binary[(?s)\\A.\\Z]",
                "time": 0.555,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_runner_strategy",
                "name": "test_cannot_use_in_find_without_default",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[UnicodeEncodeError]",
                "time": 1.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Bar]",
                "time": 0.613,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_can_encode_as_utf8",
                "time": 0.545,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_too_many_positional",
                "time": 0.216,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_cannot_have_zero_steps",
                "time": 0.465,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[float]",
                "time": 0.485,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_unicode_identifiers",
                "name": "test_can_copy_signature_of_unicode_name",
                "time": 0.227,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-[^\\\\W]]",
                "time": 0.752,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[UUID]",
                "time": 0.883,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_recursion_validates_recursive_step",
                "time": 0.353,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[IPv4Network]",
                "time": 0.937,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_cannot_set_non_settings",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[lists(integers(), max_size=-1)]",
                "time": 0.241,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[ChainMap]",
                "time": 0.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[KeysView]",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_empty_lists",
                "time": 0.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_underflow_in_simplify",
                "time": 0.592,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[getrandbits]",
                "time": 0.502,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[slice]",
                "time": 0.525,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_without_type_args[generic2]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup_forward_ref",
                "name": "test_bound_correct_forward_ref",
                "time": 0.403,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_varargs_without_positional_arguments_allowed",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[function]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_verbosity",
                "name": "test_does_not_log_in_quiet_mode",
                "time": 1.245,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[_randbelow]",
                "time": 0.582,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_positive_lookahead",
                "time": 2.707,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Decimal]",
                "time": 0.632,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[Fraction]",
                "time": 0.605,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_infer_all[_multi_arg]",
                "time": 0.687,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_float_ranges",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_uninspectable_builds",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_validation_happens_on_draw",
                "time": 0.52,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_prints_on_failure_by_default",
                "time": 1.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[datetime]",
                "time": 0.437,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_with_type_args[<lambda>-typing.Union[str, int]]",
                "time": 0.398,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_can_generate_non_utc",
                "time": 0.809,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_with_type_args[strategy0-typing.Sequence[typing.Sequence[int]]]",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-abc]",
                "time": 0.627,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-isfinite--1.7976931348623157e+308-1.7976931348623157e+308]",
                "time": 0.759,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_from_type[builds-using_generic]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_verbosity",
                "name": "test_no_indexerror_in_quiet_mode_report_one",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_can_generate_ignored_tokens",
                "time": 0.347,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_verbosity",
                "name": "test_includes_intermediate_results_in_verbose_mode",
                "time": 1.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_generate_both_zeros[-1]",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[dict]",
                "time": 0.24,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[dictionaries(integers(), integers(), max_size=-1)]",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.dpcontracts.test_contracts",
                "name": "test_contract_filter_inline",
                "time": 0.721,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_custom_type_resolution_fails_without_registering",
                "time": 0.217,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Complex]",
                "time": 0.548,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[2-4]",
                "time": 1.749,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_rule_non_bundle_target",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_will_be_positive",
                "time": 1.981,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_targeting",
                "name": "test_multiple_target_calls",
                "time": 2.572,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_given_warns_on_use_of_non_strategies",
                "time": 0.235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[binary(max_size=-1)]",
                "time": 0.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_stuff_keyword",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_generates_valid_json",
                "time": 2.915,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[lists(integers(), min_size='no')]",
                "time": 0.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[binary]",
                "time": 0.235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators.TestCases",
                "name": "test_int_is_always_negative",
                "time": 0.5,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_exact_timing",
                "time": 0.42,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_without_type_args[generic3]",
                "time": 0.232,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_test_sets_sampled_from",
                "time": 0.613,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[-1--1]",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_errors_when_given_varargs_and_kwargs_with_positional_arguments",
                "time": 0.221,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_derandomize",
                "time": 0.586,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[array_shapes]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_settings",
                "name": "test_settings_uses_defaults",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_can_specify_start_rule[NUMBER-type_3]",
                "time": 5.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_arguments_do_not_use_names_of_return_values",
                "time": 0.637,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[MutableSet]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[sets(integers(), max_size=-1)]",
                "time": 0.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_knows_about_all_core_strategies",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_cannot_use_explicit_strategies_for_unknown_terminals",
                "time": 0.243,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_reproduce_failure",
                "name": "test_decoding_may_fail",
                "time": 0.627,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_with_type_args[strategy0-tests.cover.test_type_lookup.MyGeneric[str]]",
                "time": 0.258,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Real]",
                "time": 0.482,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_timezone_lookup[tzinfo]",
                "time": 1.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_dictionaries_of_fixed_length[7]",
                "time": 2.701,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_float_range_and_allow_nan_cannot_both_be_enabled",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[floating_dtypes]",
                "time": 0.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[dictionaries(integers(), integers(), min_size='no')]",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_custom_type_resolution",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_step_stays_within_bounds[2]",
                "time": 0.571,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_can_generate_non_naive_datetime",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_unittest",
                "name": "test_subTest",
                "time": 0.384,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Baz]",
                "time": 0.392,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_can_generate_non_utc",
                "time": 0.817,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_from_type[builds-using_concrete_generic]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_given_warns_when_mixing_positional_with_keyword",
                "time": 0.238,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[Fraction]",
                "time": 0.677,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_generate_both_zeros[1]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_randoms_can_be_synced[False]",
                "time": 0.515,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[domains]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup_forward_ref",
                "name": "test_bound_alias_forward_ref",
                "time": 0.426,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[int]",
                "time": 0.653,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[mutually_broadcastable_shapes]",
                "time": 0.254,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_with_type_args[<lambda>-typing.Sequence[typing.Sequence[int]]]",
                "time": 0.38,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[boolean_dtypes]",
                "time": 0.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_uninspectable_from_type",
                "time": 0.413,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[lists(integers(), max_size='no')]",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_datetimes_stay_within_naive_bounds",
                "time": 0.856,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_lower_bounded_length[3]",
                "time": 0.819,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_cannot_find_non_strategies",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_strings",
                "name": "test_can_blacklist_newlines",
                "time": 0.821,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[binary(min_size='no')]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[lognormvariate]",
                "time": 1.155,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[frozensets(integers(), max_size=-1)]",
                "time": 0.371,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[arrays]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_filter_rewriting_floats[floats()-lambda x: 3 <= x-3-inf]",
                "time": 1.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_utc_is_minimal",
                "time": 0.712,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[staticmethod]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[runner]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[numeric_dtypes]",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Match]",
                "time": 0.817,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_without_type_args[generic4]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_start_will_equal_stop",
                "time": 1.571,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-ab|cd|ef]",
                "time": 0.757,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[-1-0]",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=True, min_value=-1]",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_zoneinfo_timezones",
                "name": "test_utc_is_minimal",
                "time": 0.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[ValuesView]",
                "time": 0.332,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_non_string_explicit_strategies_are_invalid",
                "time": 0.385,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_overflow_in_simplify",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[sets(integers(), min_size='no')]",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_with_type_args[strategy0-typing.Callable[..., str]]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_targeting",
                "name": "test_cannot_target_outside_test",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_keys_are_types",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_without_type_args[MyGeneric]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_check_type_suggests_check_strategy",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[time]",
                "time": 0.536,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[dictionaries(integers(), integers(), max_size='no')]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[timezone_keys]",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[valid_tuple_axes]",
                "time": 0.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_matching[True-False-\\\\s-None]",
                "time": 3.678,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_concrete_builds",
                "time": 0.417,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[dates]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[text(max_size=-1)]",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-\\\\w]",
                "time": 1.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_seeding_to_different_values_does_not_synchronize[True]",
                "time": 3.768,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_infer_all[_kwd_only]",
                "time": 0.633,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[builds]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_timezone_aware_datetimes_are_timezone_aware",
                "time": 0.478,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[floats]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_generation_without_whitespace",
                "time": 0.527,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_datetime_bounds_must_be_naive",
                "time": 0.472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[nested_dtypes]",
                "time": 0.259,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_generate_both_zeros_when_in_interval[-1--1.0-1.0]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_run_without_database",
                "time": 1.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[complex_dtypes]",
                "time": 0.254,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Integral]",
                "time": 0.383,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[booleans]",
                "time": 0.258,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[IPv6Address]",
                "time": 0.653,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_be_given_keyword_args",
                "time": 0.746,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_with_type_args[<lambda>-tests.cover.test_type_lookup.MyGeneric[str]]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[sets(integers(), min_size=-1)]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.dpcontracts.test_contracts",
                "name": "test_no_vacuous_fulfill[int]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[draw_ordered_with_assume]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_call_an_argument_f",
                "time": 0.639,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_valid_sizes[0-100-strategy0]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[badly_draw_lists]",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[_maybe_nil_uuids]",
                "time": 0.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_call_all_methods[triangular]",
                "time": 1.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[frozensets(integers(), min_size='no')]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_unittest.test_given_on_setUp_fails_health_check",
                "name": "test",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_baseexception_in_strategy_no_rerun_no_flaky[SystemExit]",
                "time": 0.248,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[binary(max_size='no')]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[tuple]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[sampled_from]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[PathLike]",
                "time": 0.668,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_zoneinfo_timezones",
                "name": "test_timezone_keys_argument_validation[kwargs0]",
                "time": 0.544,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[str]",
                "time": 0.698,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[just]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[shared]",
                "time": 0.478,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_apparently_instantaneous_tests",
                "time": 0.565,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[dict]",
                "time": 0.474,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_invalid_domain_arguments[-1-3]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=True, min_value=2.225073858507201e-308]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_without_type_args[generic6]",
                "time": 0.24,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_targeting",
                "name": "test_cannot_target_same_label_twice",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[integer_dtypes]",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[sets(integers(), max_size='no')]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[varint]",
                "time": 0.245,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[timezones]",
                "time": 0.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup_forward_ref",
                "name": "test_bound_correct_dot_access_forward_ref",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_seed_printing",
                "name": "test_prints_seed_only_on_healthcheck[Verbosity.quiet-False-True]",
                "time": 1.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[randoms]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[unsigned_integer_dtypes]",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[text(min_size='no')]",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_datetimes_can_exclude_imaginary",
                "time": 0.645,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_timezones_arg_to_datetimes_must_be_search_strategy",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[strat]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[one_of]",
                "time": 0.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_time_bounds_must_be_naive",
                "time": 0.63,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[defaultdict]",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[text(min_size=-1)]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_values_are_strategies",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_can_override_defined_terminal",
                "time": 1.745,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[datetime64_dtypes]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s0-isinf]",
                "time": 0.533,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_with_type_args[strategy0-typing.Callable[[int], str]]",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[byte_string_dtypes]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[UnicodeTranslateError]",
                "time": 0.701,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[none]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_build_signature",
                "name": "test_from_type_uses_signature_attribute",
                "time": 0.896,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_cannot_convert_EBNF_to_strategy_directly",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_bad_repr",
                "name": "test_sampling_snowmen",
                "time": 0.407,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[broadcastable_shapes]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[emails]",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-ab{5}]",
                "time": 1.203,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_valid_sizes[0-100-strategy1]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.dpcontracts.test_contracts",
                "name": "test_no_vacuous_fulfill[identity]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[fractions]",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[lists(none(), max_size=0)]",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_baseexception_in_strategy_no_rerun_no_flaky[GeneratorExit]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_zoneinfo_timezones",
                "name": "test_can_generate_non_utc",
                "time": 0.446,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[complex_number_dtypes]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_generate_both_zeros_when_in_interval[-1--0.0-1.0]",
                "time": 0.422,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[frozensets(integers(), max_size='no')]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[frozensets(none(), max_size=0)]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[63-255]",
                "time": 2.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_gen_abstract",
                "time": 0.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_explanations[False-GeneratorExit]",
                "time": 1.216,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[lists(nothing(), min_size=1, unique=True)]",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[type]",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[any_call]",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[single_bool_lists]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_does_not_print_on_success",
                "time": 0.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_inference_on_generic_collections_abc_aliases[typ1]",
                "time": 2.458,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_zoneinfo_timezones",
                "name": "test_can_generate_prefixes_if_allowed_and_available",
                "time": 0.39,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[st_composite_method]",
                "time": 0.659,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_named_tuples_are_of_right_type",
                "time": 0.451,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[IPv4Address]",
                "time": 0.815,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[write_pattern]",
                "time": 0.245,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_with_type_args[<lambda>-typing.Callable[..., str]]",
                "time": 0.421,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=False, max_value=-1]",
                "time": 1.629,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[tuples]",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[ellipsis]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[integers]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[one_of(just('a'), just('b'), just('c'))]",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_datetime_bounds_must_be_naive",
                "time": 0.504,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[update_group]",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[frozenset]",
                "time": 0.365,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[True-(?P<foo>['\"])[a-z]+(?P=foo)]",
                "time": 1.658,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_targeting",
                "name": "test_cannot_target_default_label_twice",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[kwonlyargs_composites]",
                "time": 0.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[real_dtypes]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_cacheable",
                "name": "test_local_types_are_garbage_collected_issue_493",
                "time": 1.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[frozensets(integers(), min_size=-1)]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[strat_one]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_timezones_arg_to_datetimes_must_be_search_strategy",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_can_generate_non_naive_time",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[floats(min_value=-2.0, max_value=3.0)]",
                "time": 1.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[integers(min_value=3)]",
                "time": 0.954,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[datetimes]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[scalar_dtypes]",
                "time": 0.467,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[text(max_size='no')]",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[nothing]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_from_type[from_type-tests.cover.test_type_lookup.MyGeneric[~T]]",
                "time": 0.435,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup_forward_ref",
                "name": "test_bound_missing_dot_access_forward_ref[wrong_dot_access_fun]",
                "time": 0.37,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_bad_repr",
                "name": "test_sampled_from_bad_repr",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[basic_indices]",
                "time": 0.513,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[fixed_dictionaries]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_timezone_aware_times_are_timezone_aware",
                "time": 0.541,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[binary()]",
                "time": 0.392,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[characters]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_cacheable",
                "name": "test_is_cacheable[s0]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s0-isnan]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_may_reuse_distinct_integers_if_asked[mock-draft]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_valid_sizes[0-100-text]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[from_dtype]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_verbosity",
                "name": "test_includes_progress_in_verbose_mode",
                "time": 0.789,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.dpcontracts.test_contracts",
                "name": "test_no_vacuous_fulfill[<lambda>]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_baseexception_in_strategy_no_rerun_no_flaky[ValueError]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_one_of_produces_different_values",
                "time": 0.636,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_undefined_terminals_require_explicit_strategies",
                "time": 1.9,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_settings_argument_is_validated",
                "time": 0.635,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_datetimes_can_exclude_imaginary[kw0]",
                "time": 0.512,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[IPv6Interface]",
                "time": 0.598,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_explanations[True-SystemExit]",
                "time": 1.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[dictionaries(integers(), integers(), min_size=-1)]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[functions]",
                "time": 0.385,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_build_signature",
                "name": "test_build_with_non_types_in_signature",
                "time": 0.618,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[tuples()]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[fixed_dictionaries({})]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_can_generate[False-(foo)+]",
                "time": 1.153,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_unittest",
                "name": "test_subTest_no_self[err1]",
                "time": 1.715,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[slices]",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[None-255]",
                "time": 2.538,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_zoneinfo_timezones",
                "name": "test_datetimes_stay_within_naive_bounds",
                "time": 4.356,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[permutations]",
                "time": 0.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[NoneType]",
                "time": 0.466,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[lists(floats(min_value=0.0, max_value=0.0))]",
                "time": 0.42,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[ip_addresses]",
                "time": 0.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[st_composite_then_classmethod]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[any_call_of_method]",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_bad_repr",
                "name": "test_just_frosty",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[Pattern]",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_removes_needless_steps",
                "time": 35.821,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[urls]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_time_bounds_must_be_naive",
                "time": 0.913,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[unicode_string_dtypes]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[integers().filter(lambda x: abs(x) > 100)]",
                "time": 6.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_with_type_args[<lambda>-typing.Callable[[int], str]]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[text]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[randoms(use_true_random=True)]",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[recursive]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_exception_propagates_fine[GeneratorExit]",
                "time": 1.35,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[strat_two]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[_Environ]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_conjecture_engine",
                "name": "test_lot_of_dead_nodes",
                "time": 0.874,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_generate_both_zeros_when_in_interval[-1--1.0-0.0]",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[floats()2]",
                "time": 1.506,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_complex_numbers",
                "name": "test_magnitude_validates[min_magnitude-32]",
                "time": 6.671,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_database_usage",
                "name": "test_saves_incremental_steps_in_database",
                "time": 8.144,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_verbosity",
                "name": "test_no_indexerror_in_quiet_mode",
                "time": 0.391,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_zoneinfo_timezones",
                "name": "test_can_disallow_prefixes",
                "time": 1.994,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_can_generate_non_naive_datetime",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_timezone_aware_times_are_timezone_aware",
                "time": 0.452,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[decimals]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_test_kwargs_only_methods",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_lower_bounded_length[9]",
                "time": 1.946,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[complex_numbers]",
                "time": 0.498,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[lists]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_can_trigger_error_in_draw_near_boundary[bound0]",
                "time": 0.795,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_non_imaginary_datetimes_at_boundary",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_database_usage",
                "name": "test_respects_max_examples_in_database_usage",
                "time": 222.491,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[builds(ABC, booleans(), booleans(), integers())]",
                "time": 1.133,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_exception_propagates_fine[KeyboardInterrupt]",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[binary(min_size=-1)]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases[MixedGenerics1]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func1-OneGenericOneConrete2]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_lists_of_lower_bounded_length[4]",
                "time": 1.206,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases[TwoGenericBases2]",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[clear_cache_after_draw]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_cacheable",
                "name": "test_is_cacheable[s1]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func1-AllConcrete]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[sampled_from(('a', 'b', 'c'))]",
                "time": 0.415,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_fails_in_reify",
                "time": 0.407,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_exception_propagates_fine_from_strategy[SystemExit]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_filter_rewriting",
                "name": "test_rewrite_unsatisfiable_filter[s0-pred2]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_deferred_errors",
                "name": "test_does_not_recalculate_the_strategy",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[fractions()]",
                "time": 5.669,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_raises_multiple_failures_when_position_varies",
                "time": 1.42,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_from_type[from_type-tests.cover.test_type_lookup.MyGeneric[int]]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_can_sample_from_single_element",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.array_api.test_arrays",
                "name": "test_subnormal_elements_validation[mock-draft]",
                "time": 1.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup_forward_ref",
                "name": "test_bound_missing_dot_access_forward_ref[missing_dot_access_fun]",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[sets]",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[group_conditional]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[floats(min_value=0.0)]",
                "time": 1.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_complex_numbers",
                "name": "test_magnitude_validates[max_magnitude-32]",
                "time": 5.888,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[builds(ABC, booleans(), booleans(), booleans())]",
                "time": 0.539,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_compat",
                "name": "test_ceil",
                "time": 0.61,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func1-MixedGenerics1]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[random_module]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[booleans()]",
                "time": 0.375,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_explore_arbitrary_languages",
                "name": "test_run_specific_example[seed0-language0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "got empty parameter set ['seed', 'language'], function test_run_specific_example at /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/hypothesis-python/tests/nocover/test_explore_arbitrary_languages.py:134",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func2-MixedGenerics2]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[st_composite_then_staticmethod]",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[uuids]",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_next_float_normal[next_up_normal--2.2250738585072014e-308--0.0]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func2-OneGenericOneConrete1]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[iterables]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func1-TwoGenericBases2]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[sets(none(), max_size=0)]",
                "time": 0.362,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[function]",
                "time": 0.537,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[array_dtypes]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[reuse_group]",
                "time": 0.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[st_classmethod_then_composite]",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[stupid_sampled_sets]",
                "time": 0.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[integers().flatmap(lambda right: integers(min_value=0).map(lambda length: OrderedPair(right - length, right)))]",
                "time": 6.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_conjecture_utils",
                "name": "test_p_continue_to_average",
                "time": 0.883,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_build_signature",
                "name": "test_from_type_can_be_default_or_annotation",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_lookup_overrides_defaults[bool]",
                "time": 0.375,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_datetimes_can_exclude_imaginary[kw1]",
                "time": 0.537,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_runner_that_checks_factory_produced_a_machine",
                "time": 0.515,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_generate_both_zeros_when_in_interval[-1--2.2250738585072014e-308-2.2250738585072014e-308]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func1-MixedGenerics2]",
                "time": 0.347,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_wrong_functions[wrong_generic_func1]",
                "time": 0.259,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func1-MixedGenerics1]",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func2-TwoGenericBases1]",
                "time": 0.386,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[maybe_pad]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[indices]",
                "time": 0.242,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func1-OneGenericOneConrete1]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_cacheable",
                "name": "test_is_cacheable[s2]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[booleans().flatmap(lambda x: booleans() if x else complex_numbers())]",
                "time": 2.772,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases[MixedGenerics2]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_baseexception_no_rerun_no_flaky[KeyboardInterrupt]",
                "time": 0.481,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_exception_propagates_fine_from_strategy[GeneratorExit]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[data]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_build_signature",
                "name": "test_build_in_from_type_with_self_named_something_else",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_from_type[from_type-MyGeneric]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func2-TwoGenericBases1]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func2-MixedGenerics1]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[frozensets(integers())]",
                "time": 0.511,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[timedelta64_dtypes]",
                "time": 0.469,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[IPv6Network]",
                "time": 0.664,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases[OneGenericOneConrete1]",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_my_mappable",
                "time": 2.131,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_duplication",
                "name": "test_does_not_duplicate_blocks[2]",
                "time": 0.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[2-8]",
                "time": 2.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_cacheable",
                "name": "test_is_not_cacheable[s2]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_verbosity",
                "name": "test_no_indexerror_in_quiet_mode_report_multiple",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[integers()]",
                "time": 1.18,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_next_float_normal[next_up_normal-0.0-2.2250738585072014e-308]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_fancy_repr",
                "name": "test_builds_repr",
                "time": 0.249,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_fancy_repr",
                "name": "test_flatmap_repr",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func2-OneGenericOneConrete2]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func2-AllConcrete]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func1-OneGenericOneConrete1]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup_forward_ref",
                "name": "test_bound_missing_forward_ref",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_utc_is_minimal",
                "time": 0.647,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_cacheable",
                "name": "test_is_cacheable[s3]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_filtering",
                "name": "test_chained_filters_repr[base2]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_emails",
                "name": "test_is_valid_email",
                "time": 4.398,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_resolve_core_strategies[int]",
                "time": 0.408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_find",
                "name": "test_can_find_list",
                "time": 0.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_is_ascii",
                "time": 0.891,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[st_staticmethod_then_composite]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_should_have_correct_ordering",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_exception_propagates_fine[SystemExit]",
                "time": 1.514,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func2-TwoGenericBases2]",
                "time": 0.508,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func1-MixedGenerics2]",
                "time": 0.362,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func2-AllConcrete]",
                "time": 0.504,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[tuples(booleans(), booleans())]",
                "time": 0.375,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_filtering",
                "name": "test_chained_filters_agree[base3]",
                "time": 0.8,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_eval_as_source",
                "name": "test_caches",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_wrong_functions[wrong_generic_func2]",
                "time": 0.231,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_a_text",
                "time": 0.838,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slices",
                "name": "test_size_is_equal_0",
                "time": 0.507,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func2-OneGenericOneConrete2]",
                "time": 0.366,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_characters",
                "name": "test_large_blacklist",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func1-MixedGenerics2]",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_flatmap_does_not_reuse_strategies",
                "time": 0.262,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[from_lark]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_is_the_answer",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func2-TwoGenericBases2]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_shrink_through_a_binding[1]",
                "time": 1.674,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases[AllConcrete]",
                "time": 0.258,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func1-OneGenericOneConrete2]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_shrink_through_a_binding[7]",
                "time": 1.869,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_constant_lists_are_constant",
                "time": 0.988,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func1-AllConcrete]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_generate_both_zeros_when_in_interval[1--1.0-1.0]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[integers(min_value=-4294967296, max_value=18446744073709551616)]",
                "time": 2.945,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_build_signature",
                "name": "test_build_using_different_signature_and_annotations",
                "time": 1.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_duplication",
                "name": "test_mostly_does_not_duplicate_blocks_even_when_failing[4]",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_can_trigger_error_in_draw_near_boundary[bound1]",
                "time": 0.823,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_fancy_repr",
                "name": "test_map_repr",
                "time": 0.248,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_exception_propagates_fine_from_strategy[ValueError]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_fancy_repr",
                "name": "test_floats_is_floats",
                "time": 0.543,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_delete_in_middle_of_a_binding[7]",
                "time": 5.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func2-MixedGenerics2]",
                "time": 0.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_can_get_test_case_off_machine_instance",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[8-None]",
                "time": 2.619,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_compat",
                "name": "test_floor",
                "time": 0.559,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_filtering",
                "name": "test_chained_filters_agree[base0]",
                "time": 1.647,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_cacheable",
                "name": "test_non_cacheable_things_are_not_cached",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_delete_in_middle_of_a_binding[1]",
                "time": 4.996,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_cacheable",
                "name": "test_is_not_cacheable[s0]",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[floats()1]",
                "time": 1.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func1-TwoGenericBases1]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func2-MixedGenerics1]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_filtering",
                "name": "test_chained_filters_repr[base3]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[sets(frozensets(booleans()))]",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_boundary_exploration",
                "name": "test_explore_arbitrary_function[strat0]",
                "time": 0.415,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func1-OneGenericOneConrete2]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_duplication",
                "name": "test_does_not_duplicate_blocks[3]",
                "time": 0.491,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases[OneGenericOneConrete2]",
                "time": 0.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_negation_is_self_inverse",
                "time": 3.244,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_eval_as_source",
                "name": "test_can_call_self_recursively",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_baseexception_no_rerun_no_flaky[ValueError]",
                "time": 0.456,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_duplication",
                "name": "test_does_not_duplicate_blocks[1]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[dictionaries(keys=text(), values=booleans())]",
                "time": 0.466,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[timedeltas]",
                "time": 0.432,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_conjecture_engine",
                "name": "test_saves_data_while_shrinking",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_next_float_normal[next_down_normal-2.2250738585072014e-308-0.0]",
                "time": 0.386,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_deferred_errors",
                "name": "test_errors_on_test_invocation",
                "time": 0.554,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_cache_implementation.TestCache",
                "name": "runTest",
                "time": 7.148,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func2-OneGenericOneConrete1]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[from_regex]",
                "time": 0.243,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_integer_ranges",
                "name": "test_intervals_shrink_to_center[(0, 5, 10)]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_settings_attribute_is_validated",
                "time": 0.52,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func1-TwoGenericBases1]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func1-AllConcrete]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_flatmap_has_original_strategy_repr",
                "time": 0.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func2-MixedGenerics1]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_find",
                "name": "test_can_find_nan",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_pytz_timezones",
                "name": "test_really_weird_tzinfo_case",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_is_in_exact_int_range",
                "time": 4.636,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[integer_array_indices]",
                "time": 0.551,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_integer_ranges",
                "name": "test_intervals_shrink_to_center[(-10, 0, 10)]",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_dictionaries_of_fixed_length[0]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func2-TwoGenericBases1]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func1-MixedGenerics1]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_can_find_negative_and_signaling_nans[True-False]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_integers_are_in_range",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func2-OneGenericOneConrete1]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_generate_both_zeros_when_in_interval[1--0.0-1.0]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_fancy_repr",
                "name": "test_filter_repr",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func2-TwoGenericBases2]",
                "time": 0.59,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_dynamic_variable",
                "name": "test_can_assign",
                "time": 0.254,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_filtering",
                "name": "test_filter_correctly[specifier0-<lambda>]",
                "time": 1.179,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_large_examples",
                "name": "test_can_generate_large_lists_with_min_size",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_integer_ranges",
                "name": "test_intervals_shrink_to_center[(0, 1, 1)]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_cacheable",
                "name": "test_is_not_cacheable[s1]",
                "time": 0.259,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_cacheable",
                "name": "test_cacheable_things_are_cached",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_characters",
                "name": "test_arbitrary_blacklist",
                "time": 0.967,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_explanations[True-GeneratorExit]",
                "time": 0.958,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_shrink_through_a_binding[4]",
                "time": 1.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_fancy_repr",
                "name": "test_includes_non_default_values",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_dateutil_timezones",
                "name": "test_datetimes_stay_within_naive_bounds",
                "time": 1.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_explore_arbitrary_languages",
                "name": "test_explore_an_arbitrary_language",
                "time": 9.771,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_lstar",
                "name": "test_learning_always_changes_generation",
                "time": 2.708,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_flaky_draw_less_raises_flaky",
                "time": 0.565,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_raises_multiple_failures_with_varying_type",
                "time": 0.974,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_delete_in_middle_of_a_binding[4]",
                "time": 5.703,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[concrete_generic_func2-MixedGenerics2]",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_duplication",
                "name": "test_mostly_does_not_duplicate_blocks_even_when_failing[1]",
                "time": 0.51,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_conjecture_int_list.TestIntList",
                "name": "runTest",
                "time": 12.96,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func2-OneGenericOneConrete2]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func2-AllConcrete]",
                "time": 0.377,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_nesting",
                "name": "test_nesting_1",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_modify_inner_test",
                "name": "test_can_replace_when_parametrized[2]",
                "time": 0.529,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[from_type]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_negative_lookbehind",
                "time": 7.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_given_reuse",
                "name": "test_fail_independently",
                "time": 3.976,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[fixed_dictionaries({'a': integers(), 'b': booleans()})]",
                "time": 1.759,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_pretty_repr",
                "name": "test_sampled_transform_reprs[sampled_from([1, 2, 3]).filter(foo).map(bar)]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_labels",
                "name": "test_different_composites_have_different_labels",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_raise_invalid_argument[lists(integers(), min_size=-1)]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[mixed_generic_func1-TwoGenericBases2]",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[deferred]",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[one_of(integers(), tuples(booleans()))]",
                "time": 0.494,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_baseexception_in_strategy_no_rerun_no_flaky[KeyboardInterrupt]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_conventions",
                "name": "test_unique_identifier_repr",
                "time": 0.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_integer_ranges",
                "name": "test_intervals_shrink_to_center[(-10, 10, 10)]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[complex_numbers()]",
                "time": 3.836,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[floats(max_value=-0.0)]",
                "time": 2.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func1-TwoGenericBases1]",
                "time": 0.711,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_recursive",
                "name": "test_drawing_many_near_boundary",
                "time": 3.903,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_saves_failing_example_in_database",
                "time": 10.108,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_labels",
                "name": "test_lists_label_by_element",
                "time": 0.435,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[floats(min_value=3.14, max_value=3.14)]",
                "time": 11.747,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_modify_inner_test",
                "name": "test_inner_is_original_even_when_invalid",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_float_nastiness",
                "name": "test_can_generate_both_zeros_when_in_interval[1--1.0-0.0]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[times]",
                "time": 0.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_filtering",
                "name": "test_chained_filters_repr[base0]",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_floats_are_in_range",
                "time": 1.229,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_conjecture_engine",
                "name": "test_can_discard",
                "time": 0.557,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_integer_ranges",
                "name": "test_intervals_shrink_to_center[(-10, 5, 10)]",
                "time": 0.392,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_recursive",
                "name": "test_self_ref_regression",
                "time": 13.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_completion",
                "name": "test_never_draw_anything",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_find",
                "name": "test_condition_is_name",
                "time": 0.45,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_can_find_negative_and_signaling_nans[True-True]",
                "time": 0.421,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_find",
                "name": "test_can_find_an_int",
                "time": 0.744,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_build_signature",
                "name": "test_builds_uses_signature_attribute",
                "time": 0.945,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_replays_both_failing_values",
                "time": 1.712,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_integer_ranges",
                "name": "test_intervals_shrink_to_center[(1, 1, 2)]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_recursive",
                "name": "test_can_form_sets_of_recursive_data",
                "time": 3.416,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_randomization",
                "name": "test_nesting_with_control_passes_health_check",
                "time": 0.475,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_scrutineer",
                "name": "test_no_explanations_if_deadline_exceeded[trivial]",
                "time": 0.589,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_labels",
                "name": "test_labels_are_cached",
                "time": 0.378,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_reusable_values",
                "name": "test_mutable_collections_do_not_have_reusable_values[strat1]",
                "time": 0.239,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_duplication",
                "name": "test_does_not_duplicate_blocks[4]",
                "time": 0.52,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_dictionaries_of_fixed_length[1]",
                "time": 0.535,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_recursive",
                "name": "test_can_generate_some_depth_with_large_branching",
                "time": 0.566,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sharing",
                "name": "test_different_instances_are_not_shared",
                "time": 0.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_dynamic_variable",
                "name": "test_can_nest",
                "time": 0.452,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[dfas]",
                "time": 0.236,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_compat",
                "name": "test_convert_back",
                "time": 0.909,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_pretty_repr",
                "name": "test_repr_evals_to_thing_with_same_repr",
                "time": 17.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_valid_sizes[0-100-binary]",
                "time": 0.393,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_deferred_errors",
                "name": "test_errors_on_find",
                "time": 0.68,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sharing",
                "name": "test_simplify_shared_linked_to_size",
                "time": 0.48,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_find",
                "name": "test_can_find_nans",
                "time": 0.772,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_reusable_values",
                "name": "test_filter_breaks_reusability",
                "time": 3.501,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_modify_inner_test",
                "name": "test_invokes_inner_function_with_args_by_name",
                "time": 0.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_reusable_values",
                "name": "test_recursion_does_not_break_reusability",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_exception_propagates_fine[ValueError]",
                "time": 1.743,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_regressions",
                "name": "test_performance_issue_2027",
                "time": 0.55,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_filtering",
                "name": "test_chained_filters_repr[base1]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_can_specify_start_rule[dict-dict]",
                "time": 10.536,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_duplication",
                "name": "test_mostly_does_not_duplicate_blocks_even_when_failing[2]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sampled_from",
                "name": "test_enum_repr_uses_class_not_a_list",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[10]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_variable_length_tuples[6]",
                "time": 4.49,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_in_order",
                "time": 0.432,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_integer_ranges",
                "name": "test_bounded_integers_distribution_of_bit_width_issue_1387_regression",
                "time": 1.998,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_uuids",
                "name": "test_no_nil_uuid_by_default",
                "time": 2.633,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_labels",
                "name": "test_one_of_label_is_distinct",
                "time": 0.413,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_is_float",
                "time": 2.528,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_reusable_values",
                "name": "test_mutable_collections_do_not_have_reusable_values[strat2]",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sharing",
                "name": "test_keys_and_default_are_not_shared",
                "time": 0.391,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_limits",
                "name": "test_max_examples_are_respected",
                "time": 0.856,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[5]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[frozensets]",
                "time": 0.48,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_scrutineer",
                "name": "test_explanations[trivial]",
                "time": 0.749,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_dictionaries_of_fixed_length[8]",
                "time": 2.837,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_database_agreement.TestDBs",
                "name": "runTest",
                "time": 13.8,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_from_type_recipe",
                "name": "test_recipe_for_everything_except",
                "time": 2.155,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[dictionaries]",
                "time": 0.258,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_randomization",
                "name": "test_seeds_off_internal_random",
                "time": 0.536,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[12]",
                "time": 0.464,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_labels",
                "name": "test_label_of_deferred_strategy_is_well_defined",
                "time": 0.449,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_positive_negative_int",
                "time": 0.56,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_database_usage",
                "name": "test_ga_database_not_created_when_not_used",
                "time": 0.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_find",
                "name": "test_find_dictionary",
                "time": 0.601,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[21]",
                "time": 0.4,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[16]",
                "time": 0.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[sampled_from(range(0, 10))]",
                "time": 0.403,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_valid_sizes[0-101-strategy0]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_reusable_values",
                "name": "test_flatmap_breaks_reusability",
                "time": 3.985,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_mixed_list_flatmap",
                "time": 2.484,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[100000]",
                "time": 0.441,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_deferred_errors",
                "name": "test_errors_on_example",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sharing",
                "name": "test_different_keys_are_not_shared",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[100]",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[8]",
                "time": 0.365,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_recursive",
                "name": "test_can_find_quite_broad_lists",
                "time": 9.845,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func1-TwoGenericBases2]",
                "time": 0.476,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_labels",
                "name": "test_labels_are_distinct",
                "time": 0.475,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_dictionaries_of_fixed_length[2]",
                "time": 0.641,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[21]",
                "time": 0.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[lists(floats(min_value=0.0, max_value=0.0))]",
                "time": 1.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[33]",
                "time": 0.346,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[1000]",
                "time": 0.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sharing",
                "name": "test_can_simplify_shared_lists",
                "time": 0.539,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimize_negative_int",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_pretty_repr",
                "name": "test_sampled_transform_reprs[none().filter(foo).map(bar)]",
                "time": 1.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_duplication",
                "name": "test_mostly_does_not_duplicate_blocks_even_when_failing[3]",
                "time": 0.42,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_regex",
                "name": "test_fuzz_stuff",
                "time": 4.683,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_subnormal_floats",
                "name": "test_allow_subnormal_defaults_correctly[allow_subnormal=False, max_value=-2.2250738585072014e-308]",
                "time": 2.637,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[512]",
                "time": 0.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_modify_inner_test",
                "name": "test_can_replace_when_decorated",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[10]",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_valid_sizes[0-101-strategy1]",
                "time": 0.238,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_bytestring_not_treated_as_generic_sequence",
                "time": 1.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_simple_collections",
                "name": "test_can_find_unique_lists_of_non_set_order",
                "time": 0.433,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[31]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sampled_from",
                "name": "test_filter_large_lists[100]",
                "time": 0.806,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[UUID]",
                "time": 0.785,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_find_any_non_empty[strategy0]",
                "time": 0.436,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_flatmap_retrieve_from_db",
                "time": 1.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sampled_from",
                "name": "test_filter_large_lists[33554432]",
                "time": 1.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_deferred_errors",
                "name": "test_does_not_error_on_initial_calculation",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[8]",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_reusable_values",
                "name": "test_reusable_strategies_are_all_reusable",
                "time": 3.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.dpcontracts.test_contracts",
                "name": "test_contract_filter_builds",
                "time": 0.729,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sharing",
                "name": "test_sharing_is_by_instance_by_default",
                "time": 0.525,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[one_of(integers(), tuples(booleans()))]",
                "time": 1.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[15]",
                "time": 0.525,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_scrutineer",
                "name": "test_no_explanations_if_deadline_exceeded[multiple-bugs]",
                "time": 2.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_explanations[False-SystemExit]",
                "time": 1.79,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases_functions[var_generic_func1-OneGenericOneConrete1]",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_given_error_conditions",
                "name": "test_raises_unsatisfiable_if_all_false",
                "time": 1.947,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[10]",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_compat",
                "name": "test_to_int_in_big_endian_order",
                "time": 0.426,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_filtering",
                "name": "test_chained_filters_agree[base1]",
                "time": 0.977,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_is_not_negative_infinite",
                "time": 1.424,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[0]",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sampled_from",
                "name": "test_flag_enum_repr_uses_class_not_a_list",
                "time": 0.552,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_regex",
                "name": "test_no_error_converting_negated_sets_to_strategy",
                "time": 0.785,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_argument_validation",
                "name": "test_consistent_with_api_guide_on_kwonly_args[distinct_int64_integers]",
                "time": 0.511,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[64]",
                "time": 0.601,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[9]",
                "time": 0.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[30]",
                "time": 0.442,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[12]",
                "time": 0.412,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_modify_inner_test",
                "name": "test_can_replace_when_original_is_invalid",
                "time": 0.828,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[0]",
                "time": 0.244,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_valid_sizes[0-101-text]",
                "time": 0.216,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[floats(min_value=-2.0)]",
                "time": 1.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[17]",
                "time": 0.47,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_recursive",
                "name": "test_can_generate_with_large_branching",
                "time": 7.554,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_conjecture_engine",
                "name": "test_regression_1",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_pretty_repr",
                "name": "test_sampled_transform_reprs[just(1).filter(foo).map(bar)]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[20]",
                "time": 0.525,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_fixtures",
                "name": "test_time_consistently_increments_in_tests",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[12]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_filtering",
                "name": "test_filter_correctly[specifier1-bool]",
                "time": 1.753,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[32]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_find_any_non_empty[strategy1]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[7]",
                "time": 0.879,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[31]",
                "time": 0.532,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[512]",
                "time": 0.735,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[10000]",
                "time": 0.449,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[30]",
                "time": 0.542,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_modify_inner_test",
                "name": "test_can_replace_when_parametrized[1]",
                "time": 0.509,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[16]",
                "time": 0.455,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[127]",
                "time": 0.535,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[100000]",
                "time": 0.547,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_shrink_through_a_binding[2]",
                "time": 1.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[11]",
                "time": 0.422,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[ZoneInfo]",
                "time": 1.145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[513]",
                "time": 0.528,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[0]",
                "time": 0.228,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[100]",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[63]",
                "time": 0.525,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_shrink_through_a_binding[8]",
                "time": 1.77,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[100000]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_scrutineer",
                "name": "test_explanations[multiple-bugs]",
                "time": 6.435,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_can_find_negative_and_signaling_nans[False-False]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[255]",
                "time": 0.569,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[15]",
                "time": 0.451,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[64]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[65]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[31]",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[21]",
                "time": 0.419,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[512]",
                "time": 0.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[128]",
                "time": 0.639,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[1000]",
                "time": 0.629,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[9]",
                "time": 0.495,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_drypython_returns",
                "name": "test_several_generic_bases[TwoGenericBases1]",
                "time": 0.399,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[11]",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_deferred_errors",
                "name": "test_errors_each_time",
                "time": 0.567,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[20]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sharing",
                "name": "test_different_instances_with_the_same_key_are_shared",
                "time": 0.442,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[10]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[16]",
                "time": 0.415,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[2-255]",
                "time": 1.836,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[255]",
                "time": 0.436,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[9]",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[64]",
                "time": 0.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_url_fragments_contain_legal_chars",
                "time": 0.997,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[31]",
                "time": 0.596,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[128]",
                "time": 0.581,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_regressions",
                "name": "test_note_deprecation_blames_right_code_issue_652",
                "time": 0.23,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_inquisitor",
                "name": "test_inquisitor_no_together_comment_if_single_argument",
                "time": 2.634,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_shrink_through_a_binding[5]",
                "time": 1.506,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[20]",
                "time": 0.578,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[32]",
                "time": 0.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_can_find_negative_and_signaling_nans[False-True]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_negative_integer_range_upwards",
                "time": 0.224,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[7]",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_compat",
                "name": "test_to_bytes_in_big_endian_order",
                "time": 1.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_conjecture_engine",
                "name": "test_cached_with_masked_byte_agrees_with_results",
                "time": 0.763,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[127]",
                "time": 0.248,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[dictionaries(keys=booleans(), values=integers())]",
                "time": 0.463,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[65]",
                "time": 0.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[511]",
                "time": 0.238,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[17]",
                "time": 0.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[10]",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[257]",
                "time": 0.455,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[256]",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[30]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[1000]",
                "time": 0.441,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[513]",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_matching[True-True-\\\\w-is_word]",
                "time": 3.878,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[12]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[30]",
                "time": 0.39,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[11]",
                "time": 0.398,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[4]",
                "time": 0.448,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_single_integer_range_is_range",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[32]",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[17]",
                "time": 0.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[65]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[sampled_from(range(0, 10))]",
                "time": 0.505,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_replays_slipped_examples_once_initial_bug_is_fixed[TypeError]",
                "time": 1.142,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_baseexception",
                "name": "test_exception_propagates_fine_from_strategy[KeyboardInterrupt]",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimal_asymetric_bounded_float",
                "time": 0.356,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[256]",
                "time": 0.484,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_lists_of_negative_ints_up_to_boundary",
                "time": 3.48,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[0]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[20]",
                "time": 0.468,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[127]",
                "time": 0.621,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[63]",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[129]",
                "time": 0.526,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sampled_from",
                "name": "test_chained_filters_find_rare_value",
                "time": 3.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[8]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[10000]",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimal_non_boundary_float",
                "time": 0.902,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[512]",
                "time": 0.235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[17]",
                "time": 0.441,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[10]",
                "time": 0.544,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[513]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_filtering",
                "name": "test_chained_filters_agree[base2]",
                "time": 0.715,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[15]",
                "time": 0.554,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[recursive(booleans(), lambda x: lists(x, max_size=3), max_leaves=10)]",
                "time": 0.472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[65]",
                "time": 0.522,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[511]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_bytestring_is_valid_sequence_of_int_and_parent_classes[int]",
                "time": 0.424,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[4]",
                "time": 0.441,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimal_small_sum_float_list",
                "time": 1.112,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_in_constrained_range[5e-324-1e-323]",
                "time": 1.16,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[129]",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimal_small_number_in_large_range",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_in_constrained_range[-5e-324-0.0]",
                "time": 0.812,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[129]",
                "time": 0.536,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[10000]",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_can_minimal_float_on_boundary_of_representable",
                "time": 0.715,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[31]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_from_zero_have_reasonable_range[4]",
                "time": 0.671,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[8-4]",
                "time": 2.655,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[513]",
                "time": 0.541,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_list_of_fractional_float",
                "time": 1.496,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_from_zero_have_reasonable_range[9]",
                "time": 0.73,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[31]",
                "time": 0.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers.TestFloatsAreFloats",
                "name": "test_unbounded",
                "time": 0.671,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_no_allow_infinity_upper",
                "time": 0.828,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[10]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[5]",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimal_infinite_float_is_positive",
                "time": 0.557,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[21]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_conjecture_engine",
                "name": "test_block_programs_fail_efficiently",
                "time": 2.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_from_zero_have_reasonable_range[0]",
                "time": 0.463,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_stateful",
                "name": "test_bad_machines_fail[NotTheLastMachine]",
                "time": 10.667,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[64]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[100]",
                "time": 0.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_negative_floats_simplify_to_zero",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_is_int",
                "time": 7.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_from_zero_have_reasonable_range[7]",
                "time": 0.971,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_no_allow_infinity_lower",
                "time": 0.687,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[31]",
                "time": 1.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[255]",
                "time": 0.244,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[floats()3]",
                "time": 1.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_strings",
                "name": "test_does_not_generate_surrogates",
                "time": 4.457,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_interesting_origin",
                "name": "test_can_generate_specified_version[go_wrong_naive]",
                "time": 3.916,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[one_of(just('a'), just('b'), just('c'))]",
                "time": 0.732,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_bytestring_is_valid_sequence_of_int_and_parent_classes[Real]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimize_very_large_float",
                "time": 0.801,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers.TestFloatsAreFloats",
                "name": "test_float_float",
                "time": 0.843,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_from_zero_have_reasonable_range[6]",
                "time": 0.685,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_seeding_to_different_values_does_not_synchronize[False]",
                "time": 2.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_python_compiled_with_sane_math_options",
                "time": 0.249,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[128]",
                "time": 0.692,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[33]",
                "time": 0.414,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_does_not_generate_subnormals_when_disallowed[16--1-1]",
                "time": 0.879,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[integers().flatmap(lambda right: integers(min_value=0).map(lambda length: OrderedPair(right - length, right)))]",
                "time": 1.137,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[floats()0]",
                "time": 1.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[16]",
                "time": 0.388,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_skipping",
                "name": "test_no_falsifying_example_if_unittest_skip[SkipTest]",
                "time": 0.435,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_from_zero_have_reasonable_range[2]",
                "time": 0.93,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[1000]",
                "time": 0.468,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_can_generate_subnormals",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_does_not_generate_subnormals_when_disallowed[64-None-None]",
                "time": 0.65,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_explicit_allow_nan",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_scrutineer",
                "name": "test_skips_uninformative_locations",
                "time": 1.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_stateful",
                "name": "test_bad_machines_fail[CanSwarm]",
                "time": 164.179,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[257]",
                "time": 0.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_from_zero_have_reasonable_range[8]",
                "time": 1.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_strategy_state.TestHypothesis",
                "name": "runTest",
                "time": 25.35,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_random_module",
                "name": "test_can_seed_random",
                "time": 0.486,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_does_not_generate_subnormals_when_disallowed[64--1-0]",
                "time": 0.643,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_shrink_through_a_binding[3]",
                "time": 1.427,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_testdecorators",
                "name": "test_fixed_dict_preserves_iteration_order",
                "time": 1.89,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[15]",
                "time": 0.403,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_stateful",
                "name": "test_bad_machines_fail[RoseTreeStateMachine]",
                "time": 55.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_targeting",
                "name": "test_target_returns_value",
                "time": 0.966,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_one_sided_contains_infinity",
                "time": 0.635,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_skipping",
                "name": "test_no_falsifying_example_if_unittest_skip[Skipped]",
                "time": 0.597,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_can_minimal_infinite_negative_float",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_modify_inner_test",
                "name": "test_can_replace_inner_test",
                "time": 0.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_bytestring_is_valid_sequence_of_int_and_parent_classes[object]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_targeting",
                "name": "test_reports_target_results[True]",
                "time": 5.569,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_from_zero_have_reasonable_range[1]",
                "time": 0.51,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_does_not_generate_subnormals_when_disallowed[16-None-None]",
                "time": 1.197,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[10]",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_stateful",
                "name": "test_bad_machines_fail[DepthMachine]",
                "time": 20.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type0]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[256]",
                "time": 0.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[63]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_generic_origin_empty",
                "time": 0.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_stateful",
                "name": "test_bad_machines_fail[BalancedTrees]",
                "time": 15.79,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_given_reuse",
                "name": "test_has_an_arg_named_x",
                "time": 0.245,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimal_float_is_zero",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[31]",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[5]",
                "time": 0.472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_testdecorators",
                "name": "test_signature_mismatch_error_message",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_from_zero_have_reasonable_range[5]",
                "time": 0.594,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type8]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_does_not_generate_subnormals_when_disallowed[64--1-1]",
                "time": 0.652,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_can_specify_start_rule[TRUE-bool]",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[511]",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_stateful",
                "name": "test_bad_machines_fail[PopulateMultipleTargets]",
                "time": 2.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_is_not_nan",
                "time": 2.156,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type2]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[4]",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_uuids",
                "name": "test_can_generate_nil_uuid",
                "time": 0.478,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[257]",
                "time": 0.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_does_not_generate_subnormals_when_disallowed[32--1-0]",
                "time": 0.886,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type0]",
                "time": 0.224,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type4]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_in_constrained_range[-5e-324-5e-324]",
                "time": 0.631,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[TypeVarTuple]",
                "time": 0.238,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_callable_return_typegard_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "requires python3.10 or higher",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type3]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_does_not_generate_subnormals_when_disallowed[16--1-0]",
                "time": 0.784,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type2]",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[11]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimize_nan",
                "time": 0.56,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_replays_slipped_examples_once_initial_bug_is_fixed[ValueError]",
                "time": 0.941,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_given_reuse",
                "name": "test_has_an_arg_named_y",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_from_zero_have_reasonable_range[3]",
                "time": 0.574,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_targeting",
                "name": "test_targeting_can_be_disabled",
                "time": 21.921,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type1]",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_testdecorators",
                "name": "test_contains_the_test_function_name_in_the_exception_string",
                "time": 1.838,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.datetime.test_zoneinfo_timezones",
                "name": "test_timezones_argument_validation[kwargs0]",
                "time": 0.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[Annotated1]",
                "time": 0.225,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type14]",
                "time": 0.249,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type8]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_does_not_generate_subnormals_when_disallowed[32-None-None]",
                "time": 0.997,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_issue_2951_regression",
                "time": 0.36,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[ParamSpec]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_inversion_is_imperfect",
                "time": 2.643,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[7]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_shrink_through_a_binding[6]",
                "time": 1.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimals_boundary_floats",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_can_minimal_float_far_from_integral",
                "time": 0.58,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type1]",
                "time": 0.22,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[8]",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type12]",
                "time": 0.222,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[sampled_from(('a', 'b', 'c'))]",
                "time": 0.547,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[Never]",
                "time": 0.248,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_shrink_through_a_binding[9]",
                "time": 1.671,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_can_specify_start_rule[FALSE-bool]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[datetime64_dtypes(max_period=11)]",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_unusual_settings_configs",
                "name": "test_single_example",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_does_not_generate_subnormals_when_disallowed[16-0-1]",
                "time": 0.976,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[LiteralString]",
                "time": 0.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_targeting",
                "name": "test_reports_target_results[False]",
                "time": 3.371,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[4]",
                "time": 0.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[Self]",
                "time": 0.36,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup_future_annotations",
                "name": "test_complex_forward_ref_in_typed_dict_local",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_bounds_are_respected",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type3]",
                "time": 0.384,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_callable_with_paramspec",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[array_shapes(min_side=2, max_side=1)]",
                "time": 0.219,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_uuids",
                "name": "test_can_generate_specified_version[2]",
                "time": 0.419,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_uuids",
                "name": "test_are_unique",
                "time": 1.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[Self]",
                "time": 0.458,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[TypeVarTuple]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_uuids",
                "name": "test_can_generate_specified_version[4]",
                "time": 0.537,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_uuids",
                "name": "test_retains_uniqueness_in_simplify",
                "time": 0.543,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[257]",
                "time": 0.444,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type12]",
                "time": 0.227,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type5]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type15]",
                "time": 0.242,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[10000]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[array_dtypes(min_size=-1)]",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_uuids",
                "name": "test_can_generate_specified_version[3]",
                "time": 0.473,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_issue_2951_regression_two_params",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[array_shapes(min_dims=33)]",
                "time": 0.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[arrays(dtype=<class 'object'>, shape=1)]",
                "time": 0.219,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_callable_with_concatenate",
                "time": 0.361,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type11]",
                "time": 0.239,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[byte_string_dtypes(min_len=-1)]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[Never]",
                "time": 0.499,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup_future_annotations",
                "name": "test_complex_forward_ref_in_typed_dict",
                "time": 1.223,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[arrays(dtype='U', shape=1, elements=just('abc\\\\x00\\\\x00'))]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[array_shapes(min_dims=3, max_dims=2)]",
                "time": 0.433,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type14]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[timedelta64_dtypes(min_period='Y', max_period='M')]",
                "time": 0.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[timedelta64_dtypes(min_period=11)]",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[datetime64_dtypes(min_period='Y', max_period='M')]",
                "time": 0.243,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[byte_string_dtypes(min_len=2, max_len=1)]",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_recursive",
                "name": "test_drawing_from_recursive_strategy_is_thread_safe",
                "time": 0.58,
                "results": [
                    {
                        "result": "Failure",
                        "message": "pytest.PytestUnhandledThreadExceptionWarning: Exception in thread Thread-4\n\nTraceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/threading.py\", line 973, in _bootstrap_inner\n    self.run()\n  File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/threading.py\", line 910, in run\n    self._target(*self._args, **self._kwargs)\n  File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/hypothesis-python/tests/nocover/test_recursive.py\", line 140, in test\n    database=None, deadline=None, suppress_health_check=[HealthCheck.too_slow]\n  File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/core.py\", line 1374, in wrapped_test\n    raise the_error_hypothesis_found\n  File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/core.py\", line 1341, in wrapped_test\n    state.run_engine()\n  File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/core.py\", line 927, in run_engine\n    runner.run()\n  File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 460, in run\n    self._run()\n  File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 866, in _run\n    self.generate_new_examples()\n  File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 670, in generate_new_examples\n    minimal_example = self.cached_test_function(\n  File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 1051, in cached_test_function\n    self.test_function(data)\n  File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 195, in test_function\n    self.__stoppable_test_function(data)\n  File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 183, in __stoppable_test_function\n    raise\n  File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/junkdrawer.py\", line 306, in __exit__\n    warnings.warn(\nhypothesis.errors.HypothesisWarning: The recursion limit will not be reset, since it was changed from another thread or during execution of a test.",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[byte_string_dtypes(min_len=0, max_len=0)]",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[array_shapes(min_dims=-1)]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[array_shapes(max_dims='not an int')]",
                "time": 0.378,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[unicode_string_dtypes(min_len=-1)]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_ints_from_down_to_boundary[9]",
                "time": 0.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_can_specify_start_rule[NULL-NoneType]",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[from_dtype(dtype=dtype('<U4'), max_size=5)]",
                "time": 0.347,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup_forward_ref",
                "name": "test_mutually_recursive_types_with_typevar_alternate",
                "time": 2.878,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[unicode_string_dtypes(min_len=2, max_len=1)]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type18]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_does_not_generate_subnormals_when_disallowed[32--1-1]",
                "time": 0.849,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[integers().flatmap(lambda v: lists(just(v)))]",
                "time": 0.98,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[from_dtype(dtype=<class 'numpy.int8'>)]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[array_shapes(min_side='not an int')]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[valid_tuple_axes(ndim=2, min_size=1.0, max_size=2)]",
                "time": 0.243,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[from_dtype(dtype=dtype('int8'), max_value=999)]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[valid_tuple_axes(ndim=2, min_size=3, max_size=10)]",
                "time": 0.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[from_dtype(dtype=dtype('S4'), max_size=5)]",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimal_fractional_float",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[511]",
                "time": 0.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[from_dtype(dtype='float64')]",
                "time": 0.407,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[100000]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[valid_tuple_axes(ndim=-1)]",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[from_dtype(dtype=dtype('uint8'), min_value=-999)]",
                "time": 0.364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[unsigned_integer_dtypes(endianness=3)]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[arrays(dtype=<class 'float'>, shape=(0.5,))]",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[valid_tuple_axes(ndim=2, min_size=2, max_size=1)]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(2, 2), min_dims='a')]",
                "time": 0.235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_uuids",
                "name": "test_can_generate_specified_version[1]",
                "time": 0.623,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[valid_tuple_axes(ndim=2, min_size=1, max_size=3)]",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[array_shapes(min_side=-1)]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_targeting",
                "name": "test_targeting_increases_max_length",
                "time": 13.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape='a')]",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[timedelta64_dtypes(max_period=11)]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[Annotated1]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_emails",
                "name": "test_can_restrict_email_domains",
                "time": 0.855,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[valid_tuple_axes(ndim=2.0, min_size=2, max_size=1)]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type4]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[from_dtype(dtype=dtype('uint8'), max_value=999)]",
                "time": 0.241,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[unicode_string_dtypes(min_len=0, max_len=0)]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_unusual_settings_configs",
                "name": "test_hard_to_find_single_example",
                "time": 0.567,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_reusable_values",
                "name": "test_map_breaks_reusability",
                "time": 4.551,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(2, 2), max_dims='a')]",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[valid_tuple_axes(ndim=2, min_size=-1)]",
                "time": 0.435,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(0, 1), min_dims=2, max_dims=4, min_side=2, max_side=3)]",
                "time": 0.238,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[from_dtype(dtype=dtype('int8'), min_value=-999)]",
                "time": 0.468,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type18]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(2, 2), min_side=-1)]",
                "time": 0.222,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(5, 3, 2, 1), min_dims=3, max_dims=None, min_side=2, max_side=3)]",
                "time": 0.244,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[array_shapes(max_dims=33)]",
                "time": 0.484,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[from_dtype(dtype=<class 'float'>)]",
                "time": 0.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[valid_tuple_axes(ndim=2, min_size=1, max_size=2.0)]",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(2, 2), min_dims=33, max_dims=None)]",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(2, 2), min_dims=1, max_dims=33)]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[from_dtype(dtype=1)]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(2, 2), max_side='a')]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[unsigned_integer_dtypes(sizes=(3,))]",
                "time": 0.417,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, min_dims='a')]",
                "time": 0.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_slippage",
                "name": "test_garbage_collects_the_secondary_key",
                "time": 1.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sets",
                "name": "test_can_draw_sets_of_hard_to_find_elements",
                "time": 0.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup_forward_ref",
                "name": "test_mutually_recursive_types_with_typevar",
                "time": 2.698,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sets",
                "name": "test_empty_sets",
                "time": 0.386,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, min_dims=33)]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=1, base_shape=(5, 3, 2, 1), min_dims=3, max_dims=4, min_side=2, max_side=3)]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, base_shape=(0, 1), min_dims=2, max_dims=4, min_side=2, max_side=3)]",
                "time": 0.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, max_dims=33)]",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes()]",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(signature=\"this string isn't a valid signature\")]",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, base_shape=(5, 1), min_dims=2, max_dims=4, min_side=2, max_side=3)]",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes='a')]",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, base_shape=(0, 3, 2, 1), min_dims=3, max_dims=4, min_side=2, max_side=3)]",
                "time": 0.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(signature=([(), ()], [()]))]",
                "time": 0.232,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, min_side='a')]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, min_side=1, max_side=0)]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(2, 2), min_side=1, max_side=0)]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, signature='()->()')]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=0)]",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(signature=None)]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[basic_indices(shape=(0, 0), max_dims=-1)]",
                "time": 0.24,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[basic_indices(shape=(0, -1))]",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(signature='()->(),()')]",
                "time": 0.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, min_side=-1)]",
                "time": 0.235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(5, 1), min_dims=2, max_dims=4, min_side=2, max_side=3)]",
                "time": 0.464,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, min_dims=1, max_dims=0)]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_unrelated_calls_desynchronizes[True]",
                "time": 4.489,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(signature='()->(i)')]",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[integer_array_indices(shape=(2,), result_shape=(2, 2))]",
                "time": 0.231,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[100]",
                "time": 0.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[basic_indices(shape=(0, 0), allow_ellipsis=None)]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(signature='(n?,k),(k,m?)->(n?,m?)', min_dims=32)]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(2, 2), min_dims=-1)]",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[array_shapes(max_side='not an int')]",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[integer_array_indices(shape=(2, 0))]",
                "time": 0.258,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_imports",
                "name": "test_can_star_import_from_hypothesis",
                "time": 1.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[integer_array_indices(shape=())]",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[basic_indices(shape=('1', '2'))]",
                "time": 0.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(signature='(n?,k),(k,m?)->(n?,m?)', max_dims=32)]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[basic_indices(shape=(3, 3, 3), max_dims='not an int')]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_intlist",
                "name": "test_intlist_is_equal_to_itself",
                "time": 0.85,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[basic_indices(shape=(0, 0), min_dims=1.0)]",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[basic_indices(shape=0)]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_floor_ceil",
                "name": "test_our_floor_and_ceil_avoid_numpy_rounding[2**53+1]",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_floor_ceil",
                "name": "test_our_floor_and_ceil_avoid_numpy_rounding[-2**64-1]",
                "time": 0.218,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[integer_array_indices(shape='a')]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_fill_values",
                "name": "test_minimizes_to_fill",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(signature='(d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16,d17,d18,d19,d20,d21,d22,d23,d24,d25,d26,d27,d28,d29,d30,d31,d32)->()')]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_deprecation",
                "name": "test_basic_indices_bad_max_dims_warns",
                "time": 0.93,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_fill_values",
                "name": "test_does_not_reuse_distinct_integers",
                "time": 9.861,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_floor_ceil",
                "name": "test_our_floor_and_ceil_avoid_numpy_rounding[-2**63+1]",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type11]",
                "time": 0.535,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t3]",
                "time": 0.721,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(signature='(2?)->()')]",
                "time": 0.492,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_varargs_and_kwargs_without_positional_arguments_allowed",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_floor_ceil",
                "name": "test_our_floor_and_ceil_avoid_numpy_rounding[-2**64+1]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sets",
                "name": "test_bounded_size_sets",
                "time": 0.533,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_recursive",
                "name": "test_can_use_recursive_data_in_sets",
                "time": 3.21,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_floor_ceil",
                "name": "test_our_floor_and_ceil_avoid_numpy_rounding[2**63+1]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, base_shape='a')]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, max_side='a')]",
                "time": 0.415,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[basic_indices(shape=(0, 0), min_dims=2, max_dims=1)]",
                "time": 0.443,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t12]",
                "time": 0.916,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t0]",
                "time": 0.502,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_fill_values",
                "name": "test_may_reuse_distinct_integers_if_asked",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[basic_indices(shape=(0, 0), min_dims=-1)]",
                "time": 0.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_does_not_generate_subnormals_when_disallowed[32-0-1]",
                "time": 0.99,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[unsigned_integer_dtypes(sizes=())]",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t11]",
                "time": 0.591,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t9]",
                "time": 0.862,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t5]",
                "time": 0.384,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_deprecation",
                "name": "test_basic_indices_bad_min_dims_warns",
                "time": 0.419,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_deprecation",
                "name": "test_basic_indices_default_max_dims_does_not_warn",
                "time": 1.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t7]",
                "time": 0.517,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t10]",
                "time": 0.606,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t16]",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_strategies_for_standard_dtypes_have_reusable_values",
                "time": 10.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t8]",
                "time": 0.645,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t21]",
                "time": 0.589,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t18]",
                "time": 0.758,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t17]",
                "time": 0.77,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_floor_ceil",
                "name": "test_our_floor_and_ceil_avoid_numpy_rounding[-2**63-1]",
                "time": 0.365,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t15]",
                "time": 1.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_floor_ceil",
                "name": "test_our_floor_and_ceil_avoid_numpy_rounding[-2**53-1]",
                "time": 0.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t19]",
                "time": 0.788,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_can_find_floats_that_do_not_round_trip_through_strings",
                "time": 1.959,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t13]",
                "time": 0.839,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[basic_indices(shape=(0, 0), max_dims=1.0)]",
                "time": 0.549,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_works_without_time_unit[m8]",
                "time": 1.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t23]",
                "time": 0.563,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_unicode_string_dtypes_generate_unicode_strings",
                "time": 1.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[integer_array_indices(shape=(2,), dtype=<class 'float'>)]",
                "time": 0.484,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t2]",
                "time": 0.707,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(2, 2), min_side='a')]",
                "time": 0.827,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t14]",
                "time": 1.172,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_can_cast_for_scalars",
                "time": 0.974,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_unicode_string_dtypes_need_not_be_utf8",
                "time": 1.564,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_works_without_time_unit[M8]",
                "time": 0.931,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(2, 2), min_dims=1, max_dims=0)]",
                "time": 0.356,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_unsized_strings_length_gt_one[a]",
                "time": 0.383,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_floor_ceil",
                "name": "test_our_floor_and_ceil_avoid_numpy_rounding[2**64+1]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_fill_values",
                "name": "test_fills_everything",
                "time": 2.147,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[decimals()]",
                "time": 1.679,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument_deprecated[basic_indices(shape=(0, 0), max_dims=50)]",
                "time": 0.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[float-kwargs3-<lambda>]",
                "time": 0.664,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[datetime64_dtypes(min_period=11)]",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[LiteralString]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_arrays_selects_consistent_time_unit[M8]",
                "time": 1.74,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_arrays_gives_useful_error_on_inconsistent_time_unit",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_unsized_strings_length_gt_one[S]",
                "time": 0.379,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[array_shapes(min_dims='not an int')]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_bare_given_errors",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t20]",
                "time": 0.879,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[basic_indices(shape=(0, 0), allow_newaxis=None)]",
                "time": 0.485,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[127]",
                "time": 0.391,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_delete_in_middle_of_a_binding[2]",
                "time": 5.171,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_can_unicode_strings_without_decode_error",
                "time": 2.169,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t22]",
                "time": 0.709,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_draw_example",
                "name": "test_list_example[integers().filter(lambda x: abs(x) > 100)]",
                "time": 0.68,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[complex-kwargs7-isfinite]",
                "time": 0.838,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_reusable_values",
                "name": "test_mutable_collections_do_not_have_reusable_values[strat0]",
                "time": 0.343,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[float-kwargs2-<lambda>]",
                "time": 0.708,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[float-kwargs1-<lambda>]",
                "time": 1.179,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[float-kwargs4-isfinite]",
                "time": 0.671,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_eval_as_source",
                "name": "test_can_eval_as_source",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_infer_strategy_from_dtype",
                "time": 15.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_unsized_strings_length_gt_one[U]",
                "time": 0.356,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t6]",
                "time": 0.795,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[complex-kwargs10-<lambda>]",
                "time": 1.387,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_inferred_string_strategies_roundtrip",
                "time": 1.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_delete_in_middle_of_a_binding[8]",
                "time": 4.945,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_float_subnormal_generation[64-False]",
                "time": 2.185,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_multiple",
                "time": 0.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_all_inferred_scalar_strategies_roundtrip",
                "time": 2.777,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[Annotated0]",
                "time": 0.228,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_arrays_selects_consistent_time_unit[m8]",
                "time": 2.139,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_complex_numbers",
                "name": "test_magnitude_validates[max_magnitude-64]",
                "time": 6.196,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_float_subnormal_generation[32-False]",
                "time": 2.385,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[float640]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_does_not_include_duplicates_even_when_duplicated_in_collection",
                "time": 0.669,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument_deprecated[basic_indices(shape=(0, 0), min_dims=50)]",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[int16]",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[arrays(dtype=<class 'float'>, shape=1, fill=3)]",
                "time": 0.218,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_does_not_resolve_nonscalar_types[object_]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[int32]",
                "time": 0.239,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_errors_on_unwanted_kwargs",
                "time": 0.233,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[float16]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[datetime64]",
                "time": 0.248,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[U4-kwargs16-<lambda>]",
                "time": 0.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[floats(min_value=-1.7976931348623157e+308, max_value=1.7976931348623157e+308)]",
                "time": 1.21,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[8-8]",
                "time": 1.948,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[U-kwargs17-<lambda>]",
                "time": 1.121,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[float641]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[float32]",
                "time": 0.239,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[U-kwargs15-<lambda>]",
                "time": 0.74,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_variable_length_tuples[7]",
                "time": 5.952,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[longdouble]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[longlong]",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful.TestMachineUsingMultiple",
                "name": "runTest",
                "time": 7.753,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_complex_subnormal_generation[128-False]",
                "time": 3.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[uint32]",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_dtype_type",
                "time": 6.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[float32]",
                "time": 1.4,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[float-kwargs0-<lambda>]",
                "time": 1.242,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[complex-kwargs9-<lambda>]",
                "time": 1.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_complex_subnormal_generation[128-True]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers.TestFloatsAreFloats",
                "name": "test_int_float",
                "time": 0.927,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_intlist",
                "name": "test_distinct_int_lists_are_not_equal",
                "time": 1.366,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[float640]",
                "time": 1.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_is_not_positive_infinite",
                "time": 2.568,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[array_dtypes(min_size=2, max_size=1)]",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[complex128]",
                "time": 1.57,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[bytes_0]",
                "time": 2.245,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_regex",
                "name": "test_case_insensitive_not_literal_never_constructs_multichar_match",
                "time": 1.846,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[S4-kwargs14-<lambda>]",
                "time": 0.698,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[complex64]",
                "time": 1.92,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[float16]",
                "time": 1.383,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_errors_on_too_many_positional_args",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[timedelta64]",
                "time": 1.573,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_float_subnormal_generation[32-True]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[int8]",
                "time": 1.503,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_byte_string_dtypes_generate_unicode_strings",
                "time": 0.894,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[str_]",
                "time": 3.118,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[ulonglong]",
                "time": 1.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[datetime64]",
                "time": 1.895,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[uint8-kwargs12-<lambda>]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[int8]",
                "time": 0.68,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[int64]",
                "time": 0.59,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_customize_structured_dtypes",
                "time": 0.808,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[int64]",
                "time": 1.478,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[int8-kwargs11-<lambda>]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[bytes_1]",
                "time": 2.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[bytes_0]",
                "time": 0.232,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_does_not_resolve_nonscalar_types[void]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_fill_values",
                "name": "test_generated_lists_are_distinct",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[longdouble]",
                "time": 1.198,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[str_]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_complex_subnormal_generation[64-True]",
                "time": 0.547,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t1]",
                "time": 0.501,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[clongdouble]",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[float16]",
                "time": 0.723,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[complex-kwargs8-<lambda>]",
                "time": 1.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[complex128]",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_unspecified_array_type[ndarray0]",
                "time": 0.806,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[S-kwargs13-<lambda>]",
                "time": 1.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[datetime64]",
                "time": 1.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[complex64]",
                "time": 0.353,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[bool_]",
                "time": 0.664,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[uint8]",
                "time": 0.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_efficient_sets_of_samples_with_chained_transformations",
                "time": 3.98,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[int64]",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_matching[True-True-\\\\d-is_digit]",
                "time": 3.497,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_floats_in_constrained_range[0.0-5e-324]",
                "time": 0.634,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_complex_numbers",
                "name": "test_magnitude_validates[min_magnitude-64]",
                "time": 6.219,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[integers().flatmap(lambda v: lists(just(v)))]",
                "time": 3.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[uint64]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[bool_]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_complex_subnormal_generation[64-False]",
                "time": 3.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_create_arrays_of_tuples",
                "time": 0.581,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_generates_and_minimizes",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_create_arrays_of_composite_types",
                "time": 0.415,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_unspecified_array_type[ndarray1]",
                "time": 0.919,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_minimize_large_arrays",
                "time": 0.792,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_SupportsArray",
                "time": 1.156,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_delete_in_middle_of_a_binding[5]",
                "time": 4.547,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_does_not_flatten_arrays_of_lists",
                "time": 0.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_array_dtypes_may_have_field_titles",
                "time": 0.213,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_largest_range",
                "time": 0.529,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_unspecified_SupportsArray",
                "time": 3.235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolve_ArrayLike_equivalent",
                "time": 2.983,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_np_dtype_is_idempotent",
                "time": 7.86,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_ArrayLike_type",
                "time": 2.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[bool_]",
                "time": 1.244,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_generate_compound_dtypes",
                "time": 8.556,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_minimise_nested_types",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_minimise_array_shapes",
                "time": 1.953,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_generates_unsigned_ints",
                "time": 1.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_specify_size_as_an_int",
                "time": 0.232,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[complex-kwargs5-<lambda>]",
                "time": 1.248,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[ulonglong]",
                "time": 0.225,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[ulonglong]",
                "time": 1.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[int16]",
                "time": 0.729,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[int8]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_minimize_float_arrays",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_handle_zero_dimensions",
                "time": 0.22,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[float640]",
                "time": 0.641,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_overflowing_integers_are_deprecated[False]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[longlong]",
                "time": 0.968,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[clongdouble]",
                "time": 1.544,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[none()]",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_empty_dimensions_are_arrays",
                "time": 0.476,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_unrepresentable_elements_are_deprecated[complex64-strat2-True]",
                "time": 1.783,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[uint16]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_generate_scalar_dtypes",
                "time": 0.656,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_draw_arrays_from_scalars",
                "time": 2.221,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_generate_data_compound_dtypes",
                "time": 15.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[uint8]",
                "time": 0.994,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_interesting_array_shapes_argument[kwargs1]",
                "time": 0.69,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_restrict_endianness[>]",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_overflowing_integers_are_deprecated[True]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_unrepresentable_elements_are_deprecated[U1-strat3-False]",
                "time": 0.595,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[int32]",
                "time": 1.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_unrepresentable_elements_are_deprecated[float16-strat0-True]",
                "time": 2.802,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_unrepresentable_elements_are_deprecated[U1-strat3-True]",
                "time": 0.516,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NestedSequence",
                "time": 2.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_may_fill_with_nan_when_unique_is_set",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_generate_array_shapes",
                "time": 0.677,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[int32]",
                "time": 0.772,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_unrepresentable_elements_are_deprecated[complex64-strat2-False]",
                "time": 6.455,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[float32]",
                "time": 0.841,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[lists(lists(booleans()))]",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_unrepresentable_elements_are_deprecated[S1-strat4-False]",
                "time": 0.501,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[longlong]",
                "time": 1.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_array_element_rewriting",
                "time": 1.157,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_inferred_floats_can_be_constrained_at_low_width",
                "time": 1.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[timedelta64]",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.conjecture.test_intlist",
                "name": "test_basic_equality",
                "time": 0.2,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mapped_positive_axes_are_unique",
                "time": 1.22,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_targeting",
                "name": "test_issue_2395_regression",
                "time": 3.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_interesting_array_shapes_argument[kwargs0]",
                "time": 0.419,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_broadcastable_shape_bounds_are_satisfied",
                "time": 1.15,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_array_values_are_unique",
                "time": 1.503,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_can_find_floats_that_do_not_round_trip_through_reprs",
                "time": 1.5,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[uint32]",
                "time": 0.652,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_turn_off_subarrays",
                "time": 1.912,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shape_adjusts_max_dim_with_default_bounds",
                "time": 0.705,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_assert_fits_in_machine_size",
                "time": 0.744,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_broadcastable_shape_util",
                "time": 3.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_from_dtype_with_kwargs[complex-kwargs6-<lambda>]",
                "time": 1.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_interesting_array_shapes_argument[kwargs2]",
                "time": 0.856,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_may_not_fill_with_non_nan_when_unique_is_set",
                "time": 1.204,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[broadcastable_shapes(shape=(0, 3, 2, 1), min_dims=3, max_dims=None, min_side=2, max_side=3)]",
                "time": 0.239,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[timedelta64]",
                "time": 1.174,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[uint64]",
                "time": 0.799,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_broadcastable_shape_can_generate_arbitrary_ndims",
                "time": 3.189,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shapes_can_generate_mirrored_singletons[base_shape3]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_unrepresentable_elements_are_deprecated[S1-strat4-True]",
                "time": 0.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shapes_can_generate_mirrored_singletons[base_shape2]",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[arrays(dtype=<class 'int'>, shape=1, elements='not a strategy')]",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_unique_array_without_fill",
                "time": 3.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[float641]",
                "time": 0.769,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[bytes_0]",
                "time": 1.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_axes_are_valid_inputs_to_sum",
                "time": 0.842,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_interesting_origin",
                "name": "test_can_generate_specified_version[go_wrong_with_cause]",
                "time": 4.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_basic_indices_can_generate_empty_tuple",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shapes_can_generate_mirrored_singletons[base_shape5]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[longdouble]",
                "time": 0.701,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_does_not_flatten_arrays_of_tuples",
                "time": 0.722,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_floor_ceil",
                "name": "test_our_floor_and_ceil_avoid_numpy_rounding[2**64-1]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_and_varies_numpy_scalar_type[bytes_1]",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastableshapes_has_good_default_values",
                "time": 1.533,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_numpy_signature_parses",
                "time": 6.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_restrict_endianness[<]",
                "time": 0.4,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_minimize_negative_tuple_axes",
                "time": 0.679,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_unrepresentable_elements_are_deprecated[float32-strat1-True]",
                "time": 0.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_no_recursion_in_multi_line_reprs_issue_3560",
                "time": 1.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_hypothesis_signature_parses",
                "time": 3.622,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_broadcastable_empty_shape",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_unrepresentable_elements_are_deprecated[float32-strat1-False]",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_cannot_generate_unique_array_of_too_many_elements",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_provisional_strategies",
                "name": "test_valid_domains_arguments[8-255]",
                "time": 2.53,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shapes_can_generate_interesting_singletons",
                "time": 2.134,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[uint64]",
                "time": 1.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_efficiently_generates_all_unique_array",
                "time": 29.915,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[bytes_1]",
                "time": 1.494,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shape_can_broadcast",
                "time": 2.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_stateful_with_one_of_bundles_states_are_deduped",
                "time": 7.493,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[uint16]",
                "time": 1.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shapes_can_generate_arbitrary_ndims",
                "time": 2.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_matmul_signature_can_exercise_all_combination_of_optional_dims[(m,n),(n,p)->(m,p)]",
                "time": 0.859,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_threading",
                "name": "test_can_run_given_in_thread",
                "time": 0.535,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[unary sum]",
                "time": 0.685,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_minimize_mutually_broadcastable_shape",
                "time": 1.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_unique_array_with_fill_can_use_all_elements",
                "time": 1.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[inner1d]",
                "time": 1.172,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_negative_lookahead",
                "time": 5.451,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[str_]",
                "time": 1.366,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_advanced_integer_index_can_generate_any_pattern",
                "time": 2.137,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[sum1d]",
                "time": 0.895,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_database_usage",
                "name": "test_clears_out_database_as_things_get_boring",
                "time": 41.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[trinary sum]",
                "time": 1.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_matmul_sig_shrinks_as_documented",
                "time": 1.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_unspecified_NestedSequence",
                "time": 2.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shape_bounds_are_satisfied",
                "time": 1.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[outer-inner]",
                "time": 1.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_basic_indices_options[<lambda>2]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[cross1d]",
                "time": 1.223,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_advanced_integer_index_is_valid_with_default_result_shape",
                "time": 1.607,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_matmul_gufunc_shapes",
                "time": 1.44,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[float641]",
                "time": 1.187,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_basic_indices_options[<lambda>1]",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_produces_instances[t4]",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shapes_can_generate_mirrored_singletons[base_shape1]",
                "time": 0.254,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_basic_indices_generate_valid_indexers",
                "time": 1.835,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[trace]",
                "time": 0.81,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[clongdouble]",
                "time": 0.987,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_matmul_signature_can_exercise_all_combination_of_optional_dims[(i),(i)->()]",
                "time": 0.943,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_broadcastable_shape_shrinking_with_singleton_out_of_bounds",
                "time": 0.603,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_array_owns_memory",
                "time": 1.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[trinary outer]",
                "time": 1.515,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_matmul_signature_can_exercise_all_combination_of_optional_dims[(m,n),(n)->(m)]",
                "time": 0.623,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[sum rows]",
                "time": 1.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shapes_only_singleton_is_valid",
                "time": 1.784,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name=None, elements='not a strategy', dtype=None, fill=None, unique=False)])]",
                "time": 0.194,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[uint32]",
                "time": 1.116,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shapes_can_generate_mirrored_singletons[base_shape6]",
                "time": 0.214,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_broadcastable_shape_can_broadcast",
                "time": 1.142,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_create_zero_dim_arrays_of_lists",
                "time": 0.816,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shapes_can_generate_mirrored_singletons[base_shape4]",
                "time": 0.241,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name=[], elements=None, dtype=None, fill=None, unique=False)])]",
                "time": 0.189,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_array_values_are_unique_high_collision",
                "time": 0.598,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_sampled_from",
                "name": "test_can_sample_1D_numpy_array_without_warning",
                "time": 2.408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_inferred_floats_can_be_constrained_at_low_width_excluding_endpoints",
                "time": 1.405,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([], rows=fixed_dictionaries({'A': just(1)}))]",
                "time": 0.604,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_bad_float_exclude_min_in_array[-1.0-float32]",
                "time": 0.567,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name=None, elements=None, dtype=int, fill=None, unique=False)], rows=integers())]",
                "time": 0.724,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[binary sum]",
                "time": 1.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name=None, elements=none(), dtype=int, fill=None, unique=False)])]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "works with integer NA",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[indexes(dtype=<class 'float'>, elements=text())]",
                "time": 0.723,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_basic_indices_can_generate_long_ellipsis",
                "time": 0.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_basic_indices_can_generate_non_tuples",
                "time": 0.222,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[32]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_basic_indices_options[<lambda>3]",
                "time": 0.408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames(columns=[column(name='a', elements=text(), dtype=str, fill=None, unique=False), column(name='b', elements=text(), dtype=str, fill=None, unique=False)], index=indexes(dtype=int, min_size=1), rows=just({'a': 'x'}))]",
                "time": 1.605,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[complex64]",
                "time": 1.178,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_bad_float_exclude_min_in_array[-1.0-float64]",
                "time": 0.636,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[indexes(dtype=<class 'int'>, elements=none())]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "works with integer NA",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[vecmat]",
                "time": 1.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_matmul_signature_can_exercise_all_combination_of_optional_dims[(n),(n,p)->(p)]",
                "time": 1.657,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name='A', elements=None, dtype=bool, fill=None, unique=False)], rows=tuples(booleans(), booleans()))]",
                "time": 1.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_advanced_integer_index_is_valid_and_satisfies_bounds",
                "time": 2.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_advanced_integer_index_minimizes_as_documented",
                "time": 4.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[range_indexes(1, 0)]",
                "time": 0.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_bad_float_exclude_min_in_array[1.0-float16]",
                "time": 0.761,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name=None, elements=text(), dtype=int, fill=None, unique=False)])]",
                "time": 1.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_bad_float_exclude_min_in_array[0.0-float16]",
                "time": 0.684,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_length_bounds_are_satisfied",
                "time": 1.761,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[series(dtype='category')]",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_import",
                "name": "test_hypothesis_is_not_the_first_to_import_numpy",
                "time": 1.894,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_can_have_columns_of_distinct_types",
                "time": 3.819,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[indexes(dtype=<class 'int'>, elements=text())]",
                "time": 0.834,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[uint8]",
                "time": 0.767,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[5]",
                "time": 0.379,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_float16_exactly_representable",
                "time": 0.674,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_may_not_fill_with_non_nan_when_unique_is_set_and_type_is_not_number",
                "time": 1.946,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[trace product]",
                "time": 1.881,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name=None, elements=None, dtype=float, fill=1, unique=False)])1]",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames(columns=[column(name='a', elements=text(), dtype=str, fill=None, unique=False), column(name='b', elements=text(), dtype=str, fill=None, unique=False)], index=indexes(dtype=int, min_size=1), rows=just(['x']))]",
                "time": 1.761,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_inferred_floats_do_not_overflow",
                "time": 0.521,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, min_dims=-1)]",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_bad_float_exclude_min_in_array[0.0-float64]",
                "time": 0.599,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_integer_range_to_boundary[33]",
                "time": 0.481,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[indexes(dtype=<class 'int'>, unique='true')]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_pandas_nullable_types_class",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type5]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[complex128]",
                "time": 1.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shapes_shrinking_with_singleton_out_of_bounds",
                "time": 1.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[indexes()]",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[trinary inner1d]",
                "time": 1.45,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_bad_float_exclude_min_in_array[-2.0-float32]",
                "time": 0.728,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_timestamp_as_datetime_bounds",
                "time": 0.401,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name='A', elements=None, dtype=float, fill=None, unique=False), column(name='A', elements=None, dtype=float, fill=None, unique=False)])]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name=None, elements=1, dtype=float, fill=None, unique=False)])]",
                "time": 0.231,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_basic_indices_options[<lambda>0]",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames()]",
                "time": 0.213,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_bad_float_exclude_min_in_array[-1.0-float16]",
                "time": 0.529,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_float32_exactly_representable",
                "time": 1.158,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[indexes(dtype='category')]",
                "time": 0.229,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_can_specify_both_rows_and_columns_tuple",
                "time": 1.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_bad_float_exclude_min_in_array[-2.0-float16]",
                "time": 0.788,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_can_fill_in_missing_elements_from_dict",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[indexes(dtype=<class 'int'>, min_size='0')]",
                "time": 0.223,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_randoms",
                "name": "test_unrelated_calls_desynchronizes[False]",
                "time": 1.794,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name=None, elements=None, dtype='not a dtype', fill=None, unique=False)])]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[7]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[range_indexes(name='')]",
                "time": 0.207,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[series(dtype=<class 'int'>, elements=none())]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "works with integer NA",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_randomness",
                "name": "test_numpy_prng_is_seeded",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_floor_ceil_lossless",
                "time": 0.894,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_invalid_datetime_or_timedelta_dtype_raises_error[datetime-datetime64[ns]]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_will_fill_missing_columns_in_tuple_row",
                "time": 0.379,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name=None, elements=None, dtype='category', fill=None, unique=False)])]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[indexes(dtype=<class 'int'>, max_size='1')]",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_can_specify_both_rows_and_columns_list",
                "time": 1.123,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_indexes",
                "name": "test_unique_indexes_of_small_values",
                "time": 0.865,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_indexes",
                "name": "test_name_passed_on_indexes",
                "time": 0.689,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_uniqueness_does_not_affect_other_rows_1",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_generates_all_values_for_unique_array",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames(index=range_indexes(max_size=0), rows=integers())]",
                "time": 0.516,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_uniqueness_does_not_affect_other_rows_2",
                "time": 0.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_unique_column_with_fill",
                "time": 2.469,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_sampled_from",
                "name": "test_sampling_multi_dimensional_arrays_is_deprecated",
                "time": 11.514,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_indexes",
                "name": "test_gets_right_dtype_for_empty_indices",
                "time": 0.254,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_series",
                "name": "test_series_respects_size_bounds",
                "time": 1.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[indexes(elements='not a strategy')]",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames(index=range_indexes(min_size=1, max_size=1), rows=integers())]",
                "time": 0.575,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_series",
                "name": "test_unique_series_are_unique",
                "time": 0.859,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_indexes",
                "name": "test_gets_right_dtype_for_empty_indices_with_elements",
                "time": 0.845,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_invalid_datetime_or_timedelta_dtype_raises_error[Timedelta-timedelta64[ns]]",
                "time": 0.213,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_minimise_scalar_dtypes",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[series(index='not a strategy')]",
                "time": 0.223,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_minimise_array_strategy",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name=None, elements=None, dtype=None, fill=None, unique=False)])]",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_checks",
                "name": "test_decorators_without_given_should_fail",
                "time": 1.708,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_data_frames_with_timestamp_columns",
                "time": 2.149,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_series",
                "name": "test_can_fill_series",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_series",
                "name": "test_will_use_a_provided_elements_strategy",
                "time": 1.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_indexes",
                "name": "test_does_not_generate_impossible_conditions",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_expected_failure_from_omitted_object_dtype[None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Just works on Pandas 1.4, though the changelog is silent",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_series",
                "name": "test_can_generate_integral_series",
                "time": 0.98,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_indexes",
                "name": "test_name_passed_on_range_indexes",
                "time": 0.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_series",
                "name": "test_name_passed_on",
                "time": 1.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[indexes(dtype=<class 'int'>, max_size=0, min_size=1)]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_series",
                "name": "test_can_create_a_series_of_any_dtype",
                "time": 2.863,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_gets_the_correct_data_shape_for_just_rows",
                "time": 1.208,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_series",
                "name": "test_pandas_nullable_types[Int8]",
                "time": 0.585,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_can_specify_unique_with_rows",
                "time": 1.362,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[indexes(dtype=sampled_from([<class 'int'>, <class 'float'>]), elements=integers(min_value=0, max_value=10))]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_indexes",
                "name": "test_unique_indexes_of_many_small_values",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_invalid_datetime_or_timedelta_dtype_raises_error[Timestamp-datetime64[ns]]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([], index=[])]",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.patching.test_patching",
                "name": "test_adds_simple_patch[cases]",
                "time": 0.393,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_can_cast_for_arrays",
                "time": 1.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.patching.test_patching",
                "name": "test_make_full_patch[toplevel]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_regex",
                "name": "test_matching[True-True-\\\\s-None]",
                "time": 3.551,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_compat",
                "name": "test_parametrize_after_given[1]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[indexes(dtype='not a dtype')]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_fixtures",
                "name": "test_can_mix_fixture_example_and_keyword_strategy",
                "time": 0.416,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.patching.test_patching",
                "name": "test_invalid_syntax_cases_dropped[1]",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_compat",
                "name": "test_parametrize_after_given[2]",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_capture",
                "name": "test_output_emitting_unicode",
                "time": 2.566,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_statistics",
                "name": "test_does_not_run_statistics_by_default",
                "time": 2.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_fixtures",
                "name": "test_given_plus_function_scoped_non_autouse_fixtures_are_deprecated",
                "time": 1.401,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_fixtures",
                "name": "test_can_inject_mock_via_fixture",
                "time": 1.532,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_confusing_object_dtype_aliases",
                "time": 0.695,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_broadcastable_shape_adjusts_max_dim_with_explicit_bounds",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[outer]",
                "time": 1.342,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames(1)]",
                "time": 0.413,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_import",
                "name": "test_wildcard_import",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.patching.test_patching",
                "name": "test_invalid_syntax_cases_dropped[0]",
                "time": 0.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_compat",
                "name": "test_parametrize_after_given[3]",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_doctest",
                "name": "test_can_run_doctests",
                "time": 1.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[range_indexes(max_size='1')]",
                "time": 0.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.patching.test_patching",
                "name": "test_make_full_patch[simple]",
                "time": 0.557,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.patching.test_patching",
                "name": "test_irretrievable_callable",
                "time": 0.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_parametrized_db_keys",
                "name": "test_db_keys_for_parametrized_tests_are_unique",
                "time": 2.805,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_junit",
                "name": "test_outputs_valid_xunit2",
                "time": 2.828,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_capture",
                "name": "test_output_without_capture[fd-False]",
                "time": 1.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name=None, elements=None, dtype=float, fill=1, unique=False)])0]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_fixtures",
                "name": "test_can_inject_autospecced_mock_via_fixture",
                "time": 0.533,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_mark",
                "name": "test_can_select_mark_on_unittest",
                "time": 1.462,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_arbitrary_data_frames",
                "time": 5.754,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_indexes",
                "name": "test_generate_arbitrary_indices",
                "time": 2.468,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_bad_float_exclude_min_in_array[1.0-float32]",
                "time": 0.65,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_runs",
                "name": "test_ints_are_ints",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.patching.test_patching",
                "name": "test_pytest_reports_patch_file_location",
                "time": 3.443,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_capture",
                "name": "test_output_without_capture[no-True]",
                "time": 1.509,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[matmat]",
                "time": 1.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_skipping",
                "name": "test_issue_3453_regression",
                "time": 1.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_profiles",
                "name": "test_does_not_run_reporting_hook_by_default",
                "time": 1.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_profiles",
                "name": "test_runs_reporting_hook_in_any_verbose_mode[-v]",
                "time": 1.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_bad_float_exclude_min_in_array[-2.0-float64]",
                "time": 0.672,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_series",
                "name": "test_will_use_dtype_of_elements",
                "time": 0.779,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([column(name=None, elements=booleans(), dtype=None, fill=None, unique=False)], rows=tuples(booleans()))]",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_reporting",
                "name": "test_no_missing_reports[native]",
                "time": 2.57,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_mutually_broadcastable_shapes_can_generate_mirrored_singletons[base_shape0]",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[range_indexes(min_size='0')]",
                "time": 0.226,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_statistics",
                "name": "test_prints_statistics_given_option_with_junitxml",
                "time": 2.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.redis.test_redis_exampledatabase",
                "name": "test_invalid_args_raise[kw0]",
                "time": 0.249,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_bad_float_exclude_min_in_array[1.0-float64]",
                "time": 0.664,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_skipping",
                "name": "test_no_falsifying_example_if_pytest_skip",
                "time": 1.388,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_indexes",
                "name": "test_basic_range_indexes",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_pytest_detection",
                "name": "test_plugin_does_not_import_pytest",
                "time": 0.906,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_efficient_sets_of_samples_with_chained_transformations_slow_path",
                "time": 3.895,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.patching.test_patching",
                "name": "test_make_full_patch[cases]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_seeding",
                "name": "test_runs_repeatably_when_seed_is_set[0]",
                "time": 4.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_reporting",
                "name": "test_no_missing_reports[auto]",
                "time": 2.456,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_can_generate_unique_columns",
                "time": 3.173,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.patching.test_patching",
                "name": "test_make_full_patch[covering]",
                "time": 0.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_expected_failure_from_omitted_object_dtype[object]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Just works on Pandas 1.4, though the changelog is silent",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_seeding",
                "name": "test_runs_repeatably_when_seed_is_set[42]",
                "time": 4.511,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_delete_in_middle_of_a_binding[9]",
                "time": 3.877,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.redis.test_redis_exampledatabase",
                "name": "test_invalid_args_raise[kw1]",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[series(dtype='not a dtype')]",
                "time": 0.236,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_capture",
                "name": "test_deprecation_of_strategies_as_tests",
                "time": 1.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_junit",
                "name": "test_outputs_valid_xunit2_with_xdist",
                "time": 4.17,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_floating",
                "name": "test_is_not_int",
                "time": 0.416,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type1]",
                "time": 0.209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_statistics",
                "name": "test_prints_statistics_given_option_under_xdist",
                "time": 2.877,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Literal_nested",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Literal[dog]",
                "time": 0.424,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_indexes",
                "name": "test_arbitrary_range_index",
                "time": 0.988,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_searchstrategy",
                "name": "test_can_map_nameless",
                "time": 0.639,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.patching.test_patching",
                "name": "test_adds_simple_patch[simple]",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Annotated[annotated_type2-text()]",
                "time": 0.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sampled_from",
                "name": "test_filter_large_lists[100000]",
                "time": 0.777,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type3]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_pytest_detection",
                "name": "test_is_running_under_pytest",
                "time": 0.58,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_resolves_NewType",
                "time": 0.456,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_basic_indices_replaces_whole_axis_slices_with_ellipsis",
                "time": 1.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_frozen_dims_signature",
                "time": 0.243,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type4]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_delete_in_middle_of_a_binding[3]",
                "time": 4.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_invalid_datetime_or_timedelta_dtype_raises_error[timedelta-timedelta64[ns]]",
                "time": 0.231,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type18]",
                "time": 0.227,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_basic_indices_can_generate_indices_not_covering_all_dims",
                "time": 1.478,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[Self]",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_statistics",
                "name": "test_prints_statistics_given_option_under_xdist_with_junitxml",
                "time": 3.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type11]",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_fixtures",
                "name": "test_suppress_fixture_health_check_via_profile",
                "time": 2.901,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[data_frames([1])]",
                "time": 0.213,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_fixtures",
                "name": "test_given_fails_if_already_decorated_with_fixture",
                "time": 2.558,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_reporting",
                "name": "test_no_missing_reports[long]",
                "time": 2.601,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_searchstrategy",
                "name": "test_can_flatmap_nameless",
                "time": 0.21,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[series(elements='not a strategy')]",
                "time": 0.228,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type2]",
                "time": 0.229,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_fixtures",
                "name": "test_suppress_health_check_function_scoped_fixture",
                "time": 1.605,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_capture",
                "name": "test_healthcheck_traceback_is_hidden",
                "time": 2.588,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_reporting",
                "name": "test_no_missing_reports[short]",
                "time": 2.774,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[ParamSpec]",
                "time": 0.236,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[Self]",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Literal[42]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type12]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type3]",
                "time": 0.218,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type5]",
                "time": 0.244,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Annotated[annotated_type3-lists(dictionaries(keys=text(), values=booleans()))]",
                "time": 0.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type1]",
                "time": 0.229,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_can_specify_just_column_count",
                "time": 3.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[series()]",
                "time": 0.249,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_can_specify_just_column_names",
                "time": 3.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type11]",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_seeding",
                "name": "test_repeats_healthcheck_when_following_seed_instruction",
                "time": 2.803,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[LiteralString]",
                "time": 0.228,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type4]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[Annotated0]",
                "time": 0.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[TypeVarTuple]",
                "time": 0.244,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_required_and_not_required_keys[author-is-required]",
                "time": 1.19,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type14]",
                "time": 0.236,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type5]",
                "time": 0.235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typeddict_required",
                "time": 0.96,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sampled_from",
                "name": "test_unsat_sets_of_samples",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_reporting",
                "name": "test_runs_reporting_hook",
                "time": 2.488,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_mark",
                "name": "test_can_select_mark",
                "time": 1.194,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type12]",
                "time": 0.236,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_can_specify_both_rows_and_columns_dict",
                "time": 1.471,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_required_and_not_required_keys[rating-may-be-present]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_callable_return_typegard_type",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_annotated_positive_int",
                "time": 0.542,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_required_and_not_required_keys[genre-is-required]",
                "time": 1.492,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[LiteralString]",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_annotated_extra_metadata",
                "time": 0.379,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typeddict_not_required",
                "time": 1.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_fixtures",
                "name": "test_fixture_errors_if_already_decorated_with_given",
                "time": 1.551,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typeddict_required_must_have",
                "time": 0.927,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typeddict_not_required_can_skip",
                "time": 0.405,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type6]",
                "time": 0.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typeddict_error_msg",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type18]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_required_and_not_required_keys[rating-may-be-absent]",
                "time": 0.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_flatmap",
                "name": "test_can_delete_in_middle_of_a_binding[6]",
                "time": 3.723,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_pandas_nullable_types",
                "time": 0.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sampled_from",
                "name": "test_efficient_sets_of_samples",
                "time": 0.926,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type0]",
                "time": 0.219,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_profiles",
                "name": "test_runs_reporting_hook_in_any_verbose_mode[--hypothesis-verbosity=verbose]",
                "time": 1.178,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_fixtures",
                "name": "test_can_mix_fixture_and_positional_strategy",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[fixed dim outer product]",
                "time": 1.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_statistics",
                "name": "test_prints_statistics_for_unittest_tests",
                "time": 1.163,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[33]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.redis.test_redis_exampledatabase",
                "name": "test_invalid_args_raise[kw2]",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_sampled_from",
                "name": "test_filter_large_lists[1000000]",
                "time": 1.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[Never]",
                "time": 0.209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_runs",
                "name": "test_ints_are_floats",
                "time": 1.199,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_defaultdict",
                "time": 0.856,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Type_int",
                "time": 0.216,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_statistics",
                "name": "test_prints_statistics_for_stateful_tests",
                "time": 3.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Annotated[annotated_type0-integers()]",
                "time": 0.177,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Literal[-80.5]",
                "time": 0.242,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_variable_length_tuples[8]",
                "time": 5.461,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_up_to_boundary[63]",
                "time": 0.225,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Literal[goldfish]",
                "time": 0.207,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[ParamSpec]",
                "time": 0.16,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type8]",
                "time": 0.244,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_fixtures",
                "name": "test_can_mix_fixture_and_keyword_strategy",
                "time": 0.328,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[TypeVarTuple]",
                "time": 0.196,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_complex_numbers",
                "name": "test_magnitude_validates[max_magnitude-128]",
                "time": 3.836,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_series",
                "name": "test_pandas_nullable_types[dtype1]",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_interesting_origin",
                "name": "test_can_generate_specified_version[go_wrong_coverup]",
                "time": 2.843,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_statistics",
                "name": "test_prints_statistics_given_option",
                "time": 1.872,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_can_specify_start_rule[list-list]",
                "time": 8.979,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[Annotated1]",
                "time": 0.209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_NDArray_type[uint16]",
                "time": 0.548,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_required_and_not_required_keys[pages-may-be-present]",
                "time": 0.236,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_pytest_detection",
                "name": "test_is_not_running_under_pytest",
                "time": 0.547,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_fixtures",
                "name": "test_given_plus_overridden_fixture",
                "time": 1.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_stateful_double_rule_is_forbidden",
                "time": 0.222,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Literal[63.4]",
                "time": 0.176,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_complex_numbers",
                "name": "test_magnitude_validates[min_magnitude-128]",
                "time": 3.742,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_annotated_more_than_ten",
                "time": 0.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_can_explicitly_call_functions_when_precondition_not_satisfied",
                "time": 0.599,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Type_Union",
                "time": 0.197,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_data_frame",
                "name": "test_respects_size_bounds",
                "time": 1.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_collective_minimization",
                "name": "test_can_collectively_minimize[text()]",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[Annotated1]",
                "time": 0.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.redis.test_redis_exampledatabase.TestDBs",
                "name": "runTest",
                "time": 10.124,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.redis.test_redis_exampledatabase",
                "name": "test_all_methods",
                "time": 0.184,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pandas.test_argument_validation",
                "name": "test_raise_invalid_argument[series(dtype=<class 'int'>, elements=text())]",
                "time": 0.638,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type15]",
                "time": 0.155,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[Annotated0]",
                "time": 0.199,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[Never]",
                "time": 0.171,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_callable_with_paramspec",
                "time": 0.203,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant",
                "time": 0.232,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_narrow_floats",
                "name": "test_bad_float_exclude_min_in_array[0.0-float32]",
                "time": 0.619,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type0]",
                "time": 0.187,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type2]",
                "time": 0.18,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.pytest.test_seeding",
                "name": "test_runs_repeatably_when_seed_is_set[foo]",
                "time": 3.498,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_broadcastable_shape_has_good_default_values",
                "time": 0.773,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_conjecture_utils",
                "name": "test_gives_the_correct_probabilities",
                "time": 4.492,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_no_double_invariant",
                "time": 0.16,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_callable_with_concatenate",
                "time": 0.163,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_multiple_variables_printed",
                "time": 0.364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_simple_typeddict",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type15]",
                "time": 0.169,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariant_precondition",
                "time": 2.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[transpose]",
                "time": 0.683,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_required_and_not_required_keys[pages-may-be-absent]",
                "time": 0.158,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_subnormal_floats",
                "name": "test_does_not_generate_subnormals_when_disallowed[64-0-1]",
                "time": 0.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_list_unique_and_unique_by_cannot_both_be_enabled",
                "time": 0.207,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_multiple_variables_printed_single_element",
                "time": 0.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_validation",
                "name": "test_min_before_max",
                "time": 0.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_reversing_preserves_integer_addition",
                "time": 0.651,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_unsatisfiable_explicit_filteredstrategy_sampled",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type14]",
                "time": 0.323,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_is_still_unique_with_nan_fill",
                "time": 0.787,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_sampled_from",
                "name": "test_unsatisfiable_explicit_filteredstrategy_just",
                "time": 0.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type6]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_regex",
                "name": "test_conservative_regex_are_correct_by_construction",
                "time": 11.788,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_still_minimizes_on_non_assertion_failures",
                "time": 0.596,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type8]",
                "time": 0.241,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_annotated_with_two_strategies",
                "time": 0.385,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Annotated[annotated_type1-lists(floats())]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_inferring_from_time_dtypes_gives_same_dtype",
                "time": 0.706,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_generic_collections_only_use_hashable_elements[typ2]",
                "time": 2.565,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[255]",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_unrepresentable_elements_are_deprecated[float16-strat0-False]",
                "time": 1.18,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_statistical_events",
                "name": "test_statistics_for_threshold_problem",
                "time": 0.711,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_integer_division_shrinks_positive_integers",
                "time": 0.53,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_dtype",
                "name": "test_float_subnormal_generation[64-True]",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[256]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.typing_extensions.test_backported_types",
                "name": "test_typing_extensions_Literal[False]",
                "time": 0.23,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_variable_length_tuples[9]",
                "time": 4.949,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[ExceptionGroup]",
                "time": 1.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_no_byteswarning",
                "time": 0.805,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_argument_validation",
                "name": "test_raise_invalid_argument[mutually_broadcastable_shapes(num_shapes=2, max_dims='a')]",
                "time": 0.182,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_conjecture_utils",
                "name": "test_p_continue",
                "time": 0.744,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_hashable_type_unhashable_value",
                "time": 0.233,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[128]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[filter]",
                "time": 0.235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_repr_passthrough[int-integers()]",
                "time": 0.228,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_simple_numbers",
                "name": "test_minimizes_int_down_to_boundary[129]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_type_lookup",
                "name": "test_can_generate_from_all_registered_types[float]",
                "time": 0.427,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_repr_passthrough[typ1-lists(text())]",
                "time": 0.189,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_repr_passthrough[not a type-from_type('not a type')]",
                "time": 0.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_repr_passthrough[Random-randoms()]",
                "time": 0.168,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[ParamSpec]",
                "time": 0.187,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_repr_passthrough[_EmptyClass-from_type(tests.cover.test_lookup._EmptyClass)]",
                "time": 0.123,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_from_type",
                "name": "test_resolves_specified_ndarray_type[int16]",
                "time": 1.121,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.patching.test_patching",
                "name": "test_invalid_syntax_cases_dropped[2]",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.lark.test_grammar",
                "name": "test_can_specify_start_rule[STRING-str]",
                "time": 2.587,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_lookup_overrides_defaults",
                "time": 1.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gen_data",
                "name": "test_minimize_tuple_axes",
                "time": 0.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_lookup",
                "name": "test_register_generic_typing_strats",
                "time": 1.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_registered[non_runtime_type6]",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_uuids",
                "name": "test_can_generate_specified_version[5]",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_targeting",
                "name": "test_targeting_with_many_empty",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[Annotated0]",
                "time": 0.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_int_addition_is_commutative",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_str_addition_is_commutative",
                "time": 1.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_testdecorators",
                "name": "test_bytes_addition_is_commutative",
                "time": 5.49,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_prints_equal_values_with_correct_variable_name",
                "time": 1.948,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.numpy.test_gufunc",
                "name": "test_einsum_gufunc_shapes[bigger trace]",
                "time": 0.919,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariants_are_checked_after_init_steps",
                "time": 3.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_invariants_can_be_checked_during_init_steps",
                "time": 0.198,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_check_during_init_must_be_boolean",
                "time": 0.135,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_deprecated_target_consumes_bundle",
                "time": 0.126,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.cover.test_stateful",
                "name": "test_min_steps_argument",
                "time": 1.165,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_database_usage",
                "name": "test_trashes_invalid_examples",
                "time": 3.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type15]",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_type_lookup",
                "name": "test_non_runtime_type_cannot_be_resolved[non_runtime_type6]",
                "time": 0.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_database_usage",
                "name": "test_does_not_use_database_when_seed_is_forced",
                "time": 0.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "hypothesis-python.tests.nocover.test_database_usage",
                "name": "test_database_not_created_when_not_used",
                "time": 1.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win] \ud83d\ude80  Start image=crawlergpt:latest\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ] \ud83d\ude80  Start image=crawlergpt:latest\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx] \ud83d\ude80  Start image=crawlergpt:latest\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis] user=0 workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis] user=0 workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis] user=0 workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win] \ud83e\uddea  Matrix: map[python-version:3.9]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win] \u2b50 Run Main actions/checkout@v3\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2705  Success - Main actions/checkout@v3\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx] \ud83e\uddea  Matrix: map[task:check-py38-cover]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win] \u2b50 Run Main Set up Python 3.9 \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udc33  docker cp src=/tmp/act-cache/1750fafb-2a03-4e2f-95d0-605e89cc1487/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx] \u2b50 Run Main actions/checkout@v3\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2705  Success - Main actions/checkout@v3\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx] \u2b50 Run Main Set up Python 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker cp src=/tmp/act-cache/1750fafb-2a03-4e2f-95d0-605e89cc1487/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ] \ud83e\uddea  Matrix: map[task:check-whole-repo-tests]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ] \u2b50 Run Main actions/checkout@v3\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2705  Success - Main actions/checkout@v3\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ] \u2b50 Run Main Set up Python 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udc33  docker cp src=/tmp/act-cache/1750fafb-2a03-4e2f-95d0-605e89cc1487/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2753  ::group::Installed versions\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::isExplicit: \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::explicit? false\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2753  ::group::Installed versions\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::Semantic version spec of 3.10.9 is 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::evaluating 6 versions\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::isExplicit: 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.9/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::not found\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Version 3.10.9 was not found in the local cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::set auth\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::matched: 3.9.6\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Successfully set up CPython (3.9.6)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2753  ::endgroup::\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2705  Success - Main Set up Python 3.9 \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2753  ::group::Installed versions\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? false\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::evaluating 6 versions\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::match not found\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Version 3.10 was not found in the local cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::set auth\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib/pkgconfig\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.3 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.2 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.1 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-rc.2 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-rc.1 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-beta.5 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-beta.4 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-beta.3 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-beta.2 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-beta.1 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-alpha.7 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-alpha.6 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-alpha.5 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-alpha.4 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-alpha.3 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-alpha.2 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.11.0-alpha.1 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::check 3.10.12 satisfies 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::matched 3.10.12\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Version 3.10 is available for downloading\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Download from \"https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\"\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Destination /tmp/99bdd10f-4e75-4212-86dd-78d68050fe76\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::set auth\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.3 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.2 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.1 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-rc.2 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-rc.1 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-beta.5 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-beta.4 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-beta.3 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-beta.2 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-beta.1 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.7 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.6 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.5 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.4 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.3 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.2 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.1 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.10.12 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.10.11 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.10.10 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::check 3.10.9 satisfies 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::matched 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Version 3.10.9 is available for downloading\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Download from \"https://github.com/actions/python-versions/releases/download/3.10.9-3636985951/python-3.10.9-linux-20.04-x64.tar.gz\"\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.10.9-3636985951/python-3.10.9-linux-20.04-x64.tar.gz\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::Destination /tmp/588ba3ef-2bd2-4e24-bfca-293b5c7e8403\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::set auth\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2699  ::set-output:: python-version=3.9.6\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.9.6/x64/bin/python\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win] \u2b50 Run Main Restore cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udc33  docker cp src=/tmp/act-cache/1750fafb-2a03-4e2f-95d0-605e89cc1487/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::download complete\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Extract downloaded archive\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Checking tar --version\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::download complete\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Extract downloaded archive\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::Checking tar --version\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/4c9ee746-9b55-4232-9e6e-a0013abe8625 -f /tmp/99bdd10f-4e75-4212-86dd-78d68050fe76\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/dab1beac-48ea-479a-8837-81cdcfe61adf -f /tmp/588ba3ef-2bd2-4e24-bfca-293b5c7e8403\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Execute installation script\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Check if Python hostedtoolcache folder exist...\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Create Python 3.10.9 folder\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Copy Python binaries to hostedtoolcache folder\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Execute installation script\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Check if Python hostedtoolcache folder exist...\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Create Python 3.10.12 folder\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Copy Python binaries to hostedtoolcache folder\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Upgrading pip...\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Upgrading pip...\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Looking in links: /tmp/tmpgc1_3mcg\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages (65.5.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages (22.3.1)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Looking in links: /tmp/tmp9gky52q6\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (65.5.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (23.0.1)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 21.4 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Installing collected packages: pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 24.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Installing collected packages: pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Successfully installed pip-23.1.2\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Create complete file\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::isExplicit: 3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.9/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.10.9 x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Successfully set up CPython (3.10.9)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2753  ::endgroup::\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2705  Success - Main Set up Python 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.9/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.10.9/x64/lib\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.10.9/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.10.9/x64/lib/pkgconfig\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.9/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.9/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Successfully installed pip-23.1.2\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Create complete file\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? false\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 3.10.12\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::explicit? true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::evaluating 7 versions\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::matched: 3.10.12\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.12/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Found tool in cache Python 3.10.12 x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Successfully set up CPython (3.10.12)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2753  ::endgroup::\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2705  Success - Main Set up Python 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2699  ::set-output:: python-version=3.10.9\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.10.9/x64/bin/python\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.10.12/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib/pkgconfig\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.9/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.9/x64/bin\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2699  ::set-output:: python-version=3.10.12\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.10.12/x64/bin/python\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64/bin\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ] \u2b50 Run Main Restore cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx] \u2b50 Run Main Restore cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udc33  docker cp src=/tmp/act-cache/1750fafb-2a03-4e2f-95d0-605e89cc1487/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker cp src=/tmp/act-cache/1750fafb-2a03-4e2f-95d0-605e89cc1487/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::Resolved Keys:\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::[\"deps-Linux--2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5-3.9\",\"deps-Linux--2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5\",\"deps-Linux-\"]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::1.5.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:46523/_apis/artifactcache/cache?keys=deps-Linux--2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5-3.9%252Cdeps-Linux--2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5%252Cdeps-Linux-&version=cb0e1ae75957a624e5a738ae29d0ab155a5e95092c11bec035a060d466cc2cdd\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Cache not found for input keys: deps-Linux--2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5-3.9, deps-Linux--2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5, deps-Linux-\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2705  Success - Main Restore cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win] \u2b50 Run Main Install dependencies\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (56.0.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting setuptools\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading setuptools-68.0.0-py3-none-any.whl (804 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (21.2.4)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::Resolved Keys:\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::[\"deps-Linux-2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5-check-whole-repo-tests\",\"deps-Linux-2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5\",\"deps-Linux\"]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Resolved Keys:\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::[\"deps-Linux-2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5-check-py38-cover\"]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::1.5.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:46523/_apis/artifactcache/cache?keys=deps-Linux-2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5-check-whole-repo-tests%252Cdeps-Linux-2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5%252Cdeps-Linux&version=45af37825ed96a868b96e3acdc328a1ad6b231edbe85cb08caf501fa02dc4b5e\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::1.5.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:46523/_apis/artifactcache/cache?keys=deps-Linux-2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5-check-py38-cover&version=2f33c59d9c6bbb53ad4b5177a358e0a8c29672f9af549fb767f67572022419f5\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Cache not found for input keys: deps-Linux-2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5-check-whole-repo-tests, deps-Linux-2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5, deps-Linux\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u2705  Success - Main Restore cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Cache not found for input keys: deps-Linux-2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5-check-py38-cover\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting wheel\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading wheel-0.40.0-py3-none-any.whl (64 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2705  Success - Main Restore cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Installing collected packages: wheel, setuptools, pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Attempting uninstall: setuptools\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     Found existing installation: setuptools 56.0.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     Uninstalling setuptools-56.0.0:\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |       Successfully uninstalled setuptools-56.0.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx] \u2b50 Run Main Run tests\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ] \u2b50 Run Main Run tests\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Attempting uninstall: pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     Found existing installation: pip 21.2.4\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     Uninstalling pip-21.2.4:\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + set -o errexit\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + set -o nounset\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | +++ dirname ./build.sh\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ git -C . rev-parse --show-toplevel\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + ROOT=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + export HYPOTHESIS_ROOT=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + HYPOTHESIS_ROOT=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + SCRIPTS=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + source /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts/common.sh\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ set -o errexit\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ set -o nounset\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++++ dirname /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts/common.sh\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | +++ cd /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | +++ pwd\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ HERE=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | +++ git -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts rev-parse --show-toplevel\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ ROOT=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export ROOT\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export BUILD_RUNTIMES=/home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ BUILD_RUNTIMES=/home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export BASE=/home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ BASE=/home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export PYENV=/home/runneradmin/.cache/hypothesis-build-runtimes/pyenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ PYENV=/home/runneradmin/.cache/hypothesis-build-runtimes/pyenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export SNAKEPIT=/home/runneradmin/.cache/hypothesis-build-runtimes/python-versions/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ SNAKEPIT=/home/runneradmin/.cache/hypothesis-build-runtimes/python-versions/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export XDG_CACHE_HOME=/home/runneradmin/.cache/hypothesis-build-runtimes/.cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ XDG_CACHE_HOME=/home/runneradmin/.cache/hypothesis-build-runtimes/.cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export VIRTUALENVS=/tmp/.hypothesis-runtimes/virtualenvs/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ VIRTUALENVS=/tmp/.hypothesis-runtimes/virtualenvs/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + '[' -n true ']'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ command -v python\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + PYTHON=/opt/hostedtoolcache/Python/3.10.12/x64/bin/python\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + TOOL_REQUIREMENTS=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/requirements/tools.txt\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ /opt/hostedtoolcache/Python/3.10.12/x64/bin/python /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts/tool-hash.py\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + TOOL_HASH=9c0df04a01\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + TOOL_VIRTUALENV=/tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + TOOL_PYTHON=/tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01/bin/python\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + export PYTHONPATH=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/src\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + PYTHONPATH=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/src\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + /tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01/bin/python -m hypothesistooling check-installed\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + set -o errexit\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + set -o nounset\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | +++ dirname ./build.sh\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ./build.sh: line 39: /tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01/bin/python: No such file or directory\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + rm -rf /tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ git -C . rev-parse --show-toplevel\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + /opt/hostedtoolcache/Python/3.10.12/x64/bin/python -m pip install --upgrade pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + ROOT=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + export HYPOTHESIS_ROOT=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + HYPOTHESIS_ROOT=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + SCRIPTS=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + source /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts/common.sh\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ set -o errexit\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ set -o nounset\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++++ dirname /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts/common.sh\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | +++ cd /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | +++ pwd\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ HERE=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | +++ git -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts rev-parse --show-toplevel\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ ROOT=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ export ROOT\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ export BUILD_RUNTIMES=/home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ BUILD_RUNTIMES=/home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ export BASE=/home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ BASE=/home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ export PYENV=/home/runneradmin/.cache/hypothesis-build-runtimes/pyenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ PYENV=/home/runneradmin/.cache/hypothesis-build-runtimes/pyenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ export SNAKEPIT=/home/runneradmin/.cache/hypothesis-build-runtimes/python-versions/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ SNAKEPIT=/home/runneradmin/.cache/hypothesis-build-runtimes/python-versions/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ export XDG_CACHE_HOME=/home/runneradmin/.cache/hypothesis-build-runtimes/.cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ XDG_CACHE_HOME=/home/runneradmin/.cache/hypothesis-build-runtimes/.cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ export VIRTUALENVS=/tmp/.hypothesis-runtimes/virtualenvs/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ VIRTUALENVS=/tmp/.hypothesis-runtimes/virtualenvs/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + '[' -n true ']'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ command -v python\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + PYTHON=/opt/hostedtoolcache/Python/3.10.9/x64/bin/python\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + TOOL_REQUIREMENTS=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/requirements/tools.txt\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ++ /opt/hostedtoolcache/Python/3.10.9/x64/bin/python /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts/tool-hash.py\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + TOOL_HASH=9c0df04a01\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + TOOL_VIRTUALENV=/tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + TOOL_PYTHON=/tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01/bin/python\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + export PYTHONPATH=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/src\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + PYTHONPATH=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/src\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + /tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01/bin/python -m hypothesistooling check-installed\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ./build.sh: line 39: /tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01/bin/python: No such file or directory\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + rm -rf /tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + /opt/hostedtoolcache/Python/3.10.9/x64/bin/python -m pip install --upgrade pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |       Successfully uninstalled pip-21.2.4\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (23.0.1)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages (22.3.1)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 33.7 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 20.5 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Installing collected packages: pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Attempting uninstall: pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |     Found existing installation: pip 23.0.1\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Installing collected packages: pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Attempting uninstall: pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     Found existing installation: pip 22.3.1\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |     Uninstalling pip-23.0.1:\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     Uninstalling pip-22.3.1:\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |       Successfully uninstalled pip-23.0.1\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |       Successfully uninstalled pip-22.3.1\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Successfully installed pip-23.1.2 setuptools-68.0.0 wheel-0.40.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting async-timeout==4.0.2 (from -r requirements/coverage.txt (line 7))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting attrs==23.1.0 (from -r requirements/coverage.txt (line 9))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 4.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting black==23.3.0 (from -r requirements/coverage.txt (line 11))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading black-23.3.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.7/1.7 MB 20.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Successfully installed pip-23.1.2\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Successfully installed pip-23.1.2\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting click==8.1.3 (from -r requirements/coverage.txt (line 13))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.6/96.6 kB 5.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + /opt/hostedtoolcache/Python/3.10.12/x64/bin/python -m pip install --upgrade virtualenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + /opt/hostedtoolcache/Python/3.10.9/x64/bin/python -m pip install --upgrade virtualenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting coverage==7.2.7 (from -r requirements/coverage.txt (line 17))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading coverage-7.2.7-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (228 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 228.3/228.3 kB 15.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting virtualenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting dpcontracts==0.6.0 (from -r requirements/coverage.txt (line 19))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading dpcontracts-0.6.0.tar.gz (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Preparing metadata (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.3/3.3 MB 24.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting virtualenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting distlib<1,>=0.3.6 (from virtualenv)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 468.5/468.5 kB 13.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.3/3.3 MB 22.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Preparing metadata (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting filelock<4,>=3.12 (from virtualenv)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting exceptiongroup==1.1.1 (from -r requirements/coverage.txt (line 21))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting distlib<1,>=0.3.6 (from virtualenv)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting platformdirs<4,>=3.5.1 (from virtualenv)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 468.5/468.5 kB 11.7 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting execnet==1.9.0 (from -r requirements/coverage.txt (line 25))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading execnet-1.9.0-py2.py3-none-any.whl (39 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting filelock<4,>=3.12 (from virtualenv)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Installing collected packages: distlib, platformdirs, filelock, virtualenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting platformdirs<4,>=3.5.1 (from virtualenv)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting fakeredis==2.15.0 (from -r requirements/coverage.txt (line 27))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading fakeredis-2.15.0-py3-none-any.whl (65 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 65.6/65.6 kB 3.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting iniconfig==2.0.0 (from -r requirements/coverage.txt (line 29))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Installing collected packages: distlib, platformdirs, filelock, virtualenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting lark==1.1.5 (from -r requirements/coverage.txt (line 31))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading lark-1.1.5-py3-none-any.whl (107 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 108.0/108.0 kB 1.5 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting libcst==1.0.1 (from -r requirements/coverage.txt (line 33))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Successfully installed distlib-0.3.6 filelock-3.12.2 platformdirs-3.8.0 virtualenv-20.23.1\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading libcst-1.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.9 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + /opt/hostedtoolcache/Python/3.10.12/x64/bin/python -m virtualenv /tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Successfully installed distlib-0.3.6 filelock-3.12.2 platformdirs-3.8.0 virtualenv-20.23.1\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.9/2.9 MB 11.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + /opt/hostedtoolcache/Python/3.10.9/x64/bin/python -m virtualenv /tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting mypy-extensions==1.0.0 (from -r requirements/coverage.txt (line 35))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting numpy==1.25.0 (from -r requirements/coverage.txt (line 39))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading numpy-1.25.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.7 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.7/17.7 MB 20.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting packaging==23.1 (from -r requirements/coverage.txt (line 43))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 497.0 kB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | created virtual environment CPython3.10.12.final.0-64 in 832ms\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   creator CPython3Posix(dest=/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01, clear=False, no_vcs_ignore=False, global=False)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/home/runneradmin/.local/share/virtualenv)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |     added seed packages: pip==23.1.2, setuptools==67.8.0, wheel==0.40.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + /tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01/bin/python -m pip install --no-warn-script-location -r requirements/tools.txt\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | created virtual environment CPython3.10.9.final.0-64 in 806ms\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   creator CPython3Posix(dest=/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01, clear=False, no_vcs_ignore=False, global=False)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/home/runneradmin/.local/share/virtualenv)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     added seed packages: pip==23.1.2, setuptools==67.8.0, wheel==0.40.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting pandas==2.0.2 (from -r requirements/coverage.txt (line 47))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading pandas-2.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.4 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + /tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01/bin/python -m pip install --no-warn-script-location -r requirements/tools.txt\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.4/12.4 MB 44.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting pathspec==0.11.1 (from -r requirements/coverage.txt (line 49))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting pexpect==4.8.0 (from -r requirements/coverage.txt (line 51))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 59.0/59.0 kB 6.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting platformdirs==3.8.0 (from -r requirements/coverage.txt (line 53))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting pluggy==1.2.0 (from -r requirements/coverage.txt (line 55))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting ptyprocess==0.7.0 (from -r requirements/coverage.txt (line 57))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting pytest==7.4.0 (from -r requirements/coverage.txt (line 59))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 5.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting pytest-xdist==3.3.1 (from -r requirements/coverage.txt (line 63))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading pytest_xdist-3.3.1-py3-none-any.whl (41 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.8/41.8 kB 1.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting python-dateutil==2.8.2 (from -r requirements/coverage.txt (line 65))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 4.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting pytz==2023.3 (from -r requirements/coverage.txt (line 69))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 37.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting pyyaml==6.0 (from -r requirements/coverage.txt (line 73))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading PyYAML-6.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (661 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 661.8/661.8 kB 25.4 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting redis==4.5.5 (from -r requirements/coverage.txt (line 75))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading redis-4.5.5-py3-none-any.whl (240 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 240.3/240.3 kB 6.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting six==1.16.0 (from -r requirements/coverage.txt (line 77))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting sortedcontainers==2.4.0 (from -r requirements/coverage.txt (line 79))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting tomli==2.0.1 (from -r requirements/coverage.txt (line 83))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting typing-extensions==4.6.3 (from -r requirements/coverage.txt (line 87))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting alabaster==0.7.13 (from -r requirements/tools.txt (line 7))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading alabaster-0.7.13-py3-none-any.whl (13 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting typing-inspect==0.9.0 (from -r requirements/coverage.txt (line 92))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading typing_inspect-0.9.0-py3-none-any.whl (8.8 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting asgiref==3.7.2 (from -r requirements/tools.txt (line 9))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting alabaster==0.7.13 (from -r requirements/tools.txt (line 7))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading asgiref-3.7.2-py3-none-any.whl (24 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting tzdata==2023.3 (from -r requirements/coverage.txt (line 94))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading tzdata-2023.3-py2.py3-none-any.whl (341 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading alabaster-0.7.13-py3-none-any.whl (13 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 341.8/341.8 kB 11.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting asttokens==2.2.1 (from -r requirements/tools.txt (line 11))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading asttokens-2.2.1-py2.py3-none-any.whl (26 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting asgiref==3.7.2 (from -r requirements/tools.txt (line 9))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading asgiref-3.7.2-py3-none-any.whl (24 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting attrs==23.1.0 (from -r requirements/tools.txt (line 13))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 1.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting asttokens==2.2.1 (from -r requirements/tools.txt (line 11))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading asttokens-2.2.1-py2.py3-none-any.whl (26 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting autoflake==2.1.1 (from -r requirements/tools.txt (line 15))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading autoflake-2.1.1-py3-none-any.whl (31 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting attrs==23.1.0 (from -r requirements/tools.txt (line 13))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting babel==2.12.1 (from -r requirements/tools.txt (line 17))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 1.4 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting autoflake==2.1.1 (from -r requirements/tools.txt (line 15))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading autoflake-2.1.1-py3-none-any.whl (31 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 10.1/10.1 MB 39.4 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting babel==2.12.1 (from -r requirements/tools.txt (line 17))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting backcall==0.2.0 (from -r requirements/tools.txt (line 19))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading backcall-0.2.0-py2.py3-none-any.whl (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting beautifulsoup4==4.12.2 (from -r requirements/tools.txt (line 21))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Building wheels for collected packages: dpcontracts\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Building wheel for dpcontracts (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.0/143.0 kB 2.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 10.1/10.1 MB 42.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting backcall==0.2.0 (from -r requirements/tools.txt (line 19))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading backcall-0.2.0-py2.py3-none-any.whl (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting black==23.3.0 (from -r requirements/tools.txt (line 23))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading black-23.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting beautifulsoup4==4.12.2 (from -r requirements/tools.txt (line 21))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.7/1.7 MB 20.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.0/143.0 kB 7.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Building wheel for dpcontracts (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Created wheel for dpcontracts: filename=dpcontracts-0.6.0-py3-none-any.whl size=13082 sha256=a9278446bd36f535d4912b4be169207862daa90ed1079affca2bd96685df9384\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/b4/89/dd/52f3f962165204abd6f62e42e6dc2edf24628ebf9db0471bf5\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Successfully built dpcontracts\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting bleach==6.0.0 (from -r requirements/tools.txt (line 25))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading bleach-6.0.0-py3-none-any.whl (162 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting black==23.3.0 (from -r requirements/tools.txt (line 23))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 162.5/162.5 kB 2.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading black-23.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting build==0.10.0 (from -r requirements/tools.txt (line 27))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading build-0.10.0-py3-none-any.whl (17 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.7/1.7 MB 17.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting bleach==6.0.0 (from -r requirements/tools.txt (line 25))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting cachetools==5.3.1 (from -r requirements/tools.txt (line 29))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading bleach-6.0.0-py3-none-any.whl (162 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 162.5/162.5 kB 3.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting certifi==2023.5.7 (from -r requirements/tools.txt (line 31))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting build==0.10.0 (from -r requirements/tools.txt (line 27))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading build-0.10.0-py3-none-any.whl (17 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 6.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting cachetools==5.3.1 (from -r requirements/tools.txt (line 29))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting certifi==2023.5.7 (from -r requirements/tools.txt (line 31))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Installing collected packages: sortedcontainers, pytz, ptyprocess, lark, tzdata, typing-extensions, tomli, six, pyyaml, pluggy, platformdirs, pexpect, pathspec, packaging, numpy, mypy-extensions, iniconfig, execnet, exceptiongroup, dpcontracts, coverage, click, attrs, async-timeout, typing-inspect, redis, python-dateutil, pytest, black, pytest-xdist, pandas, libcst, fakeredis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 4.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting cffi==1.15.1 (from -r requirements/tools.txt (line 33))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading cffi-1.15.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 441.8/441.8 kB 12.7 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting chardet==5.1.0 (from -r requirements/tools.txt (line 35))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.1/199.1 kB 12.7 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting cffi==1.15.1 (from -r requirements/tools.txt (line 33))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading cffi-1.15.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 441.8/441.8 kB 36.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting charset-normalizer==3.1.0 (from -r requirements/tools.txt (line 37))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting chardet==5.1.0 (from -r requirements/tools.txt (line 35))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading charset_normalizer-3.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (199 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.3/199.3 kB 17.4 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.1/199.1 kB 14.5 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting click==8.1.3 (from -r requirements/tools.txt (line 39))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.6/96.6 kB 11.7 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting codespell==2.2.5 (from -r requirements/tools.txt (line 43))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting charset-normalizer==3.1.0 (from -r requirements/tools.txt (line 37))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading codespell-2.2.5-py3-none-any.whl (242 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 242.7/242.7 kB 16.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading charset_normalizer-3.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (199 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.3/199.3 kB 17.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting colorama==0.4.6 (from -r requirements/tools.txt (line 45))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting click==8.1.3 (from -r requirements/tools.txt (line 39))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.6/96.6 kB 2.5 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting com2ann==0.3.0 (from -r requirements/tools.txt (line 47))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading com2ann-0.3.0-py3-none-any.whl (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting codespell==2.2.5 (from -r requirements/tools.txt (line 43))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading codespell-2.2.5-py3-none-any.whl (242 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 242.7/242.7 kB 2.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting colorama==0.4.6 (from -r requirements/tools.txt (line 45))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting com2ann==0.3.0 (from -r requirements/tools.txt (line 47))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading com2ann-0.3.0-py3-none-any.whl (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting coverage==7.2.7 (from -r requirements/tools.txt (line 49))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading coverage-7.2.7-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (228 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 228.7/228.7 kB 3.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting coverage==7.2.7 (from -r requirements/tools.txt (line 49))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading coverage-7.2.7-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (228 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 228.7/228.7 kB 25.9 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting cryptography==41.0.1 (from -r requirements/tools.txt (line 51))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.3/4.3 MB 21.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting decorator==5.1.1 (from -r requirements/tools.txt (line 56))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading decorator-5.1.1-py3-none-any.whl (9.1 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting cryptography==41.0.1 (from -r requirements/tools.txt (line 51))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting distlib==0.3.6 (from -r requirements/tools.txt (line 58))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Using cached distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.3/4.3 MB 35.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting decorator==5.1.1 (from -r requirements/tools.txt (line 56))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading decorator-5.1.1-py3-none-any.whl (9.1 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting django==4.2.2 (from -r requirements/tools.txt (line 60))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading Django-4.2.2-py3-none-any.whl (8.0 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting distlib==0.3.6 (from -r requirements/tools.txt (line 58))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Using cached distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 8.0/8.0 MB 36.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting docutils==0.18.1 (from -r requirements/tools.txt (line 62))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading docutils-0.18.1-py2.py3-none-any.whl (570 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 570.0/570.0 kB 20.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting django==4.2.2 (from -r requirements/tools.txt (line 60))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading Django-4.2.2-py3-none-any.whl (8.0 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting dpcontracts==0.6.0 (from -r requirements/tools.txt (line 68))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading dpcontracts-0.6.0.tar.gz (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Preparing metadata (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 8.0/8.0 MB 45.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting docutils==0.18.1 (from -r requirements/tools.txt (line 62))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading docutils-0.18.1-py2.py3-none-any.whl (570 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 570.0/570.0 kB 26.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting dpcontracts==0.6.0 (from -r requirements/tools.txt (line 68))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading dpcontracts-0.6.0.tar.gz (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Preparing metadata (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Preparing metadata (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting exceptiongroup==1.1.1 (from -r requirements/tools.txt (line 70))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting executing==1.2.0 (from -r requirements/tools.txt (line 74))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading executing-1.2.0-py2.py3-none-any.whl (24 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting filelock==3.12.2 (from -r requirements/tools.txt (line 76))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Using cached filelock-3.12.2-py3-none-any.whl (10 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting idna==3.4 (from -r requirements/tools.txt (line 80))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 5.5 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting imagesize==1.4.1 (from -r requirements/tools.txt (line 82))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading imagesize-1.4.1-py2.py3-none-any.whl (8.8 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Preparing metadata (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting importlib-metadata==6.7.0 (from -r requirements/tools.txt (line 84))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting exceptiongroup==1.1.1 (from -r requirements/tools.txt (line 70))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting iniconfig==2.0.0 (from -r requirements/tools.txt (line 88))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting executing==1.2.0 (from -r requirements/tools.txt (line 74))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading executing-1.2.0-py2.py3-none-any.whl (24 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting filelock==3.12.2 (from -r requirements/tools.txt (line 76))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Using cached filelock-3.12.2-py3-none-any.whl (10 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting ipython==8.14.0 (from -r requirements/tools.txt (line 90))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading ipython-8.14.0-py3-none-any.whl (798 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting idna==3.4 (from -r requirements/tools.txt (line 80))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 798.7/798.7 kB 11.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 3.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting imagesize==1.4.1 (from -r requirements/tools.txt (line 82))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading imagesize-1.4.1-py2.py3-none-any.whl (8.8 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting isort==5.12.0 (from -r requirements/tools.txt (line 92))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading isort-5.12.0-py3-none-any.whl (91 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 91.2/91.2 kB 1.5 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting importlib-metadata==6.7.0 (from -r requirements/tools.txt (line 84))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting jaraco-classes==3.2.3 (from -r requirements/tools.txt (line 94))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting iniconfig==2.0.0 (from -r requirements/tools.txt (line 88))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting jedi==0.18.2 (from -r requirements/tools.txt (line 96))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading jedi-0.18.2-py2.py3-none-any.whl (1.6 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.6/1.6 MB 16.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting ipython==8.14.0 (from -r requirements/tools.txt (line 90))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading ipython-8.14.0-py3-none-any.whl (798 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 798.7/798.7 kB 16.4 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting jeepney==0.8.0 (from -r requirements/tools.txt (line 98))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.4/48.4 kB 1.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting isort==5.12.0 (from -r requirements/tools.txt (line 92))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading isort-5.12.0-py3-none-any.whl (91 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting jinja2==3.1.2 (from -r requirements/tools.txt (line 102))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 91.2/91.2 kB 3.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 7.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting jaraco-classes==3.2.3 (from -r requirements/tools.txt (line 94))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting keyring==24.2.0 (from -r requirements/tools.txt (line 104))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading keyring-24.2.0-py3-none-any.whl (37 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting jedi==0.18.2 (from -r requirements/tools.txt (line 96))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading jedi-0.18.2-py2.py3-none-any.whl (1.6 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting lark==1.1.5 (from -r requirements/tools.txt (line 106))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading lark-1.1.5-py3-none-any.whl (107 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.6/1.6 MB 12.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 108.0/108.0 kB 5.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting jeepney==0.8.0 (from -r requirements/tools.txt (line 98))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.4/48.4 kB 469.4 kB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting libcst==1.0.1 (from -r requirements/tools.txt (line 108))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading libcst-1.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.9 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting jinja2==3.1.2 (from -r requirements/tools.txt (line 102))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 2.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.9/2.9 MB 25.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting markdown-it-py==3.0.0 (from -r requirements/tools.txt (line 112))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading markdown_it_py-3.0.0-py3-none-any.whl (87 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting keyring==24.2.0 (from -r requirements/tools.txt (line 104))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading keyring-24.2.0-py3-none-any.whl (37 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 87.5/87.5 kB 3.7 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting lark==1.1.5 (from -r requirements/tools.txt (line 106))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading lark-1.1.5-py3-none-any.whl (107 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting markupsafe==2.1.3 (from -r requirements/tools.txt (line 114))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 108.0/108.0 kB 265.0 kB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting matplotlib-inline==0.1.6 (from -r requirements/tools.txt (line 116))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading matplotlib_inline-0.1.6-py3-none-any.whl (9.4 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting mdurl==0.1.2 (from -r requirements/tools.txt (line 118))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting libcst==1.0.1 (from -r requirements/tools.txt (line 108))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading libcst-1.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.9 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting more-itertools==9.1.0 (from -r requirements/tools.txt (line 120))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 54.2/54.2 kB 2.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting mypy==1.4.0 (from -r requirements/tools.txt (line 122))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading mypy-1.4.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.0 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.9/2.9 MB 1.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting markdown-it-py==3.0.0 (from -r requirements/tools.txt (line 112))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading markdown_it_py-3.0.0-py3-none-any.whl (87 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 87.5/87.5 kB 806.6 kB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.0/12.0 MB 7.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting markupsafe==2.1.3 (from -r requirements/tools.txt (line 114))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting matplotlib-inline==0.1.6 (from -r requirements/tools.txt (line 116))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting mypy-extensions==1.0.0 (from -r requirements/tools.txt (line 124))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading matplotlib_inline-0.1.6-py3-none-any.whl (9.4 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting mdurl==0.1.2 (from -r requirements/tools.txt (line 118))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting nodeenv==1.8.0 (from -r requirements/tools.txt (line 129))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading nodeenv-1.8.0-py2.py3-none-any.whl (22 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting more-itertools==9.1.0 (from -r requirements/tools.txt (line 120))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting packaging==23.1 (from -r requirements/tools.txt (line 131))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 54.2/54.2 kB 1.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 3.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting parso==0.8.3 (from -r requirements/tools.txt (line 139))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading parso-0.8.3-py2.py3-none-any.whl (100 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100.8/100.8 kB 2.9 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pathspec==0.11.1 (from -r requirements/tools.txt (line 141))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pexpect==4.8.0 (from -r requirements/tools.txt (line 143))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting mypy==1.4.0 (from -r requirements/tools.txt (line 122))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading mypy-1.4.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.0 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 59.0/59.0 kB 3.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pickleshare==0.7.5 (from -r requirements/tools.txt (line 145))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pip-tools==6.13.0 (from -r requirements/tools.txt (line 147))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pip_tools-6.13.0-py3-none-any.whl (53 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 53.2/53.2 kB 334.9 kB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.0/12.0 MB 21.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pkginfo==1.9.6 (from -r requirements/tools.txt (line 149))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting mypy-extensions==1.0.0 (from -r requirements/tools.txt (line 124))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting platformdirs==3.8.0 (from -r requirements/tools.txt (line 151))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Using cached platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting nodeenv==1.8.0 (from -r requirements/tools.txt (line 129))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pluggy==1.2.0 (from -r requirements/tools.txt (line 156))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading nodeenv-1.8.0-py2.py3-none-any.whl (22 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting packaging==23.1 (from -r requirements/tools.txt (line 131))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 5.9 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting prompt-toolkit==3.0.38 (from -r requirements/tools.txt (line 160))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading prompt_toolkit-3.0.38-py3-none-any.whl (385 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 385.8/385.8 kB 6.7 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting parso==0.8.3 (from -r requirements/tools.txt (line 139))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading parso-0.8.3-py2.py3-none-any.whl (100 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100.8/100.8 kB 1.9 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting ptyprocess==0.7.0 (from -r requirements/tools.txt (line 162))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pathspec==0.11.1 (from -r requirements/tools.txt (line 141))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pure-eval==0.2.2 (from -r requirements/tools.txt (line 164))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pure_eval-0.2.2-py3-none-any.whl (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pexpect==4.8.0 (from -r requirements/tools.txt (line 143))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 59.0/59.0 kB 2.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pycparser==2.21 (from -r requirements/tools.txt (line 166))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pickleshare==0.7.5 (from -r requirements/tools.txt (line 145))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 118.7/118.7 kB 4.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pyflakes==3.0.1 (from -r requirements/tools.txt (line 168))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 2.4 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pip-tools==6.13.0 (from -r requirements/tools.txt (line 147))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pip_tools-6.13.0-py3-none-any.whl (53 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pygments==2.15.1 (from -r requirements/tools.txt (line 170))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 53.2/53.2 kB 2.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 18.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pkginfo==1.9.6 (from -r requirements/tools.txt (line 149))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pyproject-api==1.5.2 (from -r requirements/tools.txt (line 176))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pyproject_api-1.5.2-py3-none-any.whl (12 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting platformdirs==3.8.0 (from -r requirements/tools.txt (line 151))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Using cached platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pyproject-hooks==1.0.0 (from -r requirements/tools.txt (line 178))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pluggy==1.2.0 (from -r requirements/tools.txt (line 156))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pyright==1.1.315 (from -r requirements/tools.txt (line 180))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pyright-1.1.315-py3-none-any.whl (17 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting prompt-toolkit==3.0.38 (from -r requirements/tools.txt (line 160))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading prompt_toolkit-3.0.38-py3-none-any.whl (385 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 385.8/385.8 kB 7.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting ptyprocess==0.7.0 (from -r requirements/tools.txt (line 162))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pytest==7.4.0 (from -r requirements/tools.txt (line 182))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 32.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pure-eval==0.2.2 (from -r requirements/tools.txt (line 164))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pure_eval-0.2.2-py3-none-any.whl (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting python-dateutil==2.8.2 (from -r requirements/tools.txt (line 184))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pycparser==2.21 (from -r requirements/tools.txt (line 166))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 118.7/118.7 kB 4.5 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 4.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pyflakes==3.0.1 (from -r requirements/tools.txt (line 168))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 2.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pygments==2.15.1 (from -r requirements/tools.txt (line 170))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pyupgrade==3.7.0 (from -r requirements/tools.txt (line 186))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading pyupgrade-3.7.0-py2.py3-none-any.whl (58 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 12.4 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 58.3/58.3 kB 903.3 kB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pyproject-api==1.5.2 (from -r requirements/tools.txt (line 176))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pyproject_api-1.5.2-py3-none-any.whl (12 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pyproject-hooks==1.0.0 (from -r requirements/tools.txt (line 178))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting pyyaml==6.0 (from -r requirements/tools.txt (line 188))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading PyYAML-6.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (682 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 682.2/682.2 kB 27.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting readme-renderer==40.0 (from -r requirements/tools.txt (line 190))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading readme_renderer-40.0-py3-none-any.whl (14 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pyright==1.1.315 (from -r requirements/tools.txt (line 180))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pyright-1.1.315-py3-none-any.whl (17 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting requests==2.31.0 (from -r requirements/tools.txt (line 192))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 11.4 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting requests-toolbelt==1.0.0 (from -r requirements/tools.txt (line 198))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 54.5/54.5 kB 1.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pytest==7.4.0 (from -r requirements/tools.txt (line 182))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting restructuredtext-lint==1.4.0 (from -r requirements/tools.txt (line 200))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading restructuredtext_lint-1.4.0.tar.gz (16 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 855.7 kB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Preparing metadata (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting python-dateutil==2.8.2 (from -r requirements/tools.txt (line 184))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 3.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Preparing metadata (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pyupgrade==3.7.0 (from -r requirements/tools.txt (line 186))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading pyupgrade-3.7.0-py2.py3-none-any.whl (58 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting rfc3986==2.0.0 (from -r requirements/tools.txt (line 202))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading rfc3986-2.0.0-py2.py3-none-any.whl (31 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 58.3/58.3 kB 933.8 kB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting pyyaml==6.0 (from -r requirements/tools.txt (line 188))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading PyYAML-6.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (682 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 682.2/682.2 kB 10.4 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting rich==13.4.2 (from -r requirements/tools.txt (line 204))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading rich-13.4.2-py3-none-any.whl (239 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 239.4/239.4 kB 12.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting readme-renderer==40.0 (from -r requirements/tools.txt (line 190))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading readme_renderer-40.0-py3-none-any.whl (14 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting requests==2.31.0 (from -r requirements/tools.txt (line 192))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 3.5 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting requests-toolbelt==1.0.0 (from -r requirements/tools.txt (line 198))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 54.5/54.5 kB 4.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting restructuredtext-lint==1.4.0 (from -r requirements/tools.txt (line 200))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading restructuredtext_lint-1.4.0.tar.gz (16 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Preparing metadata (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Preparing metadata (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting rfc3986==2.0.0 (from -r requirements/tools.txt (line 202))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading rfc3986-2.0.0-py2.py3-none-any.whl (31 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting rich==13.4.2 (from -r requirements/tools.txt (line 204))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading rich-13.4.2-py3-none-any.whl (239 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 239.4/239.4 kB 12.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting ruff==0.0.275 (from -r requirements/tools.txt (line 206))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading ruff-0.0.275-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.4 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.4/5.4 MB 38.7 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting secretstorage==3.3.3 (from -r requirements/tools.txt (line 208))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting shed==2023.5.2 (from -r requirements/tools.txt (line 210))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading shed-2023.5.2-py3-none-any.whl (30 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting six==1.16.0 (from -r requirements/tools.txt (line 212))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting snowballstemmer==2.2.0 (from -r requirements/tools.txt (line 217))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading snowballstemmer-2.2.0-py2.py3-none-any.whl (93 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 93.0/93.0 kB 3.9 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sortedcontainers==2.4.0 (from -r requirements/tools.txt (line 219))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting soupsieve==2.4.1 (from -r requirements/tools.txt (line 221))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sphinx==6.2.1 (from -r requirements/tools.txt (line 223))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sphinx-6.2.1-py3-none-any.whl (3.0 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting ruff==0.0.275 (from -r requirements/tools.txt (line 206))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading ruff-0.0.275-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.4 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.0/3.0 MB 29.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.4/5.4 MB 30.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sphinx-codeautolink==0.15.0 (from -r requirements/tools.txt (line 230))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sphinx_codeautolink-0.15.0-py3-none-any.whl (24 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting secretstorage==3.3.3 (from -r requirements/tools.txt (line 208))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting shed==2023.5.2 (from -r requirements/tools.txt (line 210))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading shed-2023.5.2-py3-none-any.whl (30 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sphinx-hoverxref==1.3.0 (from -r requirements/tools.txt (line 232))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sphinx_hoverxref-1.3.0-py2.py3-none-any.whl (32 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting six==1.16.0 (from -r requirements/tools.txt (line 212))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sphinx-rtd-theme==1.2.2 (from -r requirements/tools.txt (line 234))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sphinx_rtd_theme-1.2.2-py2.py3-none-any.whl (2.8 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting snowballstemmer==2.2.0 (from -r requirements/tools.txt (line 217))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading snowballstemmer-2.2.0-py2.py3-none-any.whl (93 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.8/2.8 MB 30.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 93.0/93.0 kB 12.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sortedcontainers==2.4.0 (from -r requirements/tools.txt (line 219))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sphinx-selective-exclude==1.0.3 (from -r requirements/tools.txt (line 236))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting soupsieve==2.4.1 (from -r requirements/tools.txt (line 221))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sphinx_selective_exclude-1.0.3.tar.gz (7.2 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Preparing metadata (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sphinx==6.2.1 (from -r requirements/tools.txt (line 223))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sphinx-6.2.1-py3-none-any.whl (3.0 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Preparing metadata (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.0/3.0 MB 16.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sphinxcontrib-applehelp==1.0.4 (from -r requirements/tools.txt (line 238))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sphinxcontrib_applehelp-1.0.4-py3-none-any.whl (120 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 120.6/120.6 kB 1.9 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sphinx-codeautolink==0.15.0 (from -r requirements/tools.txt (line 230))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sphinxcontrib-devhelp==1.0.2 (from -r requirements/tools.txt (line 240))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sphinx_codeautolink-0.15.0-py3-none-any.whl (24 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sphinxcontrib_devhelp-1.0.2-py2.py3-none-any.whl (84 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 84.7/84.7 kB 3.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sphinxcontrib-htmlhelp==2.0.1 (from -r requirements/tools.txt (line 242))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sphinx-hoverxref==1.3.0 (from -r requirements/tools.txt (line 232))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sphinxcontrib_htmlhelp-2.0.1-py3-none-any.whl (99 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sphinx_hoverxref-1.3.0-py2.py3-none-any.whl (32 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 99.8/99.8 kB 2.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sphinxcontrib-jquery==4.1 (from -r requirements/tools.txt (line 244))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sphinxcontrib_jquery-4.1-py2.py3-none-any.whl (121 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sphinx-rtd-theme==1.2.2 (from -r requirements/tools.txt (line 234))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 121.1/121.1 kB 5.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sphinx_rtd_theme-1.2.2-py2.py3-none-any.whl (2.8 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sphinxcontrib-jsmath==1.0.1 (from -r requirements/tools.txt (line 248))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl (5.1 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.8/2.8 MB 22.9 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sphinx-selective-exclude==1.0.3 (from -r requirements/tools.txt (line 236))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sphinxcontrib-qthelp==1.0.3 (from -r requirements/tools.txt (line 250))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sphinxcontrib_qthelp-1.0.3-py2.py3-none-any.whl (90 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sphinx_selective_exclude-1.0.3.tar.gz (7.2 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 90.6/90.6 kB 4.9 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Preparing metadata (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sphinxcontrib-serializinghtml==1.1.5 (from -r requirements/tools.txt (line 252))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sphinxcontrib_serializinghtml-1.1.5-py2.py3-none-any.whl (94 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 94.0/94.0 kB 8.5 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting sqlparse==0.4.4 (from -r requirements/tools.txt (line 254))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading sqlparse-0.4.4-py3-none-any.whl (41 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.2/41.2 kB 1.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Successfully installed async-timeout-4.0.2 attrs-23.1.0 black-23.3.0 click-8.1.3 coverage-7.2.7 dpcontracts-0.6.0 exceptiongroup-1.1.1 execnet-1.9.0 fakeredis-2.15.0 iniconfig-2.0.0 lark-1.1.5 libcst-1.0.1 mypy-extensions-1.0.0 numpy-1.25.0 packaging-23.1 pandas-2.0.2 pathspec-0.11.1 pexpect-4.8.0 platformdirs-3.8.0 pluggy-1.2.0 ptyprocess-0.7.0 pytest-7.4.0 pytest-xdist-3.3.1 python-dateutil-2.8.2 pytz-2023.3 pyyaml-6.0 redis-4.5.5 six-1.16.0 sortedcontainers-2.4.0 tomli-2.0.1 typing-extensions-4.6.3 typing-inspect-0.9.0 tzdata-2023.3\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | [notice] A new release of pip is available: 21.1.3 -> 23.1.2\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | [notice] To update, run: pip install --upgrade pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting stack-data==0.6.2 (from -r requirements/tools.txt (line 256))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading stack_data-0.6.2-py3-none-any.whl (24 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Preparing metadata (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting tokenize-rt==5.1.0 (from -r requirements/tools.txt (line 258))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sphinxcontrib-applehelp==1.0.4 (from -r requirements/tools.txt (line 238))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading tokenize_rt-5.1.0-py2.py3-none-any.whl (5.8 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sphinxcontrib_applehelp-1.0.4-py3-none-any.whl (120 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 120.6/120.6 kB 2.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting tomli==2.0.1 (from -r requirements/tools.txt (line 260))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sphinxcontrib-devhelp==1.0.2 (from -r requirements/tools.txt (line 240))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sphinxcontrib_devhelp-1.0.2-py2.py3-none-any.whl (84 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 84.7/84.7 kB 15.1 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sphinxcontrib-htmlhelp==2.0.1 (from -r requirements/tools.txt (line 242))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sphinxcontrib_htmlhelp-2.0.1-py3-none-any.whl (99 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 99.8/99.8 kB 4.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sphinxcontrib-jquery==4.1 (from -r requirements/tools.txt (line 244))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sphinxcontrib_jquery-4.1-py2.py3-none-any.whl (121 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting tox==4.6.3 (from -r requirements/tools.txt (line 270))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading tox-4.6.3-py3-none-any.whl (152 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 121.1/121.1 kB 2.5 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 152.2/152.2 kB 17.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sphinxcontrib-jsmath==1.0.1 (from -r requirements/tools.txt (line 248))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl (5.1 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting traitlets==5.9.0 (from -r requirements/tools.txt (line 272))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading traitlets-5.9.0-py3-none-any.whl (117 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sphinxcontrib-qthelp==1.0.3 (from -r requirements/tools.txt (line 250))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 117.4/117.4 kB 7.9 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sphinxcontrib_qthelp-1.0.3-py2.py3-none-any.whl (90 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 90.6/90.6 kB 1.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting twine==4.0.2 (from -r requirements/tools.txt (line 276))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading twine-4.0.2-py3-none-any.whl (36 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sphinxcontrib-serializinghtml==1.1.5 (from -r requirements/tools.txt (line 252))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sphinxcontrib_serializinghtml-1.1.5-py2.py3-none-any.whl (94 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 94.0/94.0 kB 5.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting sqlparse==0.4.4 (from -r requirements/tools.txt (line 254))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading sqlparse-0.4.4-py3-none-any.whl (41 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting types-click==7.1.8 (from -r requirements/tools.txt (line 278))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.2/41.2 kB 1.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading types_click-7.1.8-py3-none-any.whl (12 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting stack-data==0.6.2 (from -r requirements/tools.txt (line 256))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading stack_data-0.6.2-py3-none-any.whl (24 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting types-pkg-resources==0.1.3 (from -r requirements/tools.txt (line 280))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading types_pkg_resources-0.1.3-py2.py3-none-any.whl (4.8 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Processing ./hypothesis-python\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Preparing metadata (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting tokenize-rt==5.1.0 (from -r requirements/tools.txt (line 258))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading tokenize_rt-5.1.0-py2.py3-none-any.whl (5.8 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting tomli==2.0.1 (from -r requirements/tools.txt (line 260))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting types-pyopenssl==23.2.0.1 (from -r requirements/tools.txt (line 282))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading types_pyOpenSSL-23.2.0.1-py3-none-any.whl (7.1 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting tox==4.6.3 (from -r requirements/tools.txt (line 270))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting types-pytz==2023.3.0.0 (from -r requirements/tools.txt (line 284))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading types_pytz-2023.3.0.0-py3-none-any.whl (4.7 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading tox-4.6.3-py3-none-any.whl (152 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Preparing metadata (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 152.2/152.2 kB 12.6 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: attrs>=19.2.0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (23.1.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: sortedcontainers<3.0.0,>=2.1.0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (2.4.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: exceptiongroup>=1.0.0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (1.1.1)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: black>=19.10b0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (23.3.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: click>=7.0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (8.1.3)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting types-redis==4.5.5.2 (from -r requirements/tools.txt (line 286))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading types_redis-4.5.5.2-py3-none-any.whl (56 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 56.9/56.9 kB 3.0 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting traitlets==5.9.0 (from -r requirements/tools.txt (line 272))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading traitlets-5.9.0-py3-none-any.whl (117 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting typing-extensions==4.6.3 (from -r requirements/tools.txt (line 288))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 117.4/117.4 kB 1.7 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting typing-inspect==0.9.0 (from -r requirements/tools.txt (line 295))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading typing_inspect-0.9.0-py3-none-any.whl (8.8 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting twine==4.0.2 (from -r requirements/tools.txt (line 276))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting django>=3.2 (from hypothesis==6.80.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading twine-4.0.2-py3-none-any.whl (36 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading Django-4.2.2-py3-none-any.whl (8.0 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting types-click==7.1.8 (from -r requirements/tools.txt (line 278))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading types_click-7.1.8-py3-none-any.whl (12 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting urllib3==2.0.3 (from -r requirements/tools.txt (line 297))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 2.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting types-pkg-resources==0.1.3 (from -r requirements/tools.txt (line 280))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading types_pkg_resources-0.1.3-py2.py3-none-any.whl (4.8 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 8.0/8.0 MB 37.8 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting types-pyopenssl==23.2.0.1 (from -r requirements/tools.txt (line 282))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading types_pyOpenSSL-23.2.0.1-py3-none-any.whl (7.1 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: dpcontracts>=0.4 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (0.6.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: lark>=0.10.1 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (1.1.5)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: libcst>=0.3.16 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (1.0.1)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: numpy>=1.17.3 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (1.25.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: pandas>=1.1 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (2.0.2)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: pytest>=4.6 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (7.4.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: python-dateutil>=1.4 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (2.8.2)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: pytz>=2014.1 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (2023.3)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: redis>=3.0.0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from hypothesis==6.80.0) (4.5.5)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting types-pytz==2023.3.0.0 (from -r requirements/tools.txt (line 284))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting virtualenv==20.23.1 (from -r requirements/tools.txt (line 301))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading types_pytz-2023.3.0.0-py3-none-any.whl (4.7 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Using cached virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting wcwidth==0.2.6 (from -r requirements/tools.txt (line 303))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting rich>=9.0.0 (from hypothesis==6.80.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading wcwidth-0.2.6-py2.py3-none-any.whl (29 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading rich-13.4.2-py3-none-any.whl (239 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting types-redis==4.5.5.2 (from -r requirements/tools.txt (line 286))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading types_redis-4.5.5.2-py3-none-any.whl (56 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 56.9/56.9 kB 1.7 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 239.4/239.4 kB 4.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting webencodings==0.5.1 (from -r requirements/tools.txt (line 305))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Requirement already satisfied: wheel==0.40.0 in /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages (from -r requirements/tools.txt (line 307)) (0.40.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting typing-extensions==4.6.3 (from -r requirements/tools.txt (line 288))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: mypy-extensions>=0.4.3 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from black>=19.10b0->hypothesis==6.80.0) (1.0.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: packaging>=22.0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from black>=19.10b0->hypothesis==6.80.0) (23.1)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: pathspec>=0.9.0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from black>=19.10b0->hypothesis==6.80.0) (0.11.1)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: platformdirs>=2 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from black>=19.10b0->hypothesis==6.80.0) (3.8.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: tomli>=1.1.0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from black>=19.10b0->hypothesis==6.80.0) (2.0.1)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: typing-extensions>=3.10.0.0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from black>=19.10b0->hypothesis==6.80.0) (4.6.3)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting zipp==3.15.0 (from -r requirements/tools.txt (line 309))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Requirement already satisfied: pip==23.1.2 in /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages (from -r requirements/tools.txt (line 313)) (23.1.2)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting typing-inspect==0.9.0 (from -r requirements/tools.txt (line 295))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading typing_inspect-0.9.0-py3-none-any.whl (8.8 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting asgiref<4,>=3.6.0 (from django>=3.2->hypothesis==6.80.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading asgiref-3.7.2-py3-none-any.whl (24 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting sqlparse>=0.3.1 (from django>=3.2->hypothesis==6.80.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting urllib3==2.0.3 (from -r requirements/tools.txt (line 297))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading sqlparse-0.4.4-py3-none-any.whl (41 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.2/41.2 kB 2.3 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 9.2 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: typing-inspect>=0.4.0 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from libcst>=0.3.16->hypothesis==6.80.0) (0.9.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: pyyaml>=5.2 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from libcst>=0.3.16->hypothesis==6.80.0) (6.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting virtualenv==20.23.1 (from -r requirements/tools.txt (line 301))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Using cached virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: tzdata>=2022.1 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from pandas>=1.1->hypothesis==6.80.0) (2023.3)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: iniconfig in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from pytest>=4.6->hypothesis==6.80.0) (2.0.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: pluggy<2.0,>=0.12 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from pytest>=4.6->hypothesis==6.80.0) (1.2.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting wcwidth==0.2.6 (from -r requirements/tools.txt (line 303))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: six>=1.5 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from python-dateutil>=1.4->hypothesis==6.80.0) (1.16.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading wcwidth-0.2.6-py2.py3-none-any.whl (29 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Requirement already satisfied: async-timeout>=4.0.2 in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (from redis>=3.0.0->hypothesis==6.80.0) (4.0.2)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting webencodings==0.5.1 (from -r requirements/tools.txt (line 305))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Collecting setuptools==68.0.0 (from -r requirements/tools.txt (line 315))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Using cached setuptools-68.0.0-py3-none-any.whl (804 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Requirement already satisfied: wheel==0.40.0 in /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages (from -r requirements/tools.txt (line 307)) (0.40.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting markdown-it-py>=2.2.0 (from rich>=9.0.0->hypothesis==6.80.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading markdown_it_py-3.0.0-py3-none-any.whl (87 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 87.5/87.5 kB 8.4 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting zipp==3.15.0 (from -r requirements/tools.txt (line 309))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Requirement already satisfied: pip==23.1.2 in /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages (from -r requirements/tools.txt (line 313)) (23.1.2)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting pygments<3.0.0,>=2.13.0 (from rich>=9.0.0->hypothesis==6.80.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 11.5 MB/s eta 0:00:00\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Collecting mdurl~=0.1 (from markdown-it-py>=2.2.0->rich>=9.0.0->hypothesis==6.80.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Downloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Building wheels for collected packages: hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Building wheel for hypothesis (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Collecting setuptools==68.0.0 (from -r requirements/tools.txt (line 315))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Using cached setuptools-68.0.0-py3-none-any.whl (804 kB)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Building wheel for hypothesis (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Created wheel for hypothesis: filename=hypothesis-6.80.0-py3-none-any.whl size=414824 sha256=f7bc0a0ee2b6f7a0b0fc13fa3ad9335d726cd6219b1ef82f2c1b6a724052e5ec\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/55/9a/53/59b3c0f2b18e8bd487b7033f60cfc43df3e6e6b000d283494e\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Successfully built hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Installing collected packages: sqlparse, pygments, mdurl, hypothesis, asgiref, markdown-it-py, django, rich\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Building wheels for collected packages: dpcontracts, restructuredtext-lint, sphinx-selective-exclude\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Building wheel for dpcontracts (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Building wheels for collected packages: dpcontracts, restructuredtext-lint, sphinx-selective-exclude\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Building wheel for dpcontracts (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Building wheel for dpcontracts (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Created wheel for dpcontracts: filename=dpcontracts-0.6.0-py3-none-any.whl size=13082 sha256=dd45c8b6a16ecd039f4cab61a807f2a21c8d8efaa65d47c2e6469a734d78c0ac\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Stored in directory: /home/runneradmin/.cache/hypothesis-build-runtimes/.cache/pip/wheels/07/01/62/f53ae28e211880f4eae0849c369a86f7534db04477808bc64e\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Building wheel for restructuredtext-lint (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Building wheel for restructuredtext-lint (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Created wheel for restructuredtext-lint: filename=restructuredtext_lint-1.4.0-py3-none-any.whl size=13775 sha256=12e5b7a3b8552339f6d4827ba9b14b9cad950fe890af9b91526d13bec1bd29a8\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Stored in directory: /home/runneradmin/.cache/hypothesis-build-runtimes/.cache/pip/wheels/71/a4/54/aa2ec32c89d9e1b01b705122c5f1242d9971a90740652ef858\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Building wheel for sphinx-selective-exclude (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Building wheel for dpcontracts (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Created wheel for dpcontracts: filename=dpcontracts-0.6.0-py3-none-any.whl size=13082 sha256=dd45c8b6a16ecd039f4cab61a807f2a21c8d8efaa65d47c2e6469a734d78c0ac\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Stored in directory: /home/runneradmin/.cache/hypothesis-build-runtimes/.cache/pip/wheels/07/01/62/f53ae28e211880f4eae0849c369a86f7534db04477808bc64e\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Building wheel for restructuredtext-lint (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Building wheel for sphinx-selective-exclude (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Created wheel for sphinx-selective-exclude: filename=sphinx_selective_exclude-1.0.3-py2.py3-none-any.whl size=8646 sha256=35431ec9cb279554247492ad7c352e6ebba305fba3a8877e128bf798f506a7f4\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Stored in directory: /home/runneradmin/.cache/hypothesis-build-runtimes/.cache/pip/wheels/9d/b5/38/685123575b410d9b635486e0cf34a6d8b81489c37b2bbb2d88\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Successfully built dpcontracts restructuredtext-lint sphinx-selective-exclude\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Building wheel for restructuredtext-lint (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Created wheel for restructuredtext-lint: filename=restructuredtext_lint-1.4.0-py3-none-any.whl size=13775 sha256=12e5b7a3b8552339f6d4827ba9b14b9cad950fe890af9b91526d13bec1bd29a8\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Stored in directory: /home/runneradmin/.cache/hypothesis-build-runtimes/.cache/pip/wheels/71/a4/54/aa2ec32c89d9e1b01b705122c5f1242d9971a90740652ef858\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Building wheel for sphinx-selective-exclude (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Building wheel for sphinx-selective-exclude (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Created wheel for sphinx-selective-exclude: filename=sphinx_selective_exclude-1.0.3-py2.py3-none-any.whl size=8646 sha256=35431ec9cb279554247492ad7c352e6ebba305fba3a8877e128bf798f506a7f4\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Stored in directory: /home/runneradmin/.cache/hypothesis-build-runtimes/.cache/pip/wheels/9d/b5/38/685123575b410d9b635486e0cf34a6d8b81489c37b2bbb2d88\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Successfully built dpcontracts restructuredtext-lint sphinx-selective-exclude\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Installing collected packages: webencodings, wcwidth, types-pytz, types-pkg-resources, types-click, sphinx-selective-exclude, sortedcontainers, snowballstemmer, pure-eval, ptyprocess, pickleshare, lark, executing, distlib, backcall, zipp, urllib3, typing-extensions, traitlets, tomli, tokenize-rt, sqlparse, sphinxcontrib-serializinghtml, sphinxcontrib-qthelp, sphinxcontrib-jsmath, sphinxcontrib-htmlhelp, sphinxcontrib-devhelp, sphinxcontrib-applehelp, soupsieve, six, setuptools, ruff, rfc3986, pyyaml, pygments, pyflakes, pycparser, prompt-toolkit, pluggy, platformdirs, pkginfo, pexpect, pathspec, parso, packaging, mypy-extensions, more-itertools, mdurl, markupsafe, jeepney, isort, iniconfig, imagesize, idna, filelock, exceptiongroup, dpcontracts, docutils, decorator, coverage, com2ann, colorama, codespell, click, charset-normalizer, chardet, certifi, cachetools, babel, attrs, alabaster, virtualenv, typing-inspect, restructuredtext-lint, requests, pyupgrade, python-dateutil, pytest, pyproject-hooks, pyproject-api, nodeenv, mypy, matplotlib-inline, markdown-it-py, jinja2, jedi, jaraco-classes, importlib-metadata, cffi, bleach, black, beautifulsoup4, autoflake, asttokens, asgiref, tox, stack-data, sphinx, rich, requests-toolbelt, readme-renderer, pyright, libcst, django, cryptography, build, types-pyopenssl, sphinxcontrib-jquery, sphinx-codeautolink, shed, secretstorage, pip-tools, ipython, types-redis, sphinx-rtd-theme, sphinx-hoverxref, keyring, twine\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Installing collected packages: webencodings, wcwidth, types-pytz, types-pkg-resources, types-click, sphinx-selective-exclude, sortedcontainers, snowballstemmer, pure-eval, ptyprocess, pickleshare, lark, executing, distlib, backcall, zipp, urllib3, typing-extensions, traitlets, tomli, tokenize-rt, sqlparse, sphinxcontrib-serializinghtml, sphinxcontrib-qthelp, sphinxcontrib-jsmath, sphinxcontrib-htmlhelp, sphinxcontrib-devhelp, sphinxcontrib-applehelp, soupsieve, six, setuptools, ruff, rfc3986, pyyaml, pygments, pyflakes, pycparser, prompt-toolkit, pluggy, platformdirs, pkginfo, pexpect, pathspec, parso, packaging, mypy-extensions, more-itertools, mdurl, markupsafe, jeepney, isort, iniconfig, imagesize, idna, filelock, exceptiongroup, dpcontracts, docutils, decorator, coverage, com2ann, colorama, codespell, click, charset-normalizer, chardet, certifi, cachetools, babel, attrs, alabaster, virtualenv, typing-inspect, restructuredtext-lint, requests, pyupgrade, python-dateutil, pytest, pyproject-hooks, pyproject-api, nodeenv, mypy, matplotlib-inline, markdown-it-py, jinja2, jedi, jaraco-classes, importlib-metadata, cffi, bleach, black, beautifulsoup4, autoflake, asttokens, asgiref, tox, stack-data, sphinx, rich, requests-toolbelt, readme-renderer, pyright, libcst, django, cryptography, build, types-pyopenssl, sphinxcontrib-jquery, sphinx-codeautolink, shed, secretstorage, pip-tools, ipython, types-redis, sphinx-rtd-theme, sphinx-hoverxref, keyring, twine\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Attempting uninstall: setuptools\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     Found existing installation: setuptools 67.8.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     Uninstalling setuptools-67.8.0:\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Successfully installed asgiref-3.7.2 django-4.2.2 hypothesis-6.80.0 markdown-it-py-3.0.0 mdurl-0.1.2 pygments-2.15.1 rich-13.4.2 sqlparse-0.4.4\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | [notice] A new release of pip is available: 21.1.3 -> 23.1.2\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | [notice] To update, run: pip install --upgrade pip\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |       Successfully uninstalled setuptools-67.8.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u2705  Success - Main Install dependencies\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win] \u2b50 Run Main Run tests\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   Attempting uninstall: setuptools\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |     Found existing installation: setuptools 67.8.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |     Uninstalling setuptools-67.8.0:\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |       Successfully uninstalled setuptools-67.8.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Successfully installed alabaster-0.7.13 asgiref-3.7.2 asttokens-2.2.1 attrs-23.1.0 autoflake-2.1.1 babel-2.12.1 backcall-0.2.0 beautifulsoup4-4.12.2 black-23.3.0 bleach-6.0.0 build-0.10.0 cachetools-5.3.1 certifi-2023.5.7 cffi-1.15.1 chardet-5.1.0 charset-normalizer-3.1.0 click-8.1.3 codespell-2.2.5 colorama-0.4.6 com2ann-0.3.0 coverage-7.2.7 cryptography-41.0.1 decorator-5.1.1 distlib-0.3.6 django-4.2.2 docutils-0.18.1 dpcontracts-0.6.0 exceptiongroup-1.1.1 executing-1.2.0 filelock-3.12.2 idna-3.4 imagesize-1.4.1 importlib-metadata-6.7.0 iniconfig-2.0.0 ipython-8.14.0 isort-5.12.0 jaraco-classes-3.2.3 jedi-0.18.2 jeepney-0.8.0 jinja2-3.1.2 keyring-24.2.0 lark-1.1.5 libcst-1.0.1 markdown-it-py-3.0.0 markupsafe-2.1.3 matplotlib-inline-0.1.6 mdurl-0.1.2 more-itertools-9.1.0 mypy-1.4.0 mypy-extensions-1.0.0 nodeenv-1.8.0 packaging-23.1 parso-0.8.3 pathspec-0.11.1 pexpect-4.8.0 pickleshare-0.7.5 pip-tools-6.13.0 pkginfo-1.9.6 platformdirs-3.8.0 pluggy-1.2.0 prompt-toolkit-3.0.38 ptyprocess-0.7.0 pure-eval-0.2.2 pycparser-2.21 pyflakes-3.0.1 pygments-2.15.1 pyproject-api-1.5.2 pyproject-hooks-1.0.0 pyright-1.1.315 pytest-7.4.0 python-dateutil-2.8.2 pyupgrade-3.7.0 pyyaml-6.0 readme-renderer-40.0 requests-2.31.0 requests-toolbelt-1.0.0 restructuredtext-lint-1.4.0 rfc3986-2.0.0 rich-13.4.2 ruff-0.0.275 secretstorage-3.3.3 setuptools-68.0.0 shed-2023.5.2 six-1.16.0 snowballstemmer-2.2.0 sortedcontainers-2.4.0 soupsieve-2.4.1 sphinx-6.2.1 sphinx-codeautolink-0.15.0 sphinx-hoverxref-1.3.0 sphinx-rtd-theme-1.2.2 sphinx-selective-exclude-1.0.3 sphinxcontrib-applehelp-1.0.4 sphinxcontrib-devhelp-1.0.2 sphinxcontrib-htmlhelp-2.0.1 sphinxcontrib-jquery-4.1 sphinxcontrib-jsmath-1.0.1 sphinxcontrib-qthelp-1.0.3 sphinxcontrib-serializinghtml-1.1.5 sqlparse-0.4.4 stack-data-0.6.2 tokenize-rt-5.1.0 tomli-2.0.1 tox-4.6.3 traitlets-5.9.0 twine-4.0.2 types-click-7.1.8 types-pkg-resources-0.1.3 types-pyopenssl-23.2.0.1 types-pytz-2023.3.0.0 types-redis-4.5.5.2 typing-extensions-4.6.3 typing-inspect-0.9.0 urllib3-2.0.3 virtualenv-20.23.1 wcwidth-0.2.6 webencodings-0.5.1 zipp-3.15.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Successfully installed alabaster-0.7.13 asgiref-3.7.2 asttokens-2.2.1 attrs-23.1.0 autoflake-2.1.1 babel-2.12.1 backcall-0.2.0 beautifulsoup4-4.12.2 black-23.3.0 bleach-6.0.0 build-0.10.0 cachetools-5.3.1 certifi-2023.5.7 cffi-1.15.1 chardet-5.1.0 charset-normalizer-3.1.0 click-8.1.3 codespell-2.2.5 colorama-0.4.6 com2ann-0.3.0 coverage-7.2.7 cryptography-41.0.1 decorator-5.1.1 distlib-0.3.6 django-4.2.2 docutils-0.18.1 dpcontracts-0.6.0 exceptiongroup-1.1.1 executing-1.2.0 filelock-3.12.2 idna-3.4 imagesize-1.4.1 importlib-metadata-6.7.0 iniconfig-2.0.0 ipython-8.14.0 isort-5.12.0 jaraco-classes-3.2.3 jedi-0.18.2 jeepney-0.8.0 jinja2-3.1.2 keyring-24.2.0 lark-1.1.5 libcst-1.0.1 markdown-it-py-3.0.0 markupsafe-2.1.3 matplotlib-inline-0.1.6 mdurl-0.1.2 more-itertools-9.1.0 mypy-1.4.0 mypy-extensions-1.0.0 nodeenv-1.8.0 packaging-23.1 parso-0.8.3 pathspec-0.11.1 pexpect-4.8.0 pickleshare-0.7.5 pip-tools-6.13.0 pkginfo-1.9.6 platformdirs-3.8.0 pluggy-1.2.0 prompt-toolkit-3.0.38 ptyprocess-0.7.0 pure-eval-0.2.2 pycparser-2.21 pyflakes-3.0.1 pygments-2.15.1 pyproject-api-1.5.2 pyproject-hooks-1.0.0 pyright-1.1.315 pytest-7.4.0 python-dateutil-2.8.2 pyupgrade-3.7.0 pyyaml-6.0 readme-renderer-40.0 requests-2.31.0 requests-toolbelt-1.0.0 restructuredtext-lint-1.4.0 rfc3986-2.0.0 rich-13.4.2 ruff-0.0.275 secretstorage-3.3.3 setuptools-68.0.0 shed-2023.5.2 six-1.16.0 snowballstemmer-2.2.0 sortedcontainers-2.4.0 soupsieve-2.4.1 sphinx-6.2.1 sphinx-codeautolink-0.15.0 sphinx-hoverxref-1.3.0 sphinx-rtd-theme-1.2.2 sphinx-selective-exclude-1.0.3 sphinxcontrib-applehelp-1.0.4 sphinxcontrib-devhelp-1.0.2 sphinxcontrib-htmlhelp-2.0.1 sphinxcontrib-jquery-4.1 sphinxcontrib-jsmath-1.0.1 sphinxcontrib-qthelp-1.0.3 sphinxcontrib-serializinghtml-1.1.5 sqlparse-0.4.4 stack-data-0.6.2 tokenize-rt-5.1.0 tomli-2.0.1 tox-4.6.3 traitlets-5.9.0 twine-4.0.2 types-click-7.1.8 types-pkg-resources-0.1.3 types-pyopenssl-23.2.0.1 types-pytz-2023.3.0.0 types-redis-4.5.5.2 typing-extensions-4.6.3 typing-inspect-0.9.0 urllib3-2.0.3 virtualenv-20.23.1 wcwidth-0.2.6 webencodings-0.5.1 zipp-3.15.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | + /tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01/bin/python -m hypothesistooling\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + /tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01/bin/python -m hypothesistooling\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Processing ./hypothesis-python\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Preparing metadata (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | +++ dirname /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts/ensure-python.sh\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ cd /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ pwd\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + HERE=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + source /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts/common.sh\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ set -o errexit\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ set -o nounset\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++++ dirname /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts/common.sh\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | +++ cd /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | +++ pwd\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ HERE=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | +++ git -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/scripts rev-parse --show-toplevel\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ ROOT=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export ROOT\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export BUILD_RUNTIMES=/home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ BUILD_RUNTIMES=/home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export BASE=/home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ BASE=/home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export PYENV=/home/runneradmin/.cache/hypothesis-build-runtimes/pyenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ PYENV=/home/runneradmin/.cache/hypothesis-build-runtimes/pyenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export SNAKEPIT=/home/runneradmin/.cache/hypothesis-build-runtimes/python-versions/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ SNAKEPIT=/home/runneradmin/.cache/hypothesis-build-runtimes/python-versions/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export XDG_CACHE_HOME=/home/runneradmin/.cache/hypothesis-build-runtimes/.cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ XDG_CACHE_HOME=/home/runneradmin/.cache/hypothesis-build-runtimes/.cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ export VIRTUALENVS=/tmp/.hypothesis-runtimes/virtualenvs/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ VIRTUALENVS=/tmp/.hypothesis-runtimes/virtualenvs/\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + VERSION=3.8.17\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ pythonloc 3.8.17\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ VERSION=3.8.17\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ echo /home/runneradmin/.cache/hypothesis-build-runtimes/python-versions//3.8.17\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + TARGET=/home/runneradmin/.cache/hypothesis-build-runtimes/python-versions//3.8.17\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + '[' '!' -e /home/runneradmin/.cache/hypothesis-build-runtimes/python-versions//3.8.17/bin/python ']'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + mkdir -p /home/runneradmin/.cache/hypothesis-build-runtimes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + LOCKFILE=/home/runneradmin/.cache/hypothesis-build-runtimes/.install-lockfile\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + true\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + mkdir /home/runneradmin/.cache/hypothesis-build-runtimes/.install-lockfile\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Successfully acquired installer.\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + echo 'Successfully acquired installer.'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + break\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + trap 'rm -rf $LOCKFILE' EXIT\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + '[' '!' -d /home/runneradmin/.cache/hypothesis-build-runtimes/pyenv/.git ']'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + rm -rf /home/runneradmin/.cache/hypothesis-build-runtimes/pyenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + git clone https://github.com/yyuu/pyenv.git /home/runneradmin/.cache/hypothesis-build-runtimes/pyenv\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Cloning into '/home/runneradmin/.cache/hypothesis-build-runtimes/pyenv'...\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Preparing metadata (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Requirement already satisfied: attrs>=19.2.0 in /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages (from hypothesis==6.80.0) (23.1.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Requirement already satisfied: sortedcontainers<3.0.0,>=2.1.0 in /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages (from hypothesis==6.80.0) (2.4.0)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Requirement already satisfied: exceptiongroup>=1.0.0 in /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages (from hypothesis==6.80.0) (1.1.1)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Building wheels for collected packages: hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Building wheel for hypothesis (setup.py): started\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[1m============================= test session starts ==============================\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | platform linux -- Python 3.9.6, pytest-7.4.0, pluggy-1.2.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | configfile: pytest.ini\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | plugins: xdist-3.3.1, hypothesis-6.80.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | created: 128/128 workers\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 128 workers [5193 items]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Building wheel for hypothesis (setup.py): finished with status 'done'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Created wheel for hypothesis: filename=hypothesis-6.80.0-py3-none-any.whl size=414824 sha256=5939cad9be29c306b777eaf6fac317705e4ebb53638010e5e8571eac866da117\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   Stored in directory: /home/runneradmin/.cache/hypothesis-build-runtimes/.cache/pip/wheels/15/1e/78/f17cfb692b8abfdf70269f9432039689657b30bf1f285fb4ff\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Successfully built hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [  1%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [  2%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [  4%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [  5%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [  6%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Installing collected packages: hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [  8%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ++ seq 5\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + for _ in $(seq 5)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + /home/runneradmin/.cache/hypothesis-build-runtimes/pyenv/plugins/python-build/bin/python-build 3.8.17 /home/runneradmin/.cache/hypothesis-build-runtimes/python-versions//3.8.17\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [  9%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Successfully installed hypothesis-6.80.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 11%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Downloading Python-3.8.17.tar.xz...\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | -> https://www.python.org/ftp/python/3.8.17/Python-3.8.17.tar.xz\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 12%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 13%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 15%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 16%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 18%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 19%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 20%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 22%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 23%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | \u001b[1m============================= test session starts ==============================\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | platform linux -- Python 3.10.9, pytest-7.4.0, pluggy-1.2.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | configfile: pytest.ini\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | plugins: hypothesis-6.80.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | collected 142 items\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | whole-repo-tests/test_ci_config.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m                             [  6%]\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | whole-repo-tests/test_deploy.py \u001b[33ms\u001b[0m\u001b[32m                                        [  7%]\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 24%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | whole-repo-tests/test_documentation.py \u001b[31mF\u001b[0m\u001b[31m                                 [  7%]\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 26%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 27%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 29%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 30%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 31%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Installing Python-3.8.17...\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 33%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 34%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 36%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 37%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 38%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 40%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 41%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 43%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 44%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 45%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 47%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 48%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 50%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 51%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 52%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 54%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 55%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 57%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 58%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 59%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 61%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 62%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 63%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 65%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 66%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 68%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 69%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 70%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 72%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 73%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 75%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 76%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 77%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 79%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 80%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 81%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 83%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31mF\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 84%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 86%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 87%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 88%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mX\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mX\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 90%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mX\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mX\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 91%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 93%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 94%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 95%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 97%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 98%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | whole-repo-tests/test_mypy.py \u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m [ 37%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Installed Python-3.8.17 to /home/runneradmin/.cache/hypothesis-build-runtimes/python-versions//3.8.17\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + exit 0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | + rm -rf /home/runneradmin/.cache/hypothesis-build-runtimes/.install-lockfile\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | py38-cover: install_deps> python -I -m pip install -r ../requirements/test.txt\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | .pkg: install_requires> python -I -m pip install 'setuptools>=40.8.0' wheel\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | .pkg: _optional_hooks> python /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | .pkg: get_requires_for_build_sdist> python /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | .pkg: get_requires_for_build_wheel> python /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | .pkg: install_requires_for_build_wheel> python -I -m pip install wheel\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | .pkg: freeze> python -m pip freeze --all\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | .pkg: pip==23.1.2,setuptools==67.8.0,wheel==0.40.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | .pkg: prepare_metadata_for_build_wheel> python /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | .pkg: build_sdist> python /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | py38-cover: install_package_deps> python -I -m pip install 'attrs>=19.2.0' 'exceptiongroup>=1.0.0; python_version < \"3.11\"' 'sortedcontainers<3.0.0,>=2.1.0'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | py38-cover: install_package> python -I -m pip install --force-reinstall --no-deps .tox/.tmp/package/1/hypothesis-6.80.0.tar.gz\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | py38-cover: freeze> python -m pip freeze --all\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | py38-cover: attrs==23.1.0,exceptiongroup==1.1.1,execnet==1.9.0,hypothesis @ file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/hypothesis-python/.tox/.tmp/package/1/hypothesis-6.80.0.tar.gz#sha256=2e3fa3f1482b323e4ebd5dd8fe84c9bc76d06a398a205a6c396d4c061175133c,iniconfig==2.0.0,packaging==23.1,pexpect==4.8.0,pip==23.1.2,pluggy==1.2.0,ptyprocess==0.7.0,pytest==7.4.0,pytest-xdist==3.3.1,setuptools==67.8.0,sortedcontainers==2.4.0,tomli==2.0.1,wheel==0.40.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | py38-cover: commands[0]> python -bb -X dev -m pytest -n auto tests/cover/ tests/pytest/ tests/conjecture/test_inquisitor.py\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[1m============================= test session starts ==============================\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | platform linux -- Python 3.8.17, pytest-7.4.0, pluggy-1.2.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | cachedir: .tox/py38-cover/.pytest_cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | configfile: pytest.ini\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | plugins: xdist-3.3.1, hypothesis-6.80.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | created: 128/128 workers\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 128 workers [2901 items]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [  2%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [  4%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [  7%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [  9%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 12%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 14%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 17%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 19%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 22%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 24%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 27%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 29%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 32%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 34%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 37%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 39%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 42%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 44%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 47%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 49%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 52%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 54%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 57%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 59%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 62%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 64%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 67%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33mx\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 69%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 72%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 74%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 77%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 79%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 82%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 84%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 87%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 89%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 92%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 94%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 97%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                       [ 72%]\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m [ 99%]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | =================================== FAILURES ===================================\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[31m\u001b[1m_____________ test_drawing_from_recursive_strategy_is_thread_safe ______________\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | [gw61] linux -- Python 3.9.6 /opt/hostedtoolcache/Python/3.9.6/x64/bin/python\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Traceback (most recent call last):\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/_pytest/runner.py\", line 341, in from_call\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     result: Optional[TResult] = func()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/_pytest/runner.py\", line 262, in <lambda>\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pluggy/_hooks.py\", line 433, in __call__\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pluggy/_manager.py\", line 112, in _hookexec\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pluggy/_callers.py\", line 133, in _multicall\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     teardown[0].send(outcome)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/_pytest/threadexception.py\", line 83, in pytest_runtest_call\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     yield from thread_exception_runtest_hook()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/_pytest/threadexception.py\", line 73, in thread_exception_runtest_hook\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | pytest.PytestUnhandledThreadExceptionWarning: Exception in thread Thread-4\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Traceback (most recent call last):\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/threading.py\", line 973, in _bootstrap_inner\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     self.run()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/threading.py\", line 910, in run\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     self._target(*self._args, **self._kwargs)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/hypothesis-python/tests/nocover/test_recursive.py\", line 140, in test\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     database=None, deadline=None, suppress_health_check=[HealthCheck.too_slow]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/core.py\", line 1374, in wrapped_test\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     raise the_error_hypothesis_found\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/core.py\", line 1341, in wrapped_test\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     state.run_engine()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/core.py\", line 927, in run_engine\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     runner.run()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 460, in run\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     self._run()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 866, in _run\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     self.generate_new_examples()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 670, in generate_new_examples\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     minimal_example = self.cached_test_function(\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 1051, in cached_test_function\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     self.test_function(data)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 195, in test_function\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     self.__stoppable_test_function(data)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 183, in __stoppable_test_function\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     raise\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/junkdrawer.py\", line 306, in __exit__\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     warnings.warn(\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | hypothesis.errors.HypothesisWarning: The recursion limit will not be reset, since it was changed from another thread or during execution of a test.\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | ----------------------------- Captured stdout call -----------------------------\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | You can add @seed(91483265130055917078947092934798930202) to this test or run pytest with --hypothesis-seed=91483265130055917078947092934798930202 to reproduce this failure.\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | You can add @seed(12064946785755343005409557581565394226) to this test or run pytest with --hypothesis-seed=12064946785755343005409557581565394226 to reproduce this failure.You can add @seed(12064946785755343005409557581565394226) to this test or run pytest with --hypothesis-seed=12064946785755343005409557581565394226 to reproduce this failure.\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/report.xml -\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | ============================= slowest 20 durations =============================\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 222.21s call     hypothesis-python/tests/nocover/test_database_usage.py::test_respects_max_examples_in_database_usage\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 163.91s call     hypothesis-python/tests/nocover/test_stateful.py::test_bad_machines_fail[CanSwarm]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 54.74s call     hypothesis-python/tests/nocover/test_stateful.py::test_bad_machines_fail[RoseTreeStateMachine]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 48.69s call     hypothesis-python/tests/cover/test_stateful.py::test_multiple_precondition_bug\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 40.97s call     hypothesis-python/tests/nocover/test_database_usage.py::test_clears_out_database_as_things_get_boring\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 35.47s call     hypothesis-python/tests/cover/test_stateful.py::test_removes_needless_steps\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 32.21s call     hypothesis-python/tests/cover/test_targeting.py::test_targeting_with_following_empty\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 29.65s call     hypothesis-python/tests/numpy/test_gen_data.py::test_efficiently_generates_all_unique_array\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 25.05s call     hypothesis-python/tests/nocover/test_strategy_state.py::TestHypothesis::runTest\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 21.68s call     hypothesis-python/tests/nocover/test_targeting.py::test_targeting_can_be_disabled\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 21.36s call     hypothesis-python/tests/cover/test_lookup.py::test_generic_collections_only_use_hashable_elements[typ1]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 19.83s call     hypothesis-python/tests/nocover/test_stateful.py::test_bad_machines_fail[DepthMachine]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 19.63s call     hypothesis-python/tests/cover/test_type_lookup.py::test_can_generate_from_all_registered_types[BaseExceptionGroup]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 17.49s call     hypothesis-python/tests/cover/test_stateful.py::test_can_run_with_no_db\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 16.99s call     hypothesis-python/tests/nocover/test_pretty_repr.py::test_repr_evals_to_thing_with_same_repr\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 16.49s call     hypothesis-python/tests/cover/test_testdecorators.py::test_float_addition_is_associative\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 15.82s call     hypothesis-python/tests/cover/test_validation.py::test_does_not_error_if_min_size_is_bigger_than_default_size\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 15.52s call     hypothesis-python/tests/conjecture/test_inquisitor.py::test_inquisitor_comments_basic_fail_if_not_all\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 15.30s call     hypothesis-python/tests/nocover/test_stateful.py::test_bad_machines_fail[BalancedTrees]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | 15.17s call     hypothesis-python/tests/numpy/test_gen_data.py::test_can_generate_data_compound_dtypes\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[36m\u001b[1m=========================== short test summary info ============================\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[31mFAILED\u001b[0m hypothesis-python/tests/nocover/test_recursive.py::\u001b[1mtest_drawing_from_recursive_strategy_is_thread_safe\u001b[0m - pytest.PytestUnhandledThreadExceptionWarning: Exception in thread Thread-4\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | Traceback (most recent call last):\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/threading.py\", line 973, in _bootstrap_inner\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     self.run()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/threading.py\", line 910, in run\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     self._target(*self._args, **self._kwargs)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/hypothesis-python/tests/nocover/test_recursive.py\", line 140, in test\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     database=None, deadline=None, suppress_health_check=[HealthCheck.too_slow]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/core.py\", line 1374, in wrapped_test\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     raise the_error_hypothesis_found\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/core.py\", line 1341, in wrapped_test\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     state.run_engine()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/core.py\", line 927, in run_engine\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     runner.run()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 460, in run\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     self._run()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 866, in _run\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     self.generate_new_examples()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 670, in generate_new_examples\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     minimal_example = self.cached_test_function(\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 1051, in cached_test_function\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     self.test_function(data)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 195, in test_function\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     self.__stoppable_test_function(data)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/engine.py\", line 183, in __stoppable_test_function\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     raise\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hypothesis/internal/conjecture/junkdrawer.py\", line 306, in __exit__\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   |     warnings.warn(\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | hypothesis.errors.HypothesisWarning: The recursion limit will not be reset, since it was changed from another thread or during execution of a test.\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[33mXPASS\u001b[0m hypothesis-python/tests/numpy/test_from_type.py::\u001b[1mtest_resolves_specified_ndarray_type[bytes_0]\u001b[0m \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[33mXPASS\u001b[0m hypothesis-python/tests/numpy/test_from_type.py::\u001b[1mtest_resolves_specified_ndarray_type[bytes_1]\u001b[0m \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[33mXPASS\u001b[0m hypothesis-python/tests/numpy/test_from_type.py::\u001b[1mtest_resolves_specified_NDArray_type[bytes_0]\u001b[0m \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[33mXPASS\u001b[0m hypothesis-python/tests/numpy/test_from_type.py::\u001b[1mtest_resolves_specified_NDArray_type[bytes_1]\u001b[0m \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   | \u001b[31m= \u001b[31m\u001b[1m1 failed\u001b[0m, \u001b[32m5177 passed\u001b[0m, \u001b[33m8 skipped\u001b[0m, \u001b[33m3 xfailed\u001b[0m, \u001b[33m4 xpassed\u001b[0m\u001b[31m in 270.16s (0:04:30)\u001b[0m\u001b[31m ==\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win]   \u274c  Failure - Main Run tests\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win] exitcode '1': failure\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | whole-repo-tests/test_pyright.py \u001b[33ms\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                       [ 84%]\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | whole-repo-tests/test_release_files.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[33ms\u001b[0m\u001b[31m                              [ 87%]\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | whole-repo-tests/test_release_management.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                  [ 95%]\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m                                                                [100%]\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ============================= slowest 20 durations =============================\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 43.47s call     hypothesis-python/tests/cover/test_stateful.py::test_multiple_precondition_bug\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 38.49s call     hypothesis-python/tests/cover/test_stateful.py::test_removes_needless_steps\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 33.60s call     hypothesis-python/tests/cover/test_stateful.py::test_can_run_with_no_db\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 21.94s call     hypothesis-python/tests/cover/test_database_backend.py::TestGADReads::runTest\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 16.69s call     hypothesis-python/tests/cover/test_targeting.py::test_targeting_with_following_empty\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 16.56s call     hypothesis-python/tests/cover/test_type_lookup.py::test_can_generate_from_all_registered_types[BaseExceptionGroup]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 16.28s call     hypothesis-python/tests/cover/test_testdecorators.py::test_float_addition_is_associative\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 15.05s call     hypothesis-python/tests/cover/test_sampled_from.py::test_efficient_lists_of_tuples_first_element_sampled_from\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 14.72s call     hypothesis-python/tests/cover/test_validation.py::test_does_not_error_if_min_size_is_bigger_than_default_size\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 14.28s call     hypothesis-python/tests/conjecture/test_inquisitor.py::test_inquisitor_comments_basic_fail_if_not_all\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 13.21s call     hypothesis-python/tests/cover/test_stateful.py::test_saves_failing_example_in_database\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 13.15s call     hypothesis-python/tests/cover/test_searchstrategy.py::test_example_raises_unsatisfiable_when_too_filtered\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 10.77s call     hypothesis-python/tests/cover/test_statistical_events.py::test_stateful_with_one_of_bundles_states_are_deduped\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 9.77s call     hypothesis-python/tests/cover/test_provisional_strategies.py::test_is_URL\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 9.52s call     hypothesis-python/tests/cover/test_draw_example.py::test_list_example[dictionaries(keys=text(), values=booleans())]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 9.11s call     hypothesis-python/tests/cover/test_lookup.py::test_resolves_forwardrefs_to_builtin_types[BaseException]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 8.97s call     hypothesis-python/tests/cover/test_statistical_events.py::test_stateful_states_are_deduped\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 7.96s call     hypothesis-python/tests/cover/test_regressions.py::test_regression_issue_1230\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 7.76s call     hypothesis-python/tests/cover/test_stateful.py::TestMachineWithConsumingRule::runTest\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | 7.69s call     hypothesis-python/tests/cover/test_regex.py::test_negative_lookahead\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | \u001b[32m============ \u001b[32m\u001b[1m2863 passed\u001b[0m, \u001b[33m2 skipped\u001b[0m, \u001b[33m36 xfailed\u001b[0m\u001b[32m in 95.22s (0:01:35)\u001b[0m\u001b[32m ============\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | .pkg: _exit> python /tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   py38-cover: OK (118.84=setup[20.05]+cmd[98.79] seconds)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   |   congratulations :) (119.23 seconds)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | ensure-python.sh 3.8.17\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | /home/runneradmin/.cache/hypothesis-build-runtimes/python-versions/3.8.17/bin:/opt/hostedtoolcache/Python/3.10.12/x64/bin:/opt/hostedtoolcache/Python/3.10.12/x64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | tox -e py38-cover\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2705  Success - Main Run tests\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx] \u2b50 Run Post Restore cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/save/index.js] user= workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::1.5.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/Library/Caches/pip'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Search path '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/.tox'\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Matched: .tox\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Cache Paths:\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.cache\",\".tox\"]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Archive Path: /tmp/40e1edf1-be5f-446f-b389-4b5752b9f65a/cache.tzst\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis --files-from manifest.txt --use-compress-program zstdmt\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-win] \ud83c\udfc1  Job failed\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::File Size: 131907981\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Reserving Cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:46523/_apis/artifactcache/caches\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Saving Cache (ID: 1)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Upload cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:46523/_apis/artifactcache/caches/1\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Upload concurrency: 4\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Upload chunk size: 33554432\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Awaiting all uploads\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 0 with content range: bytes 0-33554431/*\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 33554432 with content range: bytes 33554432-67108863/*\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 67108864 with content range: bytes 67108864-100663295/*\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Uploading chunk of size 31244685 bytes at offset 100663296 with content range: bytes 100663296-131907980/*\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Commiting cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Cache Size: ~126 MB (131907981 B)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:46523/_apis/artifactcache/caches/1\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Cache saved successfully\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   | Cache saved with key: deps-Linux-2196ae1a8660298284e644765990f01899a1d3481d4058092ea0fe0db15d17b5-check-py38-cover\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2705  Success - Post Restore cache\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx] \u2b50 Run Post Set up Python 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx]   \u2705  Success - Post Set up Python 3.10\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | whole-repo-tests/test_requirements.py \u001b[32m.\u001b[0m\u001b[31m                                  [ 95%]\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | whole-repo-tests/test_rst_is_valid.py \u001b[32m.\u001b[0m\u001b[31m                                  [ 96%]\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | whole-repo-tests/test_shellcheck.py \u001b[32m.\u001b[0m\u001b[31m                                    [ 97%]\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | whole-repo-tests/test_validate_branch_check.py \u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[32m.\u001b[0m\u001b[31m                      [100%]\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | \n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | =================================== FAILURES ===================================\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | \u001b[31m\u001b[1m______________________________ test_documentation ______________________________\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Traceback (most recent call last):\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/_pytest/runner.py\", line 341, in from_call\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     result: Optional[TResult] = func()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/_pytest/runner.py\", line 262, in <lambda>\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pluggy/_hooks.py\", line 433, in __call__\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pluggy/_manager.py\", line 112, in _hookexec\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pluggy/_callers.py\", line 155, in _multicall\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     return outcome.get_result()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pluggy/_result.py\", line 108, in get_result\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     raise exc.with_traceback(exc.__traceback__)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pluggy/_callers.py\", line 80, in _multicall\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     res = hook_impl.function(*args)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/_pytest/runner.py\", line 169, in pytest_runtest_call\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     item.runtest()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/_pytest/python.py\", line 1788, in runtest\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     self.ihook.pytest_pyfunc_call(pyfuncitem=self)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pluggy/_hooks.py\", line 433, in __call__\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pluggy/_manager.py\", line 112, in _hookexec\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pluggy/_callers.py\", line 116, in _multicall\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     raise exception.with_traceback(exception.__traceback__)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/pluggy/_callers.py\", line 80, in _multicall\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     res = hook_impl.function(*args)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/_pytest/python.py\", line 194, in pytest_pyfunc_call\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     result = testfunction(**testargs)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/whole-repo-tests/test_documentation.py\", line 15, in test_documentation\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     documentation()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/src/hypothesistooling/__main__.py\", line 46, in wrapped\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     fn(*args, **kwargs)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/src/hypothesistooling/__main__.py\", line 351, in documentation\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     hp.build_docs()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/src/hypothesistooling/projects/hypothesispython.py\", line 68, in build_docs\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     tools.scripts.pip_tool(\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/tooling/src/hypothesistooling/scripts.py\", line 69, in pip_tool\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     sys.exit(r)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | SystemExit: 1\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ----------------------------- Captured stdout call -----------------------------\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | sphinx-build -n -W --keep-going -T -E -b html docs docs/_build/html\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ----------------------------- Captured stderr call -----------------------------\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Traceback (most recent call last):\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs//build-9c0df04a01/bin/sphinx-build\", line 5, in <module>\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     from sphinx.cmd.build import main\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/sphinx/cmd/build.py\", line 20, in <module>\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     from sphinx.application import Sphinx\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/sphinx/application.py\", line 25, in <module>\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     from sphinx.config import Config\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/sphinx/config.py\", line 14, in <module>\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     from sphinx.util.i18n import format_date\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/sphinx/util/i18n.py\", line 12, in <module>\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     import babel.dates\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/babel/dates.py\", line 34, in <module>\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     from babel import localtime\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/babel/localtime/__init__.py\", line 41, in <module>\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     LOCALTZ = get_localzone()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/babel/localtime/__init__.py\", line 37, in get_localzone\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     return _get_localzone()\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/babel/localtime/_unix.py\", line 49, in _get_localzone\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     tzinfo = _get_tzinfo(zone_name)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/tmp/.hypothesis-runtimes/virtualenvs/build-9c0df04a01/lib/python3.10/site-packages/babel/localtime/_helpers.py\", line 21, in _get_tzinfo\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     return zoneinfo.ZoneInfo(tzenv)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/zoneinfo/_tzpath.py\", line 67, in find_tzfile\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     _validate_tzfile_path(key)\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |   File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/zoneinfo/_tzpath.py\", line 81, in _validate_tzfile_path\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   |     raise ValueError(\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ValueError: ZoneInfo keys may not be absolute paths, got: /UTC\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | Updated 2 paths from the index\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | ============================= slowest 20 durations =============================\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 72.26s call     whole-repo-tests/test_requirements.py::test_requirements\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 36.71s call     whole-repo-tests/test_mypy.py::test_mypy_passes_on_hypothesis\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 14.06s call     whole-repo-tests/test_mypy.py::test_mypy_passes_on_basic_test[3.9]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 13.50s call     whole-repo-tests/test_mypy.py::test_mypy_passes_on_basic_test[3.11]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 12.23s call     whole-repo-tests/test_mypy.py::test_mypy_passes_on_basic_test[3.8]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 11.77s call     whole-repo-tests/test_pyright.py::test_pyright_passes_on_basic_test[3.7]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.83s call     whole-repo-tests/test_mypy.py::test_revealed_types[integers()-int]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.70s call     whole-repo-tests/test_pyright.py::test_pyright_issue_3348\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.39s call     whole-repo-tests/test_pyright.py::test_pyright_passes_on_basic_test[3.11]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.32s call     whole-repo-tests/test_pyright.py::test_pyright_passes_on_basic_test[3.10]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.31s call     whole-repo-tests/test_pyright.py::test_given_only_allows_strategies[3.9]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.28s call     whole-repo-tests/test_pyright.py::test_pyright_passes_on_basic_test[3.8]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.28s call     whole-repo-tests/test_pyright.py::test_pyright_passes_on_basic_test[3.9]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.24s call     whole-repo-tests/test_pyright.py::test_pyright_raises_for_mixed_pos_kwargs_in_given\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.23s call     whole-repo-tests/test_pyright.py::test_given_only_allows_strategies[3.10]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.16s call     whole-repo-tests/test_pyright.py::test_given_only_allows_strategies[3.11]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.16s call     whole-repo-tests/test_pyright.py::test_pyright_issue_3296\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.10s call     whole-repo-tests/test_mypy.py::test_given_only_allows_strategies[3.8]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.10s call     whole-repo-tests/test_pyright.py::test_given_only_allows_strategies[3.8]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | 2.07s call     whole-repo-tests/test_pyright.py::test_given_only_allows_strategies[3.7]\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | \u001b[36m\u001b[1m=========================== short test summary info ============================\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | \u001b[31mFAILED\u001b[0m whole-repo-tests/test_documentation.py::\u001b[1mtest_documentation\u001b[0m - SystemExit: 1\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   | \u001b[31m============= \u001b[31m\u001b[1m1 failed\u001b[0m, \u001b[32m137 passed\u001b[0m, \u001b[33m4 skipped\u001b[0m\u001b[31m in 330.84s (0:05:30)\u001b[0m\u001b[31m =============\u001b[0m\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ]   \u274c  Failure - Main Run tests\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ] exitcode '1': failure\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test-osx] \ud83c\udfc1  Job succeeded\n[bce5eb14-ed71-4d5b-8c9b-567346584db7/test    ] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'test-win' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/HypothesisWorks-hypothesis/.github/workflows/main-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "bce5eb14-ed71-4d5b-8c9b-567346584db7",
        "build_tool": "pytest",
        "elapsed_time": 556.5456821918488
    }
}