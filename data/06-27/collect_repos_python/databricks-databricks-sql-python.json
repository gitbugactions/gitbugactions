{
    "repository": "databricks/databricks-sql-python",
    "stars": 64,
    "language": "python",
    "size": 926,
    "clone_url": "https://github.com/databricks/databricks-sql-python.git",
    "timestamp": "2023-07-01T17:34:49.401996Z",
    "clone_success": true,
    "number_of_actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ] \ud83d\ude80  Start image=crawlergpt:latest\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ] \ud83d\ude80  Start image=crawlergpt:latest\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests] \ud83d\ude80  Start image=crawlergpt:latest\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/databricks-databricks-sql-python] user=0 workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/databricks-databricks-sql-python] user=0 workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/databricks-databricks-sql-python] user=0 workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ] \u2b50 Run Pre Install Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2705  Success - Pre Install Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ] \u2b50 Run Pre Install Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2705  Success - Pre Install Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests] \u2b50 Run Pre Install Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2705  Success - Pre Install Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ] \ud83e\uddea  Matrix: map[python-version:3.7]\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ] \u2b50 Run Main Check out repository\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2705  Success - Main Check out repository\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ] \u2b50 Run Main Set up python 3.7\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0f34a8d6-0203-4a7e-9ef3-88469a188ed6/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ] \ud83e\uddea  Matrix: map[python-version:3.7]\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ] \u2b50 Run Main Check out repository\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2705  Success - Main Check out repository\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ] \u2b50 Run Main Set up python 3.7\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests] \ud83e\uddea  Matrix: map[python-version:3.7]\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0f34a8d6-0203-4a7e-9ef3-88469a188ed6/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests] \u2b50 Run Main Check out repository\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2705  Success - Main Check out repository\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests] \u2b50 Run Main Set up python 3.7\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/0f34a8d6-0203-4a7e-9ef3-88469a188ed6/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::isExplicit: \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::explicit? false\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | Successfully setup CPython (3.7.11)\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2705  Success - Main Set up python 3.7\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::isExplicit: \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::explicit? false\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::matched: 3.7.11\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | Successfully setup CPython (3.7.11)\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::isExplicit: \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::explicit? false\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::explicit? true\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2705  Success - Main Set up python 3.7\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | Successfully setup CPython (3.7.11)\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2705  Success - Main Set up python 3.7\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2699  ::set-output:: python-version=3.7.11\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2699  ::set-output:: python-version=3.7.11\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2699  ::set-output:: python-version=3.7.11\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ] \u2b50 Run Main Install Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ] \u2b50 Run Main Install Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests] \u2b50 Run Main Install Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/0f34a8d6-0203-4a7e-9ef3-88469a188ed6/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0f34a8d6-0203-4a7e-9ef3-88469a188ed6/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0f34a8d6-0203-4a7e-9ef3-88469a188ed6/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ] \u2b50 Run Main Install and configure Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests] \u2b50 Run Main Install and configure Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ] \u2b50 Run Main Install and configure Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | Retrieving Poetry metadata\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | # Welcome to Poetry!\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | This will download and install the latest version of Poetry,\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | a dependency and package manager for Python.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | /home/runneradmin/.local/bin\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | You can uninstall at any time by executing this script with the --uninstall option,\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | and these changes will be reverted.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | Installing Poetry (1.5.1)\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | Installing Poetry (1.5.1): Creating environment\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | Installing Poetry (1.5.1): Installing Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | Installing Poetry (1.5.1): Creating script\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | Installing Poetry (1.5.1): Done\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | Poetry (1.5.1) is installed now. Great!\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | environment variable.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | You can test that everything is set up by executing:\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | `poetry --version`\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | Retrieving Poetry metadata\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | # Welcome to Poetry!\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | This will download and install the latest version of Poetry,\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | a dependency and package manager for Python.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | /home/runneradmin/.local/bin\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | You can uninstall at any time by executing this script with the --uninstall option,\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | and these changes will be reverted.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | Installing Poetry (1.5.1)\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | Installing Poetry (1.5.1): Creating environment\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | Installing Poetry (1.5.1): Installing Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | Installing Poetry (1.5.1): Creating script\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | Installing Poetry (1.5.1): Done\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | Poetry (1.5.1) is installed now. Great!\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | environment variable.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | You can test that everything is set up by executing:\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | `poetry --version`\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | Retrieving Poetry metadata\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | # Welcome to Poetry!\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | This will download and install the latest version of Poetry,\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | a dependency and package manager for Python.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | /home/runneradmin/.local/bin\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | You can uninstall at any time by executing this script with the --uninstall option,\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | and these changes will be reverted.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | Installing Poetry (1.5.1)\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | Installing Poetry (1.5.1): Creating environment\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | Installing Poetry (1.5.1): Installing Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | Installing Poetry (1.5.1): Creating script\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | Installing Poetry (1.5.1): Done\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | Poetry (1.5.1) is installed now. Great!\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | environment variable.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | You can test that everything is set up by executing:\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | `poetry --version`\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \u001b[33mDone \u2705\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2705  Success - Main Install and configure Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2705  Success - Main Install Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \u001b[33mDone \u2705\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2705  Success - Main Install and configure Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests] \u2b50 Run Main Load cached venv\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/0f34a8d6-0203-4a7e-9ef3-88469a188ed6/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \u001b[33mDone \u2705\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2705  Success - Main Install and configure Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2705  Success - Main Install Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2705  Success - Main Install Poetry\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ] \u2b50 Run Main Load cached venv\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0f34a8d6-0203-4a7e-9ef3-88469a188ed6/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ] \u2b50 Run Main Load cached venv\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0f34a8d6-0203-4a7e-9ef3-88469a188ed6/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-types   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/run-unit-tests] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/images/crawlergpt:latest/json\": context canceled\n[f6a99aa0-b9fe-4254-bfb3-5846a6faca54/check-linting ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/images/crawlergpt:latest/json\": context canceled\n",
        "stderr": "panic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x48 pc=0xaae2e2]\n\ngoroutine 305 [running]:\ngithub.com/nektos/act/pkg/container.(*containerReference).extractFromImageEnv.func1({0xe09450, 0xc00e829800})\n\t/home/runner/work/act/act/pkg/container/docker_run.go:471 +0x1e2\ngithub.com/nektos/act/pkg/common.Executor.IfNot.func1({0xe09450, 0xc00e829800})\n\t/home/runner/work/act/act/pkg/common/executor.go:159 +0x56\ngithub.com/nektos/act/pkg/runner.(*RunContext).ApplyExtraPath(0xc0002cc900, {0xe09450, 0xc00e829800}, 0xc0001b0628)\n\t/home/runner/work/act/act/pkg/runner/run_context.go:333 +0x209\ngithub.com/nektos/act/pkg/runner.runActionImpl.func1({0xe09450, 0xc00e829800})\n\t/home/runner/work/act/act/pkg/runner/action.go:159 +0x71d\ngithub.com/nektos/act/pkg/runner.(*stepActionRemote).main.func1({0xe09450, 0xc00e829800})\n\t/home/runner/work/act/act/pkg/runner/step_action_remote.go:126 +0x3cf\ngithub.com/nektos/act/pkg/runner.runStepExecutor.func1({0xe09450, 0xc00e829800})\n\t/home/runner/work/act/act/pkg/runner/step.go:141 +0xd89\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xe09450, 0xc00e829800})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/runner.newJobExecutor.func4({0xe09450, 0xc00e829800})\n\t/home/runner/work/act/act/pkg/runner/job_executor.go:77 +0x5a\ngithub.com/nektos/act/pkg/runner.useStepLogger.func1({0xe09450, 0xc000699f20})\n\t/home/runner/work/act/act/pkg/runner/job_executor.go:191 +0x39e\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xe09450, 0xc000699f20})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xe09450, 0xc000699f20})\n\t/home/runner/work/act/act/pkg/common/executor.go:129 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xe09450, 0xc000699f20})\n\t/home/runner/work/act/act/pkg/common/executor.go:129 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xe09450, 0xc000699f20})\n\t/home/runner/work/act/act/pkg/common/executor.go:129 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xe09450, 0xc000699f20})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xe09450, 0xc000699f20})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xe09450, 0xc000699f20})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xe09450, 0xc000699f20})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/runner.(*RunContext).Executor.func1({0xe09450, 0xc000699f20})\n\t/home/runner/work/act/act/pkg/runner/run_context.go:472 +0x58\ngithub.com/nektos/act/pkg/runner.(*runnerImpl).NewPlanExecutor.func1.1({0xe09450, 0xc0002a0270})\n\t/home/runner/work/act/act/pkg/runner/runner.go:150 +0x193\ngithub.com/nektos/act/pkg/common.NewParallelExecutor.func1.1(0x0?, 0x0?)\n\t/home/runner/work/act/act/pkg/common/executor.go:100 +0x5c\ncreated by github.com/nektos/act/pkg/common.NewParallelExecutor.func1\n\t/home/runner/work/act/act/pkg/common/executor.go:98 +0x89\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/databricks-databricks-sql-python/.github/workflows/code-quality-checks-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "f6a99aa0-b9fe-4254-bfb3-5846a6faca54",
        "build_tool": "pytest",
        "elapsed_time": 600.0140709877014
    }
}