{
    "repository": "althonos/pronto",
    "stars": 211,
    "language": "python",
    "size": 10595,
    "clone_url": "https://github.com/althonos/pronto.git",
    "timestamp": "2023-06-28T11:25:51.352911Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unittest"
    ],
    "actions_test_build_tools": [
        "unittest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_aeo",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_iao",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_invalid_xml_file",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_metadata_auto_generated_by",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_metadata_data_version",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_metadata_default_namespace",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_metadata_format_version",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_metadata_imports",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_metadata_saved_by",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_relationship_cyclic",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_relationship_functional",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_relationship_multiple_labels",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_relationship_reflexive",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_relationship_subset",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_relationship_symmetric",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_consider",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_definition_as_axiom",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_definition_as_property",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_multiple_labels",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_relationship",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_subclass_of",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_subset",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_synonym_as_axiom",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_synonym_as_property",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_xref_as_axiom_with_description",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_xref_as_axiom_without_description",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_xref_as_property_resource",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_xref_as_property_text",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.definition",
                "name": "Definition",
                "time": 0.623,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.entity.Entity",
                "name": "definition",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.entity.Entity",
                "name": "obsolete",
                "time": 2.225,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.entity.Entity",
                "name": "relationships",
                "time": 2.681,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.ontology.Ontology",
                "name": "__len__",
                "time": 2.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.ontology.Ontology",
                "name": "dump",
                "time": 3.747,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.ontology.Ontology",
                "name": "dumps",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.ontology.Ontology",
                "name": "from_obo_library",
                "time": 5.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.ontology.Ontology",
                "name": "relationships",
                "time": 0.678,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.ontology.Ontology",
                "name": "terms",
                "time": 0.737,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.relationship.RelationshipSet",
                "name": "superproperties",
                "time": 0.754,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.term.Term",
                "name": "is_leaf",
                "time": 2.154,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.term.Term",
                "name": "objects",
                "time": 1.559,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.term.Term",
                "name": "subclasses",
                "time": 2.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.term.Term",
                "name": "superclasses",
                "time": 2.558,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.term.TermSet",
                "name": "superclasses",
                "time": 2.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.xref",
                "name": "Xref",
                "time": 0.401,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.logic.lineage.TermIterator",
                "name": "to_set",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.utils.meta.roundrepr",
                "name": "make",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_logic.test_lineage.TestLineage",
                "name": "test_eq",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_def.TestDefinition",
                "name": "test_repr",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_alt_id_access",
                "time": 0.16,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_class_level_clause",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_idspaces_serialization",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_metadata_tag_serialization",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_nested_imports",
                "time": 3.478,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_parser_consistency",
                "time": 0.747,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_rdfxml_aliased_typedef",
                "time": 0.167,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_relationship_chains",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_synonym_type_in_import",
                "time": 0.61,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_unicode_in_term_names",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_documentation.TestProntoDocumentation",
                "name": "test_html",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "sphinx not available",
                        "type": "skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_documentation.TestProntoDocumentation",
                "name": "test_json",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "sphinx not available",
                        "type": "skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_documentation.TestProntoDocumentation",
                "name": "test_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "sphinx not available",
                        "type": "skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationship",
                "name": "test_properties",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationship",
                "name": "test_subproperties",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationship",
                "name": "test_superproperties",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_alt_id_access",
                "time": 0.148,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_class_level_clause",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_idspaces_serialization",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_metadata_tag_serialization",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_nested_imports",
                "time": 3.875,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_parser_consistency",
                "time": 0.684,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_rdfxml_aliased_typedef",
                "time": 0.185,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_relationship_chains",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_synonym_type_in_import",
                "time": 0.488,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_issues.TestIssues",
                "name": "test_unicode_in_term_names",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_add_empty",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_and",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_contains",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_inplace_and",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_inplace_or",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_inplace_sub",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_inplace_xor",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_or",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_repr",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_sub",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_subclasses_uniqueness",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_superclasses_uniqueness",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_xor",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_init_typechecked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "no type checking in optimized mode",
                        "type": "skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_eq_literal_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_eq_literal_same_property",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_eq_other",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_eq_resource_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_eq_resource_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_eq_self",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_hash_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_hash_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_lt_literal_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_lt_literal_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_lt_resource_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_lt_resource_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_lt_type_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity.TestAlternateIDs",
                "name": "test_length",
                "time": 0.162,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_add_empty",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": "\n/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/pronto/entity/__init__.py:677: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n  entity = self._ontology[id_]  # type: ignore\n\t\t"
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_and",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": "\n/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/pronto/entity/__init__.py:576: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n  return map(lambda t: self._ontology[t], iter(self._ids))  # type: ignore\n\t\t"
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_contains",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": "\n/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/tests/test_entity.py:38: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n  self.assertIn(self.ont[self.t1.id], s)\n/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/tests/test_entity.py:39: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n  self.assertIn(self.ont[self.t2.id], s)\n/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/tests/test_entity.py:40: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n  self.assertNotIn(self.ont[self.t3.id], s)\n\t\t"
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_inplace_and",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_inplace_or",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_inplace_sub",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_inplace_xor",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_or",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_sub",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_xor",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_init_typechecked",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "no type checking in optimized mode",
                        "type": "skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_metadata_auto_generated_by",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_metadata_date",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_metadata_namespace_id_rule",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_metadata_owl_axioms",
                "time": 0.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_metadata_saved_by",
                "time": 0.458,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_metadata_unreserved",
                "time": 0.422,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_alt_id",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_anonymous",
                "time": 0.553,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_anti_symmetric",
                "time": 0.994,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_asymmetric",
                "time": 0.376,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_comment",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_created_by",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_cylic",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_definition",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_domain",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_functional",
                "time": 0.361,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_inverse_functional",
                "time": 0.362,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_is_obsolete",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_range",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_reflexive",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_relationship",
                "time": 0.37,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_replaced_by",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_subset",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_symmetric",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_transitive",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_transitive_over",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_subclass_add",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_superclass_add",
                "time": 0.356,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_alt_id",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_anonymous",
                "time": 0.37,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_builtin",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_comment",
                "time": 0.296,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_consider",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_created_by",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_creation_date",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_definition",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_disjoint_from",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_intersection_of",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_is_a",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_is_obsolete",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_replaced_by",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_union_of",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_xref",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_documentation.TestProntoDocumentation",
                "name": "test_html",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "sphinx not available",
                        "type": "skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_documentation.TestProntoDocumentation",
                "name": "test_json",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "sphinx not available",
                        "type": "skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_documentation.TestProntoDocumentation",
                "name": "test_xml",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "sphinx not available",
                        "type": "skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_logic.test_lineage.TestSuperclassesIterator",
                "name": "test_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_indexing_relationship_warning",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_repr_file",
                "time": 0.809,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_repr_file_handle",
                "time": 0.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_repr_new",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_repr_path",
                "time": 0.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_repr_path_with_import_depth",
                "time": 0.759,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_threads_invalid",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_logic.test_lineage.TestSubclassesIterator",
                "name": "test_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_logic.test_lineage.TestLineage",
                "name": "test_eq",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.definition",
                "name": "Definition",
                "time": 0.561,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.entity.Entity",
                "name": "definition",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.entity.Entity",
                "name": "obsolete",
                "time": 2.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.entity.Entity",
                "name": "relationships",
                "time": 2.587,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.ontology.Ontology",
                "name": "__len__",
                "time": 2.97,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.ontology.Ontology",
                "name": "dump",
                "time": 4.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.ontology.Ontology",
                "name": "dumps",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.ontology.Ontology",
                "name": "from_obo_library",
                "time": 1.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.ontology.Ontology",
                "name": "relationships",
                "time": 0.664,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.ontology.Ontology",
                "name": "terms",
                "time": 0.851,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.relationship.RelationshipSet",
                "name": "superproperties",
                "time": 0.732,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.term.Term",
                "name": "is_leaf",
                "time": 2.553,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.term.Term",
                "name": "objects",
                "time": 0.54,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.term.Term",
                "name": "subclasses",
                "time": 2.44,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.term.Term",
                "name": "superclasses",
                "time": 2.458,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.term.TermSet",
                "name": "superclasses",
                "time": 2.623,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.xref",
                "name": "Xref",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.logic.lineage.TermIterator",
                "name": "to_set",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pronto.utils.meta.roundrepr",
                "name": "make",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_add_empty",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": "\n/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/pronto/entity/__init__.py:677: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n  entity = self._ontology[id_]  # type: ignore\n\t\t"
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_and",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": "\n/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/pronto/entity/__init__.py:576: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n  return map(lambda t: self._ontology[t], iter(self._ids))  # type: ignore\n\t\t"
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_contains",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": "\n/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/tests/test_entity.py:38: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n  self.assertIn(self.ont[self.t1.id], s)\n/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/tests/test_entity.py:39: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n  self.assertIn(self.ont[self.t2.id], s)\n/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/tests/test_entity.py:40: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n  self.assertNotIn(self.ont[self.t3.id], s)\n\t\t"
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_init_typechecked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_inplace_and",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_inplace_or",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_inplace_sub",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_inplace_xor",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_or",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_sub",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationshipSet",
                "name": "test_xor",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonym",
                "name": "test_scope_invalid",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonym",
                "name": "test_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonym",
                "name": "test_type_setter",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonym",
                "name": "test_type_setter_undeclared",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonym",
                "name": "test_type_undeclared",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity.TestAlternateIDs",
                "name": "test_length",
                "time": 0.145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_obojson.TestOboJsonExamples",
                "name": "test_abox",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_obojson.TestOboJsonExamples",
                "name": "test_equiv_node_set",
                "time": 0.305,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_obojson.TestOboJsonExamples",
                "name": "test_nucleus",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_obojson.TestOboJsonExamples",
                "name": "test_obsoletion_example",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_obojson.TestOboJsonExamples",
                "name": "test_basic",
                "time": 0.294,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "expected failure: (<class 'KeyError'>, KeyError('part_of'), <traceback object at 0x7f1cf46dfeb0>)",
                        "type": "XFAIL"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_add_synonym",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_add_synonym_invalid_scope",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_add_synonym_invalid_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_annotations",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_consider",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_disjoint_from",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_intersection_of",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_intersection_of_type_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_properties",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_replaced_by",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_repr",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_subclasses",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_subclasses_distance",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_subclasses_uniqueness",
                "time": 0.181,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_subclasses_without_self",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_superclasses",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_superclasses_distance",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_superclasses_uniqueness",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_union_of",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_union_of_cardinality",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_union_of_typechecked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_eq_literal_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_eq_literal_same_property",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_eq_other",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_eq_resource_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_eq_resource_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_eq_self",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_hash_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_hash_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_lt_literal_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_lt_literal_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_lt_resource_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_lt_resource_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_lt_type_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestResourcePropertyValue",
                "name": "test_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_metadata_auto_generated_by",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_metadata_date",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_metadata_namespace_id_rule",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_metadata_owl_axioms",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_metadata_saved_by",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_metadata_unreserved",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_alt_id",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_anonymous",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_anti_symmetric",
                "time": 0.285,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_asymmetric",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_comment",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_created_by",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_cylic",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_definition",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_domain",
                "time": 0.362,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_functional",
                "time": 0.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_inverse_functional",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_is_obsolete",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_range",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_reflexive",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_relationship",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_replaced_by",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_subset",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_symmetric",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_transitive",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_relationship_transitive_over",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_subclass_add",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_superclass_add",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_alt_id",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_anonymous",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_builtin",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_comment",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_consider",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_created_by",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_creation_date",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_definition",
                "time": 0.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_disjoint_from",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_intersection_of",
                "time": 0.325,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_is_a",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_is_obsolete",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_replaced_by",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_union_of",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serializer.test_obo.TestOboSerializer",
                "name": "test_term_xref",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_aeo",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_iao",
                "time": 0.356,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_invalid_xml_file",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_metadata_auto_generated_by",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_metadata_data_version",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_metadata_default_namespace",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_metadata_format_version",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_metadata_imports",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_metadata_saved_by",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_relationship_cyclic",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_relationship_functional",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_relationship_multiple_labels",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_relationship_reflexive",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_relationship_subset",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_relationship_symmetric",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_consider",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_definition_as_axiom",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_definition_as_property",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_multiple_labels",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_relationship",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_subclass_of",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_subset",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_synonym_as_axiom",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_synonym_as_property",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_xref_as_axiom_with_description",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_xref_as_axiom_without_description",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_xref_as_property_resource",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_rdfxml.TestRdfXMLParser",
                "name": "test_term_xref_as_property_text",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonymType",
                "name": "test_eq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonymType",
                "name": "test_hash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonymType",
                "name": "test_init_invalid_scope",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonymType",
                "name": "test_lt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_obojson.TestOboJsonExamples",
                "name": "test_abox",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_obojson.TestOboJsonExamples",
                "name": "test_equiv_node_set",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_obojson.TestOboJsonExamples",
                "name": "test_nucleus",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_obojson.TestOboJsonExamples",
                "name": "test_obsoletion_example",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.test_obojson.TestOboJsonExamples",
                "name": "test_basic",
                "time": 0.291,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "expected failure: (<class 'KeyError'>, KeyError('part_of'), <traceback object at 0x7f2d912af4b0>)",
                        "type": "XFAIL"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntologyLineage",
                "name": "test_edit_relationship",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntologyLineage",
                "name": "test_edit_term",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_def.TestDefinition",
                "name": "test_repr",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_logic.test_lineage.TestSubclassesIterator",
                "name": "test_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_eq_literal_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_eq_literal_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_eq_resource_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_eq_resource_same_property",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_eq_self",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_hash_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_hash_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_lt_literal_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_lt_literal_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_lt_resource_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_lt_type_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_indexing_relationship_warning",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_repr_file",
                "time": 0.81,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_repr_file_handle",
                "time": 0.773,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_repr_new",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_repr_path",
                "time": 0.857,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_repr_path_with_import_depth",
                "time": 0.732,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntology",
                "name": "test_threads_invalid",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonym",
                "name": "test_scope_invalid",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonym",
                "name": "test_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonym",
                "name": "test_type_setter",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonym",
                "name": "test_type_setter_undeclared",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonym",
                "name": "test_type_undeclared",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_logic.test_lineage.TestSuperclassesIterator",
                "name": "test_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_eq",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_ge",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_gt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_init",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_le",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_lt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_ne",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_eq",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_ge",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_gt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_init",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_le",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_lt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_ne",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xref.TestXref",
                "name": "test_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_add_synonym",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_add_synonym_invalid_scope",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_add_synonym_invalid_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_annotations",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_consider",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_disjoint_from",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_intersection_of",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_intersection_of_type_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_properties",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_replaced_by",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_repr",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_subclasses",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_subclasses_distance",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_subclasses_uniqueness",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_subclasses_without_self",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_superclasses",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_superclasses_distance",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_superclasses_uniqueness",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_union_of",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_union_of_cardinality",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTerm",
                "name": "test_union_of_typechecked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "no type checking in optimized mode",
                        "type": "skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntologyLineage",
                "name": "test_edit_relationship",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ontology.TestOntologyLineage",
                "name": "test_edit_term",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonymType",
                "name": "test_eq",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonymType",
                "name": "test_hash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonymType",
                "name": "test_init_invalid_scope",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_synonym.TestSynonymType",
                "name": "test_lt",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationship",
                "name": "test_properties",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationship",
                "name": "test_subproperties",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_relationship.TestRelationship",
                "name": "test_superproperties",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_eq_literal_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_eq_literal_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_eq_resource_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_eq_resource_same_property",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_eq_self",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_hash_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_hash_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_lt_literal_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_lt_literal_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_lt_resource_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_lt_type_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pv.TestLiteralPropertyValue",
                "name": "test_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_add_empty",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_and",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_contains",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_init_typechecked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_inplace_and",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_inplace_or",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_inplace_sub",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_inplace_xor",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_or",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_repr",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_sub",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_subclasses_uniqueness",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_superclasses_uniqueness",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_term.TestTermSet",
                "name": "test_xor",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] \ud83d\ude80  Start image=crawlergpt:latest\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto] user=0 workdir=\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] \ud83e\uddea  Matrix: map[python-impl:CPython python-release:v3.7 python-version:3.7]\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] \u2b50 Run Main Checkout code\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2705  Success - Main Checkout code\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] \u2b50 Run Main Setup Python 3.7\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker cp src=/tmp/act-cache/6a098ede-7b8e-4b3b-b4e6-273f4d369dc9/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::isExplicit: \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::explicit? false\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::explicit? true\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::explicit? true\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::explicit? true\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::explicit? true\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::explicit? true\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::explicit? true\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::evaluating 6 versions\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::matched: 3.7.11\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Successfully setup CPython (3.7.11)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2705  Success - Main Setup Python 3.7\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2699  ::set-output:: python-version=3.7.11\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] \u2b50 Run Main Update pip\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting pip\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting wheel\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading wheel-0.40.0-py3-none-any.whl (64 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (47.1.0)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting setuptools\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading setuptools-68.0.0-py3-none-any.whl (804 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Installing collected packages: wheel, setuptools, pip\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Attempting uninstall: setuptools\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     Found existing installation: setuptools 47.1.0\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     Uninstalling setuptools-47.1.0:\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |       Successfully uninstalled setuptools-47.1.0\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Attempting uninstall: pip\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     Found existing installation: pip 21.2.4\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     Uninstalling pip-21.2.4:\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |       Successfully uninstalled pip-21.2.4\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Successfully installed pip-23.1.2 setuptools-68.0.0 wheel-0.40.0\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2705  Success - Main Update pip\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] \u2b50 Run Main Install CI requirements\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting coverage\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading coverage-7.2.7-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (225 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 225.6/225.6 kB 4.3 MB/s eta 0:00:00\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting codacy-coverage\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading codacy_coverage-1.3.11-py2.py3-none-any.whl (7.5 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting requests>=2.9.1 (from codacy-coverage)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 8.3 MB/s eta 0:00:00\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting charset-normalizer<4,>=2 (from requests>=2.9.1->codacy-coverage)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 171.0/171.0 kB 3.1 MB/s eta 0:00:00\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting idna<4,>=2.5 (from requests>=2.9.1->codacy-coverage)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 1.5 MB/s eta 0:00:00\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting urllib3<3,>=1.21.1 (from requests>=2.9.1->codacy-coverage)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 5.3 MB/s eta 0:00:00\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting certifi>=2017.4.17 (from requests>=2.9.1->codacy-coverage)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 3.0 MB/s eta 0:00:00\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Installing collected packages: urllib3, idna, coverage, charset-normalizer, certifi, requests, codacy-coverage\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Successfully installed certifi-2023.5.7 charset-normalizer-3.1.0 codacy-coverage-1.3.11 coverage-7.2.7 idna-3.4 requests-2.31.0 urllib3-2.0.3\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | [notice] To update, run: pip install --upgrade pip\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2705  Success - Main Install CI requirements\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] \u2b50 Run Main Install library\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Processing /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Preparing metadata (setup.py): started\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Preparing metadata (setup.py): finished with status 'done'\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting chardet~=5.0 (from pronto==2.5.4)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.1/199.1 kB 13.2 MB/s eta 0:00:00\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting fastobo~=0.12.2 (from pronto==2.5.4)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading fastobo-0.12.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.1 MB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 14.1 MB/s eta 0:00:00\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting networkx<4.0,>=2.3 (from pronto==2.5.4)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading networkx-2.6.3-py3-none-any.whl (1.9 MB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.9/1.9 MB 25.1 MB/s eta 0:00:00\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting python-dateutil~=2.8 (from pronto==2.5.4)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 24.4 MB/s eta 0:00:00\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting six>=1.5 (from python-dateutil~=2.8->pronto==2.5.4)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Building wheels for collected packages: pronto\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Building wheel for pronto (setup.py): started\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Building wheel for pronto (setup.py): finished with status 'done'\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Created wheel for pronto: filename=pronto-2.5.4-py2.py3-none-any.whl size=61059 sha256=13d63f3da1a7d3315ee64969ec83abcce22593f69c349c6e8dacef25b9f1eea8\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/b7/93/3d/583ff0c7e3ad20eed06aa846375ffc6f71db6a82e433dc5f5e\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Successfully built pronto\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Installing collected packages: six, networkx, fastobo, chardet, python-dateutil, pronto\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Successfully installed chardet-5.1.0 fastobo-0.12.2 networkx-2.6.3 pronto-2.5.4 python-dateutil-2.8.2 six-1.16.0\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | [notice] To update, run: pip install --upgrade pip\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2705  Success - Main Install library\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] \u2b50 Run Main Test in debug mode\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting unittest-xml-reporting\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading unittest_xml_reporting-3.2.0-py2.py3-none-any.whl (20 kB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Collecting lxml (from unittest-xml-reporting)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Downloading lxml-4.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.6 MB)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 6.6/6.6 MB 50.3 MB/s eta 0:00:00\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Installing collected packages: lxml, unittest-xml-reporting\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Successfully installed lxml-4.9.2 unittest-xml-reporting-3.2.0\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | [notice] To update, run: pip install --upgrade pip\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Running tests...\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | ----------------------------------------------------------------------\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr (tests.test_def.TestDefinition) ... ok (0.013s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Definition (pronto.definition)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.definition.Definition ... ok (0.561s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   definition (pronto.entity.Entity)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.entity.Entity.definition ... ok (0.278s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   obsolete (pronto.entity.Entity)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.entity.Entity.obsolete ... ok (2.382s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   relationships (pronto.entity.Entity)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.entity.Entity.relationships ... ok (2.587s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   __len__ (pronto.ontology.Ontology)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.ontology.Ontology.__len__ ... ok (2.970s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   dump (pronto.ontology.Ontology)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.ontology.Ontology.dump ... ok (4.212s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   dumps (pronto.ontology.Ontology)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.ontology.Ontology.dumps ... ok (0.292s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   from_obo_library (pronto.ontology.Ontology)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.ontology.Ontology.from_obo_library ... ok (1.164s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   relationships (pronto.ontology.Ontology)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.ontology.Ontology.relationships ... ok (0.664s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   terms (pronto.ontology.Ontology)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.ontology.Ontology.terms ... ok (0.851s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   superproperties (pronto.relationship.RelationshipSet)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.relationship.RelationshipSet.superproperties ... ok (0.732s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   is_leaf (pronto.term.Term)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.term.Term.is_leaf ... ok (2.553s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   objects (pronto.term.Term)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.term.Term.objects ... ok (0.540s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   subclasses (pronto.term.Term)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.term.Term.subclasses ... ok (2.440s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   superclasses (pronto.term.Term)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.term.Term.superclasses ... ok (2.458s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   superclasses (pronto.term.TermSet)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.term.TermSet.superclasses ... ok (2.623s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Xref (pronto.xref)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.xref.Xref ... ok (0.355s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   to_set (pronto.logic.lineage.TermIterator)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.logic.lineage.TermIterator.to_set ... ok (0.311s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   make (pronto.utils.meta.roundrepr)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.utils.meta.roundrepr.make ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_html (tests.test_documentation.TestProntoDocumentation) ... skip (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_json (tests.test_documentation.TestProntoDocumentation) ... skip (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_xml (tests.test_documentation.TestProntoDocumentation) ... skip (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_length (tests.test_entity.TestAlternateIDs) ... ok (0.162s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_alt_id_access (tests.test_issues.TestIssues) ... ok (0.148s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_class_level_clause (tests.test_issues.TestIssues) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_idspaces_serialization (tests.test_issues.TestIssues) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_tag_serialization (tests.test_issues.TestIssues)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Assert relationships which are metadata tag serialize properly. ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_nested_imports (tests.test_issues.TestIssues)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Check an ontology importing an ontology with imports can be opened. ... ok (3.875s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_parser_consistency (tests.test_issues.TestIssues)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Assert several runs on the same file give the same output. ... ok (0.684s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_rdfxml_aliased_typedef (tests.test_issues.TestIssues) ... ok (0.185s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_chains (tests.test_issues.TestIssues) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_synonym_type_in_import (tests.test_issues.TestIssues) ... ok (0.488s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_unicode_in_term_names (tests.test_issues.TestIssues)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Test if unicode characters in term names work. ... ok (0.280s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq (tests.test_logic.test_lineage.TestLineage) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_empty (tests.test_logic.test_lineage.TestSubclassesIterator) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_empty (tests.test_logic.test_lineage.TestSuperclassesIterator) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_indexing_relationship_warning (tests.test_ontology.TestOntology) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr_file (tests.test_ontology.TestOntology) ... ok (0.810s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr_file_handle (tests.test_ontology.TestOntology) ... ok (0.773s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr_new (tests.test_ontology.TestOntology) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr_path (tests.test_ontology.TestOntology) ... ok (0.857s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr_path_with_import_depth (tests.test_ontology.TestOntology) ... ok (0.732s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_threads_invalid (tests.test_ontology.TestOntology) ... ok (0.017s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_edit_relationship (tests.test_ontology.TestOntologyLineage) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_edit_term (tests.test_ontology.TestOntologyLineage) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_abox (tests.test_parser.test_obojson.TestOboJsonExamples) ... ok (0.318s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_basic (tests.test_parser.test_obojson.TestOboJsonExamples) ... expected failure (0.294s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_equiv_node_set (tests.test_parser.test_obojson.TestOboJsonExamples) ... ok (0.305s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_nucleus (tests.test_parser.test_obojson.TestOboJsonExamples) ... ok (0.291s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_obsoletion_example (tests.test_parser.test_obojson.TestOboJsonExamples) ... ok (0.294s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_aeo (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.322s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_iao (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.356s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_invalid_xml_file (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_auto_generated_by (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_data_version (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.007s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_default_namespace (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_format_version (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_imports (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_saved_by (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_cyclic (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_functional (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_multiple_labels (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.008s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_reflexive (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_subset (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_symmetric (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_consider (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.009s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_definition_as_axiom (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_definition_as_property (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_multiple_labels (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.008s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_relationship (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.007s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_subclass_of (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_subset (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_synonym_as_axiom (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.008s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_synonym_as_property (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_xref_as_axiom_with_description (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.007s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_xref_as_axiom_without_description (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.007s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_xref_as_property_resource (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_xref_as_property_text (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_literal_different (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_literal_identical (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_resource_different (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_resource_same_property (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_self (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_hash_different (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_hash_identical (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_literal_different (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_literal_identical (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_resource_identical (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_type_error (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_literal_different (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_literal_same_property (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_other (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_resource_different (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_resource_identical (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_self (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_hash_different (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_hash_identical (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_literal_different (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_literal_identical (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_resource_different (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_resource_identical (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_type_error (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_properties (tests.test_relationship.TestRelationship)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Assert the data stored in data layer can be accessed in the view. ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subproperties (tests.test_relationship.TestRelationship) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_superproperties (tests.test_relationship.TestRelationship) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_add_empty (tests.test_relationship.TestRelationshipSet) ... /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/pronto/entity/__init__.py:677: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   entity = self._ontology[id_]  # type: ignore\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_and (tests.test_relationship.TestRelationshipSet) ... /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/pronto/entity/__init__.py:576: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   return map(lambda t: self._ontology[t], iter(self._ids))  # type: ignore\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_contains (tests.test_relationship.TestRelationshipSet) ... /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/tests/test_entity.py:38: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   self.assertIn(self.ont[self.t1.id], s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/tests/test_entity.py:39: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   self.assertIn(self.ont[self.t2.id], s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/tests/test_entity.py:40: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   self.assertNotIn(self.ont[self.t3.id], s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_init_typechecked (tests.test_relationship.TestRelationshipSet) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_and (tests.test_relationship.TestRelationshipSet) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_or (tests.test_relationship.TestRelationshipSet) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_sub (tests.test_relationship.TestRelationshipSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_xor (tests.test_relationship.TestRelationshipSet) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_or (tests.test_relationship.TestRelationshipSet) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_sub (tests.test_relationship.TestRelationshipSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_xor (tests.test_relationship.TestRelationshipSet) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_auto_generated_by (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.284s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_date (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.355s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_namespace_id_rule (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.337s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_owl_axioms (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.352s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_saved_by (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.458s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_unreserved (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.422s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_alt_id (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.357s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_anonymous (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.553s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_anti_symmetric (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.994s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_asymmetric (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.376s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_comment (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.317s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_created_by (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.316s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_cylic (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.311s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_definition (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.338s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_domain (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.321s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_functional (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.361s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_inverse_functional (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.362s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_is_obsolete (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.312s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_range (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.316s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_reflexive (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.312s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_relationship (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.370s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_replaced_by (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.312s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_subset (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.321s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_symmetric (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.315s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_transitive (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.303s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_transitive_over (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.326s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subclass_add (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.359s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_superclass_add (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.356s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_alt_id (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.298s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_anonymous (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.370s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_builtin (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.272s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_comment (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.296s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_consider (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.285s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_created_by (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.293s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_creation_date (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.314s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_definition (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.291s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_disjoint_from (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.287s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_intersection_of (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.280s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_is_a (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.284s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_is_obsolete (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.293s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_replaced_by (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.272s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_union_of (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.277s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_xref (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.314s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_scope_invalid (tests.test_synonym.TestSynonym) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_type (tests.test_synonym.TestSynonym) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_type_setter (tests.test_synonym.TestSynonym) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_type_setter_undeclared (tests.test_synonym.TestSynonym) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_type_undeclared (tests.test_synonym.TestSynonym) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq (tests.test_synonym.TestSynonymType) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_hash (tests.test_synonym.TestSynonymType) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_init_invalid_scope (tests.test_synonym.TestSynonymType) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt (tests.test_synonym.TestSynonymType) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_add_synonym (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_add_synonym_invalid_scope (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_add_synonym_invalid_type (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_annotations (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_consider (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_disjoint_from (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_intersection_of (tests.test_term.TestTerm) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_intersection_of_type_error (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_properties (tests.test_term.TestTerm) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_replaced_by (tests.test_term.TestTerm) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subclasses (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subclasses_distance (tests.test_term.TestTerm) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subclasses_uniqueness (tests.test_term.TestTerm) ... ok (0.181s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subclasses_without_self (tests.test_term.TestTerm) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_superclasses (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_superclasses_distance (tests.test_term.TestTerm) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_superclasses_uniqueness (tests.test_term.TestTerm) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_union_of (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_union_of_cardinality (tests.test_term.TestTerm) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_union_of_typechecked (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_add_empty (tests.test_term.TestTermSet) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_and (tests.test_term.TestTermSet) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_contains (tests.test_term.TestTermSet) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_init_typechecked (tests.test_term.TestTermSet) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_and (tests.test_term.TestTermSet) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_or (tests.test_term.TestTermSet) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_sub (tests.test_term.TestTermSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_xor (tests.test_term.TestTermSet) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_or (tests.test_term.TestTermSet) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr (tests.test_term.TestTermSet) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_sub (tests.test_term.TestTermSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subclasses_uniqueness (tests.test_term.TestTermSet) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_superclasses_uniqueness (tests.test_term.TestTermSet) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_xor (tests.test_term.TestTermSet) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq (tests.test_xref.TestXref) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_ge (tests.test_xref.TestXref) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_gt (tests.test_xref.TestXref) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_init (tests.test_xref.TestXref) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_le (tests.test_xref.TestXref) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt (tests.test_xref.TestXref) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_ne (tests.test_xref.TestXref) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr (tests.test_xref.TestXref) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | ----------------------------------------------------------------------\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Ran 214 tests in 57.138s\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | OK (skipped=3, expected failures=1)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generating XML reports...\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_def.TestDefinition-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-doctest.DocTestCase-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_entity.TestAlternateIDs-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_issues.TestIssues-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_logic.test_lineage.TestLineage-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_logic.test_lineage.TestSubclassesIterator-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_logic.test_lineage.TestSuperclassesIterator-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_ontology.TestOntology-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_ontology.TestOntologyLineage-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_parser.test_obojson.TestOboJsonExamples-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_parser.test_rdfxml.TestRdfXMLParser-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_pv.TestLiteralPropertyValue-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_pv.TestResourcePropertyValue-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_relationship.TestRelationship-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_relationship.TestRelationshipSet-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_serializer.test_obo.TestOboSerializer-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_synonym.TestSynonym-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_synonym.TestSynonymType-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_term.TestTerm-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_term.TestTermSet-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_xref.TestXref-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_documentation.TestProntoDocumentation-20230628112850.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2705  Success - Main Test in debug mode\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] \u2b50 Run Main Test in optimized mode\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Requirement already satisfied: unittest-xml-reporting in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (3.2.0)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Requirement already satisfied: lxml in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from unittest-xml-reporting) (4.9.2)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | [notice] To update, run: pip install --upgrade pip\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Running tests...\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | ----------------------------------------------------------------------\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr (tests.test_def.TestDefinition) ... ok (0.014s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Definition (pronto.definition)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.definition.Definition ... ok (0.623s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   definition (pronto.entity.Entity)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.entity.Entity.definition ... ok (0.316s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   obsolete (pronto.entity.Entity)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.entity.Entity.obsolete ... ok (2.225s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   relationships (pronto.entity.Entity)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.entity.Entity.relationships ... ok (2.681s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   __len__ (pronto.ontology.Ontology)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.ontology.Ontology.__len__ ... ok (2.280s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   dump (pronto.ontology.Ontology)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.ontology.Ontology.dump ... ok (3.747s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   dumps (pronto.ontology.Ontology)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.ontology.Ontology.dumps ... ok (0.291s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   from_obo_library (pronto.ontology.Ontology)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.ontology.Ontology.from_obo_library ... ok (5.275s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   relationships (pronto.ontology.Ontology)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.ontology.Ontology.relationships ... ok (0.678s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   terms (pronto.ontology.Ontology)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.ontology.Ontology.terms ... ok (0.737s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   superproperties (pronto.relationship.RelationshipSet)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.relationship.RelationshipSet.superproperties ... ok (0.754s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   is_leaf (pronto.term.Term)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.term.Term.is_leaf ... ok (2.154s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   objects (pronto.term.Term)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.term.Term.objects ... ok (1.559s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   subclasses (pronto.term.Term)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.term.Term.subclasses ... ok (2.376s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   superclasses (pronto.term.Term)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.term.Term.superclasses ... ok (2.558s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   superclasses (pronto.term.TermSet)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.term.TermSet.superclasses ... ok (2.404s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   Xref (pronto.xref)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.xref.Xref ... ok (0.401s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   to_set (pronto.logic.lineage.TermIterator)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.logic.lineage.TermIterator.to_set ... ok (0.294s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   make (pronto.utils.meta.roundrepr)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Doctest: pronto.utils.meta.roundrepr.make ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_html (tests.test_documentation.TestProntoDocumentation) ... skip (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_json (tests.test_documentation.TestProntoDocumentation) ... skip (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_xml (tests.test_documentation.TestProntoDocumentation) ... skip (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_length (tests.test_entity.TestAlternateIDs) ... ok (0.145s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_alt_id_access (tests.test_issues.TestIssues) ... ok (0.160s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_class_level_clause (tests.test_issues.TestIssues) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_idspaces_serialization (tests.test_issues.TestIssues) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_tag_serialization (tests.test_issues.TestIssues)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Assert relationships which are metadata tag serialize properly. ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_nested_imports (tests.test_issues.TestIssues)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Check an ontology importing an ontology with imports can be opened. ... ok (3.478s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_parser_consistency (tests.test_issues.TestIssues)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Assert several runs on the same file give the same output. ... ok (0.747s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_rdfxml_aliased_typedef (tests.test_issues.TestIssues) ... ok (0.167s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_chains (tests.test_issues.TestIssues) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_synonym_type_in_import (tests.test_issues.TestIssues) ... ok (0.610s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_unicode_in_term_names (tests.test_issues.TestIssues)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Test if unicode characters in term names work. ... ok (0.292s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq (tests.test_logic.test_lineage.TestLineage) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_empty (tests.test_logic.test_lineage.TestSubclassesIterator) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_empty (tests.test_logic.test_lineage.TestSuperclassesIterator) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_indexing_relationship_warning (tests.test_ontology.TestOntology) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr_file (tests.test_ontology.TestOntology) ... ok (0.809s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr_file_handle (tests.test_ontology.TestOntology) ... ok (0.738s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr_new (tests.test_ontology.TestOntology) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr_path (tests.test_ontology.TestOntology) ... ok (0.738s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr_path_with_import_depth (tests.test_ontology.TestOntology) ... ok (0.759s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_threads_invalid (tests.test_ontology.TestOntology) ... ok (0.017s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_edit_relationship (tests.test_ontology.TestOntologyLineage) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_edit_term (tests.test_ontology.TestOntologyLineage) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_abox (tests.test_parser.test_obojson.TestOboJsonExamples) ... ok (0.292s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_basic (tests.test_parser.test_obojson.TestOboJsonExamples) ... expected failure (0.291s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_equiv_node_set (tests.test_parser.test_obojson.TestOboJsonExamples) ... ok (0.338s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_nucleus (tests.test_parser.test_obojson.TestOboJsonExamples) ... ok (0.298s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_obsoletion_example (tests.test_parser.test_obojson.TestOboJsonExamples) ... ok (0.298s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_aeo (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.294s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_iao (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.299s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_invalid_xml_file (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_auto_generated_by (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_data_version (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.007s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_default_namespace (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_format_version (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_imports (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_saved_by (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_cyclic (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_functional (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_multiple_labels (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.008s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_reflexive (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_subset (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_symmetric (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_consider (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.009s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_definition_as_axiom (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_definition_as_property (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_multiple_labels (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.008s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_relationship (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.007s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_subclass_of (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_subset (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_synonym_as_axiom (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.007s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_synonym_as_property (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_xref_as_axiom_with_description (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.007s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_xref_as_axiom_without_description (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_xref_as_property_resource (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_xref_as_property_text (tests.test_parser.test_rdfxml.TestRdfXMLParser) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_literal_different (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_literal_identical (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_resource_different (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_resource_same_property (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_self (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_hash_different (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_hash_identical (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_literal_different (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_literal_identical (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_resource_identical (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_type_error (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr (tests.test_pv.TestLiteralPropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_literal_different (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_literal_same_property (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_other (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_resource_different (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_resource_identical (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq_self (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_hash_different (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_hash_identical (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_literal_different (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_literal_identical (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_resource_different (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_resource_identical (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt_type_error (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr (tests.test_pv.TestResourcePropertyValue) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_properties (tests.test_relationship.TestRelationship)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Assert the data stored in data layer can be accessed in the view. ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subproperties (tests.test_relationship.TestRelationship) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_superproperties (tests.test_relationship.TestRelationship) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_add_empty (tests.test_relationship.TestRelationshipSet) ... /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/pronto/entity/__init__.py:677: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   entity = self._ontology[id_]  # type: ignore\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_and (tests.test_relationship.TestRelationshipSet) ... /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/pronto/entity/__init__.py:576: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   return map(lambda t: self._ontology[t], iter(self._ids))  # type: ignore\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_contains (tests.test_relationship.TestRelationshipSet) ... /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/tests/test_entity.py:38: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   self.assertIn(self.ont[self.t1.id], s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/tests/test_entity.py:39: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   self.assertIn(self.ont[self.t2.id], s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/tests/test_entity.py:40: DeprecationWarning: indexing an ontology to retrieve a relationship will not be supported in future versions, use `Ontology.get_relationship` directly.\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   self.assertNotIn(self.ont[self.t3.id], s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_init_typechecked (tests.test_relationship.TestRelationshipSet) ... skip (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_and (tests.test_relationship.TestRelationshipSet) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_or (tests.test_relationship.TestRelationshipSet) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_sub (tests.test_relationship.TestRelationshipSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_xor (tests.test_relationship.TestRelationshipSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_or (tests.test_relationship.TestRelationshipSet) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_sub (tests.test_relationship.TestRelationshipSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_xor (tests.test_relationship.TestRelationshipSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_auto_generated_by (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.263s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_date (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.294s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_namespace_id_rule (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.279s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_owl_axioms (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.272s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_saved_by (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.277s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_metadata_unreserved (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.266s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_alt_id (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.272s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_anonymous (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.265s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_anti_symmetric (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.285s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_asymmetric (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.276s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_comment (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.297s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_created_by (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.341s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_cylic (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.324s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_definition (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.312s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_domain (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.362s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_functional (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.330s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_inverse_functional (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.277s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_is_obsolete (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.276s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_range (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.349s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_reflexive (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.276s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_relationship (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.273s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_replaced_by (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.271s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_subset (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.283s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_symmetric (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.278s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_transitive (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.272s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_relationship_transitive_over (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.276s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subclass_add (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.295s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_superclass_add (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.272s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_alt_id (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.276s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_anonymous (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.273s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_builtin (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.287s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_comment (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.284s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_consider (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.270s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_created_by (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.284s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_creation_date (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.312s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_definition (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.281s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_disjoint_from (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.334s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_intersection_of (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.325s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_is_a (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.329s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_is_obsolete (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.339s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_replaced_by (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.295s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_union_of (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.284s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_term_xref (tests.test_serializer.test_obo.TestOboSerializer) ... ok (0.270s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_scope_invalid (tests.test_synonym.TestSynonym) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_type (tests.test_synonym.TestSynonym) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_type_setter (tests.test_synonym.TestSynonym) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_type_setter_undeclared (tests.test_synonym.TestSynonym) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_type_undeclared (tests.test_synonym.TestSynonym) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq (tests.test_synonym.TestSynonymType) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_hash (tests.test_synonym.TestSynonymType) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_init_invalid_scope (tests.test_synonym.TestSynonymType) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt (tests.test_synonym.TestSynonymType) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_add_synonym (tests.test_term.TestTerm) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_add_synonym_invalid_scope (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_add_synonym_invalid_type (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_annotations (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_consider (tests.test_term.TestTerm) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_disjoint_from (tests.test_term.TestTerm) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_intersection_of (tests.test_term.TestTerm) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_intersection_of_type_error (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_properties (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_replaced_by (tests.test_term.TestTerm) ... ok (0.006s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subclasses (tests.test_term.TestTerm) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subclasses_distance (tests.test_term.TestTerm) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subclasses_uniqueness (tests.test_term.TestTerm) ... ok (0.099s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subclasses_without_self (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_superclasses (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_superclasses_distance (tests.test_term.TestTerm) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_superclasses_uniqueness (tests.test_term.TestTerm) ... ok (0.004s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_union_of (tests.test_term.TestTerm) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_union_of_cardinality (tests.test_term.TestTerm) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_union_of_typechecked (tests.test_term.TestTerm) ... skip (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_add_empty (tests.test_term.TestTermSet) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_and (tests.test_term.TestTermSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_contains (tests.test_term.TestTermSet) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_init_typechecked (tests.test_term.TestTermSet) ... skip (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_and (tests.test_term.TestTermSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_or (tests.test_term.TestTermSet) ... ok (0.007s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_sub (tests.test_term.TestTermSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_inplace_xor (tests.test_term.TestTermSet) ... ok (0.007s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_or (tests.test_term.TestTermSet) ... ok (0.007s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr (tests.test_term.TestTermSet) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_sub (tests.test_term.TestTermSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_subclasses_uniqueness (tests.test_term.TestTermSet) ... ok (0.005s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_superclasses_uniqueness (tests.test_term.TestTermSet) ... ok (0.003s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_xor (tests.test_term.TestTermSet) ... ok (0.007s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_eq (tests.test_xref.TestXref) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_ge (tests.test_xref.TestXref) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_gt (tests.test_xref.TestXref) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_init (tests.test_xref.TestXref) ... ok (0.002s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_le (tests.test_xref.TestXref) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_lt (tests.test_xref.TestXref) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_ne (tests.test_xref.TestXref) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   test_repr (tests.test_xref.TestXref) ... ok (0.001s)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | ----------------------------------------------------------------------\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Ran 214 tests in 57.851s\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | OK (skipped=6, expected failures=1)\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generating XML reports...\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_def.TestDefinition-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-doctest.DocTestCase-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_entity.TestAlternateIDs-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_issues.TestIssues-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_logic.test_lineage.TestLineage-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_logic.test_lineage.TestSubclassesIterator-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_logic.test_lineage.TestSuperclassesIterator-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_ontology.TestOntology-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_ontology.TestOntologyLineage-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_parser.test_obojson.TestOboJsonExamples-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_parser.test_rdfxml.TestRdfXMLParser-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_pv.TestLiteralPropertyValue-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_pv.TestResourcePropertyValue-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_relationship.TestRelationship-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_relationship.TestRelationshipSet-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_serializer.test_obo.TestOboSerializer-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_synonym.TestSynonym-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_synonym.TestSynonymType-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_term.TestTerm-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_term.TestTermSet-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_xref.TestXref-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Generated XML report: ./test_reports/TEST-tests.test_documentation.TestProntoDocumentation-20230628113016.xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2705  Success - Main Test in optimized mode\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] \u2b50 Run Main Combine coverage reports\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7] user= workdir=\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Combined data file .coverage.croaker.39904.314613\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Combined data file .coverage.croaker.105.967178\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2705  Success - Main Combine coverage reports\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] \u2b50 Run Main Upload coverage to Codecov\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker cp src=/tmp/act-cache/6a098ede-7b8e-4b3b-b4e6-273f4d369dc9/act/codecov-codecov-action@v1/ dst=/var/run/act/actions/codecov-codecov-action@v1/\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v1/] user=0 workdir=\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v1/dist/index.js] user= workdir=\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | [command]/usr/bin/bash codecov.sh -n test-python-3.7 -F CPython,v3.7,Linux -Q github-action-v1.5.2 -Z\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   _____          _\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |  / ____|        | |\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | | |     ___   __| | ___  ___ _____   __\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |  \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |                               Bash-1.0.3\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;36m==>\u001b[0m git version 2.33.0 found\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;36m==>\u001b[0m curl 7.68.0 (x86_64-pc-linux-gnu) libcurl/7.68.0 OpenSSL/1.1.1f zlib/1.2.11 brotli/1.0.7 libidn2/2.2.0 libpsl/0.21.0 (+libidn2/2.2.0) libssh/0.9.3/openssl/zlib nghttp2/1.40.0 librtmp/2.3\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Release-Date: 2020-01-08\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | Features: AsynchDNS brotli GSS-API HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;90m==>\u001b[0m GitHub Actions detected.\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     Env vars used:\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |       -> GITHUB_ACTIONS:    true\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |       -> GITHUB_HEAD_REF:   \n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |       -> GITHUB_REF:        refs/heads/master\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |       -> GITHUB_REPOSITORY: althonos/pronto\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |       -> GITHUB_RUN_ID:     1\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |       -> GITHUB_SHA:        e07e1ebabc991dcf3bec0c613f03b672c789bceb\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |       -> GITHUB_WORKFLOW:   be052740-e698-4502-9eb5-b72ce90de43b\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     \u001b[0;90mproject root:\u001b[0m .\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     \u001b[0;32mYaml not found, that's ok! Learn more at\u001b[0m \u001b[0;36mhttp://docs.codecov.io/docs/codecov-yaml\u001b[0m\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;90m==>\u001b[0m Running gcov in . \u001b[0;90m(disable via -X gcov)\u001b[0m\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;90m==>\u001b[0m Python coveragepy exists \u001b[0;90mdisable via -X coveragepy\u001b[0m\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     \u001b[0;90m->\u001b[0m Running coverage xml\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;90m==>\u001b[0m Searching for coverage reports in:\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     \u001b[0;32m+\u001b[0m .\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     \u001b[0;90m->\u001b[0m Found 1 reports\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;90m==>\u001b[0m Detecting git/mercurial file structure\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;90m==>\u001b[0m Reading reports\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     \u001b[0;32m+\u001b[0m ./coverage.xml \u001b[0;90mbytes=133606\u001b[0m\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;90m==>\u001b[0m Appending adjustments\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     \u001b[0;36mhttps://docs.codecov.io/docs/fixing-reports\u001b[0m\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     \u001b[0;90m->\u001b[0m No adjustments found\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;90m==>\u001b[0m Gzipping contents\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |         12K\t/tmp/codecov.pUN0TL.gz\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;90m==>\u001b[0m Uploading reports\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     \u001b[0;90murl:\u001b[0m https://codecov.io\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     \u001b[0;90mquery:\u001b[0m branch=master&commit=e07e1ebabc991dcf3bec0c613f03b672c789bceb&build=1&build_url=http%3A%2F%2Fgithub.com%2Falthonos%2Fpronto%2Factions%2Fruns%2F1&name=test-python-3.7&tag=&slug=althonos%2Fpronto&service=github-actions&flags=CPython,v3.7,Linux&pr=&job=be052740-e698-4502-9eb5-b72ce90de43b&cmd_args=n,F,Q,Z\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;90m->\u001b[0m  Pinging Codecov\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | https://codecov.io/upload/v4?package=github-action-v1.5.2-1.0.3&token=secret&branch=master&commit=e07e1ebabc991dcf3bec0c613f03b672c789bceb&build=1&build_url=http%3A%2F%2Fgithub.com%2Falthonos%2Fpronto%2Factions%2Fruns%2F1&name=test-python-3.7&tag=&slug=althonos%2Fpronto&service=github-actions&flags=CPython,v3.7,Linux&pr=&job=be052740-e698-4502-9eb5-b72ce90de43b&cmd_args=n,F,Q,Z\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;31m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | 404\u001b[0m\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \u001b[0;90m==>\u001b[0m Uploading to Codecov\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r 98  9700    0     0  100  9529      0  20580 --:--:-- --:--:-- --:--:-- 20536\r100  9700  100   171  100  9529    368  20536 --:--:-- --:--:-- --:--:-- 20860\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   |     \u001b[0;32m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\u001b[0m\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u2757  ::error::Codecov failed with the following error: The process '/usr/bin/bash' failed with exit code 1\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)]   \u274c  Failure - Main Upload coverage to Codecov\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] exitcode '1': failure\n[be052740-e698-4502-9eb5-b72ce90de43b/Test (Linux)] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Test (Linux)' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/althonos-pronto/.github/workflows/test-crawler.yml",
        "build_tool": "unittest",
        "elapsed_time": 330.2028579711914
    }
}