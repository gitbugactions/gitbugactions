{
    "repository": "getsentry/responses",
    "stars": 3906,
    "language": "python",
    "size": 710,
    "clone_url": "https://github.com/getsentry/responses.git",
    "timestamp": "2023-06-28T10:21:46.132684Z",
    "clone_success": true,
    "number_of_actions": 5,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_query_string_matcher",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_request_matches_post_params",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_json_params_matcher_not_strict",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_json_params_matcher_not_strict_diff_values",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_json_params_matcher_json_list",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_json_params_matcher_json_list_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_urlencoded_params_matcher_blank",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_query_params_numbers",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_query_param_matcher_loose",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_query_param_matcher_loose_fail",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_request_matches_empty_body",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_request_matches_params",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_fail_matchers_error",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_multipart_matcher[Old World!-Old World!0]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_multipart_matcher[Old World!-Old World!1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_multipart_matcher[Old World!-Old World!2]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_multipart_matcher[Old World!-Old World!3]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_multipart_matcher[\\xacHello World!-\\xacHello World!]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_multipart_matcher_fail",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_query_string_matcher_raises",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_request_matches_headers",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_request_matches_headers_no_match",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_request_matches_headers_strict_match",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_fragment_identifier_matcher",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_fragment_identifier_matcher_error",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_fragment_identifier_matcher_and_match_querystring",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_matchers",
                "name": "test_matchers_create_key_val_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_multithreading",
                "name": "test_multithreading_lock[0]",
                "time": 4.447,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_multithreading",
                "name": "test_multithreading_lock[1]",
                "time": 3.974,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_multithreading",
                "name": "test_multithreading_lock[2]",
                "time": 5.726,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_multithreading",
                "name": "test_multithreading_lock[3]",
                "time": 6.17,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_multithreading",
                "name": "test_multithreading_lock[4]",
                "time": 5.844,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_multithreading",
                "name": "test_multithreading_lock[5]",
                "time": 5.736,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_multithreading",
                "name": "test_multithreading_lock[6]",
                "time": 5.757,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_multithreading",
                "name": "test_multithreading_lock[7]",
                "time": 5.529,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_multithreading",
                "name": "test_multithreading_lock[8]",
                "time": 5.423,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_multithreading",
                "name": "test_multithreading_lock[9]",
                "time": 5.674,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_recorder.TestRecord",
                "name": "test_recorder",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_recorder.TestRecord",
                "name": "test_recorder_toml",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_recorder.TestReplay",
                "name": "test_add_from_file[yaml]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_recorder.TestReplay",
                "name": "test_add_from_file[tomli_w]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_registries",
                "name": "test_set_registry_not_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_registries",
                "name": "test_set_registry",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_registries",
                "name": "test_set_registry_reversed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_registries",
                "name": "test_registry_async",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_registries",
                "name": "test_set_registry_context_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_registries",
                "name": "test_registry_reset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_registries.TestOrderedRegistry",
                "name": "test_invocation_index",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_registries.TestOrderedRegistry",
                "name": "test_not_match",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_registries.TestOrderedRegistry",
                "name": "test_empty_registry",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_encoded",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_with_instance",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_replace[http://example.com/two-http://example.com/two]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_replace[original1-replacement1]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_replace[http://example\\\\.com/two-http://example\\\\.com/two]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_replace_error[http://example.com/one-http://example\\\\.com/one]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_replace_error[http://example\\\\.com/one-http://example.com/one]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_replace_response_object_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_upsert_replace[http://example.com/two-http://example.com/two]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_upsert_replace[original1-replacement1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_upsert_replace[http://example\\\\.com/two-http://example\\\\.com/two]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_upsert_add[http://example.com/two-http://example.com/two]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_upsert_add[original1-replacement1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_upsert_add[http://example\\\\.com/two-http://example\\\\.com/two]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_remove",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_equality[args10-kwargs10-args20-kwargs20-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_equality[args11-kwargs11-args21-kwargs21-False]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_equality[args12-kwargs12-args22-kwargs22-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_equality[args13-kwargs13-args23-kwargs23-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_equality_different_objects",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_connection_error",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_match_querystring",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_match_querystring_empty",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_match_querystring_error",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_match_querystring_regex",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_match_querystring_error_regex",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_match_querystring_auto_activates",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_match_querystring_missing_key",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_accept_string_body",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_accept_json_body",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_no_content_type",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_arbitrary_status_code",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_throw_connection_error_explicit",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_callback",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_deprecated_package_attributes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_callback_deprecated_stream_argument",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_callback_deprecated_match_querystring_argument",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_callback_match_querystring_default_false",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_callback_exception_result",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_callback_exception_body",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_callback_no_content_type",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_callback_content_type_dict",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_callback_matchers",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_callback_matchers_fail",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_callback_content_type_tuple",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_regular_expression_url",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_base_response_get_response",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestAdapters",
                "name": "test_custom_adapter[CustomAdapter]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestAdapters",
                "name": "test_custom_adapter[PositionalArgsAdapter]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestAdapters",
                "name": "test_custom_adapter[PositionalArgsIncompleteAdapter]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_responses_as_context_manager",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_activate_doesnt_change_signature",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestFixtures",
                "name": "test_function",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestFixtures",
                "name": "test_function_decorated",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_activate_mock_interaction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_activate_doesnt_change_signature_with_return_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_activate_doesnt_change_signature_for_method",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_cookies",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_cookies_secure",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_cookies_multiple",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_cookies_session[True-True]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_cookies_session[True-False]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_cookies_session[True-None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_cookies_session[False-True]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_cookies_session[False-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_cookies_session[False-None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_cookies_session[None-True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_cookies_session[None-False]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_cookies_session[None-None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_callback",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_filebody",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_use_stream_twice_to_double_raw_io",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_assert_all_requests_are_fired",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_assert_all_requests_fired_multiple",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_allow_redirects_samehost",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_path_segments",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_handles_unicode_querystring",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_handles_unicode_url",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_handles_unicode_body",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_handles_buffered_reader_body",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_headers",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_content_length_error",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_stream_with_none_chunk_size",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_legacy_adding_headers",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_legacy_adding_headers_with_content_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_auto_calculate_content_length_string_body",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_auto_calculate_content_length_bytes_body",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_auto_calculate_content_length_json_body",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_auto_calculate_content_length_unicode_body",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_auto_calculate_content_length_doesnt_work_for_buffered_reader_body",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_auto_calculate_content_length_doesnt_override_existing_value",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_multiple_responses",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_multiple_responses_intermixed",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_multiple_urls",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_multiple_methods",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_passthrough_flag",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_passthrough_kwarg",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_passthrough_response",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_passthrough_response_stream",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_passthru_prefixes",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_passthru",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_passthru_regex",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_passthru_does_not_persist_across_tests",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_method_named_param",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_passthru_unicode",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_custom_target",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_request_param[http://example.com]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_request_param[http://example.com/some/path]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_request_param[http://example.com/other/path/]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_request_param_with_multiple_values_for_the_same_key",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_assert_call_count[http://example.com]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_assert_call_count[http://example.com?hello=world]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_call_count_with_matcher",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_call_count_without_matcher",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_fail_request_error",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_representations[response_params0-<Response(url='http://example.com/' status=200 content_type='text/plain' headers='null')>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_representations[response_params1-<Response(url='http://another-domain.com/' status=404 content_type='application/json' headers='null')>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_response_representations[response_params2-<Response(url='http://abcd.com/' status=500 content_type='text/html' headers='{\"X-Test\": \"foo\"}')>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_mocked_responses_list_registered",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_rfc_compliance[http://service-A/foo?q=fizz-http://service-a/foo?q=fizz]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_rfc_compliance[http://service-a/foo-http://service-A/foo]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_rfc_compliance[http://someHost-AwAy/-http://somehost-away/]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_rfc_compliance[http://fizzbuzz/foo-http://fizzbuzz/foo]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_requests_between_add",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_responses_reuse",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_async_calls",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestStrictWrapper",
                "name": "test_strict_wrapper",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestStrictWrapper",
                "name": "test_nested_decorators[True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestStrictWrapper",
                "name": "test_nested_decorators[False]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestStrictWrapper",
                "name": "test_nested_decorators[None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestMultipleWrappers",
                "name": "test_wrapped",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestMultipleWrappers",
                "name": "test_call_another_wrapped_function",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestMultipleWrappers",
                "name": "test_mock_not_leaked",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestShortcuts",
                "name": "test_delete",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestShortcuts",
                "name": "test_get",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestShortcuts",
                "name": "test_head",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestShortcuts",
                "name": "test_options",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestShortcuts",
                "name": "test_patch",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestShortcuts",
                "name": "test_post",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestShortcuts",
                "name": "test_put",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestUnitTestPatchSetup",
                "name": "test_function",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestUnitTestPatchSetupRaises",
                "name": "test_function",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_reset_in_the_middle",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_redirect",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestMaxRetry",
                "name": "test_max_retries",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestMaxRetry",
                "name": "test_max_retries_exceed[True]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestMaxRetry",
                "name": "test_max_retries_exceed[False]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestMaxRetry",
                "name": "test_max_retries_exceed_msg",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses.TestMaxRetry",
                "name": "test_adapter_retry_untouched",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "responses.tests.test_responses",
                "name": "test_request_object_attached_to_exception",
                "time": 0.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting] \ud83d\ude80  Start image=crawlergpt:latest\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ] \ud83d\ude80  Start image=crawlergpt:latest\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/getsentry-responses] user=0 workdir=\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/getsentry-responses] user=0 workdir=\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting] \u2b50 Run Main actions/checkout@v3\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   \u2705  Success - Main actions/checkout@v3\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting] \u2b50 Run Main Install dependencies\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Collecting tox\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Downloading tox-4.6.3-py3-none-any.whl (152 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Collecting colorama>=0.4.6\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Collecting packaging>=23.1\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Collecting filelock>=3.12.2\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Collecting platformdirs>=3.5.3\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Collecting virtualenv>=20.23.1\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Collecting chardet>=5.1\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Collecting cachetools>=5.3.1\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Collecting tomli>=2.0.1; python_version < \"3.11\"\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Collecting pluggy>=1\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Collecting pyproject-api>=1.5.2\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Downloading pyproject_api-1.5.2-py3-none-any.whl (12 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Collecting distlib<1,>=0.3.6\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Installing collected packages: colorama, packaging, filelock, platformdirs, distlib, virtualenv, chardet, cachetools, tomli, pluggy, pyproject-api, tox\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   WARNING: The script virtualenv is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   WARNING: The script chardetect is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   WARNING: The script tox is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | Successfully installed cachetools-5.3.1 chardet-5.1.0 colorama-0.4.6 distlib-0.3.6 filelock-3.12.2 packaging-23.1 platformdirs-3.8.0 pluggy-1.2.0 pyproject-api-1.5.2 tomli-2.0.1 tox-4.6.3 virtualenv-20.23.1\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   \u2705  Success - Main Install dependencies\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting] \u2b50 Run Main Run pre-commit\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ] \ud83e\uddea  Matrix: map[python-version:3.7 requests-version:\"requests>=2.0,<3.0\"]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ] \u2b50 Run Main actions/checkout@v3\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2705  Success - Main actions/checkout@v3\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ] \u2b50 Run Main actions/setup-python@v4\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/53ca7dcf-a8e7-47ec-960a-2e52968e32fe/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   | /var/run/act/workflow/2: line 2: tox: command not found\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting]   \u274c  Failure - Main Run pre-commit\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/linting] \ud83c\udfc1  Job failed\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2753  ::group::Installed versions\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::isExplicit: \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::explicit? false\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::explicit? true\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::explicit? true\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::explicit? true\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::explicit? true\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::explicit? true\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::explicit? true\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Successfully set up CPython (3.7.11)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2753  ::endgroup::\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2705  Success - Main actions/setup-python@v4\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2699  ::set-output:: python-version=3.7.11\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ] \u2b50 Run Main Install dependencies\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting pip\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Installing collected packages: pip\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Attempting uninstall: pip\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     Found existing installation: pip 21.2.4\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     Uninstalling pip-21.2.4:\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |       Successfully uninstalled pip-21.2.4\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Successfully installed pip-23.1.2\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting requests<3.0,>=2.0\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 1.3 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting charset-normalizer<4,>=2 (from requests<3.0,>=2.0)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 171.0/171.0 kB 3.4 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting idna<4,>=2.5 (from requests<3.0,>=2.0)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 1.3 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting urllib3<3,>=1.21.1 (from requests<3.0,>=2.0)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 5.3 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting certifi>=2017.4.17 (from requests<3.0,>=2.0)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 3.1 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Installing collected packages: urllib3, idna, charset-normalizer, certifi, requests\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Successfully installed certifi-2023.5.7 charset-normalizer-3.1.0 idna-3.4 requests-2.31.0 urllib3-2.0.3\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | [notice] To update, run: pip install --upgrade pip\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | pip install -e \"file://`pwd`#egg=responses[tests]\"\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Obtaining responses from file:///tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/getsentry-responses#egg=responses\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Installing build dependencies: started\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Installing build dependencies: finished with status 'done'\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Checking if build backend supports build_editable: started\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Checking if build backend supports build_editable: finished with status 'done'\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Getting requirements to build editable: started\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Getting requirements to build editable: finished with status 'done'\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Preparing editable metadata (pyproject.toml): started\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Requirement already satisfied: requests<3.0,>=2.30.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from responses) (2.31.0)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Requirement already satisfied: urllib3<3.0,>=2.0.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from responses) (2.0.3)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting pyyaml (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 596.3/596.3 kB 23.0 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting types-PyYAML (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading types_PyYAML-6.0.12.10-py3-none-any.whl (14 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting typing-extensions (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting pytest>=7.0.0 (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 24.1 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting coverage>=6.0.0 (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading coverage-7.2.7-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (225 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 225.6/225.6 kB 11.7 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting pytest-cov (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting pytest-asyncio (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading pytest_asyncio-0.21.0-py3-none-any.whl (13 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting pytest-httpserver (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading pytest_httpserver-1.0.6-py3-none-any.whl (17 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting flake8 (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading flake8-5.0.4-py2.py3-none-any.whl (61 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.9/61.9 kB 1.8 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting types-requests (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading types_requests-2.31.0.1-py3-none-any.whl (14 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting mypy (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading mypy-1.4.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.6/11.6 MB 39.4 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting tomli-w (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading tomli_w-1.0.0-py3-none-any.whl (6.0 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting tomli (from responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting iniconfig (from pytest>=7.0.0->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting packaging (from pytest>=7.0.0->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 1.4 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting pluggy<2.0,>=0.12 (from pytest>=7.0.0->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest>=7.0.0->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting importlib-metadata>=0.12 (from pytest>=7.0.0->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests<3.0,>=2.30.0->responses) (3.1.0)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests<3.0,>=2.30.0->responses) (3.4)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests<3.0,>=2.30.0->responses) (2023.5.7)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting mccabe<0.8.0,>=0.7.0 (from flake8->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting pycodestyle<2.10.0,>=2.9.0 (from flake8->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading pycodestyle-2.9.1-py2.py3-none-any.whl (41 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.5/41.5 kB 1.6 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting pyflakes<2.6.0,>=2.5.0 (from flake8->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading pyflakes-2.5.0-py2.py3-none-any.whl (66 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 66.1/66.1 kB 5.2 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting importlib-metadata>=0.12 (from pytest>=7.0.0->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading importlib_metadata-4.2.0-py3-none-any.whl (16 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting mypy-extensions>=1.0.0 (from mypy->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting typed-ast<2,>=1.4.0 (from mypy->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (843 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 843.7/843.7 kB 2.5 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting Werkzeug>=2.0.0 (from pytest-httpserver->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading Werkzeug-2.2.3-py3-none-any.whl (233 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 233.6/233.6 kB 7.4 MB/s eta 0:00:00\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting types-urllib3 (from types-requests->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading types_urllib3-1.26.25.13-py3-none-any.whl (15 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting zipp>=0.5 (from importlib-metadata>=0.12->pytest>=7.0.0->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Collecting MarkupSafe>=2.1.1 (from Werkzeug>=2.0.0->pytest-httpserver->responses)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Downloading MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Building wheels for collected packages: responses\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Building editable for responses (pyproject.toml): started\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Building editable for responses (pyproject.toml): finished with status 'done'\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Created wheel for responses: filename=responses-0.23.1-0.editable-py3-none-any.whl size=17345 sha256=6c52da95eedf7d5ff4dd97fd25ba3f225a21f0450bf7a6297438051f477d181b\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-qwj4duul/wheels/76/4c/b2/0d2238b95460a0be1d4d7e96db569f62efded7aa5169f0cc19\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Successfully built responses\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Installing collected packages: types-urllib3, types-PyYAML, zipp, typing-extensions, types-requests, typed-ast, tomli-w, tomli, pyyaml, pyflakes, pycodestyle, packaging, mypy-extensions, mccabe, MarkupSafe, iniconfig, exceptiongroup, coverage, Werkzeug, responses, mypy, importlib-metadata, pytest-httpserver, pluggy, flake8, pytest, pytest-cov, pytest-asyncio\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Successfully installed MarkupSafe-2.1.3 Werkzeug-2.2.3 coverage-7.2.7 exceptiongroup-1.1.1 flake8-5.0.4 importlib-metadata-4.2.0 iniconfig-2.0.0 mccabe-0.7.0 mypy-1.4.1 mypy-extensions-1.0.0 packaging-23.1 pluggy-1.2.0 pycodestyle-2.9.1 pyflakes-2.5.0 pytest-7.4.0 pytest-asyncio-0.21.0 pytest-cov-4.1.0 pytest-httpserver-1.0.6 pyyaml-6.0 responses-0.23.1 tomli-2.0.1 tomli-w-1.0.0 typed-ast-1.5.4 types-PyYAML-6.0.12.10 types-requests-2.31.0.1 types-urllib3-1.26.25.13 typing-extensions-4.6.3 zipp-3.15.0\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | [notice] To update, run: pip install --upgrade pip\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2705  Success - Main Install dependencies\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ] \u2b50 Run Main Run Pytest\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | ============================= test session starts ==============================\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | platform linux -- Python 3.7.11, pytest-7.4.0, pluggy-1.2.0\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/getsentry-responses\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | plugins: cov-4.1.0, httpserver-1.0.6, asyncio-0.21.0\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | asyncio: mode=auto\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | collected 201 items\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_matchers.py ...........................             [ 13%]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_multithreading.py ..........                        [ 18%]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_recorder.py ....                                    [ 20%]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_registries.py .........                             [ 24%]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py ...................................... [ 43%]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | ........................................................................ [ 79%]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | .........................................                                [100%]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | =============================== warnings summary ===============================\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_matchers.py: 2 warnings\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py: 8 warnings\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/getsentry-responses/responses/__init__.py:422: DeprecationWarning: Argument 'match_querystring' is deprecated. Use 'responses.matchers.query_param_matcher' or 'responses.matchers.query_string_matcher'\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     DeprecationWarning,\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_recorder.py::TestRecord::test_recorder\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/_pytest/fixtures.py:895: PytestRemovedIn8Warning: Support for nose tests is deprecated and will be removed in a future release.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   responses/tests/test_recorder.py::TestRecord::test_recorder is using nose-specific method: `setup(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   To remove this warning, rename it to `setup_method(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   See docs: https://docs.pytest.org/en/stable/deprecations.html#support-for-tests-written-for-nose\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     fixture_result = next(generator)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_recorder.py::TestRecord::test_recorder_toml\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/_pytest/fixtures.py:895: PytestRemovedIn8Warning: Support for nose tests is deprecated and will be removed in a future release.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   responses/tests/test_recorder.py::TestRecord::test_recorder_toml is using nose-specific method: `setup(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   To remove this warning, rename it to `setup_method(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   See docs: https://docs.pytest.org/en/stable/deprecations.html#support-for-tests-written-for-nose\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     fixture_result = next(generator)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_recorder.py::TestReplay::test_add_from_file[yaml]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/_pytest/fixtures.py:895: PytestRemovedIn8Warning: Support for nose tests is deprecated and will be removed in a future release.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   responses/tests/test_recorder.py::TestReplay::test_add_from_file[yaml] is using nose-specific method: `setup(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   To remove this warning, rename it to `setup_method(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   See docs: https://docs.pytest.org/en/stable/deprecations.html#support-for-tests-written-for-nose\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     fixture_result = next(generator)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_recorder.py::TestReplay::test_add_from_file[yaml]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/_pytest/fixtures.py:911: PytestRemovedIn8Warning: Support for nose tests is deprecated and will be removed in a future release.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   responses/tests/test_recorder.py::TestReplay::test_add_from_file[yaml] is using nose-specific method: `teardown(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   To remove this warning, rename it to `teardown_method(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   See docs: https://docs.pytest.org/en/stable/deprecations.html#support-for-tests-written-for-nose\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     next(it)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_recorder.py::TestReplay::test_add_from_file[tomli_w]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/_pytest/fixtures.py:895: PytestRemovedIn8Warning: Support for nose tests is deprecated and will be removed in a future release.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   responses/tests/test_recorder.py::TestReplay::test_add_from_file[tomli_w] is using nose-specific method: `setup(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   To remove this warning, rename it to `setup_method(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   See docs: https://docs.pytest.org/en/stable/deprecations.html#support-for-tests-written-for-nose\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     fixture_result = next(generator)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_recorder.py::TestReplay::test_add_from_file[tomli_w]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/_pytest/fixtures.py:911: PytestRemovedIn8Warning: Support for nose tests is deprecated and will be removed in a future release.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   responses/tests/test_recorder.py::TestReplay::test_add_from_file[tomli_w] is using nose-specific method: `teardown(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   To remove this warning, rename it to `teardown_method(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   See docs: https://docs.pytest.org/en/stable/deprecations.html#support-for-tests-written-for-nose\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     next(it)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py::test_response_cookies_session[True-True]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py::test_response_cookies_session[True-False]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py::test_response_cookies_session[True-None]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py::test_response_cookies_session[False-True]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py::test_response_cookies_session[False-False]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py::test_response_cookies_session[False-None]\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py::test_response_filebody\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py::test_use_stream_twice_to_double_raw_io\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/getsentry-responses/responses/__init__.py:557: DeprecationWarning: stream argument is deprecated. Use stream parameter in request directly\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     DeprecationWarning,\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py::TestUnitTestPatchSetup::test_function\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/_pytest/fixtures.py:895: PytestRemovedIn8Warning: Support for nose tests is deprecated and will be removed in a future release.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   responses/tests/test_responses.py::TestUnitTestPatchSetup::test_function is using nose-specific method: `setup(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   To remove this warning, rename it to `setup_method(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   See docs: https://docs.pytest.org/en/stable/deprecations.html#support-for-tests-written-for-nose\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     fixture_result = next(generator)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py::TestUnitTestPatchSetup::test_function\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/_pytest/fixtures.py:911: PytestRemovedIn8Warning: Support for nose tests is deprecated and will be removed in a future release.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   responses/tests/test_responses.py::TestUnitTestPatchSetup::test_function is using nose-specific method: `teardown(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   To remove this warning, rename it to `teardown_method(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   See docs: https://docs.pytest.org/en/stable/deprecations.html#support-for-tests-written-for-nose\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     next(it)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py::TestUnitTestPatchSetupRaises::test_function\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/_pytest/fixtures.py:895: PytestRemovedIn8Warning: Support for nose tests is deprecated and will be removed in a future release.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   responses/tests/test_responses.py::TestUnitTestPatchSetupRaises::test_function is using nose-specific method: `setup(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   To remove this warning, rename it to `setup_method(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   See docs: https://docs.pytest.org/en/stable/deprecations.html#support-for-tests-written-for-nose\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     fixture_result = next(generator)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py::TestUnitTestPatchSetupRaises::test_function\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/_pytest/fixtures.py:911: PytestRemovedIn8Warning: Support for nose tests is deprecated and will be removed in a future release.\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   responses/tests/test_responses.py::TestUnitTestPatchSetupRaises::test_function is using nose-specific method: `teardown(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   To remove this warning, rename it to `teardown_method(self)`\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |   See docs: https://docs.pytest.org/en/stable/deprecations.html#support-for-tests-written-for-nose\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     next(it)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/getsentry-responses/report.xml -\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Name                                     Stmts   Miss  Cover   Missing\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | ----------------------------------------------------------------------\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/__init__.py                      516      0   100%\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/_recorder.py                      49      0   100%\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/matchers.py                      172      0   100%\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/registries.py                     60      0   100%\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/__init__.py                  0      0   100%\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_matchers.py           283      0   100%\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_multithreading.py      19      0   100%\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_recorder.py            99      2    98%   14-16\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_registries.py         103      0   100%\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | responses/tests/test_responses.py         1418      0   100%\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | ----------------------------------------------------------------------\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | TOTAL                                     2719      2    99%\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Coverage XML written to file coverage.xml\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | \n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | ====================== 201 passed, 28 warnings in 58.85s =======================\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u2705  Success - Main Run Pytest\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ] \u2b50 Run Main Code Coverage Report\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/53ca7dcf-a8e7-47ec-960a-2e52968e32fe/act/codecov-codecov-action@v3/ dst=/var/run/act/actions/codecov-codecov-action@v3/\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v3/] user=0 workdir=\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v3/dist/index.js] user= workdir=\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Error: Cannot find module 'node:http'\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | Require stack:\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   | - /run/act/actions/codecov-codecov-action@v3/dist/index.js\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:889:15)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     at Function.Module._load (internal/modules/cjs/loader.js:745:27)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     at Module.require (internal/modules/cjs/loader.js:961:19)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     at require (internal/modules/cjs/helpers.js:92:18)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     at /run/act/actions/codecov-codecov-action@v3/webpack:/codecov-action/external node-commonjs \"node:http\":1:1\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     at /run/act/actions/codecov-codecov-action@v3/dist/index.js:24630:3\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     at Object.<anonymous> (/run/act/actions/codecov-codecov-action@v3/dist/index.js:24633:12)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     at Module._compile (internal/modules/cjs/loader.js:1072:14)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     at Object.Module._extensions..js (internal/modules/cjs/loader.js:1101:10)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   |     at Module.load (internal/modules/cjs/loader.js:937:32)\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ]   \u274c  Failure - Main Code Coverage Report\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ] exitcode '1': failure\n[0f2eb8e5-184f-402f-8601-a593e3f4c494/tests  ] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'linting' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/getsentry-responses/.github/workflows/ci-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 228.3601791858673
    }
}