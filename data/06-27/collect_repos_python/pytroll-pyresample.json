{
    "repository": "pytroll/pyresample",
    "stars": 303,
    "language": "python",
    "size": 16942,
    "clone_url": "https://github.com/pytroll/pyresample.git",
    "timestamp": "2023-06-28T10:38:07.560201Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "pyresample.test.test_area_config.TestLegacyAreaParser",
                "name": "test_area_file_not_found_exception",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_area_config.TestLegacyAreaParser",
                "name": "test_area_parser_legacy",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_area_config.TestLegacyAreaParser",
                "name": "test_commented",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_area_config.TestLegacyAreaParser",
                "name": "test_load_area",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_area_config.TestLegacyAreaParser",
                "name": "test_not_found_exception",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_area_config.TestYAMLAreaParser",
                "name": "test_area_parser_yaml",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_area_config.TestYAMLAreaParser",
                "name": "test_dynamic_area_parser_passes_resolution",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_area_config.TestYAMLAreaParser",
                "name": "test_dynamic_area_parser_yaml",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_area_config.TestYAMLAreaParser",
                "name": "test_multiple_file_content",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_calc_abc",
                "time": 0.39,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_class_resample_method",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_create_empty_bil_info",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_get_bil_info",
                "time": 0.194,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_get_four_closest_corners",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_get_fractional_distances",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_get_fractional_distances_division_by_zero",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_get_fractional_distances_irregular",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_get_fractional_distances_parallellogram",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_get_fractional_distances_uprights_parallel",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_get_input_xy",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_get_sample_from_bil_info",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_get_sample_from_bil_info_1d",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_init",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_resample_bilinear",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestNumpyBilinear",
                "name": "test_solve_quadratic",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_add_missing_coordinates",
                "time": 0.154,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_calc_abc",
                "time": 0.713,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_class_resample_method",
                "time": 0.593,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_create_empty_bil_info",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_create_resample_kdtree",
                "time": 0.157,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_bil_info",
                "time": 0.461,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_corner",
                "time": 0.489,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_four_closest_corners",
                "time": 1.7,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_fractional_distances",
                "time": 0.364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_fractional_distances_division_by_zero",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_fractional_distances_irregular",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_fractional_distances_parallellogram",
                "time": 0.134,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_fractional_distances_uprights_parallel",
                "time": 0.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_index_array",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_input_xy",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_sample_from_bil_info",
                "time": 0.477,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_sample_from_bil_info_1d",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_sample_from_cached_bil_info",
                "time": 0.465,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_slices",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_get_valid_input_index",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_init",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_lonlat2xyz",
                "time": 0.142,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_query_no_distance",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_save_and_load_bil_info",
                "time": 0.417,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_slice_data",
                "time": 0.412,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_slice_data_1d",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear.TestXarrayBilinear",
                "name": "test_solve_quadratic",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear",
                "name": "test_check_fill_value",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bilinear",
                "name": "test_target_has_invalid_coordinates",
                "time": 3.991,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_boundary.TestAreaBoundary",
                "name": "test_contour",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_boundary.TestAreaBoundary",
                "name": "test_creation",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_boundary.TestAreaBoundary",
                "name": "test_creation_from_lonlat_sides",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_boundary.TestAreaBoundary",
                "name": "test_number_sides_required",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_boundary.TestAreaBoundary",
                "name": "test_vertices_property",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_abs_max",
                "time": 0.193,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_average_basic",
                "time": 0.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_average_only_nan_input",
                "time": 0.777,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_average_skipna_false",
                "time": 0.427,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_average_skipna_true",
                "time": 0.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_average_with_fill_value_in_input",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_average_with_fillvalue_for_output",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_bucket_indices",
                "time": 0.126,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_count",
                "time": 0.176,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_max",
                "time": 0.134,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_min",
                "time": 0.141,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_proj_coordinates",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_sum_nan_data_skipna_false",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_sum_nan_data_skipna_true",
                "time": 0.196,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_get_sum_valid_data",
                "time": 0.39,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_init",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_resample_bucket_fractions",
                "time": 2.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_bucket.Test",
                "name": "test_round_to_resolution",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-False-float32-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.189,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-False-float32-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-False-float32-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-False-float32-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-False-float64-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-False-float64-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-False-float64-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-False-float64-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-False-int8-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.158,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-False-int8-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not properly support integer inputs.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-False-int8-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-False-int8-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not properly support integer inputs.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-True-float32-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.155,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-True-float32-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-True-float32-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-True-float32-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-True-float64-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.152,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-True-float64-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-True-float64-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-True-float64-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-True-int8-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.171,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-True-int8-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not properly support integer inputs.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-True-int8-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[10-True-int8-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not properly support integer inputs.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-False-float32-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.124,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-False-float32-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not support rows_per_scan of 0.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-False-float32-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.219,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-False-float32-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not support rows_per_scan of 0.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-False-float64-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-False-float64-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not support rows_per_scan of 0.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-False-float64-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.168,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-False-float64-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not support rows_per_scan of 0.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-False-int8-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-False-int8-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not properly support integer inputs.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-False-int8-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.197,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-False-int8-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not properly support integer inputs.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-True-float32-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.11,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-True-float32-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not support rows_per_scan of 0.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-True-float32-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.197,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-True-float32-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not support rows_per_scan of 0.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-True-float64-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-True-float64-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not support rows_per_scan of 0.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-True-float64-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.211,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-True-float64-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not support rows_per_scan of 0.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-True-int8-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.11,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-True-int8-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not properly support integer inputs.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-True-int8-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.171,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[0-True-int8-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not properly support integer inputs.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-False-float32-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.135,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-False-float32-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-False-float32-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-False-float32-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.483,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-False-float64-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-False-float64-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.243,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-False-float64-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.169,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-False-float64-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-False-int8-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-False-int8-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not properly support integer inputs.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-False-int8-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.216,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-False-int8-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not properly support integer inputs.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-True-float32-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-True-float32-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-True-float32-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-True-float32-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.54,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-True-float64-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.139,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-True-float64-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-True-float64-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.201,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-True-float64-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-True-int8-input_shape0-input_dims0-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.124,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-True-int8-input_shape0-input_dims0-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not properly support integer inputs.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-True-int8-input_shape1-input_dims1-DaskEWAResampler-pyresample.ewa.dask_ewa]",
                "time": 0.224,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_basic_ewa[100-True-int8-input_shape1-input_dims1-LegacyDaskEWAResampler-pyresample.ewa._legacy_dask_ewa]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Legacy dask resampler does not properly support integer inputs.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[False-float32-10-input_shape0-input_dims0]",
                "time": 0.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[False-float32-input_chunks1-input_shape1-input_dims1]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[False-float32-10-input_shape2-input_dims2]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[False-float64-10-input_shape0-input_dims0]",
                "time": 0.175,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[False-float64-input_chunks1-input_shape1-input_dims1]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[False-float64-10-input_shape2-input_dims2]",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[False-int8-10-input_shape0-input_dims0]",
                "time": 0.152,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[False-int8-input_chunks1-input_shape1-input_dims1]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[False-int8-10-input_shape2-input_dims2]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[True-float32-10-input_shape0-input_dims0]",
                "time": 0.145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[True-float32-input_chunks1-input_shape1-input_dims1]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[True-float32-10-input_shape2-input_dims2]",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[True-float64-10-input_shape0-input_dims0]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[True-float64-input_chunks1-input_shape1-input_dims1]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[True-float64-10-input_shape2-input_dims2]",
                "time": 0.243,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[True-int8-10-input_shape0-input_dims0]",
                "time": 0.174,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[True-int8-input_chunks1-input_shape1-input_dims1]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_xarray_ewa_empty[True-int8-10-input_shape2-input_dims2]",
                "time": 0.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_numpy_basic_ewa[input_shape0-input_dims0-False]",
                "time": 0.135,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_numpy_basic_ewa[input_shape1-input_dims1-True]",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_compare_to_legacy[input_shape0-input_dims0-False]",
                "time": 0.383,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_compare_to_legacy[input_shape1-input_dims1-False]",
                "time": 0.556,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_compare_to_legacy[input_shape2-input_dims2-True]",
                "time": 0.419,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_compare_to_legacy[input_shape3-input_dims3-True]",
                "time": 0.641,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_bad_input[input_shape0-input_dims0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_bad_input[input_shape1-input_dims1-False]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_bad_input[input_shape2-input_dims2-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_bad_input[input_shape3-input_dims3-True]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_dask_ewa.TestDaskEWAResampler",
                "name": "test_multiple_targets",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_data_reduce.Test",
                "name": "test_area_con_cartesian_reduce",
                "time": 0.512,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_data_reduce.Test",
                "name": "test_area_con_reduce",
                "time": 0.442,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_data_reduce.Test",
                "name": "test_cartesian_reduce",
                "time": 0.495,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_data_reduce.Test",
                "name": "test_reduce",
                "time": 0.433,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_data_reduce.Test",
                "name": "test_reduce_boundary",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_data_reduce.Test",
                "name": "test_reduce_north_pole",
                "time": 0.156,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_fornav.TestFornav",
                "name": "test_fornav_swath_larger",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_fornav.TestFornav",
                "name": "test_fornav_swath_one_scan_geo_nans",
                "time": 0.484,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_fornav.TestFornav",
                "name": "test_fornav_swath_smaller",
                "time": 0.137,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_fornav.TestFornav",
                "name": "test_fornav_swath_smaller_int8",
                "time": 0.125,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_fornav.TestFornav",
                "name": "test_fornav_swath_wide_input",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_fornav.TestFornavWrapper",
                "name": "test_fornav_swath_larger_float32",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_ll2cr.TestLL2CRStatic",
                "name": "test_geo_antimeridian",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_ll2cr.TestLL2CRStatic",
                "name": "test_lcc_basic1",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_ll2cr.TestLL2CRStatic",
                "name": "test_lcc_fail1",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_ll2cr.TestLL2CRDynamic",
                "name": "test_latlong_basic1",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_ll2cr.TestLL2CRDynamic",
                "name": "test_latlong_basic2",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_ll2cr.TestLL2CRDynamic",
                "name": "test_latlong_dateline1",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_ewa_ll2cr.TestLL2CRWrapper",
                "name": "test_basic1",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestBaseDefinition",
                "name": "test_base_type",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestStackedAreaDefinition",
                "name": "test_append",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestStackedAreaDefinition",
                "name": "test_get_lonlats",
                "time": 11.204,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestStackedAreaDefinition",
                "name": "test_combine_area_extents",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestStackedAreaDefinition",
                "name": "test_append_area_defs_fail",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestStackedAreaDefinition",
                "name": "test_append_area_defs",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_freeze",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_freeze_when_area_is_optimized_and_has_a_resolution",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_freeze_when_area_is_optimized_and_a_resolution_is_provided",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_freeze_longlat_antimeridian[False-lats0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_freeze_longlat_antimeridian[False-lats1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_freeze_longlat_antimeridian[False-lats2]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_freeze_longlat_antimeridian[False-lats3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_freeze_longlat_antimeridian[True-lats0]",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_freeze_longlat_antimeridian[True-lats1]",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_freeze_longlat_antimeridian[True-lats2]",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_freeze_longlat_antimeridian[True-lats3]",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_freeze_with_bb",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_compute_domain",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_antimeridian_mode[False-None-expected_shape0-expected_extents0-include_proj_components0-exclude_proj_components0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_antimeridian_mode[False-modify_extents-expected_shape1-expected_extents1-include_proj_components1-exclude_proj_components1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_antimeridian_mode[False-modify_crs-expected_shape2-expected_extents2-include_proj_components2-exclude_proj_components2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_antimeridian_mode[False-global_extents-expected_shape3-expected_extents3-include_proj_components3-exclude_proj_components3]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_antimeridian_mode[True-None-expected_shape0-expected_extents0-include_proj_components0-exclude_proj_components0]",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_antimeridian_mode[True-modify_extents-expected_shape1-expected_extents1-include_proj_components1-exclude_proj_components1]",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_antimeridian_mode[True-modify_crs-expected_shape2-expected_extents2-include_proj_components2-exclude_proj_components2]",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_antimeridian_mode[True-global_extents-expected_shape3-expected_extents3-include_proj_components3-exclude_proj_components3]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_create_area_def_dynamic_areas",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry_legacy.TestDynamicAreaDefinition",
                "name": "test_create_area_def_dynamic_omerc",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_get_projection_coordinates_area_to_area",
                "time": 0.145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_get_projection_coordinates_swath_to_area",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_get_gradients",
                "time": 1.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_get_chunk_mappings",
                "time": 0.57,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_get_src_poly_area",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_get_src_poly_swath",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_get_dst_poly",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_filter_data",
                "time": 0.622,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_resample_area_to_area_2d",
                "time": 0.192,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_resample_area_to_area_2d_fill_value",
                "time": 0.165,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_resample_area_to_area_3d",
                "time": 0.162,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_resample_area_to_area_3d_single_channel",
                "time": 0.147,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_resample_swath_to_area_2d",
                "time": 0.133,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestOGradientResampler",
                "name": "test_resample_swath_to_area_3d",
                "time": 0.147,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_precompute_generates_indices",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resampler_accepts_only_dataarrays_if_not_2d",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resampler_returns_the_right_shape",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resampler_returns_a_dataarray",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resampler_returns_a_dataarray_with_correct_area_attribute",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resampler_returns_a_dataarray_with_input_attributes",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resampler_returns_a_dataarray_with_input_dims",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resampler_returns_a_dataarray_with_input_coords",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resampler_returns_a_dataarray_with_correct_xy_coords",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resampler_can_take_random_dim_order",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resampler_accepts_only_bilinear_or_nn",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resample_area_to_area_2d",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resample_area_to_area_2d_fill_value",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resample_area_to_area_3d",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resample_area_to_area_does_not_flip_the_result",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resample_area_to_area_bilinear",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Area",
                "name": "test_resample_area_to_area_nn",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestRBGradientSearchResamplerArea2Swath",
                "name": "test_resampling_to_swath_is_not_implemented",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestEnsureDataArray",
                "name": "test_decorator_converts_2d_array_to_dataarrays_if_needed",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestEnsureDataArray",
                "name": "test_decorator_raises_exception_when_3d_array_is_passed",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestEnsureDataArray",
                "name": "test_decorator_transposes_input_array",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient",
                "name": "test_check_overlap",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient",
                "name": "test_get_border_lonlats_geos",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient",
                "name": "test_get_border_lonlats",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient",
                "name": "test_get_polygon",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient",
                "name": "test_gradient_resample_data",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient",
                "name": "test_parallel_gradient_search",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient",
                "name": "test_concatenate_chunks",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient",
                "name": "test_concatenate_chunks_stack_calls",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestGradientCython",
                "name": "test_index_search_works",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestGradientCython",
                "name": "test_index_search_with_data_requested_outside_bottom_right_boundary",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_gradient.TestGradientCython",
                "name": "test_index_search_with_data_requested_outside_top_left_boundary",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_grid.Test",
                "name": "test_from_latlon",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_grid.Test",
                "name": "test_generate_linesample",
                "time": 0.693,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_grid.Test",
                "name": "test_latlons",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_grid.Test",
                "name": "test_latlons_mp",
                "time": 0.175,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_grid.Test",
                "name": "test_linesample",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_grid.Test",
                "name": "test_linesample_multi",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_grid.Test",
                "name": "test_proj4_string",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_grid.Test",
                "name": "test_proj_coords",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_grid.Test",
                "name": "test_resampled_image",
                "time": 0.677,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_grid.Test",
                "name": "test_resampled_image_masked",
                "time": 0.793,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_grid.Test",
                "name": "test_resampled_image_mp",
                "time": 0.699,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_grid.Test",
                "name": "test_single_lonlat",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_bilinear",
                "time": 3.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_bilinear_multi",
                "time": 3.133,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_bilinear_swath",
                "time": 2.455,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_image",
                "time": 0.7,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_image_segments",
                "time": 0.719,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_masked_image",
                "time": 0.861,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_masked_image_fill",
                "time": 0.84,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_nearest_neighbour",
                "time": 4.582,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_nearest_neighbour_multi",
                "time": 4.653,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_nearest_neighbour_multi_preproc",
                "time": 4.485,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_nearest_resize",
                "time": 6.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_nearest_swath",
                "time": 0.55,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_nearest_swath_segments",
                "time": 0.724,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_image.Test",
                "name": "test_return_type",
                "time": 0.663,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_custom",
                "time": 0.816,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_custom_base",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_custom_multi",
                "time": 1.21,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_custom_multi_from_sample",
                "time": 1.668,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_custom_uncert",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_dtype",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_gauss",
                "time": 0.832,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_gauss_base",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_gauss_fwhm",
                "time": 0.835,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_gauss_multi",
                "time": 1.239,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_gauss_multi_mp",
                "time": 1.835,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_gauss_multi_mp_segments",
                "time": 1.944,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_gauss_multi_mp_segments_empty",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_gauss_multi_uncert",
                "time": 1.586,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_gauss_sparse",
                "time": 0.753,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_gauss_uncert",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_masked_fill_float",
                "time": 0.86,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_masked_fill_int",
                "time": 0.767,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_masked_full",
                "time": 0.778,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_masked_full_multi",
                "time": 1.185,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_masked_gauss",
                "time": 1.462,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_masked_multi_from_sample",
                "time": 1.216,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_masked_nearest",
                "time": 0.903,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_masked_nearest_1d",
                "time": 0.598,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest",
                "time": 0.631,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_1d",
                "time": 0.626,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_base",
                "time": 0.116,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_complex",
                "time": 0.583,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_empty",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_empty_masked",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_empty_multi",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_empty_multi_masked",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_from_sample",
                "time": 0.585,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_from_sample_np_dtypes",
                "time": 0.653,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_masked_swath_target",
                "time": 0.221,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_mp",
                "time": 0.793,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_multi",
                "time": 0.62,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_multi_unraveled",
                "time": 0.705,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_remap",
                "time": 1.33,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.Test",
                "name": "test_nearest_segments",
                "time": 0.695,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.TestXArrayResamplerNN",
                "name": "test_nearest_area_2d_to_area_1n",
                "time": 0.686,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.TestXArrayResamplerNN",
                "name": "test_nearest_area_2d_to_area_1n_3d_data",
                "time": 0.763,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.TestXArrayResamplerNN",
                "name": "test_nearest_area_2d_to_area_1n_no_roi",
                "time": 1.408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.TestXArrayResamplerNN",
                "name": "test_nearest_swath_1d_mask_to_grid_1n",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.TestXArrayResamplerNN",
                "name": "test_nearest_swath_1d_mask_to_grid_8n",
                "time": 0.008,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Multiple neighbors not supported yet",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.TestXArrayResamplerNN",
                "name": "test_nearest_swath_2d_mask_to_area_1n",
                "time": 0.887,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_kd_tree.TestXArrayResamplerNN",
                "name": "test_nearest_type_preserve",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_plot.Test",
                "name": "test_add_gridlines",
                "time": 1.591,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_plot.Test",
                "name": "test_area_def2basemap",
                "time": 0.005,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "basemap is not available",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_plot.Test",
                "name": "test_easeplot",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_plot.Test",
                "name": "test_ellps2axis",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_plot.Test",
                "name": "test_orthoplot",
                "time": 0.201,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_plot.Test",
                "name": "test_plate_carreeplot",
                "time": 0.433,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_plot.Test",
                "name": "test_translate_coast_res",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_advises_on_using_mapblocks_when_source_and_destination_areas_are_the_same",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_returns_array_with_destination_area_shape",
                "time": 0.19,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_works_in_chunks",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_can_run_without_input",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_uses_input",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_returns_float_dtype",
                "time": 0.113,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_returns_int_dtype",
                "time": 0.138,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_uses_cropped_input",
                "time": 0.108,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_uses_cropped_source_area",
                "time": 0.123,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_can_add_a_new_axis",
                "time": 0.108,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_can_generate_gradient_indices",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_can_gradient_resample",
                "time": 0.386,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_passes_kwargs",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_chunks_dst_arrays",
                "time": 0.127,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_can_pass_block_info_about_source",
                "time": 0.154,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_can_pass_block_info_about_target",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_supports_3d_dst_arrays",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_supports_multiple_input_arrays",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_supports_3d_src_arrays",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_supports_3d_src_arrays_with_multiple_chunks_on_non_xy_dims",
                "time": 0.113,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_uses_custom_fill_value",
                "time": 0.11,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_supports_auto_chunks",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_supports_warns_when_chunk_size_is_too_big",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resample_blocks.TestResampleBlocksArea2Area",
                "name": "test_resample_blocks_supports_auto_chunks_and_dst_array",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestAreaSlicer",
                "name": "test_barely_touching_chunks_intersection",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestAreaSlicer",
                "name": "test_dest_area_is_outside_source_area_domain",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestAreaSlicer",
                "name": "test_dest_area_is_partly_outside_source_area_domain",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestAreaSlicer",
                "name": "test_slicing_an_area_with_infinite_bounds",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestAreaSlicer",
                "name": "test_slicing_works_with_extents_of_different_units",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestAreaSlicer",
                "name": "test_source_area_covers_dest_area",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestAreaSlicer",
                "name": "test_source_area_does_not_cover_dest_area_at_all",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestAreaSlicer",
                "name": "test_source_area_does_not_cover_dest_area_at_all_2",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestAreaSlicer",
                "name": "test_source_area_does_not_cover_dest_area_entirely",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestSwathSlicer",
                "name": "test_area_get_polygon_returns_a_polygon",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestSwathSlicer",
                "name": "test_cannot_slice_a_string",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestSwathSlicer",
                "name": "test_slicer_init",
                "time": 0.443,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestSwathSlicer",
                "name": "test_source_area_slicing_does_not_return_full_dataset",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestSwathSlicer",
                "name": "test_source_swath_slicing_does_not_return_full_dataset",
                "time": 1.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_slicer.TestSwathSlicer",
                "name": "test_swath_get_polygon_returns_a_polygon",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spatial_mp.SpatialMPTest",
                "name": "test_cartesian",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spatial_mp.SpatialMPTest",
                "name": "test_cartesian_without_ne",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestRadiansFunctions",
                "name": "test_radian_unwrapping",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSCoordinate",
                "name": "test_crosscart",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSCoordinate",
                "name": "test_distance",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSCoordinate",
                "name": "test_equality_at_antimeridian",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSCoordinate",
                "name": "test_hdistance",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSCoordinate",
                "name": "test_repr",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSCoordinate",
                "name": "test_str",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestCCoordinate",
                "name": "test_add",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestCCoordinate",
                "name": "test_cross",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestCCoordinate",
                "name": "test_dot",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestCCoordinate",
                "name": "test_eq",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestCCoordinate",
                "name": "test_mul",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestCCoordinate",
                "name": "test_ne",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestCCoordinate",
                "name": "test_norm",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestCCoordinate",
                "name": "test_normalize",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestCCoordinate",
                "name": "test_repr",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestCCoordinate",
                "name": "test_str",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestCCoordinate",
                "name": "test_to_spherical",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestArc",
                "name": "test_angle",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestArc",
                "name": "test_disjoint_arcs_crossing_antimeridian",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestArc",
                "name": "test_eq",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestArc",
                "name": "test_intersecting_arcs_crossing_antimeridian",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestArc",
                "name": "test_intersection",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestArc",
                "name": "test_ne",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestArc",
                "name": "test_str",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSphericalPolygon",
                "name": "test_area",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSphericalPolygon",
                "name": "test_consistent_radius",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSphericalPolygon",
                "name": "test_intersection",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSphericalPolygon",
                "name": "test_is_inside",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSphericalPolygon",
                "name": "test_is_inside_float32",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSphericalPolygon",
                "name": "test_union_polygons_overlap_partially",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical.TestSphericalPolygon",
                "name": "test_union_polygons_overlaps_completely",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_geometry.TestOverlap",
                "name": "test_inside",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_geometry.TestOverlap",
                "name": "test_overlap_rate",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_geometry.TestOverlap",
                "name": "test_overlaps",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_geometry.TestSphereGeometry",
                "name": "test_angle",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_geometry.TestSphereGeometry",
                "name": "test_intersects",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_check_overlap_one_polygon_entirely_inide_another",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_check_overlap_one_polygon_not_entirely_inside_another",
                "time": 0.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_check_overlap_two_polygons_having_no_overlap",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_merge_when_input_objects_do_not_overlap",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_merge_overlapping_and_nonoverlapping_objects",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_flatten_tuple_input_requires_tuple",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_flatten_tuple_input_1tuple",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_flatten_tuple_input_2tuple_of_2tuples_of_2tuples",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_flatten_tuple_input_2tuple_of_scalar_and_2tuple",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_flatten_tuple_input_3tuple_of_scalar_and_2tuple_and_2tuple_of_scalar_and_tuple",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_flatten_tuple_input_tuple_of_scalar_and_2tuple_and_2tuple_of_scalar_and_tuple_and_1tuple",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_find_union_pairs_input_one_set",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_find_union_pairs_input_two_non_overlapping_sets",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_find_union_pairs_input_two_overlapping_sets",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_find_union_pairs_input_three_sets_one_entirely_without_overlap",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_find_union_pairs_input_four_sets_where_only_two_have_overlap",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_find_union_pairs_input_three_sets_one_entirely_without_overlap_one_already_a_union",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_find_union_pairs_input_two_sets_without_overlap_one_already_a_union",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_merge_unions_input_three_sets_without_overlap",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_merge_unions_input_two_overlapping_sets",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_merge_unions_input_four_sets_one_overlapping_two_others",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_merge_unions_input_two_non_overlapping_sets",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_merge_unions_input_seven_sets_with_overlaps",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_check_keys_int_or_tuple_input_okay",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_check_keys_int_or_tuple_input_string",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_spherical_utils",
                "name": "test_check_keys_int_or_tuple_input_float",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_swath.Test",
                "name": "test_self_map",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_swath.Test",
                "name": "test_self_map_multi",
                "time": 0.499,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestPreprocessing",
                "name": "test_nearest_neighbor_area_area",
                "time": 0.417,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestPreprocessing",
                "name": "test_nearest_neighbor_area_grid",
                "time": 0.112,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestPreprocessing",
                "name": "test_nearest_neighbor_grid_area",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestPreprocessing",
                "name": "test_nearest_neighbor_grid_grid",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestMisc",
                "name": "test_convert_proj_floats",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestMisc",
                "name": "test_def2yaml_converter",
                "time": 0.144,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestMisc",
                "name": "test_proj4_radius_parameters_default",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestMisc",
                "name": "test_proj4_radius_parameters_ellps",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestMisc",
                "name": "test_proj4_radius_parameters_provided",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestMisc",
                "name": "test_proj4_radius_parameters_spherical",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestMisc",
                "name": "test_proj4_str_dict_conversion",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestMisc",
                "name": "test_proj4_str_dict_conversion_with_valueless_parameter",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestMisc",
                "name": "test_unicode_proj4_string",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestMisc",
                "name": "test_wrap_and_check",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestMisc",
                "name": "test_wrap_longitudes",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestFromRasterio",
                "name": "test_get_area_def_from_raster",
                "time": 0.152,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestFromRasterio",
                "name": "test_get_area_def_from_raster_extracts_proj_id",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestFromRasterio",
                "name": "test_get_area_def_from_raster_non_georef_value_err[0.0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestFromRasterio",
                "name": "test_get_area_def_from_raster_non_georef_value_err[0.1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestFromRasterio",
                "name": "test_get_area_def_from_raster_non_georef_respects_proj_dict[False-False]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestFromRasterio",
                "name": "test_get_area_def_from_raster_non_georef_respects_proj_dict[False-True]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestFromRasterio",
                "name": "test_get_area_def_from_raster_non_georef_respects_proj_dict[True-False]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "'gdal' not available for testing",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestFromRasterio",
                "name": "test_get_area_def_from_raster_non_georef_respects_proj_dict[True-True]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "'gdal' not available for testing",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_no_exist",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_from_not_nc",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_parameters_errors[KeyError-kwargs0]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_parameters_errors[ValueError-kwargs1]",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_parameters_errors[KeyError-kwargs2]",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_parameters_errors[ValueError-kwargs3]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_parameters_errors[ValueError-kwargs4]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_nh10km[kwargs0]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_nh10km[kwargs1]",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_nh10km[kwargs2]",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_nh10km_cfinfo[kwargs0-Polar_Stereographic_Grid-None-None]",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_nh10km_cfinfo[kwargs1-ice_conc-lat-lon]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_nh10km_cfinfo[kwargs2-ice_conc-lat-lon]",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_goes[kwargs0]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_goes[kwargs1]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_latlon[False-_prepare_cf_llwgs84-kwargs0-None-None]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_latlon[False-_prepare_cf_llwgs84-kwargs1-lat-lon]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_latlon[False-_prepare_cf_llwgs84-kwargs2-lat-lon]",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_latlon[False-_prepare_cf_llnocrs-kwargs3-lat-lon]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_latlon[False-_prepare_cf_llnocrs-kwargs4-lat-lon]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_latlon[True-_prepare_cf_llwgs84-kwargs0-None-None]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_latlon[True-_prepare_cf_llwgs84-kwargs1-lat-lon]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_latlon[True-_prepare_cf_llwgs84-kwargs2-lat-lon]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_latlon[True-_prepare_cf_llnocrs-kwargs3-lat-lon]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFAreaPublic",
                "name": "test_load_cf_latlon[True-_prepare_cf_llnocrs-kwargs4-lat-lon]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFArea_Private",
                "name": "test_cf_guess_axis_varname",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFArea_Private",
                "name": "test_cf_guess_lonlat",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFArea_Private",
                "name": "test_cf_is_valid_coordinate_standardname",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFArea_Private",
                "name": "test_cf_is_valid_coordinate_variable",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestLoadCFArea_Private",
                "name": "test_cf_load_crs_from_cf_gridmapping",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils",
                "name": "test_check_slice_orientation",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestRowAppendableArray",
                "name": "test_append_1d_arrays_and_trim_remaining_buffer",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestRowAppendableArray",
                "name": "test_append_1d_arrays_pre_allocated_appendable_array",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestRowAppendableArray",
                "name": "test_append_more_1d_arrays_than_expected",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestRowAppendableArray",
                "name": "test_append_more_rows_of_nd_arrays_than_expected",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestRowAppendableArray",
                "name": "test_append_rows_of_nd_arrays_and_trim_remaining_buffer",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestRowAppendableArray",
                "name": "test_append_rows_of_nd_arrays_to_pre_allocated_appendable_array",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_utils.TestRowAppendableArray",
                "name": "test_pre_allocation_can_double_appending_performance",
                "time": 0.167,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaHashability",
                "name": "test_area_hash[LegacyAreaDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaHashability",
                "name": "test_area_hash[AreaDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaHashability",
                "name": "test_get_array_hashable",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaComparisons",
                "name": "test_area_equal[LegacyAreaDefinition]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaComparisons",
                "name": "test_area_equal[AreaDefinition]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaComparisons",
                "name": "test_not_area_equal[LegacyAreaDefinition]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaComparisons",
                "name": "test_not_area_equal[AreaDefinition]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaComparisons",
                "name": "test_swath_equal_area[LegacySwathDefinition-LegacyAreaDefinition]",
                "time": 1.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaComparisons",
                "name": "test_swath_equal_area[LegacySwathDefinition-AreaDefinition]",
                "time": 1.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaComparisons",
                "name": "test_swath_equal_area[SwathDefinition-LegacyAreaDefinition]",
                "time": 1.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaComparisons",
                "name": "test_swath_equal_area[SwathDefinition-AreaDefinition]",
                "time": 1.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaComparisons",
                "name": "test_swath_not_equal_area[LegacySwathDefinition-LegacyAreaDefinition]",
                "time": 0.858,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaComparisons",
                "name": "test_swath_not_equal_area[LegacySwathDefinition-AreaDefinition]",
                "time": 0.838,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaComparisons",
                "name": "test_swath_not_equal_area[SwathDefinition-LegacyAreaDefinition]",
                "time": 0.829,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaComparisons",
                "name": "test_swath_not_equal_area[SwathDefinition-AreaDefinition]",
                "time": 0.85,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGridFilter",
                "name": "test_grid_filter_valid[LegacyAreaDefinition]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGridFilter",
                "name": "test_grid_filter_valid[AreaDefinition]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGridFilter",
                "name": "test_grid_filter[LegacyAreaDefinition]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGridFilter",
                "name": "test_grid_filter[AreaDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGridFilter",
                "name": "test_grid_filter2D[LegacyAreaDefinition]",
                "time": 0.2,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGridFilter",
                "name": "test_grid_filter2D[AreaDefinition]",
                "time": 0.211,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_lonlat_precomp[LegacyAreaDefinition]",
                "time": 0.45,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_lonlat_precomp[AreaDefinition]",
                "time": 0.443,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_cartesian[LegacyAreaDefinition]",
                "time": 0.502,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_cartesian[AreaDefinition]",
                "time": 0.514,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_cartopy_crs[LegacyAreaDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_cartopy_crs[AreaDefinition]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_cartopy_crs_epsg[LegacyAreaDefinition]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_cartopy_crs_epsg[AreaDefinition]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_cartopy_crs_latlon_bounds[LegacyAreaDefinition]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_cartopy_crs_latlon_bounds[AreaDefinition]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_dump[LegacyAreaDefinition]",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_dump[AreaDefinition]",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_dump_numpy_extents[LegacyAreaDefinition]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_dump_numpy_extents[AreaDefinition]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_parse_area_file[LegacyAreaDefinition]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_parse_area_file[AreaDefinition]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_projection_coordinates[LegacyAreaDefinition]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_projection_coordinates[AreaDefinition]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_area_extent_ll[LegacyAreaDefinition]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_area_extent_ll[AreaDefinition]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_latlong_area[LegacyAreaDefinition]",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_latlong_area[AreaDefinition]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_array_indices_from_lonlat_mask_actual_values[LegacyAreaDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_array_indices_from_lonlat_mask_actual_values[AreaDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_lonlat2colrow[LegacyAreaDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_lonlat2colrow[AreaDefinition]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_colrow2lonlat[LegacyAreaDefinition]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_colrow2lonlat[AreaDefinition]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_proj_coords[LegacyAreaDefinition-False]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_proj_coords[LegacyAreaDefinition-True]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_proj_coords[AreaDefinition-False]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_proj_coords[AreaDefinition-True]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_proj_coords_slices[LegacyAreaDefinition-False]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_proj_coords_slices[LegacyAreaDefinition-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_proj_coords_slices[AreaDefinition-False]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_proj_coords_slices[AreaDefinition-True]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_proj_coords_dask_names[LegacyAreaDefinition]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_proj_coords_dask_names[AreaDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_roundtrip_lonlat_array_coordinates[LegacyAreaDefinition-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_roundtrip_lonlat_array_coordinates[LegacyAreaDefinition-True]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_roundtrip_lonlat_array_coordinates[AreaDefinition-False]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_roundtrip_lonlat_array_coordinates[AreaDefinition-True]",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_lonlats_vs_get_lonlat[LegacyAreaDefinition]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_lonlats_vs_get_lonlat[AreaDefinition]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_area_corners_around_south_pole[LegacyAreaDefinition]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_area_corners_around_south_pole[AreaDefinition]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_array_indices_from_lonlat[LegacyAreaDefinition]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_array_indices_from_lonlat[AreaDefinition]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_slice_starts_stops[LegacyAreaDefinition]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_slice_starts_stops[AreaDefinition]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_proj_str[LegacyAreaDefinition]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_proj_str[AreaDefinition]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_striding[LegacyAreaDefinition]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_striding[AreaDefinition]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_lonlats_options[LegacyAreaDefinition]",
                "time": 4.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_get_lonlats_options[AreaDefinition]",
                "time": 3.75,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_area_def_geocentric_resolution[LegacyAreaDefinition]",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_area_def_geocentric_resolution[AreaDefinition]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_area_def_geocentric_resolution_latlong[LegacyAreaDefinition]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_area_def_geocentric_resolution_latlong[AreaDefinition]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_from_epsg[LegacyAreaDefinition]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_from_epsg[AreaDefinition]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_from_cf[LegacyAreaDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_from_cf[AreaDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_area_def_init_projection[LegacyAreaDefinition]",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_area_def_init_projection[AreaDefinition]",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_areadef_immutable[LegacyAreaDefinition]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_areadef_immutable[AreaDefinition]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_aggregate[LegacyAreaDefinition]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinition",
                "name": "test_aggregate[AreaDefinition]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinitionMetadata",
                "name": "test_area_def_creation_metadata",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinitionMetadata",
                "name": "test_area_def_creation_no_metadata",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefinitionMetadata",
                "name": "test_area_def_metadata_equality",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestMakeSliceDivisible",
                "name": "test_make_slice_divisible",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-meters-center0-projection0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-meters-center0-+proj=laea +lat_0=-90 +lon_0=0 +a=6371228.0 +units=m]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-meters-center0-+init=EPSG:3409]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-meters-center0-EPSG:3409]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-meters-a-projection0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-meters-a-+proj=laea +lat_0=-90 +lon_0=0 +a=6371228.0 +units=m]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-meters-a-+init=EPSG:3409]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-meters-a-EPSG:3409]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-meters-center2-projection0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-meters-center2-+proj=laea +lat_0=-90 +lon_0=0 +a=6371228.0 +units=m]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-meters-center2-+init=EPSG:3409]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-meters-center2-EPSG:3409]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-degrees-center0-projection0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-degrees-center0-+proj=laea +lat_0=-90 +lon_0=0 +a=6371228.0 +units=m]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-degrees-center0-+init=EPSG:3409]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-degrees-center0-EPSG:3409]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-degrees-a-projection0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-degrees-a-+proj=laea +lat_0=-90 +lon_0=0 +a=6371228.0 +units=m]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-degrees-a-+init=EPSG:3409]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-degrees-a-EPSG:3409]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-degrees-center2-projection0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-degrees-center2-+proj=laea +lat_0=-90 +lon_0=0 +a=6371228.0 +units=m]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-degrees-center2-+init=EPSG:3409]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[LegacyAreaDefinition-degrees-center2-EPSG:3409]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-meters-center0-projection0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-meters-center0-+proj=laea +lat_0=-90 +lon_0=0 +a=6371228.0 +units=m]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-meters-center0-+init=EPSG:3409]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-meters-center0-EPSG:3409]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-meters-a-projection0]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-meters-a-+proj=laea +lat_0=-90 +lon_0=0 +a=6371228.0 +units=m]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-meters-a-+init=EPSG:3409]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-meters-a-EPSG:3409]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-meters-center2-projection0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-meters-center2-+proj=laea +lat_0=-90 +lon_0=0 +a=6371228.0 +units=m]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-meters-center2-+init=EPSG:3409]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-meters-center2-EPSG:3409]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-degrees-center0-projection0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-degrees-center0-+proj=laea +lat_0=-90 +lon_0=0 +a=6371228.0 +units=m]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-degrees-center0-+init=EPSG:3409]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-degrees-center0-EPSG:3409]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-degrees-a-projection0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-degrees-a-+proj=laea +lat_0=-90 +lon_0=0 +a=6371228.0 +units=m]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-degrees-a-+init=EPSG:3409]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-degrees-a-EPSG:3409]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-degrees-center2-projection0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-degrees-center2-+proj=laea +lat_0=-90 +lon_0=0 +a=6371228.0 +units=m]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-degrees-center2-+init=EPSG:3409]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_base_combinations[AreaDefinition-degrees-center2-EPSG:3409]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_extra_combinations[LegacyAreaDefinition]",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_extra_combinations[AreaDefinition]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCreateAreaDef",
                "name": "test_create_area_def_nonpole_center",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGeostationaryTools",
                "name": "test_get_full_geostationary_bbox[LegacyAreaDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGeostationaryTools",
                "name": "test_get_full_geostationary_bbox[AreaDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGeostationaryTools",
                "name": "test_get_geostationary_bbox_works_with_truncated_area[LegacyAreaDefinition]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGeostationaryTools",
                "name": "test_get_geostationary_bbox_works_with_truncated_area[AreaDefinition]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGeostationaryTools",
                "name": "test_get_geostationary_bbox_works_with_truncated_area_proj_coords[LegacyAreaDefinition]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGeostationaryTools",
                "name": "test_get_geostationary_bbox_works_with_truncated_area_proj_coords[AreaDefinition]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGeostationaryTools",
                "name": "test_get_geostationary_bbox_does_not_contain_inf[LegacyAreaDefinition]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGeostationaryTools",
                "name": "test_get_geostationary_bbox_does_not_contain_inf[AreaDefinition]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGeostationaryTools",
                "name": "test_get_geostationary_bbox_returns_empty_lonlats_in_space[LegacyAreaDefinition]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGeostationaryTools",
                "name": "test_get_geostationary_bbox_returns_empty_lonlats_in_space[AreaDefinition]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGeostationaryTools",
                "name": "test_get_geostationary_bbox",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestGeostationaryTools",
                "name": "test_get_geostationary_angle_extent",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCrop",
                "name": "test_sub_area[LegacyAreaDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestCrop",
                "name": "test_sub_area[AreaDefinition]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area",
                "name": "test_enclose_areas[LegacyAreaDefinition]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area",
                "name": "test_enclose_areas[AreaDefinition]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_get_area_slices_geos_subset[LegacyAreaDefinition]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_get_area_slices_geos_subset[AreaDefinition]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_get_area_slices_geos_similar[LegacyAreaDefinition]",
                "time": 2.612,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_get_area_slices_geos_similar[AreaDefinition]",
                "time": 2.467,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_get_area_slices_geos_stereographic[LegacyAreaDefinition]",
                "time": 0.516,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_get_area_slices_geos_stereographic[AreaDefinition]",
                "time": 0.477,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_get_area_slices_geos_flipped_xy[LegacyAreaDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_get_area_slices_geos_flipped_xy[AreaDefinition]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_get_area_slices_geos_epsg_lonlat[LegacyAreaDefinition]",
                "time": 24.984,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_get_area_slices_geos_epsg_lonlat[AreaDefinition]",
                "time": 25.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_get_area_slices_nongeos[LegacyAreaDefinition]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_get_area_slices_nongeos[AreaDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_on_flipped_geos_area[LegacyAreaDefinition]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_on_flipped_geos_area[AreaDefinition]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_area_to_cover_all_nan_bounds[LegacyAreaDefinition]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestAreaDefGetAreaSlices",
                "name": "test_area_to_cover_all_nan_bounds[AreaDefinition]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestBoundary",
                "name": "test_polar_south_pole_projection[LegacyAreaDefinition]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestBoundary",
                "name": "test_polar_south_pole_projection[AreaDefinition]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestBoundary",
                "name": "test_nort_pole_projection[LegacyAreaDefinition]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestBoundary",
                "name": "test_nort_pole_projection[AreaDefinition]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestBoundary",
                "name": "test_geostationary_projection[LegacyAreaDefinition]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestBoundary",
                "name": "test_geostationary_projection[AreaDefinition]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestBoundary",
                "name": "test_global_platee_caree_projection[LegacyAreaDefinition]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestBoundary",
                "name": "test_global_platee_caree_projection[AreaDefinition]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestBoundary",
                "name": "test_minimal_global_platee_caree_projection[LegacyAreaDefinition]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestBoundary",
                "name": "test_minimal_global_platee_caree_projection[AreaDefinition]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestBoundary",
                "name": "test_local_area_projection[LegacyAreaDefinition]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area.TestBoundary",
                "name": "test_local_area_projection[AreaDefinition]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_area",
                "name": "test_future_to_legacy_conversion",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathHashability",
                "name": "test_swath_as_dict_keys[LegacySwathDefinition-_gen_swath_def_numpy]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathHashability",
                "name": "test_swath_as_dict_keys[LegacySwathDefinition-_gen_swath_def_dask]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathHashability",
                "name": "test_swath_as_dict_keys[LegacySwathDefinition-_gen_swath_def_xarray_numpy]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathHashability",
                "name": "test_swath_as_dict_keys[LegacySwathDefinition-_gen_swath_def_xarray_dask]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathHashability",
                "name": "test_swath_as_dict_keys[LegacySwathDefinition-_gen_swath_def_numpy_small_noncontiguous]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathHashability",
                "name": "test_swath_as_dict_keys[SwathDefinition-_gen_swath_def_numpy]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathHashability",
                "name": "test_swath_as_dict_keys[SwathDefinition-_gen_swath_def_dask]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathHashability",
                "name": "test_swath_as_dict_keys[SwathDefinition-_gen_swath_def_xarray_numpy]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathHashability",
                "name": "test_swath_as_dict_keys[SwathDefinition-_gen_swath_def_xarray_dask]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathHashability",
                "name": "test_swath_as_dict_keys[SwathDefinition-_gen_swath_def_numpy_small_noncontiguous]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathHashability",
                "name": "test_non_contiguous_swath_hash[LegacySwathDefinition]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathHashability",
                "name": "test_non_contiguous_swath_hash[SwathDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-False-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-None-True-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-False-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-scan-True-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-False-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-half-True-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-False-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[LegacySwathDefinition-whole-True-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-False-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-None-True-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-False-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-scan-True-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-False-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-half-True-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-False-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-False-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-False-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-False-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-False-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-False-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-False-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-False-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-False-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-True-False-3.0-12.0-75.0-26.0-True]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-True-False-12.0-3.0-75.0-26.0-False]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-True-False-3.0-12.0-26.0-75.0-False]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-True-False-12.0-3.0-26.0-75.0-True]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-True-True-3.0-12.0-75.0-26.0-True]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-True-True-12.0-3.0-75.0-26.0-False]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-True-True-3.0-12.0-26.0-75.0-False]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox[SwathDefinition-whole-True-True-True-12.0-3.0-26.0-75.0-True]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox_decimated[LegacySwathDefinition]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBboxLonLats",
                "name": "test_swath_def_bbox_decimated[SwathDefinition]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_swath[LegacySwathDefinition]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_swath[SwathDefinition]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_slice[LegacySwathDefinition]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_slice[SwathDefinition]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_concat_1d[LegacySwathDefinition]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_concat_1d[SwathDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_concat_2d[LegacySwathDefinition]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_concat_2d[SwathDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_append_1d[LegacySwathDefinition]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_append_1d[SwathDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_append_2d[LegacySwathDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_append_2d[SwathDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_swath_equal[LegacySwathDefinition]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_swath_equal[SwathDefinition]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_swath_not_equal[LegacySwathDefinition]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_swath_not_equal[SwathDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_compute_omerc_params[LegacySwathDefinition]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_compute_omerc_params[SwathDefinition]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_get_edge_lonlats[LegacySwathDefinition]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_get_edge_lonlats[SwathDefinition]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_compute_optimal_bb[LegacySwathDefinition]",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_compute_optimal_bb[SwathDefinition]",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_compute_optimal_bb_with_resolution[LegacySwathDefinition]",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_compute_optimal_bb_with_resolution[SwathDefinition]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_aggregation[LegacySwathDefinition]",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_aggregation[SwathDefinition]",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_striding[LegacySwathDefinition]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_striding[SwathDefinition]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_swath_def_geocentric_resolution[LegacySwathDefinition]",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_swath_def_geocentric_resolution[SwathDefinition]",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_swath_def_geocentric_resolution_xarray_dask[LegacySwathDefinition]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_swath_def_geocentric_resolution_xarray_dask[SwathDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_crs_is_stored[LegacySwathDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_crs_is_stored[SwathDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_crs_is_created_by_default[LegacySwathDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathDefinition",
                "name": "test_crs_is_created_by_default[SwathDefinition]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBoundary",
                "name": "test_swath_definition[LegacySwathDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_geometry.test_swath.TestSwathBoundary",
                "name": "test_swath_definition[SwathDefinition]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestNearestNeighborResampler",
                "name": "test_nearest_swath_1d_mask_to_grid_1n",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestNearestNeighborResampler",
                "name": "test_nearest_type_preserve",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestNearestNeighborResampler",
                "name": "test_nearest_swath_2d_mask_to_area_1n",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestNearestNeighborResampler",
                "name": "test_nearest_area_2d_to_area_1n",
                "time": 0.146,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestNearestNeighborResampler",
                "name": "test_nearest_swath_2d_to_area_1n_pm180",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestNearestNeighborResampler",
                "name": "test_nearest_area_2d_to_area_1n_no_roi",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestNearestNeighborResampler",
                "name": "test_nearest_area_2d_to_area_1n_no_roi_no_geocentric",
                "time": 0.119,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestNearestNeighborResampler",
                "name": "test_object_type_with_warnings[data_2d_float32_numpy]",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestNearestNeighborResampler",
                "name": "test_object_type_with_warnings[data_2d_float32_dask]",
                "time": 0.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestNearestNeighborResampler",
                "name": "test_object_type_with_warnings[data_2d_float32_xarray_numpy]",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestNearestNeighborResampler",
                "name": "test_nearest_area_2d_to_area_1n_3d_data",
                "time": 0.121,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestInvalidUsageNearestNeighborResampler",
                "name": "test_mismatch_geo_data_dims[data_2d_float32_xarray_dask]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestInvalidUsageNearestNeighborResampler",
                "name": "test_mismatch_geo_data_dims[data_3d_float32_xarray_dask]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestInvalidUsageNearestNeighborResampler",
                "name": "test_mismatch_geo_data_dims_swath",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestInvalidUsageNearestNeighborResampler",
                "name": "test_inconsistent_input_shapes[.*data.*shape.*-False-area_def_stere_source]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestInvalidUsageNearestNeighborResampler",
                "name": "test_inconsistent_input_shapes[.*data.*shape.*-False-swath_def_2d_xarray_dask]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestInvalidUsageNearestNeighborResampler",
                "name": "test_inconsistent_input_shapes[.*'mask'.*shape.*-True-area_def_stere_source]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_nearest.TestInvalidUsageNearestNeighborResampler",
                "name": "test_inconsistent_input_shapes[.*'mask'.*shape.*-True-swath_def_2d_xarray_dask]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_resampler[area_def_lcc_conus_1km-swath_def_2d_numpy]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_resampler[area_def_lcc_conus_1km-swath_def_2d_dask]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_resampler[area_def_lcc_conus_1km-swath_def_2d_xarray_numpy]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_resampler[area_def_lcc_conus_1km-swath_def_2d_xarray_dask]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_base_resampler_does_nothing_when_src_and_dst_areas_are_equal[False-None]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_base_resampler_does_nothing_when_src_and_dst_areas_are_equal[True-None]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_base_resampler_does_nothing_when_src_and_dst_areas_are_equal[True-dask]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_base_resampler_does_nothing_when_src_and_dst_areas_are_equal[True-swath_def]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_base_resampler_unequal_geometries[False-False-False]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_base_resampler_unequal_geometries[False-False-True]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_base_resampler_unequal_geometries[False-True-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_base_resampler_unequal_geometries[True-False-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_base_resampler_unequal_geometries[True-False-True]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler",
                "name": "test_base_resampler_unequal_geometries[True-True-False]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler_registry.TestResamplerRegistryManipulation",
                "name": "test_no_builtins_warning",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler_registry.TestResamplerRegistryManipulation",
                "name": "test_manual_resampler_registration",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler_registry.TestResamplerRegistryManipulation",
                "name": "test_multiple_registration_warning_same_class[Resampler]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler_registry.TestResamplerRegistryManipulation",
                "name": "test_multiple_registration_warning_same_class[_MyResampler]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_resamplers.test_resampler_registry.TestBuiltinResamplerRegistry",
                "name": "test_minimal_resamplers_exist[nearest]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSPoint",
                "name": "test_creation_from_degrees",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSPoint",
                "name": "test_latitude_validity",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSPoint",
                "name": "test_longitude_validity",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSPoint",
                "name": "test_raise_error_if_multi_point",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSPoint",
                "name": "test_repr",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSPoint",
                "name": "test_str",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSPoint",
                "name": "test_to_shapely",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSPoint",
                "name": "test_vertices",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSPoint",
                "name": "test_vertices_in_degrees",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSMultiPoint",
                "name": "test_creation_from_degrees",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSMultiPoint",
                "name": "test_distance",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSMultiPoint",
                "name": "test_eq",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSMultiPoint",
                "name": "test_eq_antimeridian",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSMultiPoint",
                "name": "test_hdistance",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSMultiPoint",
                "name": "test_neq",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSMultiPoint",
                "name": "test_repr",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSMultiPoint",
                "name": "test_single_point",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSMultiPoint",
                "name": "test_str",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSMultiPoint",
                "name": "test_to_shapely",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSMultiPoint",
                "name": "test_vertices",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "pyresample.test.test_sgeom.test_point.TestSMultiPoint",
                "name": "test_vertices_in_degrees",
                "time": 0.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2] \ud83d\ude80  Start image=crawlergpt:latest\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1] \ud83d\ude80  Start image=crawlergpt:latest\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample] user=0 workdir=\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample] user=0 workdir=\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2601  git clone 'https://github.com/conda-incubator/setup-miniconda' # ref=v2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2601  git clone 'https://github.com/conda-incubator/setup-miniconda' # ref=v2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2601  git clone 'https://github.com/AndreMiras/coveralls-python-action' # ref=develop\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2601  git clone 'https://github.com/AndreMiras/coveralls-python-action' # ref=develop\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1] \ud83e\uddea  Matrix: map[experimental:false os:ubuntu-latest python-version:3.9]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1] \u2b50 Run Main Checkout source\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2705  Success - Main Checkout source\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2] \ud83e\uddea  Matrix: map[experimental:true os:ubuntu-latest python-version:3.11]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2] \u2b50 Run Main Checkout source\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1] \u2b50 Run Main Setup Conda Environment\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2705  Success - Main Checkout source\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udc33  docker cp src=/tmp/act-cache/14ed8b5a-07ac-4ca7-94c8-72de151a5081/act/conda-incubator-setup-miniconda@v2/ dst=/var/run/act/actions/conda-incubator-setup-miniconda@v2/\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/conda-incubator-setup-miniconda@v2/] user=0 workdir=\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2] \u2b50 Run Main Setup Conda Environment\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udc33  docker cp src=/tmp/act-cache/14ed8b5a-07ac-4ca7-94c8-72de151a5081/act/conda-incubator-setup-miniconda@v2/ dst=/var/run/act/actions/conda-incubator-setup-miniconda@v2/\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/conda-incubator-setup-miniconda@v2/] user=0 workdir=\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/conda-incubator-setup-miniconda@v2/dist/setup/index.js] user= workdir=\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/conda-incubator-setup-miniconda@v2/dist/setup/index.js] user= workdir=\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2753  ::group::Gathering Inputs...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::group::Gathering Inputs...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2753  ::group::Creating bootstrap condarc file in /home/runneradmin/.condarc...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2753  ::group::Ensuring installer...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | Can we use bundled Miniconda?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::group::Creating bootstrap condarc file in /home/runneradmin/.condarc...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | Can we download a custom installer by URL?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | Can we download Miniconda?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | Can we download Miniforge?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | ... will download Miniforge.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | Will fetch Mambaforge latest from https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | Ensuring Installer...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::group::Ensuring installer...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | Checking for cached Mambaforge@latest...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Can we use bundled Miniconda?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Can we download a custom installer by URL?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udcac  ::debug::isExplicit: \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Can we download Miniconda?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Can we download Miniforge?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udcac  ::debug::explicit? false\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ... will download Miniforge.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Will fetch Mambaforge latest from https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udcac  ::debug::evaluating 0 versions\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udcac  ::debug::match not found\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | Did not find Mambaforge-Linux-x86_64.sh latest in cache\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Ensuring Installer...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Checking for cached Mambaforge@latest...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udcac  ::debug::Downloading https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udcac  ::debug::Destination /tmp/25970f01-c162-4c3d-9d5a-7ce98702adf5\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udcac  ::debug::isExplicit: \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udcac  ::debug::explicit? false\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udcac  ::debug::evaluating 0 versions\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udcac  ::debug::match not found\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Did not find Mambaforge-Linux-x86_64.sh latest in cache\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udcac  ::debug::Downloading https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udcac  ::debug::Destination /tmp/9746ad20-50dd-4b1f-820b-24da4306678e\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udcac  ::debug::download complete\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Downloaded Mambaforge-Linux-x86_64.sh, ensuring extension .sh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Caching Mambaforge@latest...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udcac  ::debug::Caching tool Mambaforge latest x86_64\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udcac  ::debug::source file: /tmp/9746ad20-50dd-4b1f-820b-24da4306678e.sh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Mambaforge/latest/x86_64\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udcac  ::debug::destination file /opt/hostedtoolcache/Mambaforge/latest/x86_64/Mambaforge-Linux-x86_64.sh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udcac  ::debug::finished caching tool\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Cached Mambaforge@latest: /opt/hostedtoolcache/Mambaforge/latest/x86_64!\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::group::Running installer...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | [command]/usr/bin/bash /tmp/9746ad20-50dd-4b1f-820b-24da4306678e.sh -f -b -p 3\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | PREFIX=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udcac  ::debug::download complete\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | Downloaded Mambaforge-Linux-x86_64.sh, ensuring extension .sh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | Caching Mambaforge@latest...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udcac  ::debug::Caching tool Mambaforge latest x86_64\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udcac  ::debug::source file: /tmp/25970f01-c162-4c3d-9d5a-7ce98702adf5.sh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Mambaforge/latest/x86_64\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udcac  ::debug::destination file /opt/hostedtoolcache/Mambaforge/latest/x86_64/Mambaforge-Linux-x86_64.sh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udcac  ::debug::finished caching tool\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | Cached Mambaforge@latest: /opt/hostedtoolcache/Mambaforge/latest/x86_64!\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2753  ::group::Running installer...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | [command]/usr/bin/bash /tmp/25970f01-c162-4c3d-9d5a-7ce98702adf5.sh -f -b -p 3\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | PREFIX=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Unpacking payload ...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \ud83d\udea7  ::warning::/tmp/25970f01-c162-4c3d-9d5a-7ce98702adf5.sh: line 301: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/conda.exe: Text file busy%0A\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   | /tmp/25970f01-c162-4c3d-9d5a-7ce98702adf5.sh: line 301: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/conda.exe: Text file busy\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2757  ::error::The process '/usr/bin/bash' failed with exit code 1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u274c  Failure - Main Setup Conda Environment\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2]   \u2699  ::set-env:: INPUT_RUN_POST=true\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2] exitcode '1': failure\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting _libgcc_mutex-0.1-conda_forge.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting ca-certificates-2023.5.7-hbcca054_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting ld_impl_linux-64-2.40-h41732ed_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libstdcxx-ng-13.1.0-hfd8a6a1_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting pybind11-abi-4-hd8ed1ab_3.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting python_abi-3.10-3_cp310.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting tzdata-2023c-h71feb2d_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libgomp-13.1.0-he5830b7_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting _openmp_mutex-4.5-2_gnu.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libgcc-ng-13.1.0-he5830b7_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting bzip2-1.0.8-h7f98852_4.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting c-ares-1.19.1-hd590300_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting fmt-9.1.0-h924138e_0.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting icu-72.1-hcb278e6_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting keyutils-1.6.1-h166bdaf_0.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libbrotlicommon-1.0.9-h166bdaf_8.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libev-4.33-h516909a_1.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libffi-3.4.2-h7f98852_5.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libiconv-1.17-h166bdaf_0.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libnsl-2.0.0-h7f98852_0.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libuuid-2.38.1-h0b41bf4_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libzlib-1.2.13-hd590300_5.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting lz4-c-1.9.4-hcb278e6_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting lzo-2.10-h516909a_1000.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting ncurses-6.4-hcb278e6_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting openssl-3.1.1-hd590300_1.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting reproc-14.2.4-h0b41bf4_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting xz-5.2.6-h166bdaf_0.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting yaml-cpp-0.7.0-h27087fc_2.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libbrotlidec-1.0.9-h166bdaf_8.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libbrotlienc-1.0.9-h166bdaf_8.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libedit-3.1.20191231-he28a2e2_2.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libnghttp2-1.52.0-h61bc06f_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libsolv-0.7.24-hfc55251_1.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libsqlite-3.42.0-h2797004_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libssh2-1.11.0-h0841786_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libxml2-2.11.4-h0d562d8_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting readline-8.2-h8228510_1.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting reproc-cpp-14.2.4-hcb278e6_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting tk-8.6.12-h27826a3_0.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting zstd-1.5.2-h3eb15da_6.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting brotli-bin-1.0.9-h166bdaf_8.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting krb5-1.20.1-h81ceb04_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libarchive-3.6.2-h039dbb9_1.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting python-3.10.12-hd12c33a_0_cpython.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting brotli-1.0.9-h166bdaf_8.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting certifi-2023.5.7-pyhd8ed1ab_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting charset-normalizer-3.1.0-pyhd8ed1ab_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting colorama-0.4.6-pyhd8ed1ab_0.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting idna-3.4-pyhd8ed1ab_0.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libcurl-8.1.2-h409715c_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting pluggy-1.2.0-pyhd8ed1ab_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting pycosat-0.6.4-py310h5764c6d_1.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting pycparser-2.21-pyhd8ed1ab_0.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting pysocks-1.7.1-pyha2e5f31_6.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting ruamel.yaml.clib-0.2.7-py310h1fa729e_1.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting setuptools-68.0.0-pyhd8ed1ab_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting toolz-0.12.0-pyhd8ed1ab_0.tar.bz2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting wheel-0.40.0-pyhd8ed1ab_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting cffi-1.15.1-py310h255011f_3.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libmamba-1.4.2-hcea66bb_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting pip-23.1.2-pyhd8ed1ab_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting ruamel.yaml-0.17.32-py310h2372a71_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting tqdm-4.65.0-pyhd8ed1ab_1.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting urllib3-2.0.3-pyhd8ed1ab_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting cryptography-41.0.1-py310h75e40e8_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting libmambapy-1.4.2-py310h1428755_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting requests-2.31.0-pyhd8ed1ab_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting zstandard-0.19.0-py310h1275a96_2.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting conda-package-streaming-0.8.0-pyhd8ed1ab_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting pyopenssl-23.2.0-pyhd8ed1ab_1.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting conda-package-handling-2.0.2-pyh38be061_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting conda-23.1.0-py310hff52083_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Extracting mamba-1.4.2-py310h51d5547_0.conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Installing base environment...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |                                            __\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |           __  ______ ___  ____ _____ ___  / /_  ____ _\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |          / / / / __ `__ \\/ __ `/ __ `__ \\/ __ \\/ __ `/\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |         / /_/ / / / / / / /_/ / / / / / / /_/ / /_/ /\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |        / .___/_/ /_/ /_/\\__,_/_/ /_/ /_/_.___/\\__,_/\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |       /_/\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Transaction\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Prefix: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Updating specs:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::_libgcc_mutex==0.1=conda_forge[md5=d7c89558ba9fa0495403155b64376d81]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::ca-certificates==2023.5.7=hbcca054_0[md5=f5c65075fc34438d5b456c7f3f5ab695]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::ld_impl_linux-64==2.40=h41732ed_0[md5=7aca3059a1729aa76c597603f10b0dd3]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libstdcxx-ng==13.1.0=hfd8a6a1_0[md5=067bcc23164642f4c226da631f2a2e1d]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::pybind11-abi==4=hd8ed1ab_3[md5=878f923dd6acc8aeb47a75da6c4098be]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::python_abi==3.10=3_cp310[md5=4eb33d14d794b0f4be116443ffed3853]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::tzdata==2023c=h71feb2d_0[md5=939e3e74d8be4dac89ce83b20de2492a]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libgomp==13.1.0=he5830b7_0[md5=56ca14d57ac29a75d23a39eb3ee0ddeb]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::_openmp_mutex==4.5=2_gnu[md5=73aaf86a425cc6e73fcf236a5a46396d]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libgcc-ng==13.1.0=he5830b7_0[md5=cd93f779ff018dd85c7544c015c9db3c]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::bzip2==1.0.8=h7f98852_4[md5=a1fd65c7ccbf10880423d82bca54eb54]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::c-ares==1.19.1=hd590300_0[md5=e8c18d865be43e2fb3f7a145b6adf1f5]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::fmt==9.1.0=h924138e_0[md5=b57864c85261a0fbc7132d2cc17478c7]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::icu==72.1=hcb278e6_0[md5=7c8d20d847bb45f56bd941578fcfa146]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::keyutils==1.6.1=h166bdaf_0[md5=30186d27e2c9fa62b45fb1476b7200e3]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libbrotlicommon==1.0.9=h166bdaf_8[md5=9194c9bf9428035a05352d031462eae4]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libev==4.33=h516909a_1[md5=6f8720dff19e17ce5d48cfe7f3d2f0a3]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libffi==3.4.2=h7f98852_5[md5=d645c6d2ac96843a2bfaccd2d62b3ac3]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libiconv==1.17=h166bdaf_0[md5=b62b52da46c39ee2bc3c162ac7f1804d]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libnsl==2.0.0=h7f98852_0[md5=39b1328babf85c7c3a61636d9cd50206]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libuuid==2.38.1=h0b41bf4_0[md5=40b61aab5c7ba9ff276c41cfffe6b80b]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libzlib==1.2.13=hd590300_5[md5=f36c115f1ee199da648e0597ec2047ad]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::lz4-c==1.9.4=hcb278e6_0[md5=318b08df404f9c9be5712aaa5a6f0bb0]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::lzo==2.10=h516909a_1000[md5=bb14fcb13341b81d5eb386423b9d2bac]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::ncurses==6.4=hcb278e6_0[md5=681105bccc2a3f7f1a837d47d39c9179]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::openssl==3.1.1=hd590300_1[md5=2e1d7b458ac8f1e3ca4e18b77add6277]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::reproc==14.2.4=h0b41bf4_0[md5=0f51393e019df1f0047ef864cd9ddeec]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::xz==5.2.6=h166bdaf_0[md5=2161070d867d1b1204ea749c8eec4ef0]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::yaml-cpp==0.7.0=h27087fc_2[md5=0449d47d8457feaa3720d4779616dde2]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libbrotlidec==1.0.9=h166bdaf_8[md5=4ae4d7795d33e02bd20f6b23d91caf82]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libbrotlienc==1.0.9=h166bdaf_8[md5=04bac51ba35ea023dc48af73c1c88c25]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libedit==3.1.20191231=he28a2e2_2[md5=4d331e44109e3f0e19b4cb8f9b82f3e1]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libnghttp2==1.52.0=h61bc06f_0[md5=613955a50485812985c059e7b269f42e]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libsolv==0.7.24=hfc55251_1[md5=9d2787f2fdcf65661e2416b2dffdb668]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libsqlite==3.42.0=h2797004_0[md5=fdaae20a1cf7cd62130a0973190a31b7]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libssh2==1.11.0=h0841786_0[md5=1f5a58e686b13bcfde88b93f547d23fe]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libxml2==2.11.4=h0d562d8_0[md5=e46fad17d5fb57316b956f88dca765e4]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::readline==8.2=h8228510_1[md5=47d31b792659ce70f470b5c82fdfb7a4]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::reproc-cpp==14.2.4=hcb278e6_0[md5=ede8e0f849f2fee2f78cb488b4ea3b33]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::tk==8.6.12=h27826a3_0[md5=5b8c42eb62e9fc961af70bdd6a26e168]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::zstd==1.5.2=h3eb15da_6[md5=6b63daed8feeca47be78f323e793d555]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::brotli-bin==1.0.9=h166bdaf_8[md5=e5613f2bc717e9945840ff474419b8e4]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::krb5==1.20.1=h81ceb04_0[md5=89a41adce7106749573d883b2f657d78]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libarchive==3.6.2=h039dbb9_1[md5=29cf970521d30d113f3425b84cb250f6]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::python==3.10.12=hd12c33a_0_cpython[md5=eb6f1df105f37daedd6dca78523baa75]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::brotli==1.0.9=h166bdaf_8[md5=2ff08978892a3e8b954397c461f18418]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::certifi==2023.5.7=pyhd8ed1ab_0[md5=5d1b71c942b8421285934dad1d891ebc]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::charset-normalizer==3.1.0=pyhd8ed1ab_0[md5=7fcff9f6f123696e940bda77bd4d6551]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::colorama==0.4.6=pyhd8ed1ab_0[md5=3faab06a954c2a04039983f2c4a50d99]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::idna==3.4=pyhd8ed1ab_0[md5=34272b248891bddccc64479f9a7fffed]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libcurl==8.1.2=h409715c_0[md5=50c873c9660ed116707ae15b663928d8]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::pluggy==1.2.0=pyhd8ed1ab_0[md5=7263924c642d22e311d9e59b839f1b33]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::pycosat==0.6.4=py310h5764c6d_1[md5=0e565d732f6660374b45d76761c09b06]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::pycparser==2.21=pyhd8ed1ab_0[md5=076becd9e05608f8dc72757d5f3a91ff]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::pysocks==1.7.1=pyha2e5f31_6[md5=2a7de29fb590ca14b5243c4c812c8025]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::ruamel.yaml.clib==0.2.7=py310h1fa729e_1[md5=2f9b517412af46255cef5e53a22c264e]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::setuptools==68.0.0=pyhd8ed1ab_0[md5=5a7739d0f57ee64133c9d32e6507c46d]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::toolz==0.12.0=pyhd8ed1ab_0[md5=92facfec94bc02d6ccf42e7173831a36]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::wheel==0.40.0=pyhd8ed1ab_0[md5=49bb0d9e60ce1db25e151780331bb5f3]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::cffi==1.15.1=py310h255011f_3[md5=800596144bb613cd7ac58b80900ce835]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libmamba==1.4.2=hcea66bb_0[md5=0b3b4c833ea1ec555063479e2ac259dc]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::pip==23.1.2=pyhd8ed1ab_0[md5=7288da0d36821349cf1126e8670292df]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::ruamel.yaml==0.17.32=py310h2372a71_0[md5=9a03abf74d5069bda767c1bce7a41e0b]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::tqdm==4.65.0=pyhd8ed1ab_1[md5=ed792aff3acb977d09c7013358097f83]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::urllib3==2.0.3=pyhd8ed1ab_0[md5=ae465d0fbf9f1979cb2d8d4043d885e2]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::cryptography==41.0.1=py310h75e40e8_0[md5=bd5501a8ae0df5ef36b9ed03035ebe3a]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::libmambapy==1.4.2=py310h1428755_0[md5=0c942ea14a0e7a9e394882a8e4405235]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::requests==2.31.0=pyhd8ed1ab_0[md5=a30144e4156cdbb236f99ebb49828f8b]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::zstandard==0.19.0=py310h1275a96_2[md5=a2b48edcd52593cdf007158ce10e1520]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::conda-package-streaming==0.8.0=pyhd8ed1ab_0[md5=ebe3230a4c1e135954eee4fb6ef8cded]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::pyopenssl==23.2.0=pyhd8ed1ab_1[md5=34f7d568bf59d18e3fef8c405cbece21]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/noarch::conda-package-handling==2.0.2=pyh38be061_0[md5=44800e9bd13143292097c65e57323038]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::conda==23.1.0=py310hff52083_0[md5=c2f5cd14bf4a8cc673f66fd9839e6602]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - conda-forge/linux-64::mamba==1.4.2=py310h51d5547_0[md5=a84d408833491f202a6d9f6d8fc696db]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Package                         Version  Build               Channel           Size\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Install:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + _libgcc_mutex                     0.1  conda_forge         conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + _openmp_mutex                     4.5  2_gnu               conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + brotli                          1.0.9  h166bdaf_8          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + brotli-bin                      1.0.9  h166bdaf_8          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + bzip2                           1.0.8  h7f98852_4          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + c-ares                         1.19.1  hd590300_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + ca-certificates              2023.5.7  hbcca054_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + certifi                      2023.5.7  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + cffi                           1.15.1  py310h255011f_3     conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + charset-normalizer              3.1.0  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + colorama                        0.4.6  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + conda                          23.1.0  py310hff52083_0     conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + conda-package-handling          2.0.2  pyh38be061_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + conda-package-streaming         0.8.0  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + cryptography                   41.0.1  py310h75e40e8_0     conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + fmt                             9.1.0  h924138e_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + icu                              72.1  hcb278e6_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + idna                              3.4  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + keyutils                        1.6.1  h166bdaf_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + krb5                           1.20.1  h81ceb04_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + ld_impl_linux-64                 2.40  h41732ed_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libarchive                      3.6.2  h039dbb9_1          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libbrotlicommon                 1.0.9  h166bdaf_8          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libbrotlidec                    1.0.9  h166bdaf_8          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libbrotlienc                    1.0.9  h166bdaf_8          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libcurl                         8.1.2  h409715c_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libedit                  3.1.20191231  he28a2e2_2          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libev                            4.33  h516909a_1          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libffi                          3.4.2  h7f98852_5          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libgcc-ng                      13.1.0  he5830b7_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libgomp                        13.1.0  he5830b7_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libiconv                         1.17  h166bdaf_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libmamba                        1.4.2  hcea66bb_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libmambapy                      1.4.2  py310h1428755_0     conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libnghttp2                     1.52.0  h61bc06f_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libnsl                          2.0.0  h7f98852_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libsolv                        0.7.24  hfc55251_1          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libsqlite                      3.42.0  h2797004_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libssh2                        1.11.0  h0841786_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libstdcxx-ng                   13.1.0  hfd8a6a1_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libuuid                        2.38.1  h0b41bf4_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libxml2                        2.11.4  h0d562d8_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libzlib                        1.2.13  hd590300_5          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + lz4-c                           1.9.4  hcb278e6_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + lzo                              2.10  h516909a_1000       conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + mamba                           1.4.2  py310h51d5547_0     conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + ncurses                           6.4  hcb278e6_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + openssl                         3.1.1  hd590300_1          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pip                            23.1.2  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pluggy                          1.2.0  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pybind11-abi                        4  hd8ed1ab_3          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pycosat                         0.6.4  py310h5764c6d_1     conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pycparser                        2.21  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pyopenssl                      23.2.0  pyhd8ed1ab_1        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pysocks                         1.7.1  pyha2e5f31_6        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + python                        3.10.12  hd12c33a_0_cpython  conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + python_abi                       3.10  3_cp310             conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + readline                          8.2  h8228510_1          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + reproc                         14.2.4  h0b41bf4_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + reproc-cpp                     14.2.4  hcb278e6_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + requests                       2.31.0  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + ruamel.yaml                   0.17.32  py310h2372a71_0     conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + ruamel.yaml.clib                0.2.7  py310h1fa729e_1     conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + setuptools                     68.0.0  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + tk                             8.6.12  h27826a3_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + toolz                          0.12.0  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + tqdm                           4.65.0  pyhd8ed1ab_1        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + tzdata                          2023c  h71feb2d_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + urllib3                         2.0.3  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + wheel                          0.40.0  pyhd8ed1ab_0        conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xz                              5.2.6  h166bdaf_0          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + yaml-cpp                        0.7.0  h27087fc_2          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + zstandard                      0.19.0  py310h1275a96_2     conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + zstd                            1.5.2  h3eb15da_6          conda-forge     Cached\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Summary:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Install: 74 packages\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Total download: 0 B\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Transaction starting\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking _libgcc_mutex-0.1-conda_forge\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking ca-certificates-2023.5.7-hbcca054_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking ld_impl_linux-64-2.40-h41732ed_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libstdcxx-ng-13.1.0-hfd8a6a1_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking pybind11-abi-4-hd8ed1ab_3\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking python_abi-3.10-3_cp310\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking tzdata-2023c-h71feb2d_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libgomp-13.1.0-he5830b7_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking _openmp_mutex-4.5-2_gnu\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libgcc-ng-13.1.0-he5830b7_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking bzip2-1.0.8-h7f98852_4\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking c-ares-1.19.1-hd590300_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking fmt-9.1.0-h924138e_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking icu-72.1-hcb278e6_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking keyutils-1.6.1-h166bdaf_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libbrotlicommon-1.0.9-h166bdaf_8\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libev-4.33-h516909a_1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libffi-3.4.2-h7f98852_5\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libiconv-1.17-h166bdaf_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libnsl-2.0.0-h7f98852_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libuuid-2.38.1-h0b41bf4_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libzlib-1.2.13-hd590300_5\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking lz4-c-1.9.4-hcb278e6_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking lzo-2.10-h516909a_1000\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking ncurses-6.4-hcb278e6_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking openssl-3.1.1-hd590300_1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking reproc-14.2.4-h0b41bf4_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking xz-5.2.6-h166bdaf_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking yaml-cpp-0.7.0-h27087fc_2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libbrotlidec-1.0.9-h166bdaf_8\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libbrotlienc-1.0.9-h166bdaf_8\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libedit-3.1.20191231-he28a2e2_2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libnghttp2-1.52.0-h61bc06f_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libsolv-0.7.24-hfc55251_1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libsqlite-3.42.0-h2797004_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libssh2-1.11.0-h0841786_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libxml2-2.11.4-h0d562d8_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking readline-8.2-h8228510_1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking reproc-cpp-14.2.4-hcb278e6_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking tk-8.6.12-h27826a3_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking zstd-1.5.2-h3eb15da_6\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking brotli-bin-1.0.9-h166bdaf_8\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking krb5-1.20.1-h81ceb04_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libarchive-3.6.2-h039dbb9_1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking python-3.10.12-hd12c33a_0_cpython\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking brotli-1.0.9-h166bdaf_8\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking certifi-2023.5.7-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking charset-normalizer-3.1.0-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking colorama-0.4.6-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking idna-3.4-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libcurl-8.1.2-h409715c_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking pluggy-1.2.0-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking pycosat-0.6.4-py310h5764c6d_1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking pycparser-2.21-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking pysocks-1.7.1-pyha2e5f31_6\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking ruamel.yaml.clib-0.2.7-py310h1fa729e_1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking setuptools-68.0.0-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking toolz-0.12.0-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking wheel-0.40.0-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking cffi-1.15.1-py310h255011f_3\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libmamba-1.4.2-hcea66bb_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking pip-23.1.2-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking ruamel.yaml-0.17.32-py310h2372a71_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking tqdm-4.65.0-pyhd8ed1ab_1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking urllib3-2.0.3-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking cryptography-41.0.1-py310h75e40e8_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking libmambapy-1.4.2-py310h1428755_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking requests-2.31.0-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking zstandard-0.19.0-py310h1275a96_2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking conda-package-streaming-0.8.0-pyhd8ed1ab_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking pyopenssl-23.2.0-pyhd8ed1ab_1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking conda-package-handling-2.0.2-pyh38be061_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking conda-23.1.0-py310hff52083_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Linking mamba-1.4.2-py310h51d5547_0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Transaction finished\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | installation finished.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Mamba was found in the `base` env\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::group::Setup environment variables...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Add \"3/condabin\" to PATH\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Set 'CONDA=\"3\"'\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::group::Parsing environment...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::group::Configuring conda package cache...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | [command]/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/condabin/conda config --add pkgs_dirs /home/runneradmin/conda_pkgs_dir\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::group::Applying initial configuration...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Adding channel 'conda-forge'\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | [command]/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/condabin/conda config --add channels conda-forge\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | auto_activate_base: true\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | [command]/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/condabin/conda config --set auto_activate_base true\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | auto_update_conda: false\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | [command]/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/condabin/conda config --set auto_update_conda false\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-2] \ud83c\udfc1  Job failed\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | always_yes: true\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | [command]/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/condabin/conda config --set always_yes true\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | changeps1: false\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | [command]/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/condabin/conda config --set changeps1 false\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | [command]/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/condabin/conda config --show-sources\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ==> /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/.condarc <==\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | channels:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - conda-forge\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ==> /home/runneradmin/.condarc <==\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | auto_update_conda: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | auto_activate_base: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | notify_outdated_conda: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | changeps1: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pkgs_dirs:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - /home/runneradmin/conda_pkgs_dir\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | channels:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - conda-forge\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - defaults\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | always_yes: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | [command]/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/condabin/conda config --show\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | add_anaconda_token: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | add_pip_as_python_dependency: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | aggressive_update_packages:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - ca-certificates\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - certifi\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - openssl\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | allow_conda_downgrades: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | allow_cycles: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | allow_non_channel_urls: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | allow_softlinks: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | allowlist_channels: []\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | always_copy: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | always_softlink: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | always_yes: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | anaconda_upload: None\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | auto_activate_base: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | auto_stack: 0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | auto_update_conda: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | bld_path: \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | changeps1: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | channel_alias: https://conda.anaconda.org\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | channel_priority: flexible\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | channels:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - conda-forge\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - defaults\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | client_ssl_cert: None\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | client_ssl_cert_key: None\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | clobber: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | conda_build: {}\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | create_default_packages: []\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | croot: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/conda-bld\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | custom_channels:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   pkgs/main: https://repo.anaconda.com\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   pkgs/r: https://repo.anaconda.com\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   pkgs/pro: https://repo.anaconda.com\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | custom_multichannels:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   defaults: \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     - https://repo.anaconda.com/pkgs/main\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     - https://repo.anaconda.com/pkgs/r\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   local: \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | debug: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | default_channels:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - https://repo.anaconda.com/pkgs/main\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - https://repo.anaconda.com/pkgs/r\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | default_python: 3.10\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | default_threads: None\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | deps_modifier: not_set\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | dev: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | disallowed_packages: []\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | download_only: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | dry_run: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | enable_private_envs: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | env_prompt: ({default_env}) \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | envs_dirs:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - /home/runneradmin/.conda/envs\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | error_upload_url: https://conda.io/conda-post/unexpected-error\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | execute_threads: 1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | extra_safety_checks: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | fetch_threads: 5\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | force: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | force_32bit: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | force_reinstall: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | force_remove: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ignore_pinned: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | json: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | local_repodata_ttl: 1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | migrated_channel_aliases: []\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | migrated_custom_channels: {}\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | non_admin_enabled: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | notify_outdated_conda: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | number_channel_notices: 5\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | offline: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | override_channels_enabled: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | path_conflict: clobber\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pinned_packages: []\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pip_interop_enabled: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pkgs_dirs:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - /home/runneradmin/conda_pkgs_dir\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | proxy_servers: {}\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | quiet: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | remote_backoff_factor: 1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | remote_connect_timeout_secs: 9.15\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | remote_max_retries: 3\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | remote_read_timeout_secs: 60.0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | repodata_fns:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - current_repodata.json\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - repodata.json\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | repodata_threads: None\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | report_errors: None\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | restore_free_channel: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | rollback_enabled: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | root_prefix: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | safety_checks: warn\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | sat_solver: pycosat\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | separate_format_cache: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | shortcuts: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | show_channel_urls: None\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | signing_metadata_url_base: None\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | solver: classic\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | solver_ignore_timestamps: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ssl_verify: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | subdir: linux-64\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | subdirs:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - linux-64\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - noarch\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | target_prefix_override: \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | track_features: []\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | unsatisfiable_hints: True\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | unsatisfiable_hints_check_depth: 2\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | update_modifier: update_specs\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | use_index_cache: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | use_local: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | use_only_tar_bz2: False\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | verbosity: 0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | verify_threads: 1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::group::Initializing conda shell integration...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Removing \"/home/runneradmin/.bashrc\"\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Removing \"/home/runneradmin/.profile\"\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | [command]/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/condabin/conda init --all\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | no change     /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/condabin/conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | no change     /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/bin/conda\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | no change     /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/bin/conda-env\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | no change     /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/bin/activate\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | no change     /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/bin/deactivate\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | no change     /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/etc/profile.d/conda.sh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | no change     /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/etc/fish/conf.d/conda.fish\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | no change     /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/shell/condabin/Conda.psm1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | modified      /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/shell/condabin/conda-hook.ps1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | no change     /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/lib/python3.10/site-packages/xontrib/conda.xsh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | no change     /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/etc/profile.d/conda.csh\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | modified      /home/runneradmin/.bashrc\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | modified      /home/runneradmin/.zshrc\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | modified      /home/runneradmin/.config/fish/config.fish\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | modified      /home/runneradmin/.xonshrc\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | modified      /home/runneradmin/.tcshrc\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | modified      /home/runneradmin/.config/powershell/profile.ps1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ==> For changes to take effect, close and re-open your current shell. <==\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Renaming \"/home/runneradmin/.bashrc\" to \"/home/runneradmin/.profile\"\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Append to \"/home/runneradmin/.profile\":\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |  \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # ----------------------------------------------------------------------------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # Conda Setup Action: Basic configuration\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   set -eo pipefail\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # Conda Setup Action: Custom activation\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   conda activate \"test-environment\"\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # ---------------------------------------------------------------------------- \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Append to \"/home/runneradmin/.zshrc\":\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |  \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # ----------------------------------------------------------------------------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # Conda Setup Action: Basic configuration\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   set -eo pipefail\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # Conda Setup Action: Custom activation\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   conda activate \"test-environment\"\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # ---------------------------------------------------------------------------- \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Append to \"/home/runneradmin/.config/fish/config.fish\":\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |  \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # ----------------------------------------------------------------------------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # Conda Setup Action: Basic configuration\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   set -eo pipefail\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # Conda Setup Action: Custom activation\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   conda activate \"test-environment\"\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # ---------------------------------------------------------------------------- \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Append to \"/home/runneradmin/.tcshrc\":\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |  \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # ----------------------------------------------------------------------------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # Conda Setup Action: Basic configuration\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   set -eo pipefail\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # Conda Setup Action: Custom activation\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   conda activate \"test-environment\"\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # ---------------------------------------------------------------------------- \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Append to \"/home/runneradmin/.xonshrc\":\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |  \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # ----------------------------------------------------------------------------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # Conda Setup Action: Basic configuration\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   set -eo pipefail\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # Conda Setup Action: Custom activation\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   conda activate \"test-environment\"\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # ---------------------------------------------------------------------------- \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Append to \"/home/runneradmin/.config/powershell/profile.ps1\":\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |  \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # ----------------------------------------------------------------------------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # Conda Setup Action: Custom activation\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   conda activate \"test-environment\"\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   # ---------------------------------------------------------------------------- \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::group::Adding tools to 'base' env...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Do we need to update conda?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Do we need to update mamba?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ... we will update mamba.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udea7  ::warning::Mamba support is still experimental and can result in differently solved environments!\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ... we will perform post-install steps after we update mamba.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Do we need to update python?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Do we need to update conda-build?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | No tools were installed in 'base' env.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | `mamba` is already executable\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::group::Ensuring environment...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Can we conda create (from explicit)?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Can we conda create (simple)?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Can we conda env update?\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ... will conda env update.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Making patched copy of 'environment-file: continuous_integration/environment.yaml'\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Using: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/continuous_integration/setup-miniconda-patched-environment.yaml\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | name: test-environment\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | channels:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - conda-forge\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | dependencies:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - xarray\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - dask\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - distributed\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - donfig\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - toolz\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - Cython\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - sphinx\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - cartopy\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - pillow\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - matplotlib\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - pyyaml\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - pyproj\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - pykdtree\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - rasterio\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - coveralls\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - coverage\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - codecov\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - configobj\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - zarr\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - shapely\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - scipy\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - pytest\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - pytest-cov\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - pytest-lazy-fixture\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - importlib-metadata\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - sphinx-reredirects\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   - python=3.9\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::group::Updating 'test-environment' env from conda env update...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | [command]/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/condabin/mamba env update --name test-environment --file /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/continuous_integration/setup-miniconda-patched-environment.yaml\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Looking for: ['xarray', 'dask', 'distributed', 'donfig', 'toolz', 'cython', 'sphinx', 'cartopy', 'pillow', 'matplotlib', 'pyyaml', 'pyproj', 'pykdtree', 'rasterio', 'coveralls', 'coverage', 'codecov', 'configobj', 'zarr', 'shapely', 'scipy', 'pytest', 'pytest-cov', 'pytest-lazy-fixture', 'importlib-metadata', 'sphinx-reredirects', 'python=3.9']\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Transaction\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Prefix: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Updating specs:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - xarray\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - dask\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - distributed\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - donfig\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - toolz\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - cython\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - sphinx\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - cartopy\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - pillow\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - matplotlib\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - pyyaml\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - pyproj\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - pykdtree\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - rasterio\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - coveralls\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - coverage\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - codecov\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - configobj\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - zarr\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - shapely\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - scipy\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - pytest\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - pytest-cov\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - pytest-lazy-fixture\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - importlib-metadata\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - sphinx-reredirects\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |    - python=3.9\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Package                               Version  Build                Channel                   Size\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Install:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + _libgcc_mutex                           0.1  conda_forge          conda-forge/linux-64       3kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + _openmp_mutex                           4.5  2_gnu                conda-forge/linux-64      24kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + affine                                2.4.0  pyhd8ed1ab_0         conda-forge/noarch        19kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + alabaster                            0.7.13  pyhd8ed1ab_0         conda-forge/noarch        18kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + alsa-lib                              1.2.9  hd590300_0           conda-forge/linux-64     547kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + asciitree                             0.3.3  py_2                 conda-forge/noarch         6kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + attr                                  2.5.1  h166bdaf_1           conda-forge/linux-64      71kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + attrs                                23.1.0  pyh71513ae_1         conda-forge/noarch        55kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-c-auth                           0.6.28  hccec9ca_5           conda-forge/linux-64     102kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-c-cal                            0.5.27  hf85dbcb_0           conda-forge/linux-64      50kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-c-common                         0.8.20  hd590300_0           conda-forge/linux-64     197kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-c-compression                    0.2.17  h4b87b72_0           conda-forge/linux-64      19kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-c-event-stream                    0.3.0  hc5de78f_6           conda-forge/linux-64      54kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-c-http                            0.7.8  h412fb1b_4           conda-forge/linux-64     193kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-c-io                            0.13.26  h0d05201_0           conda-forge/linux-64     154kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-c-mqtt                           0.8.13  ha5d9b87_2           conda-forge/linux-64     151kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-c-s3                              0.3.4  h95e21fb_5           conda-forge/linux-64      81kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-c-sdkutils                       0.1.10  h4b87b72_0           conda-forge/linux-64      53kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-checksums                        0.1.16  h4b87b72_0           conda-forge/linux-64      50kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-crt-cpp                          0.20.2  h5289e1f_9           conda-forge/linux-64     321kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + aws-sdk-cpp                         1.10.57  h8101662_14          conda-forge/linux-64       4MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + babel                                2.12.1  pyhd8ed1ab_1         conda-forge/noarch         7MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + blosc                                1.21.4  h0f2a231_0           conda-forge/linux-64      49kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + bokeh                                 3.2.0  pyhd8ed1ab_0         conda-forge/noarch         6MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + boost-cpp                            1.78.0  h6582d0a_3           conda-forge/linux-64      16MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + brotli                                1.0.9  h166bdaf_9           conda-forge/linux-64      20kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + brotli-bin                            1.0.9  h166bdaf_9           conda-forge/linux-64      20kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + bzip2                                 1.0.8  h7f98852_4           conda-forge/linux-64     496kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + c-ares                               1.19.1  hd590300_0           conda-forge/linux-64     113kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + ca-certificates                    2023.5.7  hbcca054_0           conda-forge/linux-64     148kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + cairo                                1.16.0  hbbf8b49_1016        conda-forge/linux-64       1MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + cartopy                              0.21.1  py39h4bd5d67_1       conda-forge/linux-64       2MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + certifi                            2023.5.7  pyhd8ed1ab_0         conda-forge/noarch       152kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + cfitsio                               4.2.0  hd9d235c_0           conda-forge/linux-64     848kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + charset-normalizer                    3.1.0  pyhd8ed1ab_0         conda-forge/noarch        45kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + click                                 8.1.3  unix_pyhd8ed1ab_2    conda-forge/noarch        76kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + click-plugins                         1.1.1  py_0                 conda-forge/noarch         9kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + cligj                                 0.7.2  pyhd8ed1ab_1         conda-forge/noarch        10kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + cloudpickle                           2.2.1  pyhd8ed1ab_0         conda-forge/noarch        28kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + codecov                              2.1.13  pyhd8ed1ab_0         conda-forge/noarch        22kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + colorama                              0.4.6  pyhd8ed1ab_0         conda-forge/noarch        25kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + configobj                             5.0.8  pyhd8ed1ab_0         conda-forge/noarch        37kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + contourpy                             1.1.0  py39h7633fee_0       conda-forge/linux-64     221kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + coverage                              6.5.0  py39hb9d737c_1       conda-forge/linux-64     249kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + coveralls                             3.3.1  pyhd8ed1ab_0         conda-forge/noarch        17kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + curl                                  8.1.2  h409715c_0           conda-forge/linux-64      91kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + cycler                               0.11.0  pyhd8ed1ab_0         conda-forge/noarch        10kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + cython                              0.29.35  py39h3d6467e_0       conda-forge/linux-64       2MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + cytoolz                              0.12.0  py39hb9d737c_1       conda-forge/linux-64     390kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + dask                               2023.6.1  pyhd8ed1ab_0         conda-forge/noarch         7kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + dask-core                          2023.6.1  pyhd8ed1ab_0         conda-forge/noarch       849kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + dbus                                 1.13.6  h5008d03_3           conda-forge/linux-64     619kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + distributed                        2023.6.1  pyhd8ed1ab_0         conda-forge/noarch       777kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + docopt                                0.6.2  py_1                 conda-forge/noarch        15kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + docutils                             0.20.1  py39hf3d152e_0       conda-forge/linux-64     704kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + donfig                                0.7.0  pyhd8ed1ab_1         conda-forge/noarch        18kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + entrypoints                             0.4  pyhd8ed1ab_0         conda-forge/noarch         9kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + exceptiongroup                        1.1.1  pyhd8ed1ab_0         conda-forge/noarch        19kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + expat                                 2.5.0  hcb278e6_1           conda-forge/linux-64     137kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + fasteners                            0.17.3  pyhd8ed1ab_0         conda-forge/noarch        20kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + font-ttf-dejavu-sans-mono              2.37  hab24e00_0           conda-forge/noarch       397kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + font-ttf-inconsolata                  3.000  h77eed37_0           conda-forge/noarch        97kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + font-ttf-source-code-pro              2.038  h77eed37_0           conda-forge/noarch       701kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + font-ttf-ubuntu                        0.83  hab24e00_0           conda-forge/noarch         2MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + fontconfig                           2.14.2  h14ed4e7_0           conda-forge/linux-64     272kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + fonts-conda-ecosystem                     1  0                    conda-forge/noarch         4kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + fonts-conda-forge                         1  0                    conda-forge/noarch         4kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + fonttools                            4.40.0  py39hd1e30aa_0       conda-forge/linux-64       2MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + freetype                             2.12.1  hca18f0e_1           conda-forge/linux-64     626kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + freexl                                1.0.6  h166bdaf_1           conda-forge/linux-64      50kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + fsspec                             2023.6.0  pyh1a96a4e_0         conda-forge/noarch       118kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + geos                                 3.11.2  hcb278e6_0           conda-forge/linux-64       2MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + geotiff                               1.7.1  h22adcc9_9           conda-forge/linux-64     257kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + gettext                              0.21.1  h27087fc_0           conda-forge/linux-64       4MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + gflags                                2.2.2  he1b5a44_1004        conda-forge/linux-64     117kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + giflib                                5.2.1  h0b41bf4_3           conda-forge/linux-64      77kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + glib                                 2.76.3  hfc55251_0           conda-forge/linux-64     482kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + glib-tools                           2.76.3  hfc55251_0           conda-forge/linux-64     111kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + glog                                  0.6.0  h6f12383_0           conda-forge/linux-64     114kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + graphite2                            1.3.13  h58526e2_1001        conda-forge/linux-64     105kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + gst-plugins-base                     1.22.4  hf7dbed1_0           conda-forge/linux-64       3MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + gstreamer                            1.22.4  h98fc4e7_0           conda-forge/linux-64       2MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + harfbuzz                              7.3.0  hdb3a94d_0           conda-forge/linux-64       1MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + hdf4                                 4.2.15  h501b40f_6           conda-forge/linux-64     758kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + hdf5                                 1.14.0  nompi_hb72d44e_103   conda-forge/linux-64       4MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + icu                                    72.1  hcb278e6_0           conda-forge/linux-64      12MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + idna                                    3.4  pyhd8ed1ab_0         conda-forge/noarch        57kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + imagesize                             1.4.1  pyhd8ed1ab_0         conda-forge/noarch        10kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + importlib-metadata                    6.7.0  pyha770c72_0         conda-forge/noarch        26kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + importlib-resources                  5.12.0  pyhd8ed1ab_0         conda-forge/noarch         9kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + importlib_metadata                    6.7.0  hd8ed1ab_0           conda-forge/noarch         9kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + importlib_resources                  5.12.0  pyhd8ed1ab_0         conda-forge/noarch        31kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + iniconfig                             2.0.0  pyhd8ed1ab_0         conda-forge/noarch        11kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + jinja2                                3.1.2  pyhd8ed1ab_1         conda-forge/noarch       101kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + json-c                                 0.16  hc379101_0           conda-forge/linux-64     281kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + kealib                                1.5.1  h3845be2_3           conda-forge/linux-64     173kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + keyutils                              1.6.1  h166bdaf_0           conda-forge/linux-64     118kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + kiwisolver                            1.4.4  py39hf939315_1       conda-forge/linux-64      78kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + krb5                                 1.20.1  h81ceb04_0           conda-forge/linux-64       1MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + lame                                  3.100  h166bdaf_1003        conda-forge/linux-64     508kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + lcms2                                  2.15  haa2dc70_1           conda-forge/linux-64     242kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + ld_impl_linux-64                       2.40  h41732ed_0           conda-forge/linux-64     705kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + lerc                                  4.0.0  h27087fc_0           conda-forge/linux-64     282kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libabseil                        20230125.2  cxx17_h59595ed_2     conda-forge/linux-64       1MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libaec                                1.0.6  hcb278e6_1           conda-forge/linux-64      34kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libarchive                            3.6.2  h039dbb9_1           conda-forge/linux-64     844kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libarrow                             12.0.1  hc410076_0_cpu       conda-forge/linux-64      28MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libblas                               3.9.0  17_linux64_openblas  conda-forge/linux-64      14kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libbrotlicommon                       1.0.9  h166bdaf_9           conda-forge/linux-64      71kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libbrotlidec                          1.0.9  h166bdaf_9           conda-forge/linux-64      33kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libbrotlienc                          1.0.9  h166bdaf_9           conda-forge/linux-64     265kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libcap                                 2.67  he9d0100_0           conda-forge/linux-64      99kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libcblas                              3.9.0  17_linux64_openblas  conda-forge/linux-64      14kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libclang                             15.0.7  default_h7634d5b_2   conda-forge/linux-64     133kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libclang13                           15.0.7  default_h9986a30_2   conda-forge/linux-64      10MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libcrc32c                             1.1.2  h9c3ff4c_0           conda-forge/linux-64      20kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libcups                               2.3.3  h36d4200_3           conda-forge/linux-64       5MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libcurl                               8.1.2  h409715c_0           conda-forge/linux-64     373kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libdeflate                             1.18  h0b41bf4_0           conda-forge/linux-64      65kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libedit                        3.1.20191231  he28a2e2_2           conda-forge/linux-64     124kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libev                                  4.33  h516909a_1           conda-forge/linux-64     106kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libevent                             2.1.12  hf998b51_1           conda-forge/linux-64     427kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libexpat                              2.5.0  hcb278e6_1           conda-forge/linux-64      78kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libffi                                3.4.2  h7f98852_5           conda-forge/linux-64      58kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libflac                               1.4.3  h59595ed_0           conda-forge/linux-64     394kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libgcc-ng                            13.1.0  he5830b7_0           conda-forge/linux-64     776kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libgcrypt                            1.10.1  h166bdaf_0           conda-forge/linux-64     720kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libgdal                               3.7.0  h5418a03_2           conda-forge/linux-64      11MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libgfortran-ng                       13.1.0  h69a702a_0           conda-forge/linux-64      23kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libgfortran5                         13.1.0  h15d22d2_0           conda-forge/linux-64       1MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libglib                              2.76.3  hebfc3b9_0           conda-forge/linux-64       3MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libgomp                              13.1.0  he5830b7_0           conda-forge/linux-64     419kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libgoogle-cloud                      2.12.0  hac9eb74_0           conda-forge/linux-64      45MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libgpg-error                           1.47  h71f35ed_0           conda-forge/linux-64     261kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libgrpc                              1.54.2  hb20ce57_2           conda-forge/linux-64       6MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libiconv                               1.17  h166bdaf_0           conda-forge/linux-64       1MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libjpeg-turbo                       2.1.5.1  h0b41bf4_0           conda-forge/linux-64     491kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libkml                                1.3.0  h37653c0_1015        conda-forge/linux-64     625kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + liblapack                             3.9.0  17_linux64_openblas  conda-forge/linux-64      14kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libllvm15                            15.0.7  h5cf9203_2           conda-forge/linux-64      33MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libnetcdf                             4.9.2  nompi_h0f3d0bb_105   conda-forge/linux-64     841kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libnghttp2                           1.52.0  h61bc06f_0           conda-forge/linux-64     622kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libnsl                                2.0.0  h7f98852_0           conda-forge/linux-64      31kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libnuma                              2.0.16  h0b41bf4_1           conda-forge/linux-64      41kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libogg                                1.3.4  h7f98852_1           conda-forge/linux-64     211kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libopenblas                          0.3.23  pthreads_h80387f5_0  conda-forge/linux-64       5MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libopus                               1.3.1  h7f98852_1           conda-forge/linux-64     261kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libpng                               1.6.39  h753d276_0           conda-forge/linux-64     283kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libpq                                  15.3  hbcd7760_1           conda-forge/linux-64       3MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libprotobuf                         3.21.12  h3eb15da_0           conda-forge/linux-64       2MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + librttopo                             1.1.0  h0d5128d_13          conda-forge/linux-64     234kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libsndfile                            1.2.0  hb75c966_0           conda-forge/linux-64     350kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libspatialite                         5.0.1  hca56755_27          conda-forge/linux-64       3MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libsqlite                            3.42.0  h2797004_0           conda-forge/linux-64     829kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libssh2                              1.11.0  h0841786_0           conda-forge/linux-64     271kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libstdcxx-ng                         13.1.0  hfd8a6a1_0           conda-forge/linux-64       4MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libsystemd0                             253  h8c4010b_1           conda-forge/linux-64     381kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libthrift                            0.18.1  h8fd135c_2           conda-forge/linux-64       4MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libtiff                               4.5.1  h8b53f26_0           conda-forge/linux-64     418kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libutf8proc                           2.8.0  h166bdaf_0           conda-forge/linux-64     101kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libuuid                              2.38.1  h0b41bf4_0           conda-forge/linux-64      34kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libvorbis                             1.3.7  h9c3ff4c_0           conda-forge/linux-64     286kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libwebp-base                          1.3.0  h0b41bf4_0           conda-forge/linux-64     357kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libxcb                                 1.15  h0b41bf4_0           conda-forge/linux-64     384kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libxkbcommon                          1.5.0  h5d7e998_3           conda-forge/linux-64     561kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libxml2                              2.11.4  h0d562d8_0           conda-forge/linux-64     704kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libzip                                1.9.2  hc929e4a_1           conda-forge/linux-64      99kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + libzlib                              1.2.13  hd590300_5           conda-forge/linux-64      62kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + locket                                1.0.0  pyhd8ed1ab_0         conda-forge/noarch         8kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + lz4                                   4.3.2  py39h724f13c_0       conda-forge/linux-64      37kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + lz4-c                                 1.9.4  hcb278e6_0           conda-forge/linux-64     143kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + lzo                                    2.10  h516909a_1000        conda-forge/linux-64     321kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + markupsafe                            2.1.3  py39hd1e30aa_0       conda-forge/linux-64      24kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + matplotlib                            3.7.1  py39hf3d152e_0       conda-forge/linux-64       8kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + matplotlib-base                       3.7.1  py39he190548_0       conda-forge/linux-64       7MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + mpg123                               1.31.3  hcb278e6_0           conda-forge/linux-64     485kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + msgpack-python                        1.0.5  py39h4b4f3f3_0       conda-forge/linux-64      85kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + munkres                               1.1.4  pyh9f0ad1d_0         conda-forge/noarch        12kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + mysql-common                         8.0.33  hf1915f5_0           conda-forge/linux-64     782kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + mysql-libs                           8.0.33  hca2cd23_0           conda-forge/linux-64       2MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + ncurses                                 6.4  hcb278e6_0           conda-forge/linux-64     881kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + nspr                                   4.35  h27087fc_0           conda-forge/linux-64     227kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + nss                                    3.89  he45b914_0           conda-forge/linux-64       2MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + numcodecs                            0.11.0  py39h227be39_1       conda-forge/linux-64     672kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + numpy                                1.25.0  py39h6183b62_0       conda-forge/linux-64       7MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + openjpeg                              2.5.0  hfec8fc6_2           conda-forge/linux-64     352kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + openssl                               3.1.1  hd590300_1           conda-forge/linux-64       3MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + orc                                   1.8.4  h2f23424_0           conda-forge/linux-64     919kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + packaging                              23.1  pyhd8ed1ab_0         conda-forge/noarch        46kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pandas                                2.0.2  py39h40cae4c_0       conda-forge/linux-64      12MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + partd                                 1.4.0  pyhd8ed1ab_0         conda-forge/noarch        20kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pcre2                                 10.40  hc3806b6_0           conda-forge/linux-64       2MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pillow                                9.5.0  py39haaeba84_1       conda-forge/linux-64      46MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pip                                  23.1.2  pyhd8ed1ab_0         conda-forge/noarch         1MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pixman                               0.40.0  h36c2ea0_0           conda-forge/linux-64     643kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + platformdirs                          3.8.0  pyhd8ed1ab_0         conda-forge/noarch        19kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pluggy                                1.2.0  pyhd8ed1ab_0         conda-forge/noarch        22kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + ply                                    3.11  py_1                 conda-forge/noarch        45kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pooch                                 1.7.0  pyha770c72_3         conda-forge/noarch        51kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + poppler                             23.05.0  hd18248d_1           conda-forge/linux-64      15MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + poppler-data                         0.4.12  hd8ed1ab_0           conda-forge/noarch         2MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + postgresql                             15.3  hd458b1d_1           conda-forge/linux-64       5MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + proj                                  9.2.1  ha643af7_0           conda-forge/linux-64       3MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + psutil                                5.9.5  py39h72bdee0_0       conda-forge/linux-64     359kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pthread-stubs                           0.4  h36c2ea0_1001        conda-forge/linux-64       6kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pulseaudio-client                      16.1  hb77b528_4           conda-forge/linux-64     751kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pyarrow                              12.0.1  py39hfbd5978_0_cpu   conda-forge/linux-64       4MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pygments                             2.15.1  pyhd8ed1ab_0         conda-forge/noarch       841kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pykdtree                        1.3.7.post0  py39h389d5f1_0       conda-forge/linux-64      69kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pyparsing                             3.1.0  pyhd8ed1ab_0         conda-forge/noarch        89kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pyproj                                3.6.0  py39h5ed0f51_1       conda-forge/linux-64     470kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pyqt                                 5.15.7  py39h5c7b992_3       conda-forge/linux-64       5MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pyqt5-sip                           12.11.0  py39h227be39_3       conda-forge/linux-64      85kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pyshp                                 2.3.1  pyhd8ed1ab_0         conda-forge/noarch       964kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pysocks                               1.7.1  pyha2e5f31_6         conda-forge/noarch        19kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pytest                                7.4.0  pyhd8ed1ab_0         conda-forge/noarch       244kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pytest-cov                            4.1.0  pyhd8ed1ab_0         conda-forge/noarch        25kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pytest-lazy-fixture                   0.6.3  py_0                 conda-forge/noarch         8kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + python                               3.9.16  h2782a2a_0_cpython   conda-forge/linux-64      24MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + python-dateutil                       2.8.2  pyhd8ed1ab_0         conda-forge/noarch       246kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + python-tzdata                        2023.3  pyhd8ed1ab_0         conda-forge/noarch       143kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + python_abi                              3.9  3_cp39               conda-forge/linux-64       6kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pytz                                 2023.3  pyhd8ed1ab_0         conda-forge/noarch       187kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + pyyaml                                  6.0  py39hb9d737c_5       conda-forge/linux-64     184kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + qt-main                              5.15.8  hf9e2b05_14          conda-forge/linux-64      61MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + rasterio                              1.3.7  py39head80b8_2       conda-forge/linux-64       8MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + rdma-core                              28.9  h59595ed_1           conda-forge/linux-64       4MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + re2                              2023.03.02  h8c504da_0           conda-forge/linux-64     201kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + readline                                8.2  h8228510_1           conda-forge/linux-64     281kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + requests                             2.31.0  pyhd8ed1ab_0         conda-forge/noarch        57kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + s2n                                  1.3.45  h06160fa_0           conda-forge/linux-64     368kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + scipy                                1.11.0  py39h6183b62_0       conda-forge/linux-64      15MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + setuptools                           68.0.0  pyhd8ed1ab_0         conda-forge/noarch       464kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + shapely                               2.0.1  py39hf1c3bca_1       conda-forge/linux-64     422kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + sip                                   6.7.9  py39h3d6467e_0       conda-forge/linux-64     488kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + six                                  1.16.0  pyh6c4a22f_0         conda-forge/noarch        14kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + snappy                               1.1.10  h9fff704_0           conda-forge/linux-64      39kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + snowballstemmer                       2.2.0  pyhd8ed1ab_0         conda-forge/noarch        59kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + snuggs                                1.4.7  py_0                 conda-forge/noarch         8kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + sortedcontainers                      2.4.0  pyhd8ed1ab_0         conda-forge/noarch        26kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + sphinx                                7.0.1  pyhd8ed1ab_0         conda-forge/noarch         1MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + sphinx-reredirects                    0.1.2  pyhd8ed1ab_0         conda-forge/noarch        11kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + sphinxcontrib-applehelp               1.0.4  pyhd8ed1ab_0         conda-forge/noarch        29kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + sphinxcontrib-devhelp                 1.0.2  py_0                 conda-forge/noarch        23kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + sphinxcontrib-htmlhelp                2.0.1  pyhd8ed1ab_0         conda-forge/noarch        33kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + sphinxcontrib-jsmath                  1.0.1  py_0                 conda-forge/noarch         7kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + sphinxcontrib-qthelp                  1.0.3  py_0                 conda-forge/noarch        26kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + sphinxcontrib-serializinghtml         1.1.5  pyhd8ed1ab_2         conda-forge/noarch        28kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + sqlite                               3.42.0  h2c6b66d_0           conda-forge/linux-64     818kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + tblib                                 1.7.0  pyhd8ed1ab_0         conda-forge/noarch        15kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + tiledb                               2.13.2  hd532e3d_0           conda-forge/linux-64       5MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + tk                                   8.6.12  h27826a3_0           conda-forge/linux-64       3MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + toml                                 0.10.2  pyhd8ed1ab_0         conda-forge/noarch        18kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + tomli                                 2.0.1  pyhd8ed1ab_0         conda-forge/noarch        16kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + toolz                                0.12.0  pyhd8ed1ab_0         conda-forge/noarch        49kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + tornado                               6.3.2  py39hd1e30aa_0       conda-forge/linux-64     629kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + typing-extensions                     4.6.3  hd8ed1ab_0           conda-forge/noarch        10kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + typing_extensions                     4.6.3  pyha770c72_0         conda-forge/noarch        35kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + tzcode                                2023c  h0b41bf4_0           conda-forge/linux-64      69kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + tzdata                                2023c  h71feb2d_0           conda-forge/noarch       118kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + ucx                                  1.14.1  hf587318_2           conda-forge/linux-64      17MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + unicodedata2                         15.0.0  py39hb9d737c_0       conda-forge/linux-64     512kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + urllib3                               2.0.3  pyhd8ed1ab_0         conda-forge/noarch        98kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + wheel                                0.40.0  pyhd8ed1ab_0         conda-forge/noarch        56kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xarray                             2023.6.0  pyhd8ed1ab_0         conda-forge/noarch       677kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xcb-util                              0.4.0  hd590300_1           conda-forge/linux-64      20kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xcb-util-image                        0.4.0  h8ee46fc_1           conda-forge/linux-64      24kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xcb-util-keysyms                      0.4.0  h8ee46fc_1           conda-forge/linux-64      14kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xcb-util-renderutil                   0.3.9  hd590300_1           conda-forge/linux-64      17kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xcb-util-wm                           0.4.1  h8ee46fc_1           conda-forge/linux-64      52kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xerces-c                              3.2.4  h8d71039_2           conda-forge/linux-64       2MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xkeyboard-config                       2.39  hd590300_0           conda-forge/linux-64     881kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xorg-kbproto                          1.0.7  h7f98852_1002        conda-forge/linux-64      27kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xorg-libice                           1.1.1  hd590300_0           conda-forge/linux-64      58kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xorg-libsm                            1.2.4  h7391055_0           conda-forge/linux-64      27kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xorg-libx11                           1.8.6  h8ee46fc_0           conda-forge/linux-64     829kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xorg-libxau                          1.0.11  hd590300_0           conda-forge/linux-64      14kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xorg-libxdmcp                         1.1.3  h7f98852_0           conda-forge/linux-64      19kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xorg-libxext                          1.3.4  h0b41bf4_2           conda-forge/linux-64      50kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xorg-libxrender                      0.9.10  h7f98852_1003        conda-forge/linux-64      33kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xorg-renderproto                     0.11.1  h7f98852_1002        conda-forge/linux-64      10kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xorg-xextproto                        7.3.0  h0b41bf4_1003        conda-forge/linux-64      30kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xorg-xf86vidmodeproto                 2.3.1  h7f98852_1002        conda-forge/linux-64      24kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xorg-xproto                          7.0.31  h7f98852_1007        conda-forge/linux-64      75kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xyzservices                        2023.5.0  pyhd8ed1ab_1         conda-forge/noarch        36kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + xz                                    5.2.6  h166bdaf_0           conda-forge/linux-64     418kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + yaml                                  0.2.5  h7f98852_2           conda-forge/linux-64      89kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + zarr                                 2.15.0  pyhd8ed1ab_0         conda-forge/noarch       157kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + zict                                  3.0.0  pyhd8ed1ab_0         conda-forge/noarch        36kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + zipp                                 3.15.0  pyhd8ed1ab_0         conda-forge/noarch        17kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + zlib                                 1.2.13  hd590300_5           conda-forge/linux-64      93kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   + zstd                                  1.5.2  h3eb15da_6           conda-forge/linux-64     420kB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Summary:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Install: 292 packages\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Total download: 540MB\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Downloading and Extracting Packages\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \r\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Preparing transaction: ...working... done\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Verifying transaction: ...working... done\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Executing transaction: ...working... done\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | #\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | # To activate this environment, use\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | #\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | #     $ conda activate test-environment\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | #\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | # To deactivate an active environment, use\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | #\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | #     $ conda deactivate\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2753  ::endgroup::\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | setup-miniconda ran successfully\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2705  Success - Main Setup Conda Environment\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2699  ::set-env:: INPUT_RUN_POST=true\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2699  ::set-env:: CONDA=3\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2699  ::set-env:: CONDA_PKGS_DIR=/home/runneradmin/conda_pkgs_dir\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2699  ::set-output:: environment-file=/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/continuous_integration/setup-miniconda-patched-environment.yaml\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2699  ::set-output:: environment-file-content=|\n  name: test-environment\n  channels:\n    - conda-forge\n  dependencies:\n    - xarray\n    - dask\n    - distributed\n    - donfig\n    - toolz\n    - Cython\n    - sphinx\n    - cartopy\n    - pillow\n    - matplotlib\n    - pyyaml\n    - pyproj\n    - pykdtree\n    - rasterio\n    - coveralls\n    - coverage\n    - codecov\n    - configobj\n    - zarr\n    - shapely\n    - scipy\n    - pytest\n    - pytest-cov\n    - pytest-lazy-fixture\n    - importlib-metadata\n    - sphinx-reredirects\n    - python=3.9\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2699  ::set-output:: environment-file-was-patched=true\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2699  ::add-path:: 3/condabin\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1] \u2b50 Run Main Install pyresample\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udc33  docker exec cmd=[bash -l /var/run/act/workflow/3] user= workdir=\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Obtaining file:///tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Installing build dependencies: started\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Installing build dependencies: finished with status 'done'\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Checking if build backend supports build_editable: started\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Checking if build backend supports build_editable: finished with status 'done'\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Getting requirements to build editable: started\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Getting requirements to build editable: finished with status 'done'\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Preparing editable metadata (pyproject.toml): started\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Building wheels for collected packages: pyresample\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Building editable for pyresample (pyproject.toml): started\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Building editable for pyresample (pyproject.toml): finished with status 'done'\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Created wheel for pyresample: filename=pyresample-1.27.1+19.g2a6d769-0.editable-cp39-cp39-linux_x86_64.whl size=7259 sha256=5999bf2064094955a617f52a0d6a02ad7ae25df49c4052cf5ce00edecf77071b\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-tbrb0sfw/wheels/4b/5e/e8/24871a4aed2d451bb498d860a8ef88f0ebb6533b756b6b2ea6\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Successfully built pyresample\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Installing collected packages: pyresample\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Successfully installed pyresample-1.27.1+19.g2a6d769\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2705  Success - Main Install pyresample\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1] \u2b50 Run Main Run unit tests\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udc33  docker exec cmd=[bash -l /var/run/act/workflow/4] user= workdir=\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ============================= test session starts ==============================\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | platform linux -- Python 3.9.16, pytest-7.4.0, pluggy-1.2.0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | plugins: lazy-fixture-0.6.3, cov-4.1.0\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | collected 1076 items\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_area_config.py .........                            [  0%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py ....................................... [  4%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ......                                                                   [  5%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_boundary.py .....                                   [  5%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bucket.py ..................                        [  7%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_dask_ewa.py .........s.s.........s.s.s.s.s.s.s.s.s. [ 10%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | s.s.s.s.s.........s.s.........s.s.............................           [ 16%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_data_reduce.py ......                               [ 17%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_ewa_fornav.py ......                                [ 17%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_ewa_ll2cr.py .......                                [ 18%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry_legacy.py .............................    [ 21%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_gradient.py ....................................... [ 24%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | .......                                                                  [ 25%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_grid.py ............                                [ 26%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py ..............                             [ 27%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_kd_tree.py ........................................ [ 31%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ....s..                                                                  [ 32%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_plot.py .s.....                                     [ 32%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_resample_blocks.py ........................         [ 34%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_slicer.py ...............                           [ 36%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_spatial_mp.py ..                                    [ 36%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_spherical.py ................................       [ 39%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_spherical_geometry.py .....                         [ 39%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_spherical_utils.py ..........................       [ 42%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_swath.py ..                                         [ 42%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_utils.py .....................ss................... [ 46%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ...................                                                      [ 48%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_area.py ............................. [ 50%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ........................................................................ [ 57%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ........................................................................ [ 64%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ..................                                                       [ 65%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_swath.py ............................ [ 68%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ........................................................................ [ 75%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ........................................................................ [ 81%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ........................................................................ [ 88%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ................................................................         [ 94%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_resamplers/test_nearest.py ..................       [ 96%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_resamplers/test_resampler.py ..............         [ 97%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_resamplers/test_resampler_registry.py .....         [ 98%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_sgeom/test_point.py .....................           [100%]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | =============================== warnings summary ===============================\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_spherical_geometry.py:25\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_spherical_geometry.py:25: DeprecationWarning: This module will be removed in pyresample 2.0, please use the `pyresample.spherical` module functions and class instead.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     from pyresample.spherical_geometry import Arc, Coordinate\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_area_config.py: 4 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py: 27 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bucket.py: 20 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_data_reduce.py: 2 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_ewa_ll2cr.py: 1 warning\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry_legacy.py: 10 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_grid.py: 9 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py: 15 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_utils.py: 33 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_area.py: 2 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/pyproj/crs/crs.py:1293: UserWarning: You will likely lose important projection information when converting to a PROJ string from another format. See: https://proj.org/faq.html#what-is-the-best-format-for-describing-coordinate-reference-systems\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     proj = self._crs.to_proj4(version=version)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_area_config.py::TestLegacyAreaParser::test_commented\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_area_config.py::TestLegacyAreaParser::test_commented\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_area_config.py::TestLegacyAreaParser::test_commented\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_area_config.py::TestLegacyAreaParser::test_commented\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_area_config.py:95: PendingDeprecationWarning: 'name' is deprecated, use 'description' instead.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     self.assertNotIn('commented', [area.name for area in areas])\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_bil_info\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:286: FutureWarning: Usage of get_bil_info() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     t__, s__, _, _ = get_bil_info(self.source_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_bil_info\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:293: FutureWarning: Usage of get_bil_info() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     t__, s__, _, _ = get_bil_info(self.source_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_fractional_distances\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_fractional_distances_division_by_zero\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_fractional_distances_irregular\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestXarrayBilinear::test_get_fractional_distances_division_by_zero\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/bilinear/_base.py:397: RuntimeWarning: invalid value encountered in divide\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     x_1 = (-b__ + np.sqrt(discriminant)) / (2 * a__)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_fractional_distances\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_fractional_distances_division_by_zero\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_fractional_distances_irregular\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestXarrayBilinear::test_get_fractional_distances_division_by_zero\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/bilinear/_base.py:398: RuntimeWarning: divide by zero encountered in divide\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     x_2 = (-b__ - np.sqrt(discriminant)) / (2 * a__)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_fractional_distances\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_fractional_distances_irregular\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/bilinear/_base.py:464: RuntimeWarning: invalid value encountered in divide\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     g__ = ((out_y - y_1 - y_21 * f__) /\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_fractional_distances\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/bilinear/_base.py:397: RuntimeWarning: divide by zero encountered in divide\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     x_1 = (-b__ + np.sqrt(discriminant)) / (2 * a__)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_fractional_distances\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/bilinear/_base.py:398: RuntimeWarning: invalid value encountered in divide\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     x_2 = (-b__ - np.sqrt(discriminant)) / (2 * a__)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_sample_from_bil_info\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:304: FutureWarning: Usage of get_bil_info() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     t__, s__, input_idxs, idx_arr = get_bil_info(self.source_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_sample_from_bil_info\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:309: FutureWarning: Usage of get_sample_from_bil_info() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     res = get_sample_from_bil_info(self.data1.ravel(), t__, s__,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_sample_from_bil_info\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:313: FutureWarning: Usage of get_sample_from_bil_info() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     res = get_sample_from_bil_info(self.data2.ravel(), t__, s__,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_sample_from_bil_info\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:317: FutureWarning: Usage of get_sample_from_bil_info() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     res = get_sample_from_bil_info(self.data2.ravel(), t__, s__,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_sample_from_bil_info\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:325: FutureWarning: Usage of get_sample_from_bil_info() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     res = get_sample_from_bil_info(self.data3.ravel(), t__, s__,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_sample_from_bil_info\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:333: FutureWarning: Usage of get_sample_from_bil_info() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     res = get_sample_from_bil_info(data.ravel(), t__, s__,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_sample_from_bil_info_1d\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:341: FutureWarning: Usage of get_bil_info() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     t__, s__, input_idxs, idx_arr = get_bil_info(self.source_def_1d,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_get_sample_from_bil_info_1d\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:346: FutureWarning: Usage of get_sample_from_bil_info() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     res = get_sample_from_bil_info(self.data3_1d, t__, s__,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_resample_bilinear\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:358: FutureWarning: Usage of resample_bilinear() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     res = resample_bilinear(self.data1,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_resample_bilinear\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:369: FutureWarning: Usage of resample_bilinear() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     res = resample_bilinear(self.data1,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_resample_bilinear\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_bilinear.py:380: FutureWarning: Usage of resample_bilinear() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     res = resample_bilinear(data,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestNumpyBilinear::test_solve_quadratic\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestXarrayBilinear::test_solve_quadratic\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/bilinear/_base.py:400: RuntimeWarning: invalid value encountered in divide\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     x_3 = -c__ / b__\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestXarrayBilinear::test_get_fractional_distances_irregular\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestXarrayBilinear::test_get_fractional_distances_irregular\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bucket.py::Test::test_resample_bucket_fractions\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bucket.py::Test::test_resample_bucket_fractions\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/dask/core.py:121: RuntimeWarning: invalid value encountered in divide\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     return func(*(_execute_task(a, cache) for a in args))\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestXarrayBilinear::test_get_fractional_distances_irregular\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::TestXarrayBilinear::test_get_fractional_distances_irregular\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/dask/core.py:121: RuntimeWarning: divide by zero encountered in divide\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     return func(*(_execute_task(a, cache) for a in args))\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::test_target_has_invalid_coordinates\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/bilinear/_base.py:444: RuntimeWarning: invalid value encountered in subtract\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     a__ = x_31 * y_42 - y_31 * x_42\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::test_target_has_invalid_coordinates\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/bilinear/_base.py:445: RuntimeWarning: invalid value encountered in subtract\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     b__ = out_y * (x_42 - x_31) - out_x * (y_42 - y_31) + \\\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::test_target_has_invalid_coordinates\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/bilinear/_base.py:448: RuntimeWarning: invalid value encountered in subtract\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     c__ = out_y * x_21 - out_x * y_21 + pt_1[:, 0] * pt_2[:, 1] - \\\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::test_target_has_invalid_coordinates\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/bilinear/_base.py:512: RuntimeWarning: invalid value encountered in subtract\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     (x_21 * y_31 - y_21 * x_31)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bilinear.py::test_target_has_invalid_coordinates\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/bilinear/_base.py:511: RuntimeWarning: invalid value encountered in divide\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     t__ = (x_21 * (out_y - pt_1[:, 1]) - y_21 * (out_x - pt_1[:, 0])) / \\\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_bucket.py: 46 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_gradient.py: 28 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_grid.py: 2 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_area.py: 20 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_swath.py: 24 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/pyproj/transformer.py:820: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     return self._transformer._transform_point(\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_data_reduce.py::Test::test_reduce_north_pole\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_data_reduce.py:136: UserWarning: 'get_area_def' has moved, import it with 'from pyresample import get_area_def'\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     area_def = utils.get_area_def(area_id, description, proj_id,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_data_reduce.py::Test::test_reduce_north_pole\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_data_reduce.py:148: UserWarning: 'get_area_def' has moved, import it with 'from pyresample import get_area_def'\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     smaller_area_def = utils.get_area_def(area_id, description, proj_id,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_gradient.py: 1 warning\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_resample_blocks.py: 9 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/_pytest/python.py:194: DeprecationWarning: `product` is deprecated as of NumPy 1.25.0, and will be removed in NumPy 2.0. Please use `prod` instead.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     result = testfunction(**testargs)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear_multi\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear_multi\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear_swath\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear_swath\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/image.py:349: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     super(ImageContainerBilinear, self).__init__(image_data, geo_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear_multi\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear_swath\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/image.py:385: FutureWarning: Usage of resample_bilinear() is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     bilinear.resample_bilinear(image_data,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear_multi\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/future/resamplers/_transform_utils.py:26: RuntimeWarning: invalid value encountered in cos\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     r_cos_lats = R * np.cos(lats)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear_multi\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/future/resamplers/_transform_utils.py:28: RuntimeWarning: invalid value encountered in cos\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     x_coords = r_cos_lats * np.cos(lons)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear_multi\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/future/resamplers/_transform_utils.py:29: RuntimeWarning: invalid value encountered in sin\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     y_coords = r_cos_lats * np.sin(lons)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_bilinear_multi\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/future/resamplers/_transform_utils.py:30: RuntimeWarning: invalid value encountered in sin\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     z_coords = R * np.sin(lats)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py: 10 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/image.py:173: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     super(ImageContainerQuick, self).__init__(image_data, geo_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py: 10 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/image.py:252: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     super(ImageContainerNearest, self).__init__(image_data, geo_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_image.py::Test::test_nearest_neighbour_multi_preproc\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/test/test_image.py:174: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     msg_con = image.ImageContainer(data, self.msg_area)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_kd_tree.py::TestXArrayResamplerNN::test_nearest_area_2d_to_area_1n_no_roi\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/kd_tree.py:924: RuntimeWarning: All-NaN axis encountered\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     radius_of_influence = np.nanmax([src_res, dst_res])\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_plot.py::Test::test_translate_coast_res\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/unittest/case.py:550: UserWarning: 'coast_res' should be either '110m', '50m', '10m'.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     method()\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_spherical.py::TestSphericalPolygon::test_intersection\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/spherical.py:300: RuntimeWarning: invalid value encountered in divide\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     cart = self.cart / norm\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_utils.py::TestMisc::test_def2yaml_converter\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_utils.py::TestMisc::test_def2yaml_converter\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_utils.py::TestMisc::test_def2yaml_converter\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_utils.py::TestMisc::test_def2yaml_converter\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/area_config.py:860: DeprecationWarning: 'create_areas_def' is deprecated. Please use `dump` instead, which also supports writing directly to a file.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     yaml_file.write(area.create_areas_def())\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_utils.py: 1 warning\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_area.py: 30 warnings\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/pyproj/crs/crs.py:141: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     in_crs_string = _prepare_from_proj_string(in_crs_string)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_utils.py::TestFromRasterio::test_get_area_def_from_raster_extracts_proj_id\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/rasterio/__init__.py:314: NotGeoreferencedWarning: Dataset has no geotransform, gcps, or rpcs. The identity matrix will be returned.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     dataset = writer(\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_utils.py::TestFromRasterio::test_get_area_def_from_raster_extracts_proj_id\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/rasterio/__init__.py:304: NotGeoreferencedWarning: Dataset has no geotransform, gcps, or rpcs. The identity matrix will be returned.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     dataset = DatasetReader(path, driver=driver, sharing=sharing, **kwargs)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_area.py::TestAreaDefinition::test_area_def_geocentric_resolution[LegacyAreaDefinition]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_area.py::TestAreaDefinition::test_area_def_geocentric_resolution[AreaDefinition]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/numpy/lib/function_base.py:1452: RuntimeWarning: invalid value encountered in subtract\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     a = op(a[slice1], a[slice2])\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_area.py::TestAreaDefGetAreaSlices::test_get_area_slices_geos_stereographic[LegacyAreaDefinition]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_area.py::TestAreaDefGetAreaSlices::test_get_area_slices_geos_stereographic[AreaDefinition]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_area.py::TestAreaDefGetAreaSlices::test_get_area_slices_geos_epsg_lonlat[LegacyAreaDefinition]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_area.py::TestAreaDefGetAreaSlices::test_get_area_slices_geos_epsg_lonlat[LegacyAreaDefinition]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_area.py::TestAreaDefGetAreaSlices::test_get_area_slices_geos_epsg_lonlat[AreaDefinition]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_geometry/test_area.py::TestAreaDefGetAreaSlices::test_get_area_slices_geos_epsg_lonlat[AreaDefinition]\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/geometry.py:2630: PendingDeprecationWarning: 'AreaDefBoundary' will be removed in the future. Use the Swath/AreaDefinition 'boundary' method instead!.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     return AreaDefBoundary(area_to_cover, 100)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pyresample/test/test_resamplers/test_nearest.py::TestNearestNeighborResampler::test_nearest_area_2d_to_area_1n_no_roi_no_geocentric\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/future/resamplers/nearest.py:151: RuntimeWarning: All-NaN axis encountered\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |     radius_of_influence = np.nanmax([src_res, dst_res])\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/report.xml -\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ---------- coverage: platform linux, python 3.9.16-final-0 -----------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Coverage XML written to file coverage.xml\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ========== 1052 passed, 24 skipped, 385 warnings in 238.06s (0:03:58) ==========\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u2705  Success - Main Run unit tests\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1] \u2b50 Run Main Test website\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \ud83d\udc33  docker exec cmd=[bash -l /var/run/act/workflow/5] user= workdir=\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Running Sphinx v7.0.1\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | loading intersphinx inventory from https://docs.python.org/3/objects.inv...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | loading intersphinx inventory from https://numpy.org/doc/stable/objects.inv...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | loading intersphinx inventory from https://docs.scipy.org/doc/scipy/objects.inv...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | loading intersphinx inventory from https://docs.xarray.dev/en/stable/objects.inv...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | loading intersphinx inventory from https://docs.dask.org/en/latest/objects.inv...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | loading intersphinx inventory from https://pandas.pydata.org/docs/objects.inv...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | loading intersphinx inventory from https://trollsift.readthedocs.io/en/stable/objects.inv...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | loading intersphinx inventory from https://trollimage.readthedocs.io/en/stable/objects.inv...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | loading intersphinx inventory from https://pyproj4.github.io/pyproj/dev/objects.inv...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | loading intersphinx inventory from https://proj.org/objects.inv...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | loading intersphinx inventory from https://satpy.readthedocs.io/en/stable/objects.inv...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | loading intersphinx inventory from https://donfig.readthedocs.io/en/latest/objects.inv...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | intersphinx inventory has moved: https://proj.org/objects.inv -> https://proj.org/en/9.2/objects.inv\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | building [mo]: targets for 0 po files that are out of date\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | writing output... \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | building [doctest]: targets for 34 source files that are out of date\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | updating environment: [new config] 34 added, 0 changed, 0 removed\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [  2%] api/pyresample\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [  5%] api/pyresample.bilinear\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [  8%] api/pyresample.bucket\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 11%] api/pyresample.ewa\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 14%] api/pyresample.future\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 17%] api/pyresample.future.geometry\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 20%] api/pyresample.future.resamplers\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 23%] api/pyresample.gradient\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 26%] api/pyresample.utils\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 29%] concepts/geolocated_data\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 32%] concepts/geometries\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 35%] concepts/index\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 38%] concepts/projections\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 41%] concepts/resampling\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 44%] dev_guide/index\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 47%] howtos/configuration\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 50%] howtos/data_reduce\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 52%] howtos/geo_def\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 55%] howtos/geo_filter\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 58%] howtos/geometry_utils\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 61%] howtos/grid\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 64%] howtos/index\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 67%] howtos/multi\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 70%] howtos/plot\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 73%] howtos/plot_cartopy_basemap\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 76%] howtos/plot_projections\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 79%] howtos/preproc\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 82%] howtos/spherical_geometry\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 85%] howtos/swath\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 88%] index\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 91%] reference\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 94%] roadmap\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [ 97%] tutorials/index\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | reading sources... [100%] tutorials/installation\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | looking for now-outdated files... none found\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | pickling environment... done\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | checking consistency... done\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | running tests...\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Document: howtos/plot_cartopy_basemap\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | -------------------------------------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 1 items passed all tests:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   23 tests in default\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 23 tests in 1 items.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 23 passed and 0 failed.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Test passed.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Document: howtos/grid\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ---------------------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/image.py:173: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   super(ImageContainerQuick, self).__init__(image_data, geo_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/pyproj/crs/crs.py:1293: UserWarning: You will likely lose important projection information when converting to a PROJ string from another format. See: https://proj.org/faq.html#what-is-the-best-format-for-describing-coordinate-reference-systems\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   proj = self._crs.to_proj4(version=version)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/image.py:173: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   super(ImageContainerQuick, self).__init__(image_data, geo_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/image.py:252: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   super(ImageContainerNearest, self).__init__(image_data, geo_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/image.py:252: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   super(ImageContainerNearest, self).__init__(image_data, geo_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/image.py:252: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   super(ImageContainerNearest, self).__init__(image_data, geo_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/image.py:252: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   super(ImageContainerNearest, self).__init__(image_data, geo_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/image.py:173: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   super(ImageContainerQuick, self).__init__(image_data, geo_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/pyproj/crs/crs.py:1293: UserWarning: You will likely lose important projection information when converting to a PROJ string from another format. See: https://proj.org/faq.html#what-is-the-best-format-for-describing-coordinate-reference-systems\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   proj = self._crs.to_proj4(version=version)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/pyproj/crs/crs.py:1293: UserWarning: You will likely lose important projection information when converting to a PROJ string from another format. See: https://proj.org/faq.html#what-is-the-best-format-for-describing-coordinate-reference-systems\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   proj = self._crs.to_proj4(version=version)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/pyproj/crs/crs.py:1293: UserWarning: You will likely lose important projection information when converting to a PROJ string from another format. See: https://proj.org/faq.html#what-is-the-best-format-for-describing-coordinate-reference-systems\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   proj = self._crs.to_proj4(version=version)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/pyproj/crs/crs.py:1293: UserWarning: You will likely lose important projection information when converting to a PROJ string from another format. See: https://proj.org/faq.html#what-is-the-best-format-for-describing-coordinate-reference-systems\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   proj = self._crs.to_proj4(version=version)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/pyresample/image.py:173: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   super(ImageContainerQuick, self).__init__(image_data, geo_def,\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 1 items passed all tests:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   33 tests in default\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 33 tests in 1 items.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 33 passed and 0 failed.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Test passed.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Document: howtos/plot\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ---------------------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/cartopy/io/__init__.py:241: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/110m_physical/ne_110m_coastline.zip\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   warnings.warn(f'Downloading: {url}', DownloadWarning)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 1 items passed all tests:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   46 tests in default\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 46 tests in 1 items.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 46 passed and 0 failed.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Test passed.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Document: howtos/geometry_utils\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | -------------------------------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 1 items passed all tests:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   46 tests in default\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 46 tests in 1 items.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 46 passed and 0 failed.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Test passed.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Document: howtos/geo_def\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ------------------------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/3/envs/test-environment/lib/python3.9/site-packages/pyproj/crs/crs.py:141: FutureWarning: '+init=<authority>:<code>' syntax is deprecated. '<authority>:<code>' is the preferred initialization method. When making the change, be mindful of axis order changes: https://pyproj4.github.io/pyproj/stable/gotchas.html#axis-order-changes-in-proj-6\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   in_crs_string = _prepare_from_proj_string(in_crs_string)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 1 items passed all tests:\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   44 tests in default\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 44 tests in 1 items.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | 44 passed and 0 failed.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Test passed.\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | \n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | Document: howtos/preproc\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | ------------------------\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   | <doctest default[5]>:1: FutureWarning: Usage of ImageContainer is deprecated, please use NumpyResamplerBilinear class instead\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   |   msg_con = image.ImageContainer(data, msg_area)\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1]   \u274c  Failure - Main Test website\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/efd6188cfb187198d0dcb12de199fbe236889dc9478c49fe350ce0c139ef7873/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[87c4fba8-ceba-46a6-85a3-22e5b4e771df/test-1] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: context canceled\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pytroll-pyresample/.github/workflows/ci-crawler.yaml",
        "build_tool": "pytest",
        "elapsed_time": 607.9784872531891
    }
}