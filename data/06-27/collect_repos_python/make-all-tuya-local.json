{
    "repository": "make-all/tuya-local",
    "stars": 463,
    "language": "python",
    "size": 3274,
    "clone_url": "https://github.com/make-all/tuya-local.git",
    "timestamp": "2023-07-01T14:48:24.696146Z",
    "clone_success": true,
    "number_of_actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_alarm_control_panel",
                "name": "test_init_entry",
                "time": 0.181,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_alarm_control_panel",
                "name": "test_init_entry_as_secondary",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_alarm_control_panel",
                "name": "test_init_entry_fails_if_device_has_no_alarm_control_panel",
                "time": 0.956,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_alarm_control_panel",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 1.561,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_binary_sensor",
                "name": "test_init_entry",
                "time": 0.153,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_binary_sensor",
                "name": "test_init_entry_fails_if_device_has_no_binary_sensor",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_binary_sensor",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 1.788,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_button",
                "name": "test_init_entry_as_secondary",
                "time": 0.125,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_button",
                "name": "test_init_entry_fails_if_device_has_no_button",
                "time": 0.504,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_button",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 0.903,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_camera",
                "name": "test_init_entry",
                "time": 0.116,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_camera",
                "name": "test_init_entry_fails_if_device_has_no_camera",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_camera",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 1.416,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_climate",
                "name": "test_init_entry",
                "time": 0.663,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_climate",
                "name": "test_init_entry_fails_if_device_has_no_climate",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_climate",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 0.982,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_init_entry",
                "time": 0.144,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_migrate_entry",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_flow_user_init",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_async_test_connection_valid",
                "time": 5.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_async_test_connection_for_subdevice_valid",
                "time": 5.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_async_test_connection_invalid",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_flow_user_init_invalid_config",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_flow_user_init_data_valid",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_flow_select_type_init",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_flow_select_type_aborts_when_no_match",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_flow_select_type_data_valid",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_flow_choose_entities_init",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_flow_choose_entities_creates_config_entry",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_options_flow_init",
                "time": 0.151,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_options_flow_modifies_config",
                "time": 0.221,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_options_flow_fails_when_connection_fails",
                "time": 0.129,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_options_flow_fails_when_config_is_missing",
                "time": 3.495,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config_flow",
                "name": "test_async_setup_entry_for_switch",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cover",
                "name": "test_init_entry",
                "time": 0.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cover",
                "name": "test_init_entry_fails_if_device_has_no_cover",
                "time": 0.566,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cover",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 0.94,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_actually_start",
                "time": 0.108,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_anticipate_property_value_updates_cached_state",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_api_protocol_version_is_not_rotated_when_not_auto",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_api_protocol_version_is_rotated_with_each_failure",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_api_protocol_version_is_stable_once_successful",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_async_receive",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_async_set_property_sends_to_api",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_async_stop",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_async_stop_when_not_running",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_configures_tinytuya_correctly",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_detection_returns_none_when_device_type_not_detected",
                "time": 1.826,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_device_info",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_expired_pending_update_value_does_not_override_cached_value",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_get_key_for_value_returns_fallback_when_value_not_found",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_get_key_for_value_returns_key_from_object_matching_value",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_get_property_returns_none_when_value_does_not_exist",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_get_property_returns_pending_update_value",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_get_property_returns_value_from_cached_state",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_has_returned_state",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_name",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_pending_update_value_overrides_cached_value",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_refresh_cached_state",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_refresh_clears_cache_after_allowed_failures",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_refresh_retries_up_to_eleven_times",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_refreshes_state_if_no_cached_state_exists",
                "time": 1.583,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_refreshes_when_there_is_expired_pending_reset",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_refreshes_when_there_is_no_pending_reset",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_register_first_entity_ha_running",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_register_subsequent_entity_ha_running",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_register_subsequent_entity_ha_starting",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_reset_cached_state_clears_cached_state_and_pending_updates",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_set_properties_takes_no_action_when_nothing_provided",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_set_property_immediately_stores_pending_updates",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_set_values",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_should_poll",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_start_does_nothing_when_ha_stopping",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_start_schedules_for_later_when_ha_starting",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_start_starts_when_ha_running",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_unique_id",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_unregister_last_entity",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device.TestDevice",
                "name": "test_unregister_one_of_many_entities",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_bytes_to_fmt_returns_string_for_unknown",
                "time": 0.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_can_find_config_files",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_config_files_parse",
                "time": 1.573,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_config_returned",
                "time": 1.606,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_decoding_base64",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_decoding_unencoded",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_default_without_mapping",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_deprecation",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_dps_async_set_readonly_value_fails",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_dps_values_is_empty_with_no_mapping",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_encoding_base64",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_encoding_unencoded",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_entity_find_unknown_dps_fails",
                "time": 1.414,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_float_matches_ints",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_format_with_none_defined",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_get_device_id",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_match_quality",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_match_returns_false_on_errors_with_bitfield",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_device_config.TestDeviceConfig",
                "name": "test_values_with_mirror",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_diagnostics",
                "name": "test_config_entry_diagnostics",
                "time": 0.142,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_diagnostics",
                "name": "test_device_diagnostics",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fan",
                "name": "test_init_entry",
                "time": 0.182,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fan",
                "name": "test_init_entry_as_secondary",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fan",
                "name": "test_init_entry_fails_if_device_has_no_fan",
                "time": 0.943,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fan",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 1.352,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_humidifier",
                "name": "test_init_entry",
                "time": 0.89,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_humidifier",
                "name": "test_init_entry_fails_if_device_has_no_humidifier",
                "time": 0.808,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_humidifier",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 1.11,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_light",
                "name": "test_init_entry",
                "time": 0.162,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_light",
                "name": "test_init_entry_fails_if_device_has_no_light",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_light",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 1.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_light",
                "name": "test_async_turn_on_with_white_param",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lock",
                "name": "test_init_entry",
                "time": 0.241,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lock",
                "name": "test_init_entry_fails_if_device_has_no_lock",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lock",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 1.475,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_number",
                "name": "test_init_entry",
                "time": 0.186,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_number",
                "name": "test_init_entry_fails_if_device_has_no_number",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_number",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 0.931,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select",
                "name": "test_init_entry",
                "time": 0.171,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select",
                "name": "test_init_entry_fails_if_device_has_no_select",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 0.896,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sensor",
                "name": "test_init_entry",
                "time": 0.178,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sensor",
                "name": "test_init_entry_fails_if_device_has_no_sensor",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sensor",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 0.919,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sensor",
                "name": "test_sensor_suggested_display_precision",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_siren",
                "name": "test_init_entry",
                "time": 0.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_siren",
                "name": "test_init_entry_fails_if_device_has_no_siren",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_siren",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 1.639,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_switch",
                "name": "test_init_entry",
                "time": 0.192,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_switch",
                "name": "test_init_entry_as_secondary",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_switch",
                "name": "test_init_entry_fails_if_device_has_no_switch",
                "time": 0.504,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_switch",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 0.899,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vacuum",
                "name": "test_init_entry",
                "time": 0.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vacuum",
                "name": "test_init_entry_fails_if_device_has_no_vacuum",
                "time": 0.943,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vacuum",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 1.597,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_water_heater",
                "name": "test_init_entry",
                "time": 0.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_water_heater",
                "name": "test_init_entry_fails_if_device_has_no_water_heater",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_water_heater",
                "name": "test_init_entry_fails_if_config_is_missing",
                "time": 1.453,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_available",
                "time": 0.191,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_config_matched",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_entity_category",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_extra_state_attributes",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_name_returns_device_name",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_number_device_class",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_number_extra_state_attributes",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_number_max_value",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_number_min_value",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_number_mode",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_number_set_value",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_number_step",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_number_unit_of_measurement",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_number_value",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_oscillate_off",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_oscillate_on",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_oscillating",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_preset_mode",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_preset_modes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_set_preset_mode_to_nature",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_set_preset_mode_to_normal",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_set_preset_mode_to_sleep",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_set_speed_in_normal_mode",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_set_speed_in_normal_mode_snaps",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_should_poll",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_speed",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_speed_step",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_supported_features",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_switchable_is_on",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_switchable_toggle",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_switchable_turn_off",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_switchable_turn_on",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_anko_fan.TestAnkoFan",
                "name": "test_update",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_available",
                "time": 0.132,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_basicSelect_current_option",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_basicSelect_options",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_basicSelect_select_option",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_config_matched",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_direction",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_entity_category",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_extra_state_attributes",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_name_returns_device_name",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_preset_mode",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_preset_modes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_set_direction_forward",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_set_direction_reverse",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_set_preset_mode_to_breeze",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_set_preset_mode_to_normal",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_set_preset_mode_to_sleep",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_set_speed",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_set_speed_in_normal_mode_snaps",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_should_poll",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_speed",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_speed_step",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_supported_features",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_switchable_is_on",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_switchable_toggle",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_switchable_turn_off",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_switchable_turn_on",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan.TestArlecFan",
                "name": "test_update",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_available",
                "time": 0.213,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_basicSelect_current_option",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_basicSelect_options",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_basicSelect_select_option",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_config_matched",
                "time": 0.124,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_direction",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_entity_category",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_light_async_turn_on",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_light_brightness",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_light_color_mode",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_light_color_temp",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_light_is_on",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_light_supported_color_modes",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_name_returns_device_name",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_preset_mode",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_preset_modes",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_set_direction_forward",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_set_direction_reverse",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_set_preset_mode_to_nature",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_set_preset_mode_to_sleep",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_set_speed",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_set_speed_in_normal_mode_snaps",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_should_poll",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_speed",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_speed_step",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_supported_features",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_switchable_is_on",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_switchable_toggle",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_switchable_turn_off",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_switchable_turn_on",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_arlec_fan_light.TestArlecFan",
                "name": "test_update",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_available",
                "time": 0.167,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_climate_current_temperature",
                "time": 0.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_climate_hvac_mode",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_climate_hvac_modes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_climate_temperature_unit",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_climate_turn_off",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_climate_turn_on",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_config_matched",
                "time": 0.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_dimmable_light_brightness",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_dimmable_light_set_brightness",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_dimmable_light_set_brightness_to_off",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_dimmable_light_state_attributes",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_dimmable_light_toggle_turns_off_when_it_was_on",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_dimmable_light_turn_off",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_entity_category",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_extra_state_attributes",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_fan_direction",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_fan_preset_mode",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_fan_preset_modes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_fan_set_direction_exchange",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_fan_set_direction_forward",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_fan_set_direction_reverse",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_fan_set_preset_to_auto",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_fan_set_preset_to_constant",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_fan_set_speed",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_fan_set_speed_snaps",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_fan_speed",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_fan_speed_step",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_maximum_target_temperature",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_minimum_target_temperature",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_name_returns_device_name",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_should_poll",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_supported_features",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_switchable_is_on",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_switchable_toggle",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_switchable_turn_off",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_switchable_turn_on",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_target_temperature",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_target_temperature_step",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_aspen_adv200_fan.TestAspenASP200Fan",
                "name": "test_update",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_available",
                "time": 0.191,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_basicSelect_current_option",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_basicSelect_options",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_basicSelect_select_option",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_close_cover",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_config_matched",
                "time": 0.166,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_current_cover_position",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_device_class_is_blind",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_entity_category",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_is_closed",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_is_closing",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_is_opening",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_multi_sensor_device_class",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_multi_sensor_options",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_multi_sensor_state_class",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_multi_sensor_units",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_multi_sensor_value",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_name_returns_device_name",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_open_cover",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_set_cover_position",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_should_poll",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_stop_cover",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_supported_features",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_blinds.TestAvattoBlinds",
                "name": "test_update",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_available",
                "time": 0.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_basic_light_color_mode",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_basic_light_has_no_brightness",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_basic_light_has_no_effects",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_basic_light_is_on",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_basic_light_state_attributes",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_basic_light_supported_color_modes",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_basic_light_supported_features",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_basic_light_toggle_turns_off_when_it_was_on",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_basic_light_toggle_turns_on_when_it_was_off",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_basic_light_turn_off",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_basic_light_turn_on",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_close_cover",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_config_matched",
                "time": 0.166,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_device_class_is_curtain",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_entity_category",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_is_closed",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_is_closing",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_is_opening",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_name_returns_device_name",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_open_cover",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_should_poll",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_stop_cover",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_supported_features",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_avatto_curtain_switch.TestAvattoCurtainSwitch",
                "name": "test_update",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_available",
                "time": 0.208,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_camera_image",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_config_matched",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_entity_category",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_is_on",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_is_recording",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_motion_detection_enabled",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_name_returns_device_name",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_should_poll",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_turn_off",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_turn_on",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_bcom_intercom_camera.TestBcomIntercomCamera",
                "name": "test_update",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_available",
                "time": 0.144,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_basicSelect_current_option",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_basicSelect_options",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_basicSelect_select_option",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_basic_lock_is_locked",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_basic_lock_locks",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_basic_lock_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_basic_lock_unlocks",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_config_matched",
                "time": 0.213,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_current_temperature",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_entity_category",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_extra_state_attribures",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_fan_mode",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_fan_modes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_hvac_mode",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_hvac_modes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_legacy_set_temperature_with_both_properties",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_legacy_set_temperature_with_preset_mode",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_maximum_target_temperature",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_minimum_target_temperature",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_name_returns_device_name",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_precision",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_preset_mode",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_preset_modes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_fan_mode_to_auto",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_fan_mode_to_high",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_fan_mode_to_low",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_fan_mode_to_medium",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_hvac_mode_to_cool",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_hvac_mode_to_fan",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_hvac_mode_to_heat",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_hvac_mode_to_off",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_preset_to_comfort",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_preset_to_eco",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_should_poll",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_supported_features",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_target_temperature",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_target_temperature_step",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_temperature_unit_returns_configured_temperature_unit",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bac002_thermostat.TestBecaBAC002Thermostat",
                "name": "test_update",
                "time": 0.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_available",
                "time": 0.209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_light_color_mode",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_light_has_no_brightness",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_light_has_no_effects",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_light_is_on",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_light_state_attributes",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_light_supported_color_modes",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_light_supported_features",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_light_toggle_turns_off_when_it_was_on",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_light_toggle_turns_on_when_it_was_off",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_light_turn_off",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_light_turn_on",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_lock_is_locked",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_lock_locks",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_lock_state_attributes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_basic_lock_unlocks",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_config_matched",
                "time": 0.211,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_current_temperature",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_entity_category",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_extra_state_attributes",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_fan_mode",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_fan_modes",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_hvac_mode",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_hvac_modes",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_icons",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_legacy_set_temperature_with_both_properties",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_legacy_set_temperature_with_preset_mode",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_maximum_target_temperature",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_minimum_target_temperature",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_name_returns_device_name",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_set_fan_mode_to_auto",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_set_fan_mode_to_on",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_should_poll",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_supported_features",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_target_temperature",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_target_temperature_step",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_temperature_unit_returns_configured_temperature_unit",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000Thermostat",
                "name": "test_update",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000ThermostatC",
                "name": "test_available",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000ThermostatC",
                "name": "test_config_matched",
                "time": 0.206,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000ThermostatC",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000ThermostatC",
                "name": "test_entity_category",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000ThermostatC",
                "name": "test_maximum_target_temperature",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000ThermostatC",
                "name": "test_minimum_target_temperature",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000ThermostatC",
                "name": "test_name_returns_device_name",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000ThermostatC",
                "name": "test_should_poll",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000ThermostatC",
                "name": "test_temperature_unit_returns_configured_temperature_unit",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000ThermostatC",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bhp6000_thermostat.TestBecaBHP6000ThermostatC",
                "name": "test_update",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_available",
                "time": 0.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_basic_lock_is_locked",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_basic_lock_locks",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_basic_lock_state_attributes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_basic_lock_unlocks",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_basic_sensor_device_class",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_basic_sensor_state_class",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_basic_sensor_units",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_basic_sensor_value",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_config_matched",
                "time": 0.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_current_temperature",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_entity_category",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_extra_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_hvac_mode",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_hvac_modes",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_icons",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_legacy_set_temperature_with_both_properties",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_legacy_set_temperature_with_preset_mode",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_maximum_target_temperature",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_minimum_target_temperature",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_name_returns_device_name",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_should_poll",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_supported_features",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_target_temperature",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_target_temperature_step",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_temperature_unit",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht002_thermostat.TestBecaBHT002Thermostat",
                "name": "test_update",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_available",
                "time": 0.229,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_basic_lock_is_locked",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_basic_lock_locks",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_basic_lock_state_attributes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_basic_lock_unlocks",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_basic_sensor_device_class",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_basic_sensor_state_class",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_basic_sensor_units",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_basic_sensor_value",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_config_matched",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_current_temperature",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_entity_category",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_extra_state_attributes",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_hvac_mode",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_hvac_modes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_icons",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_legacy_set_temperature_with_both_properties",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_legacy_set_temperature_with_preset_mode",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_maximum_target_temperature",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_minimum_target_temperature",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_name_returns_device_name",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_should_poll",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_supported_features",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_target_temperature",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_target_temperature_step",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_temperature_unit",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beca_bht6000_thermostat.TestBecaBHT6000Thermostat",
                "name": "test_update",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_available",
                "time": 0.2,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_config_matched",
                "time": 0.239,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_entity_category",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_fan_modes",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_hvac_mode",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_hvac_modes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_maximum_target_temperature",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_minimum_target_temperature",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_name_returns_device_name",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_should_poll",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_supported_features",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_target_temperature",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_target_temperature_step",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_temperature_unit",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_turn_off",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_turn_on_to_auto",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_turn_on_to_cool",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_turn_on_to_dry",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_turn_on_to_fan",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_turn_on_to_heat",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_becool_heatpump.TestBWTHeatpump",
                "name": "test_update",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_available",
                "time": 0.198,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_basic_lock_is_locked",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_basic_lock_locks",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_basic_lock_state_attributes",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_basic_lock_unlocks",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_basic_switch_class_device_class",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_basic_switch_is_on",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_basic_switch_state_attributes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_basic_switch_toggle_turns_off_when_it_was_on",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_basic_switch_toggle_turns_on_when_it_was_off",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_basic_switch_turn_off",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_basic_switch_turn_on",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_config_matched",
                "time": 0.325,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_current_temperature",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_entity_category",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_extra_state_attributes",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_hvac_mode",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_hvac_modes",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_icons",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_maximum_target_temperature",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_minimum_target_temperature",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multiSelect_current_option",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multiSelect_extra_state_attributes",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multiSelect_options",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multiSelect_select_option",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multi_bsensor_device_class",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multi_bsensor_extra_state_attributes",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multi_bsensor_is_on",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multi_number_device_class",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multi_number_max_value",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multi_number_min_value",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multi_number_mode",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multi_number_set_value",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multi_number_step",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_multi_number_value",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_name_returns_device_name",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_precision",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_should_poll",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_supported_features",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_target_temperature",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_target_temperature_step",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_temperature_unit",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_beok_tr9b_thermostat.TestBeokTR9BThermostat",
                "name": "test_update",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_available",
                "time": 0.174,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_basicSelect_current_option",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_basicSelect_options",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_basicSelect_select_option",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_basic_lock_is_locked",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_basic_lock_locks",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_basic_lock_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_basic_lock_unlocks",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_basic_sensor_device_class",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_basic_sensor_state_class",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_basic_sensor_units",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_basic_sensor_value",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_config_matched",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_entity_category",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_hvac_mode",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_hvac_modes",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_icon",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_legacy_set_temperature_with_both_properties",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_legacy_set_temperature_with_preset_mode",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_maximum_target_temperature",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_minimum_target_temperature",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_name_returns_device_name",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_preset_mode",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_preset_modes",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_set_preset_mode_to_boost",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_set_preset_mode_to_comfort",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_set_preset_mode_to_eco",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_should_poll",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_supported_features",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_target_temperature",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_target_temperature_step",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_temperature_unit_returns_celsius",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_turn_off",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_turn_on",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_betterlife_bl1500_heater.TestBetterlifeBL1500Heater",
                "name": "test_update",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_available",
                "time": 0.215,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_config_matched",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_entity_category",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_multiSelect_current_option",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_multiSelect_extra_state_attributes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_multiSelect_options",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_multiSelect_select_option",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_name_returns_device_name",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_set_speed_snaps",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_should_poll",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_speed",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_supported_features",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_blitzwolf_bsh2_humidifier.TestBlitzwolfSH2Humidifier",
                "name": "test_update",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_available",
                "time": 0.159,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_config_matched",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_current_temperature",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_entity_category",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_extra_state_attribures",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_fan_mode",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_fan_modes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_hvac_mode",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_hvac_modes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_icon",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_maximum_target_temperature",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_minimum_target_temperature",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_name_returns_device_name",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_set_fan_mode_to_high",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_set_fan_mode_to_low",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_set_fan_mode_to_medium",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_set_swing_mode_to_off",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_set_swing_mode_to_vertical",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_should_poll",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_supported_features",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_swing_mode",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_swing_modes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_target_temperature",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_target_temperature_step",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_temperature_unit",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_turn_off",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_turn_on",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_carson_cb.TestCarsonCBHeatpump",
                "name": "test_update",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_auto_stringify_speed",
                "time": 0.191,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_available",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_light_color_mode",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_light_has_no_brightness",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_light_has_no_effects",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_light_is_on",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_light_state_attributes",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_light_supported_color_modes",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_light_supported_features",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_light_toggle_turns_off_when_it_was_on",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_light_toggle_turns_on_when_it_was_off",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_light_turn_off",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_light_turn_on",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_switch_class_device_class",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_switch_is_on",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_switch_state_attributes",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_switch_toggle_turns_off_when_it_was_on",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_switch_toggle_turns_on_when_it_was_off",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_switch_turn_off",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_basic_switch_turn_on",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_config_matched",
                "time": 0.441,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_entity_category",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_extra_state_attributes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_name_returns_device_name",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_set_speed",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_set_speed_snaps",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_should_poll",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_speed",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_speed_step",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_supported_features",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_switchable_is_on",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_switchable_toggle",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_switchable_turn_off",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_switchable_turn_on",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_deta_fan.TestDetaFan",
                "name": "test_update",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_available",
                "time": 0.149,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_basic_switch_class_device_class",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_basic_switch_is_on",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_basic_switch_state_attributes",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_basic_switch_toggle_turns_off_when_it_was_on",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_basic_switch_toggle_turns_on_when_it_was_off",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_basic_switch_turn_off",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_basic_switch_turn_on",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_config_matched",
                "time": 0.419,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_entity_category",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_extra_state_attributes_set",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_light_brightness",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_light_color_mode",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_light_effect",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_light_effect_list",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_light_hs_color",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_light_is_on",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_light_supported_color_modes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_light_supported_features",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_name_returns_device_name",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_set_brightness",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_set_hs_color",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_should_poll",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_turn_off",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_turn_on",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp01_dual_nightlight_switch.TestDigooNightlightSwitch",
                "name": "test_update",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_available",
                "time": 0.204,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_config_matched",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_entity_category",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_number_device_class",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_number_max_value",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_number_min_value",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_number_mode",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_number_set_value",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_number_step",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_number_value",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_sensor_device_class",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_sensor_options",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_sensor_state_class",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_sensor_units",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_sensor_value",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_switch_device_class",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_switch_is_on",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_switch_state_attributes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_switch_toggle_turns_off_when_it_was_on",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_switch_toggle_turns_on_when_it_was_off",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_switch_turn_off",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_multi_switch_turn_on",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_name_returns_device_name",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_should_poll",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_digoo_dgsp202.TestDigooDGSP202Switch",
                "name": "test_update",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_available",
                "time": 0.162,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basicSelect_current_option",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basicSelect_options",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basicSelect_select_option",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_bsensor_device_class",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_bsensor_is_on",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_sensor_device_class",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_sensor_state_class",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_sensor_units",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_sensor_value",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_switch_class_device_class",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_switch_is_on",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_switch_state_attributes",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_switch_toggle_turns_off_when_it_was_on",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_switch_toggle_turns_on_when_it_was_off",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_switch_turn_off",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_basic_switch_turn_on",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_config_matched",
                "time": 0.469,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_entity_category",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_extra_state_attributes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_fan_percentage_step",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_fan_set_speed",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_fan_set_speed_snaps",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_fan_speed",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_fan_speed_count",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_fan_turn_off",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_fan_turn_on",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_icon_is_humidifier",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_max_target_humidity",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_min_target_humidity",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_name_returns_device_name",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_preset_mode",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_preset_modes",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_set_mode_to_auto",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_set_mode_to_normal",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_set_mode_to_sleep",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_should_poll",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_supported_features",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_switchable_is_on",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_switchable_toggle",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_switchable_turn_off",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_switchable_turn_on",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_target_humidity",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eanons_humidifier.TestEanonsHumidifier",
                "name": "test_update",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_available",
                "time": 0.157,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_basicSelect_current_option",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_basicSelect_options",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_basicSelect_select_option",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_config_matched",
                "time": 0.498,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_entity_category",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_extra_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_fan_mode",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_fan_modes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_hvac_mode",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_hvac_modes",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_icon",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_maximum_target_temperature",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_maximum_target_temperature_f",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_minimum_target_temperature",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_minimum_target_temperature_f",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_name_returns_device_name",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_fan_mode_to_auto",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_fan_mode_to_high",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_fan_mode_to_low",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_fan_mode_to_medium",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_hvac_mode_to_cool",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_hvac_mode_to_dry",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_hvac_mode_to_fan",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_hvac_mode_to_heat",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_swing_mode_to_off",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_swing_mode_to_vertical",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_set_temperature_redirects_f",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_should_poll",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_supported_features",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_swing_mode",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_swing_modes",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_target_temperature",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_target_temperature_step",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_temperature_redirects_f",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_temperature_unit",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_turn_off",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_cooly_c35hd.TestEbergCoolyC35HDHeatpump",
                "name": "test_update",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_available",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_config_matched",
                "time": 0.478,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_current_temperature",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_entity_category",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_extra_state_attributes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_fan_mode",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_fan_modes",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_hvac_action",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_hvac_mode",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_hvac_modes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_icon",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_maximum_target_temperature",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_maximum_target_temperature_f",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_minimum_target_temperature",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_minimum_target_temperature_f",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_name_returns_device_name",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_number_device_class",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_number_extra_state_attributes",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_number_max_value",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_number_min_value",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_number_mode",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_number_set_value",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_number_step",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_number_unit_of_measurement",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_number_value",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_preset_mode",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_preset_modes",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_fan_mode_to_auto",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_fan_mode_to_high",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_fan_mode_to_low",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_fan_mode_to_medium",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_hvac_cool",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_hvac_off",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_preset_mode_to_normal",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_preset_mode_to_sleep",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_swing_mode_to_off",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_swing_mode_to_vertical",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_should_poll",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_supported_features",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_swing_mode",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_swing_modes",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_target_temperature",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_target_temperature_step",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_temperature_unit",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_turn_off",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_turn_on",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eberg_qubo_q40hd_heatpump.TestEbergQuboQ40HDHeatpump",
                "name": "test_update",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_available",
                "time": 0.174,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_config_matched",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_current_temperature",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_entity_category",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_extra_state_attributes",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_hvac_mode",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_hvac_modes",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_maximum_target_temperature",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_minimum_target_temperature",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_name_returns_device_name",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_number_device_class",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_number_extra_state_attributes",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_number_max_value",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_number_min_value",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_number_mode",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_number_set_value",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_number_step",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_number_unit_of_measurement",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_number_value",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_should_poll",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_supported_features",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_target_temperature",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_target_temperature_step",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_temperature_unit",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_turn_off",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_turn_on",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_ecostrad_accentiq_heater.TestEcostradAccentIqHeater",
                "name": "test_update",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_available",
                "time": 0.168,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_config_matched",
                "time": 0.513,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_entity_category",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_sensor_device_class",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_sensor_options",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_sensor_state_class",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_sensor_units",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_sensor_value",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_switch_device_class",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_switch_is_on",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_switch_state_attributes",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_switch_toggle_turns_off_when_it_was_on",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_switch_toggle_turns_on_when_it_was_off",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_switch_turn_off",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_multi_switch_turn_on",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_name_returns_device_name",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_should_poll",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_energy_monitoring_powerstrip.TestEnergyMonitoringPowerstrip",
                "name": "test_update",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_available",
                "time": 0.185,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_config_matched",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_entity_category",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_number_device_class",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_number_max_value",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_number_min_value",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_number_mode",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_number_set_value",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_number_step",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_number_value",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_switch_device_class",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_switch_is_on",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_switch_state_attributes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_switch_toggle_turns_off_when_it_was_on",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_switch_toggle_turns_on_when_it_was_off",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_switch_turn_off",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_multi_switch_turn_on",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_name_returns_device_name",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_should_poll",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_es01_powerstrip.TestES01Powerstrip",
                "name": "test_update",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_available",
                "time": 0.198,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_basic_button_device_class",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_basic_button_extra_attributes",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_basic_button_press",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_basic_lock_is_locked",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_basic_lock_locks",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_basic_lock_state_attributes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_basic_lock_unlocks",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_config_matched",
                "time": 0.395,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_entity_category",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multiSelect_current_option",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multiSelect_extra_state_attributes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multiSelect_options",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multiSelect_select_option",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_sensor_device_class",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_sensor_options",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_sensor_state_class",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_sensor_units",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_sensor_value",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_switch_device_class",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_switch_is_on",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_switch_state_attributes",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_switch_toggle_turns_off_when_it_was_on",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_switch_toggle_turns_on_when_it_was_off",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_switch_turn_off",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_multi_switch_turn_on",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_name_returns_device_name",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_should_poll",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_essentials_purifier.TestEssentialsPurifier",
                "name": "test_update",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_available",
                "time": 0.172,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_basic_bsensor_device_class",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_basic_bsensor_is_on",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_config_matched",
                "time": 0.575,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_current_temperature",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_entity_category",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_error_state",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_hvac_mode",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_hvac_modes",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_icon",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_maximum_target_temperature",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_minimum_target_temperature",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_name_returns_device_name",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_should_poll",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_supported_features",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_target_temperature",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_target_temperature_step",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_temperature_unit_returns_celsius",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_turn_off",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_turn_on",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600_heater.TestEurom600Heater",
                "name": "test_update",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_available",
                "time": 0.158,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_basic_bsensor_device_class",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_basic_bsensor_is_on",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_config_matched",
                "time": 0.62,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_current_temperature",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_entity_category",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_error_state",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_hvac_mode",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_hvac_modes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_icon",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_maximum_target_temperature",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_minimum_target_temperature",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_name_returns_device_name",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_should_poll",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_supported_features",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_target_temperature",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_target_temperature_step",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_temperature_unit_returns_celsius",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_turn_off",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_turn_on",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_600v2_heater.TestEurom600Heater",
                "name": "test_update",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_available",
                "time": 0.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_basic_bsensor_device_class",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_basic_bsensor_is_on",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_config_matched",
                "time": 0.612,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_current_temperature",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_entity_category",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_extra_state_attributes",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_hvac_mode",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_hvac_modes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_icon",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_maximum_target_temperature",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_minimum_target_temperature",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_name_returns_device_name",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_preset_mode",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_preset_modes",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_set_preset_more_to_comfort",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_set_preset_more_to_eco",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_should_poll",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_supported_features",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_target_temperature",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_target_temperature_step",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_temperature_unit_returns_celsius",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_turn_off",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_turn_on",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_eurom_601_heater.TestEurom601Heater",
                "name": "test_update",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_available",
                "time": 0.153,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_config_matched",
                "time": 0.637,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_current_temperature",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_entity_category",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_extra_state_attributes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_fan_mode",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_fan_modes",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_hvac_mode",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_hvac_modes",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_icon",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_maximum_target_temperature",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_maximum_target_temperature_f",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_minimum_target_temperature",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_minimum_target_temperature_f",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_name_returns_device_name",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_fan_mode_to_high",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_fan_mode_to_low",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_fan_mode_to_medium",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_hvac_mode_cool",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_hvac_mode_dry",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_hvac_mode_fan",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_hvac_mode_heat",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_hvac_mode_off",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_swing_mode_to_off",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_swing_mode_to_vertical",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_should_poll",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_supported_features",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_swing_mode",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_swing_modes",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_target_temperature",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_target_temperature_step",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_temperature_unit",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_fersk_vind_2_climate.TestFerskVind2Climate",
                "name": "test_update",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_available",
                "time": 0.215,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_close_cover",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_config_matched",
                "time": 0.628,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_current_cover_position",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_device_class_is_garage",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_entity_category",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_extra_state_attributes",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_is_closed",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_is_closing",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_is_opening",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_name_returns_device_name",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_open_cover",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_set_cover_position_not_supported",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_should_poll",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_stop_cover_not_supported",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_supported_features",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_garage_door_opener.TestSimpleGarageOpener",
                "name": "test_update",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_available",
                "time": 0.226,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_basic_light_color_mode",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_basic_light_has_no_brightness",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_basic_light_has_no_effects",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_basic_light_is_on",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_basic_light_state_attributes",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_basic_light_supported_color_modes",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_basic_light_supported_features",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_basic_light_toggle_turns_off_when_it_was_on",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_basic_light_toggle_turns_on_when_it_was_off",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_basic_light_turn_off",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_basic_light_turn_on",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_config_matched",
                "time": 0.447,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_entity_category",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_extra_state_attributes",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_is_on",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_light_icon",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_name_returns_device_name",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_oscillate_off",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_oscillate_on",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_preset_mode",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_preset_modes",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_set_preset_mode_to_nature",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_set_preset_mode_to_normal",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_set_preset_mode_to_sleep",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_set_speed_in_normal_mode",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_set_speed_in_normal_mode_snaps",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_set_speed_in_sleep_mode_snaps",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_should_poll",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_speed",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_supported_features",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_swing_mode",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_switchable_is_on",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_switchable_toggle",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_switchable_turn_off",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_switchable_turn_on",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_turn_off",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_turn_on",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_fan.TestGoldairFan",
                "name": "test_update",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_available",
                "time": 0.172,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_basic_bsensor_device_class",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_basic_bsensor_is_on",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_basic_lock_is_locked",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_basic_lock_locks",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_basic_lock_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_basic_lock_unlocks",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_config_matched",
                "time": 0.686,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_current_temperature",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_entity_category",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_extra_state_attributes",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_hvac_mode",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_hvac_modes",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_icon",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_maximum_target_temperature",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_minimum_target_temperature",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_name_returns_device_name",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_number_device_class",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_number_extra_state_attributes",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_number_max_value",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_number_min_value",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_number_mode",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_number_set_value",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_number_step",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_number_unit_of_measurement",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_number_value",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_should_poll",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_supported_features",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_target_temperature",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_target_temperature_step",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_temperature_unit_returns_celsius",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_turn_off",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_turn_on",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_geco_heater.TestGoldairGECOHeater",
                "name": "test_update",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_available",
                "time": 0.244,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_bsensor_device_class",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_bsensor_is_on",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_light_color_mode",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_light_has_no_brightness",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_light_has_no_effects",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_light_is_on",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_light_state_attributes",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_light_supported_color_modes",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_light_supported_features",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_light_toggle_turns_off_when_it_was_on",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_light_toggle_turns_on_when_it_was_off",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_light_turn_off",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_light_turn_on",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_lock_is_locked",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_lock_locks",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_lock_state_attributes",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_lock_unlocks",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_sensor_device_class",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_sensor_state_class",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_sensor_units",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_basic_sensor_value",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_config_matched",
                "time": 0.625,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_current_temperature",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_entity_category",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_extra_state_attributes",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_humidity_unsupported",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_hvac_mode",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_hvac_modes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_icon",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_legacy_set_temperature_with_both_properties",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_legacy_set_temperature_with_preset_mode",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_light_icon",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_maximum_target_temperature",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_minimum_target_temperature",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_minimum_temperature",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_name_returns_device_name",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_non_user_swing_mode",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_number_device_class",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_number_extra_state_attributes",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_number_max_value",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_number_min_value",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_number_mode",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_number_set_value",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_number_step",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_number_unit_of_measurement",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_number_value",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_power_level_returns_user_power_level",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_precision",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_preset_mode",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_preset_modes",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_humidity_unsupported",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_power_level_to_numeric_value",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_power_level_to_stop",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_preset_mode_to_anti_freeze",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_preset_mode_to_comfort",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_preset_mode_to_eco",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_swing_mode_to_auto",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_target_temperature_fails_in_anti_freeze",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_target_temperature_fails_outside_valid_range_in_eco",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_target_temperature_in_eco_mode",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_should_poll",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_supported_features",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_swing_modes",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_target_temperature",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_target_temperature_in_eco_and_af_modes",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_target_temperature_step",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_temperature_unit_returns_celsius",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_translation_key",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_turn_off",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_turn_on",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_goldair_gpph_heater.TestGoldairHeater",
                "name": "test_update",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_available",
                "time": 0.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_basicSelect_current_option",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_basicSelect_options",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_basicSelect_select_option",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_basic_lock_is_locked",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_basic_lock_locks",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_basic_lock_state_attributes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_basic_lock_unlocks",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_config_matched",
                "time": 0.558,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_entity_category",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_number_device_class",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_number_max_value",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_number_min_value",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_number_mode",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_number_set_value",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_number_step",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_number_value",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_sensor_device_class",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_sensor_options",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_sensor_state_class",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_sensor_units",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_sensor_value",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_switch_device_class",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_switch_is_on",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_switch_state_attributes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_switch_toggle_turns_off_when_it_was_on",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_switch_toggle_turns_on_when_it_was_off",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_switch_turn_off",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_multi_switch_turn_on",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_name_returns_device_name",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_should_poll",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_grid_connect_double_power_point.TestGridConnectDoubleSwitch",
                "name": "test_update",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_gx_aroma_diffuser.TestAromaDiffuser",
                "name": "test_available",
                "time": 0.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_gx_aroma_diffuser.TestAromaDiffuser",
                "name": "test_config_matched",
                "time": 1.827,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_gx_aroma_diffuser.TestAromaDiffuser",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_gx_aroma_diffuser.TestAromaDiffuser",
                "name": "test_entity_category",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_gx_aroma_diffuser.TestAromaDiffuser",
                "name": "test_name_returns_device_name",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_gx_aroma_diffuser.TestAromaDiffuser",
                "name": "test_set_fan_speed_gx",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_gx_aroma_diffuser.TestAromaDiffuser",
                "name": "test_set_fan_speed_yym",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_gx_aroma_diffuser.TestAromaDiffuser",
                "name": "test_should_poll",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_gx_aroma_diffuser.TestAromaDiffuser",
                "name": "test_speed",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_gx_aroma_diffuser.TestAromaDiffuser",
                "name": "test_speed_step",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_gx_aroma_diffuser.TestAromaDiffuser",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_gx_aroma_diffuser.TestAromaDiffuser",
                "name": "test_update",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_available",
                "time": 0.183,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_basicSelect_current_option",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_basicSelect_options",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_basicSelect_select_option",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_basic_button_device_class",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_basic_button_extra_attributes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_basic_button_press",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_basic_lock_is_locked",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_basic_lock_locks",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_basic_lock_state_attributes",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_basic_lock_unlocks",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_config_matched",
                "time": 0.692,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_entity_category",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_multi_sensor_device_class",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_multi_sensor_options",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_multi_sensor_state_class",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_multi_sensor_units",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_multi_sensor_value",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_name_returns_device_name",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_preset_mode",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_preset_modes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_set_preset_mode",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_should_poll",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_supported_features",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_switchable_is_on",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_switchable_toggle",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_switchable_turn_off",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_switchable_turn_on",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h05_purifier.TestHimoxH05Purifier",
                "name": "test_update",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_available",
                "time": 0.208,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_button_device_class",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_button_extra_attributes",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_button_press",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_light_color_mode",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_light_has_no_brightness",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_light_has_no_effects",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_light_is_on",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_light_state_attributes",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_light_supported_color_modes",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_light_supported_features",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_light_toggle_turns_off_when_it_was_on",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_light_toggle_turns_on_when_it_was_off",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_light_turn_off",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_basic_light_turn_on",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_config_matched",
                "time": 0.393,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_entity_category",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_multiSelect_current_option",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_multiSelect_extra_state_attributes",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_multiSelect_options",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_multiSelect_select_option",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_multi_sensor_device_class",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_multi_sensor_options",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_multi_sensor_state_class",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_multi_sensor_units",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_multi_sensor_value",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_name_returns_device_name",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_set_speed",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_set_speed_snaps",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_should_poll",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_speed",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_speed_step",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_supported_features",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_switchable_is_on",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_switchable_toggle",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_switchable_turn_off",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_switchable_turn_on",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_himox_h06_purifier.TestHimoxH06Purifier",
                "name": "test_update",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_available",
                "time": 0.157,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_basic_bsensor_device_class",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_basic_bsensor_is_on",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_config_matched",
                "time": 0.755,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_current_operation",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_current_temperature",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_entity_category",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_is_away_mode_is_none_when_unsupported",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_max_temp",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_min_temp",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_name_returns_device_name",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_operation_list",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_precision",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_set_operation_mode_to_eco",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_set_operation_mode_to_electric",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_set_operation_mode_to_heat_pump",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_set_operation_mode_to_highdemand",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_set_operation_mode_to_off",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_set_operation_mode_to_performance",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_set_operation_mode_with_temperature_service",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_set_temperature_fails",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_should_poll",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_supported_features",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_target_temperature",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_target_temperature_step",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_temperature_unit_returns_celsius",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_turn_away_mode_off_fails",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_turn_away_mode_on_fails",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_turn_off",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_turn_on",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_hydrotherm_dynamicx8.TestHydrothermDynamicX8",
                "name": "test_update",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_available",
                "time": 0.236,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basicSelect_current_option",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basicSelect_options",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basicSelect_select_option",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basic_light_color_mode",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basic_light_has_no_brightness",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basic_light_has_no_effects",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basic_light_is_on",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basic_light_state_attributes",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basic_light_supported_color_modes",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basic_light_supported_features",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basic_light_toggle_turns_off_when_it_was_on",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basic_light_toggle_turns_on_when_it_was_off",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basic_light_turn_off",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_basic_light_turn_on",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_config_matched",
                "time": 0.636,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_direction",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_entity_category",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_name_returns_device_name",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_preset_mode",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_preset_modes",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_set_direction_forward",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_set_direction_reverse",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_set_speed",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_set_speed_in_normal_mode_snaps",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_set_stop_timer",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_should_poll",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_speed",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_supported_features",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_switchable_is_on",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_switchable_toggle",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_switchable_turn_off",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_switchable_turn_on",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_immax_neo_light_vento.TestImmaxNeoLightVento",
                "name": "test_update",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_available",
                "time": 0.193,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_basicSelect_current_option",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_basicSelect_options",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_basicSelect_select_option",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_climate_hvac_modes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_config_matched",
                "time": 0.443,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_current_temperature",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_entity_category",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_extra_state_attributes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_hvac_action",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_icon",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_maximum_target_temperature",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_minimum_target_temperature",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_multi_bsensor_device_class",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_multi_bsensor_extra_state_attributes",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_multi_bsensor_is_on",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_multi_number_device_class",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_multi_number_max_value",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_multi_number_min_value",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_multi_number_mode",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_multi_number_set_value",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_multi_number_step",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_multi_number_value",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_name_returns_device_name",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_should_poll",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_supported_features",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_target_temperature",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_target_temperature_step",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_temperature_unit",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_itc308_thermostat.TestInkbirdITC308Thermostat",
                "name": "test_update",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_available",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_basicSelect_current_option",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_basicSelect_options",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_basicSelect_select_option",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_basic_bsensor_device_class",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_basic_bsensor_is_on",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_basic_sensor_device_class",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_basic_sensor_state_class",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_basic_sensor_units",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_basic_sensor_value",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_config_matched",
                "time": 0.839,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_current_temperature",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_entity_category",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_extra_state_attributes",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_hvac_action",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_hvac_mode",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_hvac_modes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_icon",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_maximum_target_temperature",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_minimum_target_temperature",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_multi_number_device_class",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_multi_number_max_value",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_multi_number_min_value",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_multi_number_mode",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_multi_number_set_value",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_multi_number_step",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_multi_number_value",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_name_returns_device_name",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_should_poll",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_supported_features",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_target_temperature",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_target_temperature_step",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_temperature_unit",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_turn_off",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_turn_on",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_inkbird_sousvide.TestInkbirdSousVideCooker",
                "name": "test_update",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_available",
                "time": 0.181,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_basic_lock_is_locked",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_basic_lock_locks",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_basic_lock_state_attributes",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_basic_lock_unlocks",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_config_matched",
                "time": 0.93,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_current_temperature",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_entity_category",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_extra_state_attributes",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_farenheit",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_hvac_mode",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_hvac_modes",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_icons",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_maximum_target_temperature",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_minimum_target_temperature",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_multiSelect_current_option",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_multiSelect_extra_state_attributes",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_multiSelect_options",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_multiSelect_select_option",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_multi_sensor_device_class",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_multi_sensor_options",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_multi_sensor_state_class",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_multi_sensor_units",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_multi_sensor_value",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_name_returns_device_name",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_number_device_class",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_number_extra_state_attributes",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_number_max_value",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_number_min_value",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_number_mode",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_number_set_value",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_number_step",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_number_unit_of_measurement",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_number_value",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_should_poll",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_supported_features",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_target_temperature",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_target_temperature_step",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_temperature_unit",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_jiahong_et72w_thermostat.TestJiahongEt72wThermostat",
                "name": "test_update",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_available",
                "time": 0.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_basic_bsensor_device_class",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_basic_bsensor_is_on",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_basic_sensor_device_class",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_basic_sensor_state_class",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_basic_sensor_units",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_basic_sensor_value",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_close_cover",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_config_matched",
                "time": 1.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_current_cover_position",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_device_class_is_garage",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_entity_category",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_extra_state_attributes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_is_closed",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_is_closing",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_is_opening",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_name_returns_device_name",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_open_cover",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_set_cover_position_not_supported",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_should_poll",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_stop_cover_not_supported",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_supported_features",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_garage_door_opener.TestKoganGarageOpener",
                "name": "test_update",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_available",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_config_matched",
                "time": 0.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_current_temperature",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_entity_category",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_hvac_mode",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_hvac_modes",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_icon",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_name_returns_device_name",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_should_poll",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_supported_features",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_turn_off",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_turn_on",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_glass_1_7l_kettle.TestKoganGlass1_7LKettle",
                "name": "test_update",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_available",
                "time": 0.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_config_matched",
                "time": 0.494,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_current_temperature",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_entity_category",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_extra_state_attributes",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_fan_mode",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_fan_modes",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_hvac_mode",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_hvac_modes",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_icon",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_maximum_target_temperature",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_maximum_target_temperature_f",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_minimum_target_temperature",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_minimum_target_temperature_f",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_name_returns_device_name",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_set_fan_mode_to_high",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_set_fan_mode_to_low",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_should_poll",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_supported_features",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_target_temperature",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_target_temperature_step",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_temperature_unit",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_turn_off",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_turn_on",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kogan_kawfpac09ya_airconditioner.TestKoganKAWFPAC09YA",
                "name": "test_update",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_clean_spot",
                "time": 0.21,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_locate",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_pause",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_return_to_base",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_send_left_command",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_send_random_command",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_send_reverse_command",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_send_right_command",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_send_smart_command",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_send_standby_command",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_send_stop_command",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_send_wall_follow_command",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_set_fan_speed",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_start",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_toggle",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_turn_off",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_async_turn_on",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_available",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_battery_level",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_config_matched",
                "time": 0.531,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_entity_category",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_fan_speed",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_fan_speed_list",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_multi_button_device_class",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_multi_button_extra_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_multi_button_press",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_multi_sensor_device_class",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_multi_sensor_options",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_multi_sensor_state_class",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_multi_sensor_units",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_multi_sensor_value",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_name_returns_device_name",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_should_poll",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_state",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_status",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_supported_features",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_kyvol_e30_vacuum.TestKyvolE30Vacuum",
                "name": "test_update",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_clean_spot",
                "time": 0.214,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_locate",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_pause",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_return_to_base",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_send_left_command",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_send_random_command",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_send_reverse_command",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_send_right_command",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_send_smart_command",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_send_standby_command",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_send_stop_command",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_send_wall_follow_command",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_start",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_toggle",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_turn_off",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_async_turn_on",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_available",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_battery_level",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_config_matched",
                "time": 0.528,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_entity_category",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_fan_speed",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_multi_sensor_device_class",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_multi_sensor_options",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_multi_sensor_state_class",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_multi_sensor_units",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_multi_sensor_value",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_name_returns_device_name",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_should_poll",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_state",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_status",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_supported_features",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lefant_m213_vacuum.TestLefantM213Vacuum",
                "name": "test_update",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_available",
                "time": 0.216,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_light_color_mode",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_light_has_no_brightness",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_light_has_no_effects",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_light_is_on",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_light_state_attributes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_light_supported_color_modes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_light_supported_features",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_light_toggle_turns_off_when_it_was_on",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_light_toggle_turns_on_when_it_was_off",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_light_turn_off",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_light_turn_on",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_lock_is_locked",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_lock_locks",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_lock_state_attributes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_lock_unlocks",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_switch_class_device_class",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_switch_is_on",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_switch_state_attributes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_switch_toggle_turns_off_when_it_was_on",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_switch_toggle_turns_on_when_it_was_off",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_switch_turn_off",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_basic_switch_turn_on",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_config_matched",
                "time": 0.965,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_entity_category",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_extra_state_attributes",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_icons",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_name_returns_device_name",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_number_device_class",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_number_extra_state_attributes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_number_max_value",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_number_min_value",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_number_mode",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_number_set_value",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_number_step",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_number_unit_of_measurement",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_number_value",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_oscillate_off",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_oscillating",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_preset_mode",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_preset_modes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_set_preset_mode_to_foresthigh",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_set_preset_mode_to_forestlow",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_set_preset_mode_to_sleephigh",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_set_preset_mode_to_sleeplow",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_set_speed",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_set_speed_snaps",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_should_poll",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_speed",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_speed_step",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_supported_features",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_switchable_is_on",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_switchable_toggle",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_switchable_turn_off",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_switchable_turn_on",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_lexy_f501_fan.TestLexyF501Fan",
                "name": "test_update",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_available",
                "time": 0.171,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_config_matched",
                "time": 1.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_entity_category",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_number_device_class",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_number_max_value",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_number_min_value",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_number_mode",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_number_set_value",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_number_step",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_number_value",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_switch_device_class",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_switch_is_on",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_switch_state_attributes",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_switch_toggle_turns_off_when_it_was_on",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_switch_toggle_turns_on_when_it_was_off",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_switch_turn_off",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_multi_switch_turn_on",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_name_returns_device_name",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_should_poll",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_logicom_powerstrip.TestLogicomPowerstrip",
                "name": "test_update",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_available",
                "time": 0.209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_basicSelect_current_option",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_basicSelect_options",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_basicSelect_select_option",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_close_cover",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_config_matched",
                "time": 1.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_current_cover_position",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_device_class_is_curtain",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_entity_category",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_is_closed",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_is_closing",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_is_opening",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_multi_sensor_device_class",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_multi_sensor_options",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_multi_sensor_state_class",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_multi_sensor_units",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_multi_sensor_value",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_name_returns_device_name",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_open_cover",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_set_cover_position",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_should_poll",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_stop_cover",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_supported_features",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_m027_curtain.TestM027Curtains",
                "name": "test_update",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moebot.TestMoebot",
                "name": "test_async_stop",
                "time": 0.201,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moebot.TestMoebot",
                "name": "test_available",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moebot.TestMoebot",
                "name": "test_config_matched",
                "time": 0.717,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moebot.TestMoebot",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moebot.TestMoebot",
                "name": "test_entity_category",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moebot.TestMoebot",
                "name": "test_name_returns_device_name",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moebot.TestMoebot",
                "name": "test_should_poll",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moebot.TestMoebot",
                "name": "test_supported_features",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moebot.TestMoebot",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moebot.TestMoebot",
                "name": "test_update",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_available",
                "time": 0.158,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_basic_lock_is_locked",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_basic_lock_locks",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_basic_lock_state_attributes",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_basic_lock_unlocks",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_config_matched",
                "time": 0.593,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_current_temperature",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_entity_category",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_extra_state_attributes",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_hvac_mode",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_hvac_modes",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_icons",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_legacy_set_temperature_with_both_properties",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_legacy_set_temperature_with_preset_mode",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_maximum_target_temperature",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_minimum_target_temperature",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_name_returns_device_name",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_should_poll",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_supported_features",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_target_temperature",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_target_temperature_step",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_temperature_unit",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_bht002_thermostat.TestMoesBHT002Thermostat",
                "name": "test_update",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_available",
                "time": 0.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_basic_switch_class_device_class",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_basic_switch_is_on",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_basic_switch_state_attributes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_basic_switch_toggle_turns_off_when_it_was_on",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_basic_switch_toggle_turns_on_when_it_was_off",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_basic_switch_turn_off",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_basic_switch_turn_on",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_config_matched",
                "time": 1.117,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_entity_category",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_extra_state_attributes_set",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_light_brightness",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_light_color_mode",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_light_effect",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_light_effect_list",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_light_hs_color",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_light_is_on",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_light_supported_color_modes",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_light_supported_features",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_multi_sensor_device_class",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_multi_sensor_options",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_multi_sensor_state_class",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_multi_sensor_units",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_multi_sensor_value",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_name_returns_device_name",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_number_device_class",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_number_extra_state_attributes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_number_max_value",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_number_min_value",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_number_mode",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_number_set_value",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_number_step",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_number_unit_of_measurement",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_number_value",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_set_brightness",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_set_hs_color",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_should_poll",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_turn_off",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_turn_on",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_rgb_socket.TestMoesRGBSocket",
                "name": "test_update",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_available",
                "time": 0.221,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_basic_sensor_device_class",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_basic_sensor_state_class",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_basic_sensor_units",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_basic_sensor_value",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_config_matched",
                "time": 0.605,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_entity_category",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multiSelect_current_option",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multiSelect_extra_state_attributes",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multiSelect_options",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multiSelect_select_option",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_number_device_class",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_number_max_value",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_number_min_value",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_number_mode",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_number_set_value",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_number_step",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_number_value",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_switch_device_class",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_switch_is_on",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_switch_state_attributes",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_switch_toggle_turns_off_when_it_was_on",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_switch_toggle_turns_on_when_it_was_off",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_switch_turn_off",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_multi_switch_turn_on",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_name_returns_device_name",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_should_poll",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_moes_temp_humidity.TestMoesTempHumidity",
                "name": "test_update",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_auto_mode_async_turn_on_off",
                "time": 0.227,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_auto_mode_is_on",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_available",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_basic_switch_class_device_class",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_basic_switch_is_on",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_basic_switch_state_attributes",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_basic_switch_toggle_turns_off_when_it_was_on",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_basic_switch_toggle_turns_on_when_it_was_off",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_basic_switch_turn_off",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_basic_switch_turn_on",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_config_matched",
                "time": 0.613,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_effect",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_effects",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_entity_category",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_is_on_reflects_switch",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_multi_number_device_class",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_multi_number_max_value",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_multi_number_min_value",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_multi_number_mode",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_multi_number_set_value",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_multi_number_step",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_multi_number_value",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_name_returns_device_name",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_set_to_auto",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_should_poll",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_turn_off_via_effect",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_turn_on_via_effect",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_motion_sensor_light.TestMotionLight",
                "name": "test_update",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_available",
                "time": 0.238,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_basicSelect_current_option",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_basicSelect_options",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_basicSelect_select_option",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_basic_button_device_class",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_basic_button_extra_attributes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_basic_button_press",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_basic_sensor_device_class",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_basic_sensor_state_class",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_basic_sensor_units",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_basic_sensor_value",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_config_matched",
                "time": 1.148,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_current_temperature",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_entity_category",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_extra_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_hvac_mode",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_hvac_modes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_icons",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_maximum_target_temperature",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_minimum_target_temperature",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_name_returns_device_name",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_number_device_class",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_number_extra_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_number_max_value",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_number_min_value",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_number_mode",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_number_set_value",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_number_step",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_number_unit_of_measurement",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_number_value",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_set_hvac_mode_cool",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_set_hvac_mode_heat",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_set_hvac_mode_off",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_should_poll",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_supported_features",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_target_temperature",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_target_temperature_step",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nashone_mts700wb_thermostat.TestNashoneMTS700WBThermostat",
                "name": "test_update",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_available",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_basic_lock_is_locked",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_basic_lock_locks",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_basic_lock_state_attributes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_basic_lock_unlocks",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_config_matched",
                "time": 1.165,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_current_temperature",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_entity_category",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_extra_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_hvac_mode",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_hvac_modes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_icon",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_maximum_target_temperature",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_minimum_target_temperature",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_name_returns_device_name",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_number_device_class",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_number_extra_state_attributes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_number_max_value",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_number_min_value",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_number_mode",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_number_set_value",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_number_step",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_number_unit_of_measurement",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_number_value",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_preset_mode",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_preset_modes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_set_preset_more_to_away",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_set_preset_more_to_comfort",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_set_preset_more_to_eco",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_should_poll",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_supported_features",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_target_temperature",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_target_temperature_step",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_temperature_unit_returns_celsius",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_turn_off",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_turn_on",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_nedis_htpl20f_heater.TestNedisHtpl20fHeater",
                "name": "test_update",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_available",
                "time": 0.2,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_available_tones",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_basic_sensor_device_class",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_basic_sensor_state_class",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_basic_sensor_units",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_basic_sensor_value",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_config_matched",
                "time": 1.215,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_entity_category",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_extra_attributes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_is_on",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_multi_bsensor_device_class",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_multi_bsensor_extra_state_attributes",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_multi_bsensor_is_on",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_name_returns_device_name",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_set_duration",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_set_multi",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_set_to_light",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_set_to_sound",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_set_to_sound_light",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_set_volume_high",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_set_volume_low",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_set_volume_mid",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_set_volume_mute",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_should_poll",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_supported_features",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_turn_off",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_turn_on_keeps_tone_when_already_on",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_turn_on_no_param",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_outdoor_siren.TestOrionSiren",
                "name": "test_update",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_available",
                "time": 0.183,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_changed_by",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_config_matched",
                "time": 1.152,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_entity_category",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_extra_state_attributes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_is_jammed",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_is_locked",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_multi_bsensor_device_class",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_multi_bsensor_extra_state_attributes",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_multi_bsensor_is_on",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_multi_sensor_device_class",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_multi_sensor_options",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_multi_sensor_state_class",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_multi_sensor_units",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_multi_sensor_value",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_name_returns_device_name",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_should_poll",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_unlock",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_unlock_fails_when_not_requested",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_orion_smartlock.TestOrionSmartLock",
                "name": "test_update",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_available",
                "time": 0.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_basicSelect_current_option",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_basicSelect_options",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_basicSelect_select_option",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_config_matched",
                "time": 0.639,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_entity_category",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_bsensor_device_class",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_bsensor_extra_state_attributes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_bsensor_is_on",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_number_device_class",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_number_max_value",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_number_min_value",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_number_mode",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_number_set_value",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_number_step",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_number_value",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_sensor_device_class",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_sensor_options",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_sensor_state_class",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_sensor_units",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_sensor_value",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_switch_device_class",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_switch_is_on",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_switch_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_switch_toggle_turns_off_when_it_was_on",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_switch_toggle_turns_on_when_it_was_off",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_switch_turn_off",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_multi_switch_turn_on",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_name_returns_device_name",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_should_poll",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_parkside_plgs2012a1_smart_charger.TestParksidePLGS2012A1Charger",
                "name": "test_update",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_available",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_config_matched",
                "time": 1.203,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_entity_category",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_multi_sensor_device_class",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_multi_sensor_options",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_multi_sensor_state_class",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_multi_sensor_units",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_multi_sensor_value",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_name_returns_device_name",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_should_poll",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_pc321ty_energy_meter.TestPC321TYPowerClamp",
                "name": "test_update",
                "time": 0.113,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_available",
                "time": 0.277,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_basicSelect_current_option",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_basicSelect_options",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_basicSelect_select_option",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_basic_button_device_class",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_basic_button_extra_attributes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_basic_button_press",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_basic_lock_is_locked",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_basic_lock_locks",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_basic_lock_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_basic_lock_unlocks",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_config_matched",
                "time": 1.226,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_entity_category",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_multi_sensor_device_class",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_multi_sensor_options",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_multi_sensor_state_class",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_multi_sensor_units",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_multi_sensor_value",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_name_returns_device_name",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_preset_mode",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_preset_modes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_set_preset_to_auto",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_set_preset_to_manual",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_set_preset_to_sleep",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_set_speed",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_set_speed_snaps",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_should_poll",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_speed",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_speed_step",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_supported_features",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_switchable_is_on",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_switchable_toggle",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_switchable_turn_off",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_switchable_turn_on",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poiema_one_purifier.TestPoeimaOnePurifier",
                "name": "test_update",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_available",
                "time": 0.203,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_basic_bsensor_device_class",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_basic_bsensor_is_on",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_config_matched",
                "time": 0.686,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_current_temperature",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_entity_category",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_error_state",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_hvac_mode",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_hvac_mode_cool",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_hvac_mode_heat",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_hvac_mode_mute",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_hvac_modes",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_icon",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_maximum_target_temperature",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_minimum_target_temperature",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_name_returns_device_name",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_should_poll",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_supported_features",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_target_temperature",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_target_temperature_step",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_temperature_unit_returns_celsius",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_turn_off",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_poolex_qline_heatpump.TestPoolexSilverlineHeatpump",
                "name": "test_update",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_available",
                "time": 0.181,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_basic_bsensor_device_class",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_basic_bsensor_is_on",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_config_matched",
                "time": 0.69,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_entity_category",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_number_device_class",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_number_max_value",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_number_min_value",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_number_mode",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_number_set_value",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_number_step",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_number_value",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_sensor_device_class",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_sensor_options",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_sensor_state_class",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_sensor_units",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_multi_sensor_value",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_name_returns_device_name",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_should_poll",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qoto_03_sprinkler.TestQotoSprinkler",
                "name": "test_update",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_available",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_basicSelect_current_option",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_basicSelect_options",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_basicSelect_select_option",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_close_cover",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_config_matched",
                "time": 1.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_current_cover_position",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_device_class_is_curtain",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_entity_category",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_is_closed",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_is_closing",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_is_opening",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_name_returns_device_name",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_number_device_class",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_number_extra_state_attributes",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_number_max_value",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_number_min_value",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_number_mode",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_number_set_value",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_number_step",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_number_unit_of_measurement",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_number_value",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_open_cover",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_set_cover_position",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_should_poll",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_stop_cover",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_supported_features",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_qs_c01_curtain.TestQSC01Curtains",
                "name": "test_update",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_available",
                "time": 0.169,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_light_color_mode",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_light_has_no_brightness",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_light_has_no_effects",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_light_is_on",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_light_state_attributes",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_light_supported_color_modes",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_light_supported_features",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_light_toggle_turns_off_when_it_was_on",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_light_toggle_turns_on_when_it_was_off",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_light_turn_off",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_light_turn_on",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_lock_is_locked",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_lock_locks",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_lock_state_attributes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_lock_unlocks",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_switch_class_device_class",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_switch_is_on",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_switch_state_attributes",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_switch_toggle_turns_off_when_it_was_on",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_switch_toggle_turns_on_when_it_was_off",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_switch_turn_off",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_basic_switch_turn_on",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_config_matched",
                "time": 0.878,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_entity_category",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_extra_state_attributes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_icons",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_multi_sensor_device_class",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_multi_sensor_options",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_multi_sensor_state_class",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_multi_sensor_units",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_multi_sensor_value",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_name_returns_device_name",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_preset_mode",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_preset_modes",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_set_preset_mode_to_auto",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_set_preset_mode_to_high",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_set_preset_mode_to_low",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_set_preset_mode_to_mid",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_should_poll",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_supported_features",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_switchable_is_on",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_switchable_toggle",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_switchable_turn_off",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_switchable_turn_on",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_renpho_rp_ap001s.TestRenphoPurifier",
                "name": "test_update",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_available",
                "time": 0.181,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_brightness",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_color_mode",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_color_temp",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_config_matched",
                "time": 1.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_effect",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_effect_list",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_entity_category",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_extra_state_attributes",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_hs_color",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_invalid_hs_color",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_is_on",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_name_returns_device_name",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_number_device_class",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_number_extra_state_attributes",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_number_max_value",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_number_min_value",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_number_mode",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_number_set_value",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_number_step",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_number_unit_of_measurement",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_number_value",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_set_brightness_color",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_set_brightness_white",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_set_hs_color",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_set_hs_from_white",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_should_poll",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_supported_color_modes",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_supported_features",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_turn_off",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_turn_on",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_rgbcw_lightbulb.TestRGBCWLightbulb",
                "name": "test_update",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_available",
                "time": 0.209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_bsensor_device_class",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_bsensor_is_on",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_light_color_mode",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_light_has_no_brightness",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_light_has_no_effects",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_light_is_on",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_light_state_attributes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_light_supported_color_modes",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_light_supported_features",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_light_toggle_turns_off_when_it_was_on",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_light_toggle_turns_on_when_it_was_off",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_light_turn_off",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_light_turn_on",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_switch_class_device_class",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_switch_is_on",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_switch_state_attributes",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_switch_toggle_turns_off_when_it_was_on",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_switch_toggle_turns_on_when_it_was_off",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_switch_turn_off",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_basic_switch_turn_on",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_config_matched",
                "time": 1.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_entity_category",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multiSelect_current_option",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multiSelect_extra_state_attributes",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multiSelect_options",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multiSelect_select_option",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multi_number_device_class",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multi_number_max_value",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multi_number_min_value",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multi_number_mode",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multi_number_set_value",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multi_number_step",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_multi_number_value",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_name_returns_device_name",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_should_poll",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_sd123_hpr01_presence.TestSD123HumanPresenceRadar",
                "name": "test_update",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_available",
                "time": 0.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_close_cover",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_config_matched",
                "time": 0.985,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_current_cover_position",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_device_class_is_blind",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_entity_category",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_extra_state_attributes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_is_closed",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_is_closing",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_is_opening",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_name_returns_device_name",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_open_cover",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_set_cover_position",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_should_poll",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_stop_cover",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_supported_features",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_blinds.TestSimpleBlinds",
                "name": "test_update",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_available",
                "time": 0.157,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_config_matched",
                "time": 1.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_device_class_is_outlet",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_entity_category",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_extra_state_attributes_set",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_name_returns_device_name",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_number_device_class",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_number_extra_state_attributes",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_number_max_value",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_number_min_value",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_number_mode",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_number_set_value",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_number_step",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_number_unit_of_measurement",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_number_value",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_should_poll",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_switchable_is_on",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_switchable_toggle",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_switchable_turn_off",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_switchable_turn_on",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timer.TestTimedSwitch",
                "name": "test_update",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_available",
                "time": 0.2,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_config_matched",
                "time": 1.422,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_device_class_is_outlet",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_entity_category",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_extra_state_attributes_set",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_name_returns_device_name",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_number_device_class",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_number_extra_state_attributes",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_number_max_value",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_number_min_value",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_number_mode",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_number_set_value",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_number_step",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_number_unit_of_measurement",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_number_value",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_should_poll",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_switchable_is_on",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_switchable_toggle",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_switchable_turn_off",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_switchable_turn_on",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_simple_switch_with_timerv2.TestTimedSwitch",
                "name": "test_update",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_available",
                "time": 0.134,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_config_matched",
                "time": 1.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_device_class_is_outlet",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_entity_category",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_extra_state_attributes_set",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_name_returns_device_name",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_number_device_class",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_number_extra_state_attributes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_number_max_value",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_number_min_value",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_number_mode",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_number_set_value",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_number_step",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_number_unit_of_measurement",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_number_value",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_should_poll",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_switchable_is_on",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_switchable_toggle",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_switchable_turn_off",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_switchable_turn_on",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplug_encoded.TestSwitchEncoded",
                "name": "test_update",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_available",
                "time": 0.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_basic_bsensor_device_class",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_basic_bsensor_is_on",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_config_matched",
                "time": 1.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_device_class_is_outlet",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_entity_category",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_multi_sensor_device_class",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_multi_sensor_options",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_multi_sensor_state_class",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_multi_sensor_units",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_multi_sensor_value",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_name_returns_device_name",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_number_device_class",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_number_extra_state_attributes",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_number_max_value",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_number_min_value",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_number_mode",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_number_set_value",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_number_step",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_number_unit_of_measurement",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_number_value",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_should_poll",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_switchable_is_on",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_switchable_toggle",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_switchable_turn_off",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_switchable_turn_on",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv1.TestKoganSwitch",
                "name": "test_update",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_available",
                "time": 0.172,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_config_matched",
                "time": 1.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_device_class_is_outlet",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_entity_category",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_multi_sensor_device_class",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_multi_sensor_options",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_multi_sensor_state_class",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_multi_sensor_units",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_multi_sensor_value",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_name_returns_device_name",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_number_device_class",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_number_extra_state_attributes",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_number_max_value",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_number_min_value",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_number_mode",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_number_set_value",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_number_step",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_number_unit_of_measurement",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_number_value",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_sensor_precision",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_should_poll",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_switchable_is_on",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_switchable_toggle",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_switchable_turn_off",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_switchable_turn_on",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2.TestSwitchV2",
                "name": "test_update",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_available",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_basicSelect_current_option",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_basicSelect_options",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_basicSelect_select_option",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_basic_bsensor_device_class",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_basic_bsensor_is_on",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_config_matched",
                "time": 0.851,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_entity_category",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_sensor_device_class",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_sensor_options",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_sensor_state_class",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_sensor_units",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_sensor_value",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_switch_device_class",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_switch_is_on",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_switch_state_attributes",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_switch_toggle_turns_off_when_it_was_on",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_switch_toggle_turns_on_when_it_was_off",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_switch_turn_off",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_multi_switch_turn_on",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_name_returns_device_name",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_number_device_class",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_number_extra_state_attributes",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_number_max_value",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_number_min_value",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_number_mode",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_number_set_value",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_number_step",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_number_unit_of_measurement",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_number_value",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_should_poll",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_smartplugv2_energy.TestSwitchV2Energy",
                "name": "test_update",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_available",
                "time": 0.171,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_config_matched",
                "time": 1.592,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_entity_category",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_extra_state_attributes",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_name_returns_device_name",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_oscillate_off",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_oscillate_on",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_oscillating",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_preset_mode",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_preset_modes",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_select_option",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_set_preset_mode_to_nature",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_set_preset_mode_to_normal",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_set_preset_mode_to_sleep",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_set_speed",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_set_speed_snaps",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_should_poll",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_speed",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_speed_step",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_supported_features",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_switchable_is_on",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_switchable_toggle",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_switchable_turn_off",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_switchable_turn_on",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_timer_current_option",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_timer_options",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_stirling_fs140dc_fan.TestStirlingFS1Fan",
                "name": "test_update",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_available",
                "time": 0.182,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_basic_bsensor_device_class",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_basic_bsensor_is_on",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_config_matched",
                "time": 1.514,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_current_operation",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_current_temperature",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_entity_category",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_is_away_mode_redirects_to_mode",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_max_temp",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_min_temp",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_name_returns_device_name",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_operation_list",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_precision",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_set_operation_mode_to_eco",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_set_operation_mode_to_electric",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_set_operation_mode_to_off",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_set_operation_mode_to_performance",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_set_operation_mode_with_temperature_service",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_set_temperature",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_should_poll",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_supported_features",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_target_temperature",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_target_temperature_step",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_temperature_unit_returns_celsius",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_turn_away_mode_off",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_turn_away_mode_on",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_turn_off",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_turn_on",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_thermex_if50v.TestThermexIF50V",
                "name": "test_update",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_available",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_config_matched",
                "time": 1.459,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_entity_category",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_extra_state_attributes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_name_returns_device_name",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_number_device_class",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_number_extra_state_attributes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_number_max_value",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_number_min_value",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_number_mode",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_number_set_value",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_number_step",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_number_unit_of_measurement",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_number_value",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_set_speed",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_set_speed_snaps",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_should_poll",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_speed",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_speed_step",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_supported_features",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_switchable_is_on",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_switchable_toggle",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_switchable_turn_off",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_switchable_turn_on",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tmwf02_fan.TestTMWF02Fan",
                "name": "test_update",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_available",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_config_matched",
                "time": 1.583,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_entity_category",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_multi_sensor_device_class",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_multi_sensor_options",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_multi_sensor_state_class",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_multi_sensor_units",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_multi_sensor_value",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_name_returns_device_name",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_phasea_encoding",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_phasea_missing",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_should_poll",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_tompd63lw_breaker.TestTOMPD63lw",
                "name": "test_update",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_available",
                "time": 0.138,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_config_matched",
                "time": 0.9,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_entity_category",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_name_returns_device_name",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_number_device_class",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_number_extra_state_attributes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_number_max_value",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_number_min_value",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_number_mode",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_number_set_value",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_number_step",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_number_unit_of_measurement",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_number_value",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_set_speed",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_set_speed_snaps",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_should_poll",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_speed",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_speed_step",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_supported_features",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_switchable_is_on",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_switchable_toggle",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_switchable_turn_off",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_switchable_turn_on",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_treatlife_ds02f.TestTreatlifeFan",
                "name": "test_update",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_available",
                "time": 0.175,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basicSelect_current_option",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basicSelect_options",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basicSelect_select_option",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_bsensor_device_class",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_bsensor_is_on",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_button_device_class",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_button_extra_attributes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_button_press",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_light_color_mode",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_light_has_no_brightness",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_light_has_no_effects",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_light_is_on",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_light_state_attributes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_light_supported_color_modes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_light_supported_features",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_light_toggle_turns_off_when_it_was_on",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_light_toggle_turns_on_when_it_was_off",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_light_turn_off",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_basic_light_turn_on",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_config_matched",
                "time": 1.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_entity_category",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_multi_sensor_device_class",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_multi_sensor_options",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_multi_sensor_state_class",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_multi_sensor_units",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_multi_sensor_value",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_name_returns_device_name",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_preset_mode",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_preset_modes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_set_preset_to_auto",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_set_preset_to_low",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_set_preset_to_sleep",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_should_poll",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_supported_features",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_switchable_is_on",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_switchable_toggle",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_switchable_turn_off",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_switchable_turn_on",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_vork_vk6067aw_purifier.TestVorkVK6267AWPurifier",
                "name": "test_update",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_available",
                "time": 0.141,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_basic_bsensor_device_class",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_basic_bsensor_is_on",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_config_matched",
                "time": 1.681,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_current_temperature",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_entity_category",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_extra_state_attributes",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_hvac_mode",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_hvac_modes",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_maximum_target_temperature",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_minimum_target_temperature",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_name_returns_device_name",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_set_cool",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_set_heat",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_should_poll",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_supported_features",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_target_temperature",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_target_temperature_step",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_turn_off",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_weau_pool_heatpumpv2.TestWeauPoolHeatpumpV2",
                "name": "test_update",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_available",
                "time": 0.194,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_available_modes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_light_color_mode",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_light_has_no_brightness",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_light_has_no_effects",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_light_is_on",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_light_state_attributes",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_light_supported_color_modes",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_light_supported_features",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_light_toggle_turns_off_when_it_was_on",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_light_toggle_turns_on_when_it_was_off",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_light_turn_off",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_light_turn_on",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_lock_is_locked",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_lock_locks",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_lock_state_attributes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_basic_lock_unlocks",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_config_matched",
                "time": 1.151,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_entity_category",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_extra_state_attributes",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_icons",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_max_target_humidity",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_min_target_humidity",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_mode",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_sensor_device_class",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_sensor_options",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_sensor_state_class",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_sensor_units",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_sensor_value",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_switch_device_class",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_switch_is_on",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_switch_state_attributes",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_switch_toggle_turns_off_when_it_was_on",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_switch_toggle_turns_on_when_it_was_off",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_switch_turn_off",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_multi_switch_turn_on",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_name_returns_device_name",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_set_mode_to_auto",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_set_mode_to_boost",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_set_mode_to_normal",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_set_mode_to_sleep",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_should_poll",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_supported_features",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_switchable_is_on",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_switchable_toggle",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_switchable_turn_off",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_switchable_turn_on",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_target_humidity",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wawh1210lw_humidifier.TestWetairWAWH1210LWHumidifier",
                "name": "test_update",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_available",
                "time": 0.177,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_basicSelect_current_option",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_basicSelect_extra_state_attributes",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_basicSelect_options",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_basicSelect_select_option",
                "time": 0.111,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_basic_sensor_device_class",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_basic_sensor_state_class",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_basic_sensor_units",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_basic_sensor_value",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_config_matched",
                "time": 1.639,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_current_temperature_not_supported",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_dimmable_light_brightness",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_dimmable_light_set_brightness",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_dimmable_light_set_brightness_to_off",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_dimmable_light_state_attributes",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_dimmable_light_toggle_turns_off_when_it_was_on",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_dimmable_light_turn_off",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_entity_category",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_extra_state_attributes",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_hvac_mode",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_hvac_modes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_icon",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_legacy_set_temperature_with_both_properties",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_legacy_set_temperature_with_no_valid_properties",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_legacy_set_temperature_with_preset_mode",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_legacy_set_temperature_with_temperature",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_light_brightness_snaps",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_light_icon",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_maximum_target_temperature",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_minimum_target_temperature",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_name_returns_device_name",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_preset_mode",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_preset_modes",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_set_preset_mode_to_away",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_set_preset_mode_to_boost",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_set_preset_mode_to_comfort",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_set_target_temperature_fails_in_anti_frost",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_set_target_temperature_fails_outside_valid_range",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_set_target_temperature_rounds_value_to_closest_integer",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_set_target_temperature_succeeds_within_valid_range",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_should_poll",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_supported_features",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_target_temperature",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_target_temperature_in_af_mode",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_target_temperature_step",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_temperatre_unit_retrns_device_temperatre_unit",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_turn_off",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_turn_on",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wetair_wch750_heater.TestWetairWCH750Heater",
                "name": "test_update",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_available",
                "time": 0.15,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_available_modes",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_basic_bsensor_device_class",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_basic_bsensor_extra_state_attributes",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_basic_bsensor_is_on",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_config_matched",
                "time": 0.927,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_entity_category",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_extra_state_attributes",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_icons",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_max_target_humidity",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_min_target_humidity",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_mode",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multiSelect_current_option",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multiSelect_extra_state_attributes",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multiSelect_options",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multiSelect_select_option",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_light_color_mode",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_light_is_on",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_light_state_attributes",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_light_supported_color_modes",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_light_supported_features",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_light_toggle_turns_off_when_it_was_on",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_light_toggle_turns_on_when_it_was_off",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_light_turn_off",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_light_turn_on",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_lights_have_no_brightness",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_lights_have_no_effects",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_sensor_device_class",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_sensor_extra_state_attributes",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_sensor_options",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_sensor_state_class",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_sensor_units",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_sensor_value",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_switch_device_class",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_switch_is_on",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_switch_state_attributes",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_switch_toggle_turns_off_when_it_was_on",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_switch_toggle_turns_on_when_it_was_off",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_switch_turn_off",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_multi_switch_turn_on",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_name_returns_device_name",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_set_mode_to_auto",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_set_mode_to_normal",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_should_poll",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_supported_features",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_switchable_is_on",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_switchable_toggle",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_switchable_turn_off",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_switchable_turn_on",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_target_humidity",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_wilfa_haze_hu400bc_humidifier.TestWilfaHazeHumidifier",
                "name": "test_update",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_available",
                "time": 0.163,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_config_matched",
                "time": 0.937,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_entity_category",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_number_device_class",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_number_extra_state_attributes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_number_max_value",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_number_min_value",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_number_mode",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_number_set_value",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_number_step",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_number_unit_of_measurement",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_number_value",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_switch_device_class",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_switch_is_on",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_switch_state_attributes",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_switch_toggle_turns_off_when_it_was_on",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_switch_toggle_turns_on_when_it_was_off",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_switch_turn_off",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_multi_switch_turn_on",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_name_returns_device_name",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_should_poll",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_woox_r4028_powerstrip.TestWooxR4028Powerstrip",
                "name": "test_update",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_arm_away",
                "time": 0.142,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_arm_home",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_arm_vacation_fails_when_not_supported",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_available",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_config_matched",
                "time": 0.955,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_device_info_returns_device_info_from_device",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_disarm",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_entity_category",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_name_returns_device_name",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_should_poll",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_state",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_supported_features",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_trigger_fails_when_not_supported",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_unique_id_contains_device_unique_id",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.devices.test_zx_g30_alarm.TestZXG30Alarm",
                "name": "test_update",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests] \ud83d\ude80  Start image=crawlergpt:latest\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/make-all-tuya-local] user=0 workdir=\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2601  git clone 'https://github.com/sonarsource/sonarcloud-github-action' # ref=master\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests] \ud83e\uddea  Matrix: map[python-version:3.11]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests] \u2b50 Run Main actions/checkout@v3\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2705  Success - Main actions/checkout@v3\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests] \u2b50 Run Main Set up Python 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/92305b11-2e08-4b5c-bf1d-7775b4fb7799/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2753  ::group::Installed versions\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.11 is 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? false\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::match not found\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Version 3.11 was not found in the local cache\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::set auth\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::arm64===x64 && darwin===linux\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::matched 3.11.4\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Version 3.11 is available for downloading\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Download from \"https://github.com/actions/python-versions/releases/download/3.11.4-5199054971/python-3.11.4-linux-20.04-x64.tar.gz\"\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.11.4-5199054971/python-3.11.4-linux-20.04-x64.tar.gz\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::Destination /tmp/b6dc9c6c-e627-40dd-a94c-2532d4bce6a0\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::set auth\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::download complete\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Extract downloaded archive\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::Checking tar --version\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/b58b1763-3f61-4303-a4f1-a29872355f42 -f /tmp/b6dc9c6c-e627-40dd-a94c-2532d4bce6a0\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Execute installation script\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Check if Python hostedtoolcache folder exist...\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Create Python 3.11.4 folder\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Copy Python binaries to hostedtoolcache folder\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Upgrading pip...\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Looking in links: /tmp/tmp22qicpq3\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (65.5.0)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (23.1.2)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pip\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 23.1 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Installing collected packages: pip\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Successfully installed pip-23.1.2\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Create complete file\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? false\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 3.11.4\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::explicit? true\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::evaluating 7 versions\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::matched: 3.11.4\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.11.4/x64\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.11.4 x64\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Successfully set up CPython (3.11.4)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2753  ::endgroup::\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2705  Success - Main Set up Python 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.11.4/x64\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.11.4/x64/lib/pkgconfig\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.11.4/x64/lib\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2699  ::set-output:: python-version=3.11.4\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.11.4/x64/bin/python\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.11.4/x64\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.11.4/x64/bin\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests] \u2b50 Run Main Install dependencies\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (23.1.2)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting black (from -r requirements-dev.txt (line 1))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading black-23.3.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.6 MB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.6/1.6 MB 14.2 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting fuzzywuzzy (from -r requirements-dev.txt (line 2))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading fuzzywuzzy-0.18.0-py2.py3-none-any.whl (18 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting isort (from -r requirements-dev.txt (line 3))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading isort-5.12.0-py3-none-any.whl (91 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 91.2/91.2 kB 2.4 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting levenshtein (from -r requirements-dev.txt (line 4))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading Levenshtein-0.21.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (172 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 173.0/173.0 kB 1.6 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-homeassistant-custom-component==0.13.23 (from -r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_homeassistant_custom_component-0.13.23-py3-none-any.whl (45 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 45.9/45.9 kB 2.7 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest (from -r requirements-dev.txt (line 6))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 4.6 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-asyncio (from -r requirements-dev.txt (line 7))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_asyncio-0.21.0-py3-none-any.whl (13 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-cov (from -r requirements-dev.txt (line 8))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pycryptodome~=3.18 (from -r requirements-dev.txt (line 9))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pycryptodome-3.18.0-cp35-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.1 MB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 19.2 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting tinytuya~=1.12.8 (from -r requirements-dev.txt (line 10))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading tinytuya-1.12.8-py2.py3-none-any.whl (111 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 111.5/111.5 kB 2.5 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting sqlalchemy (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading SQLAlchemy-2.0.17-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.8 MB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.8/2.8 MB 20.1 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting coverage==7.2.1 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading coverage-7.2.1-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (231 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 231.2/231.2 kB 4.2 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting freezegun==1.2.2 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading freezegun-1.2.2-py3-none-any.whl (17 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting mock-open==1.4.0 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading mock-open-1.4.0.tar.gz (12 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pydantic==1.10.7 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pydantic-1.10.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.1/3.1 MB 18.0 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pylint-per-file-ignores==1.1.0 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pylint_per_file_ignores-1.1.0-py3-none-any.whl (4.0 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pipdeptree==2.7.0 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pipdeptree-2.7.0-py3-none-any.whl (17 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-asyncio (from -r requirements-dev.txt (line 7))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_asyncio-0.20.3-py3-none-any.whl (12 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-aiohttp==1.0.4 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_aiohttp-1.0.4-py3-none-any.whl (8.6 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-cov (from -r requirements-dev.txt (line 8))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_cov-3.0.0-py3-none-any.whl (20 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-freezer==0.4.6 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_freezer-0.4.6-py3-none-any.whl (3.3 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-socket==0.5.1 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_socket-0.5.1-py3-none-any.whl (9.0 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-test-groups==1.0.3 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest-test-groups-1.0.3.tar.gz (2.5 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-sugar==0.9.6 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_sugar-0.9.6-py2.py3-none-any.whl (9.1 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-timeout==2.1.0 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_timeout-2.1.0-py3-none-any.whl (12 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-unordered==0.5.2 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_unordered-0.5.2-py3-none-any.whl (5.9 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-picked==0.4.6 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_picked-0.4.6-py3-none-any.whl (6.7 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest-xdist==3.2.1 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest_xdist-3.2.1-py3-none-any.whl (41 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.0/41.0 kB 416.0 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytest (from -r requirements-dev.txt (line 6))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytest-7.2.2-py3-none-any.whl (317 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 317.2/317.2 kB 6.6 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting requests-mock==1.10.0 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading requests_mock-1.10.0-py2.py3-none-any.whl (28 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting respx==0.20.1 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading respx-0.20.1-py2.py3-none-any.whl (22 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting syrupy==4.0.0 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading syrupy-4.0.0-py3-none-any.whl (42 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 42.9/42.9 kB 808.2 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting tqdm==4.64.0 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading tqdm-4.64.0-py2.py3-none-any.whl (78 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 78.4/78.4 kB 916.9 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting homeassistant==2023.4.6 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading homeassistant-2023.4.6-py3-none-any.whl (23.4 MB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 23.4/23.4 MB 6.2 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting sqlalchemy (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading SQLAlchemy-2.0.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.8 MB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.8/2.8 MB 15.3 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting paho-mqtt==1.6.1 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading paho-mqtt-1.6.1.tar.gz (99 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 99.4/99.4 kB 17.3 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting fnvhash==0.1.0 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading fnvhash-0.1.0.tar.gz (1.9 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting numpy==1.23.2 (from pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading numpy-1.23.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.0 MB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.0/17.0 MB 11.4 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting attrs>=19.2.0 (from pytest->-r requirements-dev.txt (line 6))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 608.0 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting iniconfig (from pytest->-r requirements-dev.txt (line 6))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting packaging (from pytest->-r requirements-dev.txt (line 6))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 725.7 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pluggy<2.0,>=0.12 (from pytest->-r requirements-dev.txt (line 6))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov->-r requirements-dev.txt (line 8))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading coverage-7.2.7-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (232 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 232.6/232.6 kB 3.0 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting python-dateutil>=2.7 (from freezegun==1.2.2->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 9.9 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting aiohttp==3.8.4 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading aiohttp-3.8.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.0/1.0 MB 10.2 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting astral==2.2 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading astral-2.2-py2.py3-none-any.whl (30 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting async-timeout==4.0.2 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting attrs>=19.2.0 (from pytest->-r requirements-dev.txt (line 6))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading attrs-22.2.0-py3-none-any.whl (60 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 60.0/60.0 kB 367.8 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting atomicwrites-homeassistant==1.4.1 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading atomicwrites_homeassistant-1.4.1-py2.py3-none-any.whl (7.1 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting awesomeversion==22.9.0 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading awesomeversion-22.9.0-py3-none-any.whl (12 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting bcrypt==4.0.1 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading bcrypt-4.0.1-cp36-abi3-manylinux_2_28_x86_64.whl (593 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 593.7/593.7 kB 5.2 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting certifi>=2021.5.30 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 2.0 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting ciso8601==2.3.0 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading ciso8601-2.3.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (39 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting httpx==0.23.3 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading httpx-0.23.3-py3-none-any.whl (71 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 71.5/71.5 kB 450.9 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting home-assistant-bluetooth==1.9.3 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading home_assistant_bluetooth-1.9.3.tar.gz (10 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting ifaddr==0.1.7 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading ifaddr-0.1.7-py2.py3-none-any.whl (10 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting jinja2==3.1.2 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 878.7 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting lru-dict==1.1.8 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading lru-dict-1.1.8.tar.gz (10 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting PyJWT==2.6.0 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading PyJWT-2.6.0-py3-none-any.whl (20 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting cryptography==40.0.1 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading cryptography-40.0.1-cp36-abi3-manylinux_2_28_x86_64.whl (3.7 MB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.7/3.7 MB 6.9 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pyOpenSSL==23.1.0 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pyOpenSSL-23.1.0-py3-none-any.whl (57 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.7/57.7 kB 751.2 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting orjson==3.8.7 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading orjson-3.8.7-cp311-cp311-manylinux_2_28_x86_64.whl (140 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 140.9/140.9 kB 19.0 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pip<23.1,>=21.0 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pip-23.0.1-py3-none-any.whl (2.1 MB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 6.7 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting python-slugify==4.0.1 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading python-slugify-4.0.1.tar.gz (11 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pyyaml==6.0 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading PyYAML-6.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (757 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 757.9/757.9 kB 7.7 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting requests==2.28.2 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading requests-2.28.2-py3-none-any.whl (62 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 377.6 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting typing-extensions<5.0,>=4.5.0 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting ulid-transform==0.6.3 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading ulid_transform-0.6.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (142 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 142.8/142.8 kB 6.4 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting voluptuous==0.13.1 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading voluptuous-0.13.1-py3-none-any.whl (29 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting voluptuous-serialize==2.6.0 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading voluptuous_serialize-2.6.0-py3-none-any.whl (6.8 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting yarl==1.8.1 (from homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading yarl-1.8.1.tar.gz (172 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 172.3/172.3 kB 932.7 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting termcolor>=1.1.0 (from pytest-sugar==0.9.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading termcolor-2.3.0-py3-none-any.whl (6.9 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting execnet>=1.1 (from pytest-xdist==3.2.1->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading execnet-1.9.0-py2.py3-none-any.whl (39 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting six (from requests-mock==1.10.0->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting greenlet!=0.4.17 (from sqlalchemy->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading greenlet-2.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (618 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 618.8/618.8 kB 6.3 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting colored<2.0.0,>=1.3.92 (from syrupy==4.0.0->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading colored-1.4.4.tar.gz (36 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Installing build dependencies: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Getting requirements to build wheel: finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting charset-normalizer<4.0,>=2.0 (from aiohttp==3.8.4->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading charset_normalizer-3.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (197 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 197.3/197.3 kB 18.8 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting multidict<7.0,>=4.5 (from aiohttp==3.8.4->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading multidict-6.0.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (117 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 117.4/117.4 kB 4.7 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting frozenlist>=1.1.1 (from aiohttp==3.8.4->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading frozenlist-1.3.3-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (154 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 154.3/154.3 kB 13.3 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting aiosignal>=1.1.2 (from aiohttp==3.8.4->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading aiosignal-1.3.1-py3-none-any.whl (7.6 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pytz (from astral==2.2->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 5.2 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting cffi>=1.12 (from cryptography==40.0.1->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading cffi-1.15.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (462 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 462.6/462.6 kB 4.6 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting httpcore<0.17.0,>=0.15.0 (from httpx==0.23.3->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading httpcore-0.16.3-py3-none-any.whl (69 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 69.6/69.6 kB 1.7 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting rfc3986[idna2008]<2,>=1.3 (from httpx==0.23.3->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading rfc3986-1.5.0-py2.py3-none-any.whl (31 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting sniffio (from httpx==0.23.3->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading sniffio-1.3.0-py3-none-any.whl (10 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting MarkupSafe>=2.0 (from jinja2==3.1.2->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (28 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting text-unidecode>=1.3 (from python-slugify==4.0.1->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading text_unidecode-1.3-py2.py3-none-any.whl (78 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 78.2/78.2 kB 8.4 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting idna<4,>=2.5 (from requests==2.28.2->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 1.9 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting urllib3<1.27,>=1.21.1 (from requests==2.28.2->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.1/143.1 kB 6.7 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting click>=8.0.0 (from black->-r requirements-dev.txt (line 1))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.6/96.6 kB 1.5 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting mypy-extensions>=0.4.3 (from black->-r requirements-dev.txt (line 1))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pathspec>=0.9.0 (from black->-r requirements-dev.txt (line 1))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting platformdirs>=2 (from black->-r requirements-dev.txt (line 1))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting rapidfuzz<4.0.0,>=2.3.0 (from levenshtein->-r requirements-dev.txt (line 4))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading rapidfuzz-3.1.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.1/3.1 MB 11.0 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting colorama (from tinytuya~=1.12.8->-r requirements-dev.txt (line 10))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | INFO: pip is looking at multiple versions of coverage[toml] to determine which version is compatible with other requirements. This could take a while.\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov->-r requirements-dev.txt (line 8))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading coverage-7.2.6-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (232 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 232.5/232.5 kB 820.6 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading coverage-7.2.5-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (232 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 232.0/232.0 kB 1.3 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading coverage-7.2.4-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (232 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 232.0/232.0 kB 1.8 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading coverage-7.2.3-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (231 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 231.8/231.8 kB 5.9 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading coverage-7.2.2-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (231 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 231.3/231.3 kB 3.7 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting pycparser (from cffi>=1.12->cryptography==40.0.1->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 118.7/118.7 kB 3.7 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting h11<0.15,>=0.13 (from httpcore<0.17.0,>=0.15.0->httpx==0.23.3->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading h11-0.14.0-py3-none-any.whl (58 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 58.3/58.3 kB 449.9 kB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Collecting anyio<5.0,>=3.0 (from httpcore<0.17.0,>=0.15.0->httpx==0.23.3->homeassistant==2023.4.6->pytest-homeassistant-custom-component==0.13.23->-r requirements-dev.txt (line 5))\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Downloading anyio-3.7.0-py3-none-any.whl (80 kB)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 80.9/80.9 kB 1.1 MB/s eta 0:00:00\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Building wheels for collected packages: fnvhash, mock-open, paho-mqtt, pytest-test-groups, home-assistant-bluetooth, lru-dict, python-slugify, yarl, colored\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for fnvhash (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for fnvhash (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Created wheel for fnvhash: filename=fnvhash-0.1.0-py3-none-any.whl size=2151 sha256=cd0d1a68981e414b805ccc32219ee0ecc6f0e9b098784931ea8018f6b43fa9a4\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/47/e3/2d/856a0acdd0a617fda611343d7c1da36b3e7e32e9f8498b20a7\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for mock-open (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for mock-open (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Created wheel for mock-open: filename=mock_open-1.4.0-py3-none-any.whl size=14561 sha256=fb5f746747c2ab0721d6a38e7c7a8062d3ae34981036a0c4a92885215011840b\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/91/e2/99/2ab670c687b094828c3c2480ecaf547bd6113730092ba489e4\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for paho-mqtt (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for paho-mqtt (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Created wheel for paho-mqtt: filename=paho_mqtt-1.6.1-py3-none-any.whl size=62118 sha256=54f952c515832881f38597ee51a8cdc1ccb3923547db1719d3283030e031ec18\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/29/ea/a5/ba9a63aaf4cd4e16e8a87ee31fb4d11b04ff5e1735d312619a\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for pytest-test-groups (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for pytest-test-groups (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Created wheel for pytest-test-groups: filename=pytest_test_groups-1.0.3-py3-none-any.whl size=2824 sha256=2c606b42febe2f5be9eb08a3cbf5dc39651462a456754ec71dcc002dcb93673b\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/ed/0b/a7/08aa20a4996daa8bca5a0f61301c0a86323c76ef83be38cd0f\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for home-assistant-bluetooth (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for home-assistant-bluetooth (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Created wheel for home-assistant-bluetooth: filename=home_assistant_bluetooth-1.9.3-cp311-cp311-manylinux_2_31_x86_64.whl size=322216 sha256=f1905555a3ef0f4ea9fdf0c4b731c5e4177dba0929535b9c94f9a6d1dcb34fae\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/a3/3b/3a/ecd7239098af296cebababa55ddd6a2ca40ef530d6b9152bfb\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for lru-dict (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for lru-dict (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Created wheel for lru-dict: filename=lru_dict-1.1.8-cp311-cp311-linux_x86_64.whl size=35620 sha256=8b457b569017338ece4398fbc5fccdcab6e7c45e237c730a8079a4f5b199cac3\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/33/77/05/8d3aaa542141df8716e15caf7b6724f8afcd6a05f05aa86539\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for python-slugify (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for python-slugify (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Created wheel for python-slugify: filename=python_slugify-4.0.1-py2.py3-none-any.whl size=6766 sha256=f0985a4aeebbe23bf63d06f4fa5d9cad8d668a14e782098fefefe4eb01c70b92\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/10/57/4a/51c367b083bace5912a288695544fe0b718d19e222c555574a\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for yarl (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for yarl (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Created wheel for yarl: filename=yarl-1.8.1-cp311-cp311-linux_x86_64.whl size=248447 sha256=2bed08d596912b971dc7b24bcef97fb4053320d9dffaae013499132d31919f74\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/89/bd/5e/d3d43d51723273054a5c96387e6fe49978911cd08f8326adf1\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for colored (pyproject.toml): started\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Building wheel for colored (pyproject.toml): finished with status 'done'\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Created wheel for colored: filename=colored-1.4.4-py3-none-any.whl size=14249 sha256=b8ac4b9787c688c3bc0f668f9625e9fced91ec593eff6b1e2ea529de88ad1d55\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/1c/13/84/6faa621cc61ba355624dbdf8434f7fcdfb1aa5007b1d215d62\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Successfully built fnvhash mock-open paho-mqtt pytest-test-groups home-assistant-bluetooth lru-dict python-slugify yarl colored\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Installing collected packages: voluptuous, text-unidecode, rfc3986, pytz, paho-mqtt, mock-open, lru-dict, ifaddr, fuzzywuzzy, fnvhash, colored, ciso8601, voluptuous-serialize, urllib3, ulid-transform, typing-extensions, tqdm, termcolor, sniffio, six, rapidfuzz, pyyaml, python-slugify, pylint-per-file-ignores, PyJWT, pycryptodome, pycparser, pluggy, platformdirs, pipdeptree, pip, pathspec, packaging, orjson, numpy, mypy-extensions, multidict, MarkupSafe, isort, iniconfig, idna, home-assistant-bluetooth, h11, greenlet, frozenlist, execnet, coverage, colorama, click, charset-normalizer, certifi, bcrypt, awesomeversion, attrs, atomicwrites-homeassistant, async-timeout, astral, yarl, sqlalchemy, requests, python-dateutil, pytest, pydantic, levenshtein, jinja2, cffi, black, anyio, aiosignal, tinytuya, syrupy, requests-mock, pytest-xdist, pytest-unordered, pytest-timeout, pytest-test-groups, pytest-sugar, pytest-socket, pytest-picked, pytest-cov, pytest-asyncio, httpcore, freezegun, cryptography, aiohttp, pytest-freezer, pytest-aiohttp, pyOpenSSL, httpx, respx, homeassistant, pytest-homeassistant-custom-component\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Attempting uninstall: pip\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |     Found existing installation: pip 23.1.2\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |     Uninstalling pip-23.1.2:\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |       Successfully uninstalled pip-23.1.2\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Successfully installed MarkupSafe-2.1.3 PyJWT-2.6.0 aiohttp-3.8.4 aiosignal-1.3.1 anyio-3.7.0 astral-2.2 async-timeout-4.0.2 atomicwrites-homeassistant-1.4.1 attrs-22.2.0 awesomeversion-22.9.0 bcrypt-4.0.1 black-23.3.0 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 ciso8601-2.3.0 click-8.1.3 colorama-0.4.6 colored-1.4.4 coverage-7.2.1 cryptography-40.0.1 execnet-1.9.0 fnvhash-0.1.0 freezegun-1.2.2 frozenlist-1.3.3 fuzzywuzzy-0.18.0 greenlet-2.0.2 h11-0.14.0 home-assistant-bluetooth-1.9.3 homeassistant-2023.4.6 httpcore-0.16.3 httpx-0.23.3 idna-3.4 ifaddr-0.1.7 iniconfig-2.0.0 isort-5.12.0 jinja2-3.1.2 levenshtein-0.21.1 lru-dict-1.1.8 mock-open-1.4.0 multidict-6.0.4 mypy-extensions-1.0.0 numpy-1.23.2 orjson-3.8.7 packaging-23.1 paho-mqtt-1.6.1 pathspec-0.11.1 pip-23.0.1 pipdeptree-2.7.0 platformdirs-3.8.0 pluggy-1.2.0 pyOpenSSL-23.1.0 pycparser-2.21 pycryptodome-3.18.0 pydantic-1.10.7 pylint-per-file-ignores-1.1.0 pytest-7.2.2 pytest-aiohttp-1.0.4 pytest-asyncio-0.20.3 pytest-cov-3.0.0 pytest-freezer-0.4.6 pytest-homeassistant-custom-component-0.13.23 pytest-picked-0.4.6 pytest-socket-0.5.1 pytest-sugar-0.9.6 pytest-test-groups-1.0.3 pytest-timeout-2.1.0 pytest-unordered-0.5.2 pytest-xdist-3.2.1 python-dateutil-2.8.2 python-slugify-4.0.1 pytz-2023.3 pyyaml-6.0 rapidfuzz-3.1.1 requests-2.28.2 requests-mock-1.10.0 respx-0.20.1 rfc3986-1.5.0 six-1.16.0 sniffio-1.3.0 sqlalchemy-2.0.7 syrupy-4.0.0 termcolor-2.3.0 text-unidecode-1.3 tinytuya-1.12.8 tqdm-4.64.0 typing-extensions-4.7.0 ulid-transform-0.6.3 urllib3-1.26.16 voluptuous-0.13.1 voluptuous-serialize-2.6.0 yarl-1.8.1\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | [notice] A new release of pip is available: 23.0.1 -> 23.1.2\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | [notice] To update, run: pip install --upgrade pip\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2705  Success - Main Install dependencies\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests] \u2b50 Run Main Test with pytest\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ============================= test session starts ==============================\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | platform linux -- Python 3.11.4, pytest-7.2.2, pluggy-1.2.0\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/make-all-tuya-local\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | plugins: aiohttp-1.0.4, test-groups-1.0.3, respx-0.20.1, sugar-0.9.6, syrupy-4.0.0, unordered-0.5.2, xdist-3.2.1, pytest_freezer-0.4.6, anyio-3.7.0, socket-0.5.1, requests-mock-1.10.0, asyncio-0.20.3, picked-0.4.6, homeassistant-custom-component-0.13.23, cov-3.0.0, timeout-2.1.0\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | asyncio: mode=Mode.STRICT\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | collected 3128 items\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_alarm_control_panel.py ....                                   [  0%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_binary_sensor.py ...                                          [  0%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_button.py ...                                                 [  0%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_camera.py ...                                                 [  0%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_climate.py ...                                                [  0%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_config_flow.py ..................                             [  1%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_cover.py ...                                                  [  1%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_device.py .........................................           [  2%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_device_config.py ...................                          [  3%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_diagnostics.py ..                                             [  3%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_fan.py ....                                                   [  3%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_humidifier.py ...                                             [  3%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_light.py ....                                                 [  3%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_lock.py ...                                                   [  3%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_number.py ...                                                 [  3%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_select.py ...                                                 [  3%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_sensor.py ....                                                [  3%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_siren.py ...                                                  [  4%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_switch.py ....                                                [  4%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_vacuum.py ...                                                 [  4%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_water_heater.py ...                                           [  4%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_anko_fan.py ...................................       [  5%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_arlec_fan.py ..............................           [  6%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_arlec_fan_light.py .................................. [  7%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |                                                                          [  7%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_aspen_adv200_fan.py ................................. [  8%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..............                                                           [  9%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_avatto_blinds.py ............................         [  9%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_avatto_curtain_switch.py ...........................  [ 10%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_bcom_intercom_camera.py ..............                [ 11%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_beca_bac002_thermostat.py ........................... [ 12%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .....................                                                    [ 12%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_beca_bhp6000_thermostat.py .......................... [ 13%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..............................                                           [ 14%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_beca_bht002_thermostat.py ........................... [ 15%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .......                                                                  [ 15%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_beca_bht6000_thermostat.py .......................... [ 16%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ........                                                                 [ 16%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_becool_heatpump.py ............................       [ 17%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_beok_tr9b_thermostat.py ............................. [ 18%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .......................                                                  [ 19%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_betterlife_bl1500_heater.py ......................... [ 20%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..................                                                       [ 20%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_blitzwolf_bsh2_humidifier.py ...............          [ 21%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_carson_cb.py ...................................      [ 22%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_deta_fan.py .....................................     [ 23%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_digoo_dgsp01_dual_nightlight_switch.py .............. [ 23%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..............                                                           [ 24%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_digoo_dgsp202.py ..............................       [ 25%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_eanons_humidifier.py ................................ [ 26%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ................                                                         [ 26%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_eberg_cooly_c35hd.py ................................ [ 27%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..............                                                           [ 28%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_eberg_qubo_q40hd_heatpump.py ........................ [ 29%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..............................                                           [ 30%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_ecostrad_accentiq_heater.py ......................... [ 30%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .........                                                                [ 31%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_energy_monitoring_powerstrip.py ..................... [ 31%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |                                                                          [ 31%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_es01_powerstrip.py ........................           [ 32%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_essentials_purifier.py .............................. [ 33%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..                                                                       [ 33%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_eurom_600_heater.py .............................     [ 34%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_eurom_600v2_heater.py .............................   [ 35%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_eurom_601_heater.py ................................. [ 36%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |                                                                          [ 36%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_fersk_vind_2_climate.py ............................. [ 37%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ...........                                                              [ 37%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_garage_door_opener.py ...................             [ 38%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_goldair_fan.py ...................................... [ 39%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ...                                                                      [ 39%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_goldair_geco_heater.py .............................. [ 40%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ............                                                             [ 41%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_goldair_gpph_heater.py .............................. [ 41%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..................................................                       [ 43%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_grid_connect_double_power_point.py .................. [ 44%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ....................                                                     [ 44%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_gx_aroma_diffuser.py ............                     [ 45%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_himox_h05_purifier.py ............................... [ 46%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..                                                                       [ 46%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_himox_h06_purifier.py ............................... [ 47%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..........                                                               [ 47%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_hydrotherm_dynamicx8.py ............................. [ 48%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .....                                                                    [ 48%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_immax_neo_light_vento.py ............................ [ 49%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .........                                                                [ 49%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_inkbird_itc308_thermostat.py ........................ [ 50%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ................                                                         [ 51%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_inkbird_sousvide.py ................................. [ 52%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..............                                                           [ 52%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_jiahong_et72w_thermostat.py ......................... [ 53%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .......................                                                  [ 54%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_kogan_garage_door_opener.py ......................... [ 54%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .                                                                        [ 54%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_kogan_glass_1_7l_kettle.py ...............            [ 55%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_kogan_kawfpac09ya_airconditioner.py ................. [ 55%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ...............                                                          [ 56%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_kyvol_e30_vacuum.py ................................. [ 57%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .......                                                                  [ 57%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_lefant_m213_vacuum.py ............................... [ 58%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ....                                                                     [ 58%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_lexy_f501_fan.py .................................... [ 60%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ......................                                                   [ 60%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_logicom_powerstrip.py ........................        [ 61%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_m027_curtain.py ............................          [ 62%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_moebot.py ..........                                  [ 62%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_moes_bht002_thermostat.py ........................... [ 63%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ...                                                                      [ 63%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_moes_rgb_socket.py .................................. [ 64%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .........                                                                [ 65%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_moes_temp_humidity.py ............................... [ 66%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .                                                                        [ 66%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_motion_sensor_light.py .............................. [ 67%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..                                                                       [ 67%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_nashone_mts700wb_thermostat.py ...................... [ 67%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ........................                                                 [ 68%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_nedis_htpl20f_heater.py ............................. [ 69%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ...............                                                          [ 69%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_orion_outdoor_siren.py .............................. [ 70%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .                                                                        [ 70%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_orion_smartlock.py .......................            [ 71%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_parkside_plgs2012a1_smart_charger.py ................ [ 72%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .....................                                                    [ 72%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_pc321ty_energy_meter.py ..............                [ 73%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_poiema_one_purifier.py .............................. [ 74%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .........                                                                [ 74%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_poolex_qline_heatpump.py ............................ [ 75%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ...                                                                      [ 75%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_qoto_03_sprinkler.py ..........................       [ 76%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_qs_c01_curtain.py ...............................     [ 77%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_renpho_rp_ap001s.py ................................. [ 78%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ................                                                         [ 78%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_rgbcw_lightbulb.py .................................. [ 80%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |                                                                          [ 80%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_sd123_hpr01_presence.py ............................. [ 80%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .............                                                            [ 81%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_simple_blinds.py ...................                  [ 81%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_simple_switch_with_timer.py .......................   [ 82%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_simple_switch_with_timerv2.py ....................... [ 83%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |                                                                          [ 83%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_smartplug_encoded.py .......................          [ 84%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_smartplugv1.py ...............................        [ 85%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_smartplugv2.py .............................          [ 86%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_smartplugv2_energy.py ............................... [ 87%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ......                                                                   [ 87%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_stirling_fs140dc_fan.py ............................. [ 88%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |                                                                          [ 88%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_thermex_if50v.py ................................     [ 89%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_tmwf02_fan.py ...........................             [ 90%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_tompd63lw_breaker.py ................                 [ 90%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_treatlife_ds02f.py ..........................         [ 91%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_vork_vk6067aw_purifier.py ........................... [ 92%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ..................                                                       [ 92%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_weau_pool_heatpumpv2.py ............................  [ 93%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_wetair_wawh1210lw_humidifier.py ..................... [ 94%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ...............................                                          [ 95%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_wetair_wch750_heater.py ............................. [ 96%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ......................                                                   [ 97%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_wilfa_haze_hu400bc_humidifier.py .................... [ 97%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | .................................                                        [ 98%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_woox_r4028_powerstrip.py ........................     [ 99%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/devices/test_zx_g30_alarm.py ...............                       [100%]\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | =============================== warnings summary ===============================\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ../../../opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/pytest_cov/plugin.py:256\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/pytest_cov/plugin.py:256: PytestDeprecationWarning: The hookimpl CovPlugin.pytest_configure_node uses old-style configuration options (marks or attributes).\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Please use the pytest.hookimpl(optionalhook=True) decorator instead\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |    to configure the hooks.\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |    See https://docs.pytest.org/en/latest/deprecations.html#configuring-hook-specs-impls-using-markers\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |     def pytest_configure_node(self, node):\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ../../../opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/pytest_cov/plugin.py:265\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/pytest_cov/plugin.py:265: PytestDeprecationWarning: The hookimpl CovPlugin.pytest_testnodedown uses old-style configuration options (marks or attributes).\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Please use the pytest.hookimpl(optionalhook=True) decorator instead\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |    to configure the hooks.\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |    See https://docs.pytest.org/en/latest/deprecations.html#configuring-hook-specs-impls-using-markers\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |     def pytest_testnodedown(self, node, error):\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_config_flow.py::test_async_test_connection_valid\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_config_flow.py::test_async_test_connection_for_subdevice_valid\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/make-all-tuya-local/custom_components/tuya_local/config_flow.py:197: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |     existing[\"device\"].pause()\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Enable tracemalloc to get traceback where the object was allocated.\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_config_flow.py::test_async_test_connection_valid\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_config_flow.py::test_async_test_connection_for_subdevice_valid\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/make-all-tuya-local/custom_components/tuya_local/config_flow.py:219: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |     existing[\"device\"].resume()\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Enable tracemalloc to get traceback where the object was allocated.\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | tests/test_water_heater.py::test_init_entry\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/make-all-tuya-local/custom_components/tuya_local/helpers/device_config.py:481: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |     cond = self._active_condition(m, device)\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   Enable tracemalloc to get traceback where the object was allocated.\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   |   See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/make-all-tuya-local/report.xml -\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ---------- coverage: platform linux, python 3.11.4-final-0 -----------\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | Coverage XML written to file coverage.xml\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | --------------------------- snapshot report summary ----------------------------\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | \n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   | ================= 3128 passed, 7 warnings in 241.59s (0:04:01) =================\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2705  Success - Main Test with pytest\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests] \u2b50 Run Post Set up Python 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests]   \u2705  Success - Post Set up Python 3.11\n[5f1d7d50-3b77-4dc0-95dd-c61fbd90856f/tests] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/make-all-tuya-local/.github/workflows/tests-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "5f1d7d50-3b77-4dc0-95dd-c61fbd90856f",
        "build_tool": "pytest",
        "elapsed_time": 583.5997672080994
    }
}