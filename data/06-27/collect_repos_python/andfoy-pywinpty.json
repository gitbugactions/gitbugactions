{
    "repository": "andfoy/pywinpty",
    "stars": 85,
    "language": "python",
    "size": 529,
    "clone_url": "https://github.com/andfoy/pywinpty.git",
    "timestamp": "2023-07-01T11:37:17.719030Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7] \ud83d\ude80  Start image=crawlergpt:latest\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/andfoy-pywinpty] user=0 workdir=\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2601  git clone 'https://github.com/conda-incubator/setup-miniconda' # ref=v2\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7] \ud83e\uddea  Matrix: map[PYTHON_VERSION:3.7]\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7] \u2b50 Run Main Checkout branch\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2705  Success - Main Checkout branch\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7] \u2b50 Run Main Install latest Rust stable\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udc33  docker cp src=/tmp/act-cache/48c95b5a-5b14-4cb7-a42c-4dc58fef3433/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udcac  ::debug::Destination /tmp/dbcdb992-a388-427b-a7e6-21fdc683d29f\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udcac  ::debug::download complete\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/dbcdb992-a388-427b-a7e6-21fdc683d29f\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | [command]/tmp/dbcdb992-a388-427b-a7e6-21fdc683d29f --default-toolchain none -y\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: downloading installer\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: profile set to 'default'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: default host triple is x86_64-unknown-linux-gnu\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: skipping toolchain installation\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | \n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | \n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | Rust is installed now. Great!\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | \n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | To get started you may need to restart your current shell.\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | This would reload your PATH environment variable to include\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | Cargo's bin directory ($HOME/.cargo/bin).\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | \n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | To configure your current shell, run:\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | source \"$HOME/.cargo/env\"\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | Default host: x86_64-unknown-linux-gnu\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | rustup home:  /home/runneradmin/.rustup\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | \n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | no active toolchain\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | Installed rustup 1.26.0 support components\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable --component rustfmt --component clippy\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: latest update on 2023-06-01, rust version 1.70.0 (90c541806 2023-05-31)\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: downloading component 'cargo'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: downloading component 'clippy'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: downloading component 'rust-docs'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: downloading component 'rust-std'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: downloading component 'rustc'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: downloading component 'rustfmt'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: installing component 'cargo'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: installing component 'clippy'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: installing component 'rust-docs'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: installing component 'rust-std'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: installing component 'rustc'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: installing component 'rustfmt'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | \n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.70.0 (90c541806 2023-05-31)\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | \n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: checking for self-update\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: override toolchain for '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/andfoy-pywinpty' set to 'stable-x86_64-unknown-linux-gnu'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | \n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.70.0 (90c541806 2023-05-31)\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | \n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | [command]/home/runneradmin/.cargo/bin/rustup target add --toolchain stable x86_64-pc-windows-msvc\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: downloading component 'rust-std' for 'x86_64-pc-windows-msvc'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: installing component 'rust-std' for 'x86_64-pc-windows-msvc'\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2753  ::group::Gathering installed versions\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | rustc 1.70.0 (90c541806 2023-05-31)\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2699  ::set-output:: rustc=1.70.0 (90c541806 2023-05-31)\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2699  ::set-output:: rustc_hash=90c541806\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | cargo 1.70.0 (ec8a8a0ca 2023-04-25)\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2699  ::set-output:: cargo=1.70.0 (ec8a8a0ca 2023-04-25)\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | info: The currently active `rustc` version is `rustc 1.70.0 (90c541806 2023-05-31)`\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2753  ::endgroup::\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2705  Success - Main Install latest Rust stable\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7] \u2b50 Run Main Install miniconda\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udc33  docker cp src=/tmp/act-cache/48c95b5a-5b14-4cb7-a42c-4dc58fef3433/act/conda-incubator-setup-miniconda@v2/ dst=/var/run/act/actions/conda-incubator-setup-miniconda@v2/\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/conda-incubator-setup-miniconda@v2/] user=0 workdir=\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/conda-incubator-setup-miniconda@v2/dist/setup/index.js] user= workdir=\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2753  ::group::Gathering Inputs...\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2753  ::endgroup::\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2753  ::group::Creating bootstrap condarc file in /home/runneradmin/.condarc...\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2753  ::endgroup::\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2753  ::group::Ensuring installer...\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | Can we use bundled Miniconda?\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   | ... will use bundled Miniconda.\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2753  ::endgroup::\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2757  ::error::No installed conda 'base' environment found at !If you are using this action in a self-hosted runner that already provides its own Miniconda installation, please specify its location with a `CONDA` environment variable. If you want us to download and install Miniconda or Miniforge for you, add `miniconda-version: \"latest\"` or `miniforge-version: \"latest\"`, respectively, to the parameters for this action.\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u274c  Failure - Main Install miniconda\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7]   \u2699  ::set-env:: INPUT_RUN_POST=true\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7] exitcode '1': failure\n[c6af194d-64ff-41b2-8b81-0d3ed3044120/Windows Py3.7] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Windows Py${{ matrix.PYTHON_VERSION }}' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/andfoy-pywinpty/.github/workflows/windows_build-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "c6af194d-64ff-41b2-8b81-0d3ed3044120",
        "build_tool": "pytest",
        "elapsed_time": 132.33216762542725
    }
}