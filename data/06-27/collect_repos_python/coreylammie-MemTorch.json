{
    "repository": "coreylammie/MemTorch",
    "stars": 85,
    "language": "python",
    "size": 12423,
    "clone_url": "https://github.com/coreylammie/MemTorch.git",
    "timestamp": "2023-06-28T14:28:36.536911Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting] \ud83d\ude80  Start image=crawlergpt:latest\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/coreylammie-MemTorch] user=0 workdir=\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \u2601  git clone 'https://github.com/rickstaa/action-black' # ref=v1\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \u2601  git clone 'https://github.com/DoozyX/clang-format-lint-action' # ref=v0.12\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \u2601  git clone 'https://github.com/peter-evans/create-pull-request' # ref=v3\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting] \u2b50 Run Main actions/checkout@v2\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \u2705  Success - Main actions/checkout@v2\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting] \u2b50 Run Main Check Files Using the Black Formatter\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \ud83d\udc33  docker build -t act-rickstaa-action-black-v1-dockeraction:latest /tmp/act-cache/57ea793e-af81-4c99-a7a8-378869970421/act/rickstaa-action-black@v1/\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \ud83d\udc33  docker pull image=act-rickstaa-action-black-v1-dockeraction:latest platform= username= forcePull=false\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \ud83d\udc33  docker create image=act-rickstaa-action-black-v1-dockeraction:latest platform= entrypoint=[] cmd=[]\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \ud83d\udc33  docker run image=act-rickstaa-action-black-v1-dockeraction:latest platform= entrypoint=[] cmd=[]\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/coreylammie-MemTorch\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | CHANGELOG.md\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | CONTRIBUTING.md\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | LICENSE\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | MANIFEST.in\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | README.md\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | citation.bib\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | codecov.yml\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | docs\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | logo.svg\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | memtorch\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | overview.svg\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | requirements.txt\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | setup.py\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | tests\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | [action-black] Formatting python code using the black formatter...\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | Skipping .ipynb files as Jupyter dependencies are not installed.\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | You can fix this by running ``pip install \"black[jupyter]\"``\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | reformatted /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/coreylammie-MemTorch/memtorch/bh/memristor/VTEAM.py\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | reformatted /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/coreylammie-MemTorch/memtorch/bh/memristor/LinearIonDrift.py\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | reformatted /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/coreylammie-MemTorch/memtorch/bh/memristor/Data_Driven2021.py\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | reformatted /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/coreylammie-MemTorch/memtorch/bh/memristor/Data_Driven.py\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | reformatted /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/coreylammie-MemTorch/memtorch/bh/memristor/Stanford_PKU.py\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | \n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | All done! \u2728 \ud83c\udf70 \u2728\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | 5 files reformatted, 52 files left unchanged.\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \u2705  Success - Main Check Files Using the Black Formatter\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \u2699  ::set-output:: is_formatted=true\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting] \u2b50 Run Main Check files Using the Clang Formatter\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \ud83d\udc33  docker build -t act-doozyx-clang-format-lint-action-v0-12-dockeraction:latest /tmp/act-cache/57ea793e-af81-4c99-a7a8-378869970421/act/DoozyX-clang-format-lint-action@v0.12/\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \ud83d\udc33  docker pull image=act-doozyx-clang-format-lint-action-v0-12-dockeraction:latest platform= username= forcePull=false\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \ud83d\udc33  docker create image=act-doozyx-clang-format-lint-action-v0-12-dockeraction:latest platform= entrypoint=[] cmd=[\"--clang-format-executable\" \"/clang-format/clang-format12\" \"-r\" \"--style\" \"file\" \"--inplace\" \"true\" \"--extensions\" \"h,cpp,c,cu\" \"--exclude\" \"none\" \"memtorch/cpp memtorch/cu\"]\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \ud83d\udc33  docker run image=act-doozyx-clang-format-lint-action-v0-12-dockeraction:latest platform= entrypoint=[] cmd=[\"--clang-format-executable\" \"/clang-format/clang-format12\" \"-r\" \"--style\" \"file\" \"--inplace\" \"true\" \"--extensions\" \"h,cpp,c,cu\" \"--exclude\" \"none\" \"memtorch/cpp memtorch/cu\"]\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   | Processing 13 files: memtorch/cpp/quantize.cpp, memtorch/cpp/gen_tiles.h, memtorch/cpp/tile_matmul.h, memtorch/cpp/solve_passive.cpp, memtorch/cpp/gen_tiles.cpp, memtorch/cpp/inference.cpp, memtorch/cpp/solve_passive.h, memtorch/cpp/bindings.cpp, memtorch/cpp/quantize.h, memtorch/cpp/inference.h, memtorch/cpp/solve_sparse_linear.cpp, memtorch/cpp/solve_sparse_linear.h, memtorch/cpp/tile_matmul.cpp\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting]   \u2705  Success - Main Check files Using the Clang Formatter\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Validate code formatting] \ud83c\udfc1  Job succeeded\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Run unit tests          ] \ud83d\ude80  Start image=crawlergpt:latest\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Run unit tests          ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[38eea4d3-8987-4e42-a2c3-6a4c19c403f8/Run unit tests          ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n",
        "stderr": "Error: context canceled\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/coreylammie-MemTorch/.github/workflows/push_pull-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 600.0108304023743
    }
}