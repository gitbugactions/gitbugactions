{
    "repository": "dankilman/multiplex",
    "stars": 96,
    "language": "python",
    "size": 155,
    "clone_url": "https://github.com/dankilman/multiplex.git",
    "timestamp": "2023-07-01T15:39:32.325535Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_buffer",
                "name": "test_buffer_kitchen",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_async_generator_input",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_generator_input",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_async_process_pipe_stdout",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_async_process_pipe_stderr",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_async_process_pipe_stdout_stederr",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_async_process_pipe_backslash_r",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_async_stream_reader",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_async_iter",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_iterable",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_coroutine",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_function",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_method",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_path",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_str_process",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_str_path",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_setsize",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_controller",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_controller_thead_safe",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_iterator",
                "name": "test_decode1",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_generic_key_to_name_printable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_generic_key_to_name_non_printable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_seq_to_name_list_input",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_seq_to_name_ctrl_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_seq_to_name_predefined",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_seq_to_name_single_char",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_seq_to_name_fallback",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_seq_to_name_no_fallback",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_is_multi",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_key_to_seq_str_input",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_key_to_seq_multi_input",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_key_to_seq_standard_input",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_key_to_seq_invalid_input",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_bind_basic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_bind_description_fallback",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_bind_multi_description",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys",
                "name": "test_bind_seq_to_name_description",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys_input",
                "name": "test_process_single_found_sequence_normal",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys_input",
                "name": "test_process_single_found_sequence_scroll",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys_input",
                "name": "test_process_single_found_sequence_input",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys_input",
                "name": "test_process_single_found_sequence_help",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys_input",
                "name": "test_process_single_found_sequence_global",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys_input",
                "name": "test_process_pending",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys_input",
                "name": "test_process_more_than_one_sequence",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys_input",
                "name": "test_read_iteration_no_data",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys_input",
                "name": "test_read_iteration_process_one",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys_input",
                "name": "test_read_iteration_has_pending",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_keys_input",
                "name": "test_read_iteration_backspace_and_delete",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_multiplex",
                "name": "test_exports",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_multiplex",
                "name": "test_sanity",
                "time": 0.619,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[d54392ec-56fe-430f-936a-109e81a60967/build] \ud83d\ude80  Start image=crawlergpt:latest\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dankilman-multiplex] user=0 workdir=\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[d54392ec-56fe-430f-936a-109e81a60967/build] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.7]\n[d54392ec-56fe-430f-936a-109e81a60967/build] \u2b50 Run Main actions/checkout@v2\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2705  Success - Main actions/checkout@v2\n[d54392ec-56fe-430f-936a-109e81a60967/build] \u2b50 Run Main Set up Python 3.7\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/b35547d0-a6fa-4a64-8b7d-60417a2d53f0/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2753  ::group::Installed versions\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::isExplicit: \n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::explicit? false\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::explicit? true\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::explicit? true\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::explicit? true\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::explicit? true\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::explicit? true\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::explicit? true\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Successfully set up CPython (3.7.11)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2753  ::endgroup::\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2705  Success - Main Set up Python 3.7\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2699  ::set-output:: python-version=3.7.11\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[d54392ec-56fe-430f-936a-109e81a60967/build] \u2b50 Run Main poetry install\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Retrieving Poetry metadata\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | # Welcome to Poetry!\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | This will download and install the latest version of Poetry,\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | a dependency and package manager for Python.\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | /home/runneradmin/.local/bin\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | You can uninstall at any time by executing this script with the --uninstall option,\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | and these changes will be reverted.\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Installing Poetry (1.5.1)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Installing Poetry (1.5.1): Creating environment\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Installing Poetry (1.5.1): Installing Poetry\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Installing Poetry (1.5.1): Creating script\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Installing Poetry (1.5.1): Done\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Poetry (1.5.1) is installed now. Great!\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | environment variable.\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | You can test that everything is set up by executing:\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | `poetry --version`\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Creating virtualenv multiplex-deS7_iop-py3.7 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Installing dependencies from lock file\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Package operations: 24 installs, 0 updates, 0 removals\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing typing-extensions (3.10.0.2)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing zipp (3.5.0)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing importlib-metadata (4.8.1)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing pyparsing (2.4.7)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing attrs (21.2.0)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing exceptiongroup (1.1.0)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing iniconfig (1.1.1)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing packaging (21.0)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing pluggy (0.13.1)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing tomli (2.0.1)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing click (8.0.1)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing mypy-extensions (0.4.3)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing pathspec (0.10.3)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing platformdirs (2.6.0)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing pytest (7.2.0)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing typed-ast (1.5.4)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing wcwidth (0.2.5)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing aiofiles (0.5.0)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing aiostream (0.4.3)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing ansicolors (1.1.8)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing black (22.12.0)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing easy-ansi (0.3)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing pyte (0.8.0)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   |   \u2022 Installing pytest-asyncio (0.14.0)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | Installing the current project: multiplex (0.6.1)\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2705  Success - Main poetry install\n[d54392ec-56fe-430f-936a-109e81a60967/build] \u2b50 Run Main black\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | All done! \u2728 \ud83c\udf70 \u2728\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | 30 files would be left unchanged.\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2705  Success - Main black\n[d54392ec-56fe-430f-936a-109e81a60967/build] \u2b50 Run Main pytest\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | ============================= test session starts ==============================\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | platform linux -- Python 3.7.11, pytest-7.2.0, pluggy-0.13.1\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dankilman-multiplex\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | plugins: asyncio-0.14.0\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | collected 50 items\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | tests/test_buffer.py .                                                   [  2%]\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | tests/test_iterator.py ...................                               [ 40%]\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | tests/test_keys.py .................                                     [ 74%]\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | tests/test_keys_input.py ...........                                     [ 96%]\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | tests/test_multiplex.py ..                                               [100%]\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | \n[d54392ec-56fe-430f-936a-109e81a60967/build]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dankilman-multiplex/report.xml -\n[d54392ec-56fe-430f-936a-109e81a60967/build]   | ============================== 50 passed in 1.83s ==============================\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2705  Success - Main pytest\n[d54392ec-56fe-430f-936a-109e81a60967/build] \u2b50 Run Post Set up Python 3.7\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[d54392ec-56fe-430f-936a-109e81a60967/build]   \u2705  Success - Post Set up Python 3.7\n[d54392ec-56fe-430f-936a-109e81a60967/build] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f2780376751015490e31687d5e819221e2c8cd1cf1fcea87650766ee8538f7c9?force=1&v=1\": context deadline exceeded\n[d54392ec-56fe-430f-936a-109e81a60967/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dankilman-multiplex/.github/workflows/python-package-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "d54392ec-56fe-430f-936a-109e81a60967",
        "build_tool": "pytest",
        "elapsed_time": 388.65803694725037
    }
}