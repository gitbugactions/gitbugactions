{
    "repository": "tfeldmann/organize",
    "stars": 1671,
    "language": "python",
    "size": 7071,
    "clone_url": "https://github.com/tfeldmann/organize.git",
    "timestamp": "2023-06-28T12:18:08.233721Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.actions.test_conflict_resolution",
                "name": "test_next_free_name[{name}-{counter}{extension}-file.txt-file-2.txt0]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_conflict_resolution",
                "name": "test_next_free_name[{name}-{counter}{extension}-file.txt-file-2.txt1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_conflict_resolution",
                "name": "test_next_free_name[{name}-{'%02d' % counter}{extension}-file.txt-file-03.txt]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_conflict_resolution",
                "name": "test_next_free_name[{name}{counter}{extension}-file.txt-file4.txt]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_conflict_resolution",
                "name": "test_next_free_name[{name}{counter}{extension}-other.txt-other.txt]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_conflict_resolution",
                "name": "test_next_free_name_exception",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_conflict_resolution",
                "name": "test_resolve_overwrite_conflict[skip-None-files0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_conflict_resolution",
                "name": "test_resolve_overwrite_conflict[overwrite-other.txt-files1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_conflict_resolution",
                "name": "test_resolve_overwrite_conflict[rename_new-other2.txt-files2]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_conflict_resolution",
                "name": "test_resolve_overwrite_conflict[rename_existing-other.txt-files3]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_on_itself[mem://]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_on_itself[temp://]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_basic[mem://]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_basic[temp://]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_into_dir[mem://]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_into_dir[temp://]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_into_dir_subfolders[mem://]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_into_dir_subfolders[temp://]",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_conflict[mem://-skip-files0-old]",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_conflict[mem://-overwrite-files1-new]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_conflict[mem://-rename_new-files2-old]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_conflict[mem://-rename_existing-files3-new]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_conflict[temp://-skip-files0-old]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_conflict[temp://-overwrite-files1-new]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_conflict[temp://-rename_new-files2-old]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_copy_conflict[temp://-rename_existing-files3-new]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_does_not_create_folder_in_simulation[mem://]",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_copy",
                "name": "test_does_not_create_folder_in_simulation[temp://]",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_delete",
                "name": "test_delete_empty_files[mem://]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_delete",
                "name": "test_delete_empty_files[temp://]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_delete",
                "name": "test_delete_empty_dirs[mem://]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_delete",
                "name": "test_delete_empty_dirs[temp://]",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_delete",
                "name": "test_delete_deep[mem://]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_delete",
                "name": "test_delete_deep[temp://]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_echo",
                "name": "test_echo_basic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_echo",
                "name": "test_echo_args",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_echo",
                "name": "test_echo_path",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_move",
                "name": "test_copy_on_itself[mem://]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_move",
                "name": "test_copy_on_itself[temp://]",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_move",
                "name": "test_move_conflict[mem://-skip-files0-old]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_move",
                "name": "test_move_conflict[mem://-overwrite-files1-new]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_move",
                "name": "test_move_conflict[mem://-rename_new-files2-old]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_move",
                "name": "test_move_conflict[mem://-rename_existing-files3-new]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_move",
                "name": "test_move_conflict[temp://-skip-files0-old]",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_move",
                "name": "test_move_conflict[temp://-overwrite-files1-new]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_move",
                "name": "test_move_conflict[temp://-rename_new-files2-old]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_move",
                "name": "test_move_conflict[temp://-rename_existing-files3-new]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_python",
                "name": "test_print_substitution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_python",
                "name": "test_code_execution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_rename",
                "name": "test_rename_issue51[mem://]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_rename",
                "name": "test_rename_issue51[temp://]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_rename",
                "name": "test_rename_folders[mem://]",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_rename",
                "name": "test_rename_folders[temp://]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_rename",
                "name": "test_rename_in_subfolders[mem://]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_rename",
                "name": "test_rename_in_subfolders[temp://]",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_rename",
                "name": "test_filename_move",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_shell",
                "name": "test_shell_basic",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_shell",
                "name": "test_shell_template_simulation",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_trash",
                "name": "test_trash_mocked",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_trash",
                "name": "test_trash_file",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_trash",
                "name": "test_trash_folder",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_write",
                "name": "test_write[mem://-append-true-a\\nb\\nc\\n]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_write",
                "name": "test_write[mem://-append-false-abc]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_write",
                "name": "test_write[mem://-prepend-true-c\\nb\\na\\n]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_write",
                "name": "test_write[mem://-prepend-false-cba]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_write",
                "name": "test_write[mem://-overwrite-true-c\\n]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_write",
                "name": "test_write[mem://-overwrite-false-c]",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_write",
                "name": "test_write[temp://-append-true-a\\nb\\nc\\n]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_write",
                "name": "test_write[temp://-append-false-abc]",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_write",
                "name": "test_write[temp://-prepend-true-c\\nb\\na\\n]",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_write",
                "name": "test_write[temp://-prepend-false-cba]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_write",
                "name": "test_write[temp://-overwrite-true-c\\n]",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.actions.test_write",
                "name": "test_write[temp://-overwrite-false-c]",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.combined.test_cli",
                "name": "test_config_file",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.combined.test_cli",
                "name": "test_working_dir",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.combined.test_cli",
                "name": "test_with_os_chdir",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.combined.test_codepost_usecase",
                "name": "test_codepost_usecase",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.combined.test_dependent_rules",
                "name": "test_dependent_rules[mem://]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.combined.test_dependent_rules",
                "name": "test_dependent_rules[temp://]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.combined.test_rename_regex",
                "name": "test_rename_files_date[mem://-.]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.combined.test_rename_regex",
                "name": "test_rename_files_date[mem://-/]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.combined.test_rename_regex",
                "name": "test_rename_files_date[temp://-.]",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.combined.test_rename_regex",
                "name": "test_rename_files_date[temp://-/]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_config",
                "name": "test_basic",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_config",
                "name": "test_yaml_ref",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_config",
                "name": "test_error_filter_dict",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[True-None-None-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[True-rule_tags1-None-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[True-rule_tags2-None-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[False-None-tags3-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[True-rule_tags4-tags4-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[True-rule_tags5-tags5-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[False-rule_tags6-tags6-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[False-rule_tags7-tags7-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[True-None-None-skip_tags8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[True-rule_tags9-None-skip_tags9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[False-rule_tags10-None-skip_tags10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[False-rule_tags11-None-skip_tags11]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[False-None-tags12-skip_tags12]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[False-rule_tags13-tags13-skip_tags13]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[True-rule_tags14-tags14-None]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[True-rule_tags15-None-skip_tags15]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[False-rule_tags16-None-skip_tags16]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[False-rule_tags17-None-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[False-rule_tags18-tags18-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_tags",
                "name": "test_tags[True-rule_tags19-tags19-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_unicode",
                "name": "test_startswith_issue74[mem://]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_unicode",
                "name": "test_startswith_issue74[temp://]",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_unicode",
                "name": "test_normalization_regex[mem://]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "TODO",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_unicode",
                "name": "test_normalization_regex[temp://]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "TODO",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_unicode",
                "name": "test_normalization_filename[mem://]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "TODO",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_unicode",
                "name": "test_normalization_filename[temp://]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "TODO",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.docs.test_docs",
                "name": "test_examples_are_valid",
                "time": 0.699,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.docs.test_docs",
                "name": "test_all_filters_documented",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.docs.test_docs",
                "name": "test_all_actions_documented",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_created",
                "name": "test_min",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_created",
                "name": "test_max",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_duplicate",
                "name": "test_duplicate_smallfiles[mem://]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_duplicate",
                "name": "test_duplicate_smallfiles[temp://]",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_duplicate",
                "name": "test_duplicate_largefiles[mem://]",
                "time": 0.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_duplicate",
                "name": "test_duplicate_largefiles[temp://]",
                "time": 0.15,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_exif",
                "name": "test_exif_read_camera[mem://]",
                "time": 0.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_exif",
                "name": "test_exif_read_camera[temp://]",
                "time": 0.113,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_exif",
                "name": "test_exif_filter_by_cam[mem://]",
                "time": 0.11,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_exif",
                "name": "test_exif_filter_by_cam[temp://]",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_exif",
                "name": "test_exif_filter_tag_exists[mem://]",
                "time": 0.111,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_exif",
                "name": "test_exif_filter_tag_exists[temp://]",
                "time": 0.118,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_exif",
                "name": "test_exif_filter_by_multiple_keys[mem://]",
                "time": 0.16,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_exif",
                "name": "test_exif_filter_by_multiple_keys[temp://]",
                "time": 0.179,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_extension",
                "name": "test_extension",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_extension",
                "name": "test_extension_empty",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_extension",
                "name": "test_extension_result",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_extension",
                "name": "test_filename_move[mem://]",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_extension",
                "name": "test_filename_move[temp://]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_filecontent",
                "name": "test_filecontent",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_lastmodified",
                "name": "test_min",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_lastmodified",
                "name": "test_max",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_lastmodified",
                "name": "test_photo_sorting[mem://]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_lastmodified",
                "name": "test_photo_sorting[temp://]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_macos_tags",
                "name": "test_macos_filter",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "runs only on macOS",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_macos_tags",
                "name": "test_macos_tags_matching",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_name",
                "name": "test_name_startswith",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_name",
                "name": "test_name_contains",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_name",
                "name": "test_name_endswith",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_name",
                "name": "test_name_multiple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_name",
                "name": "test_name_case",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_name",
                "name": "test_name_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_name",
                "name": "test_name_list_case_sensitive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_name",
                "name": "test_name_match",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_name",
                "name": "test_name_match_case_insensitive",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_python",
                "name": "test_basic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_python",
                "name": "test_python[mem://]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_python",
                "name": "test_python[temp://]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_python",
                "name": "test_odd_detector[mem://]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_python",
                "name": "test_odd_detector[temp://]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_python",
                "name": "test_python_dict[mem://]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_python",
                "name": "test_python_dict[temp://]",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_python",
                "name": "test_name_reverser[mem://]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_python",
                "name": "test_name_reverser[temp://]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_python",
                "name": "test_folder_instructions[mem://]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_python",
                "name": "test_folder_instructions[temp://]",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_regex",
                "name": "test_regex_backslash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_regex",
                "name": "test_regex_basic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_regex",
                "name": "test_regex_return",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_regex",
                "name": "test_regex_umlaut",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_regex",
                "name": "test_multiple_regex_placeholders[mem://]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_regex",
                "name": "test_multiple_regex_placeholders[temp://]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_size",
                "name": "test_constrains_mope1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_size",
                "name": "test_constrains_base",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_size",
                "name": "test_other",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_size",
                "name": "test_size_zero[mem://]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_size",
                "name": "test_size_zero[temp://]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_size",
                "name": "test_basic[mem://]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_size",
                "name": "test_basic[temp://]",
                "time": 0.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_size",
                "name": "test_python_args[mem://]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "TODO - template vars in filters not supported",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.filters.test_size",
                "name": "test_python_args[temp://]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "TODO - template vars in filters not supported",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.utils.test_deep_merge",
                "name": "test_merges_dicts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.utils.test_deep_merge",
                "name": "test_returns_copy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.utils.test_deep_merge",
                "name": "test_inserts_new_keys",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.utils.test_deep_merge",
                "name": "test_does_not_insert_new_keys",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.utils.test_deep_merge",
                "name": "test_inplace_merge",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.utils.test_deep_merge",
                "name": "test_inplace_keeptype",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.utils.test_is_same_resource",
                "name": "test_mem",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.utils.test_is_same_resource",
                "name": "test_mem2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.utils.test_is_same_resource",
                "name": "test_osfs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.utils.test_is_same_resource",
                "name": "test_inter",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.utils.test_is_same_resource",
                "name": "test_nested",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "organize.utils",
                "name": "organize.utils.flatten_all_lists_in_dict",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "organize.utils",
                "name": "organize.utils.to_args",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[8da6cea3-9173-4f4f-b303-94d69dded3ef/build] \ud83d\ude80  Start image=crawlergpt:latest\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/tfeldmann-organize] user=0 workdir=\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.6]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build] \u2b50 Run Main actions/checkout@v3\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2705  Success - Main actions/checkout@v3\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build] \u2b50 Run Main actions/setup-python@v4\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/45a6c57e-23af-40dd-8091-0eb8abb89f2f/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2753  ::group::Installed versions\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::isExplicit: \n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::explicit? false\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::explicit? true\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::explicit? true\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::explicit? true\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::explicit? true\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::explicit? true\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::explicit? true\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::matched: 3.6.14\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Successfully set up CPython (3.6.14)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2753  ::endgroup::\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2705  Success - Main actions/setup-python@v4\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib/pkgconfig\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2699  ::set-output:: python-version=3.6.14\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.6.14/x64/bin/python\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build] \u2b50 Run Main Install dependencies\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (21.2.4)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting pip\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading pip-21.3.1-py3-none-any.whl (1.7 MB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (40.6.2)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting setuptools\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading setuptools-59.6.0-py3-none-any.whl (952 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Installing collected packages: setuptools, pip\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Attempting uninstall: setuptools\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |     Found existing installation: setuptools 40.6.2\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |     Uninstalling setuptools-40.6.2:\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |       Successfully uninstalled setuptools-40.6.2\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Attempting uninstall: pip\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |     Found existing installation: pip 21.2.4\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |     Uninstalling pip-21.2.4:\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |       Successfully uninstalled pip-21.2.4\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Successfully installed pip-21.3.1 setuptools-59.6.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting poetry\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading poetry-1.1.15-py2.py3-none-any.whl (175 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting html5lib<2.0,>=1.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting packaging<21.0,>=20.4\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading packaging-20.9-py2.py3-none-any.whl (40 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting poetry-core<1.1.0,>=1.0.7\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading poetry_core-1.0.8-py2.py3-none-any.whl (425 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting tomlkit<1.0.0,>=0.7.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading tomlkit-0.11.6-py3-none-any.whl (35 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting cachy<0.4.0,>=0.3.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading cachy-0.3.0-py2.py3-none-any.whl (20 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting keyring>=21.2.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading keyring-23.4.1-py3-none-any.whl (33 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting shellingham<2.0,>=1.1\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading shellingham-1.4.0-py2.py3-none-any.whl (9.4 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting virtualenv<21.0.0,>=20.0.26\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading virtualenv-20.17.1-py3-none-any.whl (8.8 MB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting clikit<0.7.0,>=0.6.2\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading clikit-0.6.2-py2.py3-none-any.whl (91 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting requests-toolbelt<0.10.0,>=0.9.1\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading requests_toolbelt-0.9.1-py2.py3-none-any.whl (54 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.9\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting pkginfo<2.0,>=1.4\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting pexpect<5.0.0,>=4.7.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting crashtest<0.4.0,>=0.3.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading crashtest-0.3.1-py3-none-any.whl (7.0 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting cleo<0.9.0,>=0.8.1\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading cleo-0.8.1-py2.py3-none-any.whl (21 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting importlib-metadata<2.0.0,>=1.6.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading importlib_metadata-1.7.0-py2.py3-none-any.whl (31 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting requests<3.0,>=2.18\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting msgpack>=0.5.2\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading msgpack-1.0.5-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (300 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting lockfile>=0.9\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting pylev<2.0,>=1.3\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading pylev-1.4.0-py2.py3-none-any.whl (6.1 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting pastel<0.3.0,>=0.2.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading pastel-0.2.1-py2.py3-none-any.whl (6.0 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting webencodings\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting six>=1.9\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting zipp>=0.5\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading zipp-3.6.0-py3-none-any.whl (5.3 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting SecretStorage>=3.2\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting keyring>=21.2.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading keyring-23.4.0-py3-none-any.whl (33 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading keyring-23.3.0-py3-none-any.whl (33 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading keyring-23.2.1-py3-none-any.whl (33 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading keyring-23.2.0-py3-none-any.whl (33 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading keyring-23.1.0-py3-none-any.whl (32 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading keyring-23.0.1-py3-none-any.whl (33 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading keyring-23.0.0-py3-none-any.whl (32 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading keyring-22.4.0-py3-none-any.whl (58 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading keyring-22.3.0-py3-none-any.whl (58 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting jeepney>=0.4.2\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading jeepney-0.7.1-py3-none-any.whl (54 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting pyparsing>=2.0.2\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting ptyprocess>=0.5\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting certifi>=2017.4.17\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting idna<4,>=2.5\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting urllib3<1.27,>=1.21.1\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting charset-normalizer~=2.0.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading charset_normalizer-2.0.12-py3-none-any.whl (39 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting platformdirs<3,>=2.4\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading platformdirs-2.4.0-py3-none-any.whl (14 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting virtualenv<21.0.0,>=20.0.26\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading virtualenv-20.17.0-py3-none-any.whl (8.8 MB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading virtualenv-20.16.7-py3-none-any.whl (8.8 MB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading virtualenv-20.16.6-py3-none-any.whl (8.8 MB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading virtualenv-20.16.5-py3-none-any.whl (8.8 MB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading virtualenv-20.16.4-py3-none-any.whl (8.8 MB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading virtualenv-20.16.3-py2.py3-none-any.whl (8.8 MB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading virtualenv-20.16.2-py2.py3-none-any.whl (8.8 MB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting importlib-resources>=1.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading importlib_resources-5.4.0-py3-none-any.whl (28 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting filelock<4,>=3.2\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading filelock-3.4.1-py3-none-any.whl (9.9 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting distlib<1,>=0.3.1\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting cryptography>=2.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading cryptography-40.0.2-cp36-abi3-manylinux_2_28_x86_64.whl (3.7 MB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting cffi>=1.12\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading cffi-1.15.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (402 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Collecting pycparser\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Installing collected packages: pycparser, urllib3, idna, charset-normalizer, cffi, certifi, zipp, requests, pylev, pastel, msgpack, jeepney, cryptography, crashtest, webencodings, six, SecretStorage, pyparsing, ptyprocess, platformdirs, lockfile, importlib-resources, importlib-metadata, filelock, distlib, clikit, cachecontrol, virtualenv, tomlkit, shellingham, requests-toolbelt, poetry-core, pkginfo, pexpect, packaging, keyring, html5lib, cleo, cachy, poetry\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Successfully installed SecretStorage-3.3.3 cachecontrol-0.12.14 cachy-0.3.0 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-2.0.12 cleo-0.8.1 clikit-0.6.2 crashtest-0.3.1 cryptography-40.0.2 distlib-0.3.6 filelock-3.4.1 html5lib-1.1 idna-3.4 importlib-metadata-1.7.0 importlib-resources-5.4.0 jeepney-0.7.1 keyring-22.3.0 lockfile-0.12.2 msgpack-1.0.5 packaging-20.9 pastel-0.2.1 pexpect-4.8.0 pkginfo-1.9.6 platformdirs-2.4.0 poetry-1.1.15 poetry-core-1.0.8 ptyprocess-0.7.0 pycparser-2.21 pylev-1.4.0 pyparsing-3.1.0 requests-2.27.1 requests-toolbelt-0.9.1 shellingham-1.4.0 six-1.16.0 tomlkit-0.11.6 urllib3-1.26.16 virtualenv-20.16.2 webencodings-0.5.1 zipp-3.6.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Creating virtualenv organize-tool-lom_Zm95-py3.6 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Requirement already satisfied: pip in /home/runneradmin/.cache/pypoetry/virtualenvs/organize-tool-lom_Zm95-py3.6/lib/python3.6/site-packages (21.3.1)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Requirement already satisfied: setuptools in /home/runneradmin/.cache/pypoetry/virtualenvs/organize-tool-lom_Zm95-py3.6/lib/python3.6/site-packages (59.6.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Installing dependencies from lock file\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | \n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Package operations: 64 installs, 0 updates, 0 removals\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | \n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing zipp (3.6.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing importlib-resources (5.4.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing six (1.12.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing typing-extensions (4.1.1)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing backports.zoneinfo (0.2.1)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing importlib-metadata (4.8.3)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing markupsafe (2.0.1)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing pyparsing (3.0.7)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing pyyaml (6.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing tzdata (2022.2)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing click (8.0.4)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing jinja2 (3.0.3)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing packaging (21.3)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing pytz-deprecation-shim (0.1.0.post0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing attrs (22.1.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing chardet (3.0.4)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing compressed-rtf (1.0.6)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing dataclasses (0.8)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing ebcdic (1.1.1)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing imapclient (2.1.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing iniconfig (1.1.1)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing lxml (4.9.1)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing olefile (0.46)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing pillow (8.4.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing pluggy (1.0.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing py (1.11.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing pycryptodome (3.15.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing sortedcontainers (2.4.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing soupsieve (2.3.2.post1)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing toml (0.10.2)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing tzlocal (4.2)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing xlsxwriter (3.0.3)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing appdirs (1.4.4)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing argcomplete (1.10.3)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing beautifulsoup4 (4.8.2)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing certifi (2022.6.15)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing charset-normalizer (2.0.12)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing commonmark (0.9.1)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing contextlib2 (21.6.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing coverage (5.5)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing docx2txt (0.8)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing extract-msg (0.29.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing idna (3.3)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing mypy-extensions (0.4.3)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing pdfminer.six (20191110)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing pygments (2.13.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing pytest (6.2.5)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing python-pptx (0.6.21)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing speechrecognition (3.8.1)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing tomli (1.2.3)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing typed-ast (1.5.4)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing xlrd (1.2.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing urllib3 (1.26.11)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing exifread (3.0.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing fs (2.4.16)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing mypy (0.971)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing pytest-cov (3.0.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing requests (2.27.1)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing rich (12.1.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing schema (0.7.5)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing send2trash (1.8.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing simplematch (1.3)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing textract (1.6.5)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   \u2022 Installing types-pyyaml (6.0.11)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | \n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Installing the current project: organize-tool (2.4.0)\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2705  Success - Main Install dependencies\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build] \u2b50 Run Main Version info\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | main.py, version 2.4.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2705  Success - Main Version info\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build] \u2b50 Run Main Test with pytest\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | ============================= test session starts ==============================\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | platform linux -- Python 3.6.14, pytest-6.2.5, py-1.11.0, pluggy-1.0.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/tfeldmann-organize, configfile: pyproject.toml, testpaths: tests, organize\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | plugins: cov-3.0.0\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | collected 189 items\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | \n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/actions/test_conflict_resolution.py ..........                     [  5%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/actions/test_copy.py ..................                            [ 14%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/actions/test_delete.py ......                                      [ 17%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/actions/test_echo.py ...                                           [ 19%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/actions/test_move.py ..........                                    [ 24%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/actions/test_python.py ..                                          [ 25%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/actions/test_rename.py .......                                     [ 29%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/actions/test_shell.py ..                                           [ 30%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/actions/test_trash.py ...                                          [ 32%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/actions/test_write.py ............                                 [ 38%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/combined/test_cli.py ...                                           [ 40%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/combined/test_codepost_usecase.py .                                [ 40%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/combined/test_dependent_rules.py ..                                [ 41%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/combined/test_rename_regex.py ....                                 [ 43%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/core/test_config.py ...                                            [ 45%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/core/test_tags.py ....................                             [ 56%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/core/test_unicode.py ..ssss                                        [ 59%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/docs/test_docs.py ...                                              [ 60%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/filters/test_created.py ..                                         [ 61%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/filters/test_duplicate.py ....                                     [ 64%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/filters/test_exif.py ........                                      [ 68%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/filters/test_extension.py .....                                    [ 70%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/filters/test_filecontent.py .                                      [ 71%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/filters/test_lastmodified.py ....                                  [ 73%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/filters/test_macos_tags.py s.                                      [ 74%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/filters/test_name.py .........                                     [ 79%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/filters/test_python.py ...........                                 [ 85%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/filters/test_regex.py ......                                       [ 88%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/filters/test_size.py .......ss                                     [ 93%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/utils/test_deep_merge.py ......                                    [ 96%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/utils/test_is_same_resource.py .....                               [ 98%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | organize/utils.py ..                                                     [100%]\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | \n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | =============================== warnings summary ===============================\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/combined/test_codepost_usecase.py:34\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/tfeldmann-organize/tests/combined/test_codepost_usecase.py:34: DeprecationWarning: invalid escape sequence \\w\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |     \"\"\"\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | \n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | tests/filters/test_regex.py:57\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/tfeldmann-organize/tests/filters/test_regex.py:57: DeprecationWarning: invalid escape sequence \\w\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   |     \"\"\"\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | \n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | -- Docs: https://docs.pytest.org/en/stable/warnings.html\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/tfeldmann-organize/report.xml -\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | ================== 182 passed, 7 skipped, 2 warnings in 7.82s ==================\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2705  Success - Main Test with pytest\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build] \u2b50 Run Main Check with MyPy\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   | Success: no issues found in 46 source files\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2705  Success - Main Check with MyPy\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build] \u2b50 Run Post actions/setup-python@v4\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build]   \u2705  Success - Post actions/setup-python@v4\n[8da6cea3-9173-4f4f-b303-94d69dded3ef/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/tfeldmann-organize/.github/workflows/tests-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 306.26020860671997
    }
}