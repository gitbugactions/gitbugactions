{
    "repository": "nicodv/kmodes",
    "stars": 1157,
    "language": "python",
    "size": 474,
    "clone_url": "https://github.com/nicodv/kmodes.git",
    "timestamp": "2023-06-28T10:15:16.222315Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "kmodes.tests.test_common",
                "name": "test_all_estimator_no_base_class",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_common",
                "name": "test_all_estimators",
                "time": 0.248,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_common",
                "name": "test_non_meta_estimators",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_k_modes_sample_weight_unchanged",
                "time": 0.948,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_cao_soybean",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_cao_soybean_jaccard_dissim_binary",
                "time": 0.687,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_cao_soybean_jaccard_dissim_label",
                "time": 0.774,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_cao_soybean_ng",
                "time": 1.143,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_empty_init_cluster_edge_case",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_empty_init_cluster_soybean",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_epoch_costs",
                "time": 0.199,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_fit_predict",
                "time": 0.23,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_huang_soybean",
                "time": 0.362,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_huang_soybean_jaccard_dissim_binary",
                "time": 1.468,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_huang_soybean_jaccard_dissim_label",
                "time": 1.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_huang_soybean_ng",
                "time": 1.821,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_huang_soybean_parallel",
                "time": 1.792,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_init_soybean",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_ninit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_nunique_nclusters",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_nunique_nclusters_ng",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_predict_soybean",
                "time": 0.196,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_predict_soybean_jaccard_dissim_binary",
                "time": 1.373,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_predict_soybean_jaccard_dissim_label",
                "time": 1.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_predict_soybean_ng",
                "time": 1.156,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_predict_unfitted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_random_soybean",
                "time": 0.677,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_sample_weights_all_but_one_zero",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_sample_weights_validation",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_kmodes_unknowninit_soybean",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_pandas_numpy_equality",
                "time": 0.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_pickle",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kmodes.TestKModes",
                "name": "test_pickle_fitted",
                "time": 0.377,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_gamma_estimation",
                "time": 0.116,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_k_prototypes_sample_weight_all_but_one_zero",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_k_prototypes_sample_weight_not_enough_non_zero",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_k_prototypes_sample_weight_unchanged",
                "time": 0.377,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kmodes_fit_predict_equality",
                "time": 0.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprototypes_ninit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprototypes_predict_unfitted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprototypes_sample_weights_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprototypes_unknowninit_soybean",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_cao_stocks",
                "time": 0.168,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_cao_stocks_ng",
                "time": 0.513,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_categoricals_stocks",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_huang_stocks",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_huang_stocks_ng",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_huang_stocks_parallel",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_impossible_init",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_init_stocks",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_init_stocks_ng",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_missings",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_n_nclusters",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_no_categoricals",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_not_stuck_initialization",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_nunique_nclusters",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_predict_stocks",
                "time": 0.132,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_predict_stocks_ng",
                "time": 0.408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_random_stocks",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_kprotoypes_wrong_categorical_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_pandas_numpy_equality",
                "time": 0.224,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_pickle",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.tests.test_kprototypes.TestKProtoTypes",
                "name": "test_pickle_fitted",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.util.tests.test_dissim.TestDissimilarityMeasures",
                "name": "test_euclidian_dissim",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.util.tests.test_dissim.TestDissimilarityMeasures",
                "name": "test_jaccard_dissim_binary",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.util.tests.test_dissim.TestDissimilarityMeasures",
                "name": "test_jaccard_dissim_label",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.util.tests.test_dissim.TestDissimilarityMeasures",
                "name": "test_matching_dissim",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.util.tests.test_dissim.TestDissimilarityMeasures",
                "name": "test_ng_dissim",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.util.tests.test_util.TestUtils",
                "name": "test_decode_centroids",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.util.tests.test_util.TestUtils",
                "name": "test_encode_features",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.util.tests.test_util.TestUtils",
                "name": "test_get_max_value_key",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "kmodes.util.tests.test_util.TestUtils",
                "name": "test_get_unique_rows",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[0eb42568-52fa-489f-aee9-0984fc536093/build] \ud83d\ude80  Start image=crawlergpt:latest\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/nicodv-kmodes] user=0 workdir=\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[0eb42568-52fa-489f-aee9-0984fc536093/build] \ud83e\uddea  Matrix: map[python-version:3.6]\n[0eb42568-52fa-489f-aee9-0984fc536093/build] \u2b50 Run Main actions/checkout@v3\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2705  Success - Main actions/checkout@v3\n[0eb42568-52fa-489f-aee9-0984fc536093/build] \u2b50 Run Main Set up Python 3.6\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/577c6161-1b3b-447a-9413-4e8cb46f2128/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2753  ::group::Installed versions\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::isExplicit: \n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::explicit? false\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::explicit? true\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::explicit? true\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::explicit? true\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::explicit? true\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::explicit? true\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::explicit? true\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::matched: 3.6.14\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Successfully set up CPython (3.6.14)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2753  ::endgroup::\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2705  Success - Main Set up Python 3.6\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib/pkgconfig\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2699  ::set-output:: python-version=3.6.14\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.6.14/x64/bin/python\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[0eb42568-52fa-489f-aee9-0984fc536093/build] \u2b50 Run Main Install dependencies\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (21.2.4)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting pip\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading pip-21.3.1-py3-none-any.whl (1.7 MB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Installing collected packages: pip\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Attempting uninstall: pip\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |     Found existing installation: pip 21.2.4\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |     Uninstalling pip-21.2.4:\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |       Successfully uninstalled pip-21.2.4\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Successfully installed pip-21.3.1\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Obtaining file:///tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/nicodv-kmodes\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Preparing metadata (setup.py): started\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Preparing metadata (setup.py): finished with status 'done'\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting numpy>=1.10.4\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading numpy-1.19.5-cp36-cp36m-manylinux2010_x86_64.whl (14.8 MB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting scikit-learn>=0.22.0\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading scikit_learn-0.24.2-cp36-cp36m-manylinux2010_x86_64.whl (22.2 MB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting scipy>=0.13.3\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading scipy-1.5.4-cp36-cp36m-manylinux1_x86_64.whl (25.9 MB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting joblib>=0.11\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading joblib-1.1.1-py2.py3-none-any.whl (309 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting pytest\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading pytest-7.0.1-py3-none-any.whl (296 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting pytest-cov\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading pytest_cov-4.0.0-py3-none-any.whl (21 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting pandas\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading pandas-1.1.5-cp36-cp36m-manylinux1_x86_64.whl (9.5 MB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting threadpoolctl>=2.0.0\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading threadpoolctl-3.1.0-py3-none-any.whl (14 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting pytz>=2017.2\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting python-dateutil>=2.7.3\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting py>=1.8.2\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting iniconfig\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading iniconfig-1.1.1-py2.py3-none-any.whl (5.0 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting tomli>=1.0.0\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading tomli-1.2.3-py3-none-any.whl (12 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting pluggy<2.0,>=0.12\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting packaging\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading packaging-21.3-py3-none-any.whl (40 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting attrs>=19.2.0\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading attrs-22.2.0-py3-none-any.whl (60 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting importlib-metadata>=0.12\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading importlib_metadata-4.8.3-py3-none-any.whl (17 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting coverage[toml]>=5.2.1\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading coverage-6.2-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (212 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting typing-extensions>=3.6.4\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading typing_extensions-4.1.1-py3-none-any.whl (26 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting zipp>=0.5\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading zipp-3.6.0-py3-none-any.whl (5.3 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting six>=1.5\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting pyparsing!=3.0.5,>=2.0.2\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Installing collected packages: zipp, typing-extensions, pyparsing, numpy, importlib-metadata, tomli, threadpoolctl, six, scipy, py, pluggy, packaging, joblib, iniconfig, coverage, attrs, scikit-learn, pytz, python-dateutil, pytest, pytest-cov, pandas, kmodes\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Running setup.py develop for kmodes\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Successfully installed attrs-22.2.0 coverage-6.2 importlib-metadata-4.8.3 iniconfig-1.1.1 joblib-1.1.1 kmodes-0.12.2 numpy-1.19.5 packaging-21.3 pandas-1.1.5 pluggy-1.0.0 py-1.11.0 pyparsing-3.1.0 pytest-7.0.1 pytest-cov-4.0.0 python-dateutil-2.8.2 pytz-2023.3 scikit-learn-0.24.2 scipy-1.5.4 six-1.16.0 threadpoolctl-3.1.0 tomli-1.2.3 typing-extensions-4.1.1 zipp-3.6.0\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting coveralls\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading coveralls-3.3.1-py2.py3-none-any.whl (14 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting requests>=1.0.0\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Requirement already satisfied: coverage!=6.0.*,!=6.1,!=6.1.1,<7.0,>=4.1 in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from coveralls) (6.2)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting docopt>=0.6.1\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading docopt-0.6.2.tar.gz (25 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Preparing metadata (setup.py): started\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Preparing metadata (setup.py): finished with status 'done'\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting idna<4,>=2.5\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting charset-normalizer~=2.0.0\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading charset_normalizer-2.0.12-py3-none-any.whl (39 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting urllib3<1.27,>=1.21.1\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Collecting certifi>=2017.4.17\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Using legacy 'setup.py install' for docopt, since package 'wheel' is not installed.\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Installing collected packages: urllib3, idna, charset-normalizer, certifi, requests, docopt, coveralls\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |     Running setup.py install for docopt: started\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |     Running setup.py install for docopt: finished with status 'done'\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Successfully installed certifi-2023.5.7 charset-normalizer-2.0.12 coveralls-3.3.1 docopt-0.6.2 idna-3.4 requests-2.27.1 urllib3-1.26.16\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2705  Success - Main Install dependencies\n[0eb42568-52fa-489f-aee9-0984fc536093/build] \u2b50 Run Main Test with pytest\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | ============================= test session starts ==============================\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | platform linux -- Python 3.6.14, pytest-7.0.1, pluggy-1.0.0\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/nicodv-kmodes\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | plugins: cov-4.0.0\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | collected 72 items\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | \n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | kmodes/tests/test_common.py ...                                          [  4%]\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | kmodes/tests/test_kmodes.py ..............................               [ 45%]\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | kmodes/tests/test_kprototypes.py ..............................          [ 87%]\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | kmodes/util/tests/test_dissim.py .....                                   [ 94%]\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | kmodes/util/tests/test_util.py ....                                      [100%]\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | \n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | =============================== warnings summary ===============================\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | ../../../opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages/coverage/inorout.py:473\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages/coverage/inorout.py:473: CoverageWarning: --include is ignored because --source is set (include-ignored)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |     self.warn(\"--include is ignored because --source is set\", slug=\"include-ignored\")\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | \n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/nicodv-kmodes/report.xml -\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | \n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | ---------- coverage: platform linux, python 3.6.14-final-0 -----------\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Name                          Stmts   Miss Branch BrPart  Cover\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | ---------------------------------------------------------------\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | kmodes/__init__.py                1      0      0      0   100%\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | kmodes/kmodes.py                176      5     85      2    97%\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | kmodes/kprototypes.py           199      1     94      3    99%\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | kmodes/util/__init__.py          30      0     18      0   100%\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | kmodes/util/dissim.py            40      3     18      3    90%\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | kmodes/util/init_methods.py      33      0     18      0   100%\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | kmodes/util/testing.py            7      1      2      0    89%\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | ---------------------------------------------------------------\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | TOTAL                           486     10    235      8    97%\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | \n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | ======================== 72 passed, 1 warning in 22.15s ========================\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u2705  Success - Main Test with pytest\n[0eb42568-52fa-489f-aee9-0984fc536093/build] \u2b50 Run Main Coverage\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Submitting coverage to coveralls.io...\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | resubmitting with id None\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Traceback (most recent call last):\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   File \"/opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages/coveralls/api.py\", line 290, in submit_report\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |     response.raise_for_status()\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   File \"/opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages/requests/models.py\", line 960, in raise_for_status\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |     raise HTTPError(http_error_msg, response=self)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | requests.exceptions.HTTPError: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | \n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | The above exception was the direct cause of the following exception:\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | \n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | Traceback (most recent call last):\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   File \"/opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages/coveralls/cli.py\", line 95, in main\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |     result = coverallz.wear()\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   File \"/opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages/coveralls/api.py\", line 257, in wear\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |     return self.submit_report(json_string)\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |   File \"/opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages/coveralls/api.py\", line 294, in submit_report\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   |     'Could not submit coverage: {}'.format(e)) from e\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   | coveralls.exception.CoverallsException: Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[0eb42568-52fa-489f-aee9-0984fc536093/build]   \u274c  Failure - Main Coverage\n[0eb42568-52fa-489f-aee9-0984fc536093/build] exitcode '1': failure\n[0eb42568-52fa-489f-aee9-0984fc536093/build] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/nicodv-kmodes/.github/workflows/python-package-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 349.21641397476196
    }
}