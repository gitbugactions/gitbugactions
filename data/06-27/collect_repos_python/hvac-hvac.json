{
    "repository": "hvac/hvac",
    "stars": 1107,
    "language": "python",
    "size": 2217,
    "clone_url": "https://github.com/hvac/hvac.git",
    "timestamp": "2023-06-28T10:52:39.384630Z",
    "clone_success": true,
    "number_of_actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest",
        "unknown",
        "unknown",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_create_custom_secret_id_0_good_request_no_metadata",
                "time": 0.036,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_create_custom_secret_id_1_good_request_good_metadata",
                "time": 0.016,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_create_custom_secret_id_2_good_request_good_metadata",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_create_custom_secret_id_3_bad_metadata_option",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_create_or_update_approle_0_create_test_role",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_create_or_update_approle_1_bad_token_type",
                "time": 0.004,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_delete_role",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_destroy_secret_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_destroy_secret_id_accessor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_generate_secret_id_0_good_request_no_metadata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_generate_secret_id_1_good_request_good_metadata",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_generate_secret_id_2_good_request_good_metadata",
                "time": 0.028,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_generate_secret_id_3_bad_metadata_option",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_list_roles",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_list_secret_id_accessors",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_login",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_read_role",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_read_role_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_read_secret_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_approle.TestAppRole",
                "name": "test_read_secret_id_accessor",
                "time": 0.025,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"Exception: Vault server already running\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_configure_0_tenant_id_and_resource",
                "time": 0.898,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_configure_1_client_id_and_secret",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_configure_2_invalid_environment",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_create_role_0_success",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_create_role_1_CSV_policies_arg",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_create_role_2_list_policies_arg",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_create_role_3_no_bound_constraints",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_create_role_4_wrong_policy_arg_type",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_create_role_5_mixed_policy_arg_type",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_delete_config_0_success",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_delete_role_0_success",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_delete_role_1_nonexistent_role_name",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_list_roles_0_success",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_list_roles_1_no_roles",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_list_roles_2_no_config",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_read_config_0_success",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_read_config_1_no_config_written_yet",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_read_role_0_success",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_azure.TestAzure",
                "name": "test_read_role_1_nonexistent_role_name",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_configure_tls_certificate",
                "time": 0.917,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_create_ca_certificate_role",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_create_ca_certificate_with_filename",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_create_ca_certificate_with_filename_deprecated",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_delete_certificate_role",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_list_certificate_roles",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_login_0_testrole",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_login_1_",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_login_2_testrole2",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_login_3_",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_login_4_",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_login_5_",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_login_6_",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCert",
                "name": "test_read_ca_certificate_role",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_configure_tls_certificate",
                "time": 0.899,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_create_ca_certificate_role",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_create_ca_certificate_with_filename",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_create_ca_certificate_with_filename_deprecated",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_delete_certificate_role",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_list_certificate_roles",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_login_0_testrole",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_login_1_",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_login_2_testrole2",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_login_3_",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_login_4_",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_login_5_",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_login_6_",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_cert.TestCertEnv",
                "name": "test_read_ca_certificate_role",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_configure_0_success",
                "time": 0.895,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_configure_1_set_invalid_credentials",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_create_role_0_success_iam",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_create_role_1_iam_no_bound_service_account",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_create_role_2_success_gce",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_create_role_3_invalid_role_type",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_delete_config_0_no_existing_config",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_delete_role_0_success",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_delete_role_1_nonexistent_role_name",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_edit_labels_on_gce_role_0_success_add",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_edit_labels_on_gce_role_1_success_remove",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_edit_labels_on_gce_role_2_fail_upon_no_changes",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_edit_service_accounts_on_iam_role_0_success_add",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_edit_service_accounts_on_iam_role_1_success_remove",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_edit_service_accounts_on_iam_role_2_fail_upon_no_changes",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_list_roles_0_success_one_role",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_list_roles_1_success_multiple_roles",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_list_roles_2_no_roles",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_read_config_0_success",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_read_role_0_success",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_gcp.TestGcp",
                "name": "test_read_role_1_nonexistent_role",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_configure_0_just_organization",
                "time": 0.875,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_configure_and_read_configuration_0_just_organization",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_configure_and_read_configuration_1_custom_ttl_seconds",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_configure_and_read_configuration_2_custom_ttl_minutes",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_configure_and_read_configuration_3_custom_ttl_hours",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_configure_and_read_configuration_4_custom_max_ttl",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_login_0_valid_token",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_login_1_invalid_token_not_in_org",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_map_team_0_no_policies",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_map_team_1_with_policies",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_map_team_and_read_mapping_0_no_policies",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_map_team_and_read_mapping_1_with_policy",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_map_team_and_read_mapping_2_with_policy_incorrect_type",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_map_team_and_read_mapping_3_with_policies",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_map_user_and_read_mapping_0_no_policies",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_map_user_and_read_mapping_1_with_policy",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_map_user_and_read_mapping_2_with_policy_incorrect_type",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_map_user_and_read_mapping_3_with_policies",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_read_team_mapping",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_github.TestGithub",
                "name": "test_read_user_mapping",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_jwt.TestJWT",
                "name": "test_configure_0_configure_using_vault_identity_OIDC",
                "time": 0.909,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_jwt.TestJWT",
                "name": "test_create_role_0_success",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_jwt.TestJWT",
                "name": "test_delete_role_0_success",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_jwt.TestJWT",
                "name": "test_jwt_login_0_success",
                "time": 0.499,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_jwt.TestJWT",
                "name": "test_list_roles_0_success",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_jwt.TestJWT",
                "name": "test_read_config_0_configure_using_vault_identity_OIDC",
                "time": 0.123,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_jwt.TestJWT",
                "name": "test_read_role_0_success",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_configure_0_success",
                "time": 0.909,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_configure_1_issuer_test",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_configure_2_set_invalid_kubernetes_ca_cert",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_configure_3_set_invalid_pem_key",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_configure_4_set_invalid_token_reviewer_jwt",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_configure_5_missing_kubernetes_ca_cert",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_create_role_0_success",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_create_role_1_both_bounds_wildcard_permitted",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_create_role_2_token_type",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_delete_role_0_success",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_delete_role_1_nonexistent_role_name",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_list_roles_0_success",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_list_roles_1_no_roles",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_list_roles_2_no_config",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_read_config_0_success",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_read_config_1_no_config_written_yet",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_read_role_0_success",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_kubernetes.TestKubernetes",
                "name": "test_read_role_1_nonexistent_role_name",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_configure_0_update_url",
                "time": 1.686,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_configure_1_update_binddn",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_configure_2_update_upn_domain",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_configure_3_update_certificate",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_configure_4_incorrect_tls_version",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_create_or_update_group_0_no_policies",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_create_or_update_group_1_policies_as_list",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_create_or_update_group_2_policies_as_invalid_type",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_create_or_update_user_0_no_policies_or_groups",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_create_or_update_user_1_policies_as_list",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_create_or_update_user_2_policies_as_invalid_type",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_create_or_update_user_3_no_groups",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_create_or_update_user_4_groups_as_list",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_create_or_update_user_5_groups_as_invalid_type",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_delete_group_0_read_configured_group",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_delete_group_1_non_existent_group",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_delete_user_0_read_configured_user",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_delete_user_1_non_existent_user",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_list_groups_0_read_configured_groups",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_list_groups_1_non_existent_groups",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_list_users_0_read_configured_user",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_list_users_1_non_existent_user",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_login_0",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_login_1",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_login_2",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_login_3",
                "time": 0.047,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "test case does not apply to Vault version under test",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_read_configuration",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_read_group_0_read_configured_group",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_read_group_1_non_existent_group",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_read_user_0_read_configured_user",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_ldap.TestLdap",
                "name": "test_read_user_1_non_existent_user",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_legacy_mfa.TestLegacyMfa",
                "name": "test_configure_0_enable_mfa_with_supported_auth_method",
                "time": 0.984,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_legacy_mfa.TestLegacyMfa",
                "name": "test_configure_1_enable_mfa_with_unsupported_mfa_type",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_legacy_mfa.TestLegacyMfa",
                "name": "test_configure_2_enable_mfa_with_unconfigured_auth_method_path",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_legacy_mfa.TestLegacyMfa",
                "name": "test_configure_3_enable_mfa_with_unsupported_auth_method_type",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_legacy_mfa.TestLegacyMfa",
                "name": "test_configure_4_enable_mfa_with_unsupported_auth_method_type_forced",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_legacy_mfa.TestLegacyMfa",
                "name": "test_configure_duo_access_0_configure_duo_access_success",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_legacy_mfa.TestLegacyMfa",
                "name": "test_configure_duo_behavior_0_enable_mfa_with_supported_auth_method",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_legacy_mfa.TestLegacyMfa",
                "name": "test_login_with_mfa_0_login_without_duo_access_configured",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_legacy_mfa.TestLegacyMfa",
                "name": "test_read_configuration_0_read_configured_path",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_legacy_mfa.TestLegacyMfa",
                "name": "test_read_duo_behavior_configuration_0_read_configured_path",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_oidc.TestOIDC",
                "name": "test_configure_0_configure_using_vault_identity_OIDC",
                "time": 0.888,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_oidc.TestOIDC",
                "name": "test_delete_role_0_success",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_oidc.TestOIDC",
                "name": "test_list_roles_0_success",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_oidc.TestOIDC",
                "name": "test_oidc_authorization_url_request_0_success",
                "time": 0.631,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_oidc.TestOIDC",
                "name": "test_oidc_callback_0_success",
                "time": 0.971,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_oidc.TestOIDC",
                "name": "test_read_config_0_configure_using_vault_identity_OIDC",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_oidc.TestOIDC",
                "name": "test_read_role_0_success",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_configure_0_success",
                "time": 0.898,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_delete_group_0_success",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_delete_group_1_no_configuration",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_delete_user_0_success",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_delete_user_1_no_configuration",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_list_groups_0_success",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_list_groups_1_no_configuration",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_list_users_0_success",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_list_users_1_no_configuration",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_read_config_0_success",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_read_config_1_not_configured",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_read_group_0_success",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_read_group_1_no_configuration",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_read_user_0_success",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_read_user_1_no_configuration",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_register_group_0_double_register",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_register_group_1_success",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_register_user_0_double_register",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_okta.TestOkta",
                "name": "test_register_user_1_success",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_auth_orphaned_token_manipulation",
                "time": 0.873,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_auth_token_manipulation",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_create_token_explicit_max_ttl",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_create_token_max_ttl",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_create_token_periodic",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_create_token_w_role",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_create_wrapped_token_periodic",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_create_wrapped_token_w_role",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_policy",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_role",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_self_auth_token_manipulation",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_token_accessor",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.auth_methods.test_token.TestToken",
                "name": "test_token_roles",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_aws.TestAws",
                "name": "test_configure_lease_0_success",
                "time": 0.897,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_aws.TestAws",
                "name": "test_configure_root_iam_credentials_0_success",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_aws.TestAws",
                "name": "test_create_or_update_role_0_success",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_aws.TestAws",
                "name": "test_create_or_update_role_1_with_policy_arns",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_aws.TestAws",
                "name": "test_create_or_update_role_2_assumed_role_with_policy_document",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_aws.TestAws",
                "name": "test_create_or_update_role_3_invalid_credential_type",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_aws.TestAws",
                "name": "test_delete_role_0_success",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_aws.TestAws",
                "name": "test_list_roles_0_success",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_aws.TestAws",
                "name": "test_read_lease_0_success",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_aws.TestAws",
                "name": "test_read_role_0_success",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_azure.TestAzure",
                "name": "test_configure_and_read_configuration_0_no_parameters",
                "time": 0.873,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_azure.TestAzure",
                "name": "test_configure_and_read_configuration_1_valid_environment_argument",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_azure.TestAzure",
                "name": "test_configure_and_read_configuration_2_invalid_environment_argument",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_azure.TestAzure",
                "name": "test_delete_config_0_create_and_then_delete_config",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_gcp.TestGcp",
                "name": "test_write_config_0_success",
                "time": 0.958,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_configure_tokens_backend_0_empty_issuer",
                "time": 0.905,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_configure_tokens_backend_1_issuer_set",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_named_key_0_name_set",
                "time": 0.204,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_entity_0_create_success",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_entity_1_create_success_with_metadata",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_entity_2_create_failure_with_metadata",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_entity_3_update_success",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_entity_alias_0_create_success",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_entity_alias_1_update_success",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_entity_by_name_0_create_success",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_entity_by_name_1_create_success_with_metadata",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_entity_by_name_2_create_failure_with_metadata",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_entity_by_name_3_update_success",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_0_create_success",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_1_create_success_with_metadata",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_2_create_failure_with_metadata",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_3_create_success_with_group_type",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_4_create_failure_with_invalid_group_type",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_5_update_success",
                "time": 0.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_alias_0_create_success",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_alias_1_update_success",
                "time": 0.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_by_name_0_update_success",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_by_name_1_update_success_with_metadata",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_by_name_2_update_failure_with_metadata",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_by_name_3_update_failure_with_changed_group_type",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_by_name_4_update_failure_with_invalid_group_type",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_group_by_name_5_update_success",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_create_or_update_role_0_success",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_delete_entity_alias_by_id_0_delete_success",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_delete_entity_alias_by_id_1_delete_success_with_no_corresponding_entity",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_delete_entity_by_id_0_delete_success",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_delete_entity_by_id_1_delete_success_with_no_corresponding_entity",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_delete_entity_by_name_0_delete_success",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_delete_entity_by_name_1_delete_success_with_no_corresponding_entity",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_delete_named_key_0_success",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_delete_role_0_success",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_generate_signed_id_token_0_success",
                "time": 0.112,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_introspect_signed_id_token_0_success",
                "time": 0.144,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_entities_by_id_0_list_success_LIST_method",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_entities_by_id_1_list_success_GET_method",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_entities_by_id_2_list_failure_invalid_method",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_entities_by_name_0_list_success_LIST_method",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_entities_by_name_1_list_success_GET_method",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_entities_by_name_2_list_failure_invalid_method",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_entity_aliases_by_id_0_list_success_LIST_method",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_entity_aliases_by_id_1_list_success_GET_method",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_entity_aliases_by_id_2_list_failure_invalid_method",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_group_aliases_0_list_success_LIST_method",
                "time": 0.118,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_group_aliases_1_list_success_GET_method",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_group_aliases_2_list_failure_invalid_method",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_groups_by_name_0_list_success_LIST_method",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_groups_by_name_1_list_success_GET_method",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_groups_by_name_2_list_failure_invalid_method",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_named_keys_0_success",
                "time": 0.582,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_list_roles_0_success",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_lookup_entity_0_lookup_entity",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_lookup_entity_1_lookup_entity_alias",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_lookup_entity_2_lookup_missing_entity",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_lookup_group_0_lookup_group",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_lookup_group_1_lookup_group_alias",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_lookup_group_2_lookup_name",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_lookup_group_3_lookup_alias",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_lookup_group_4_lookup_missing_group",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_merge_entities_0_merge_success",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_merge_entities_1_merge_failure",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_active_public_keys_0_success",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_entity_alias_by_id_0_read_success",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_entity_alias_by_id_1_read_failure",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_entity_by_id_0_read_success",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_entity_by_id_1_read_failure",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_entity_by_name_0_read_success",
                "time": 0.113,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_entity_by_name_1_read_failure",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_group_alias_0_read_success",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_group_alias_1_read_failure",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_group_by_name_0_read_success",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_group_by_name_1_read_failure",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_named_key_0_success",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_role_0_success",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_tokens_backend_configuration_0_empty_issuer",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_tokens_backend_configuration_1_issuer_set",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_read_well_known_configurations_0_issuer_set",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_rotate_named_key_0_lower_ttl_than_at_create_time",
                "time": 0.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_update_entity_0_update_success",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_update_entity_1_update_success_with_metadata",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_update_entity_2_update_failure_with_metadata",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_update_entity_alias_by_id_0_update_success",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_update_entity_alias_by_id_1_update_failure_with_invalid_mount_accessor",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_update_group_by_id_0_update_success",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_update_group_by_id_1_update_success_with_metadata",
                "time": 0.108,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_update_group_by_id_2_update_failure_with_metadata",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_update_group_by_id_3_update_failure_with_changed_group_type",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_update_group_by_id_4_update_failure_with_invalid_group_type",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_identity.TestIdentity",
                "name": "test_update_group_by_id_5_update_success",
                "time": 0.119,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v1.TestKvV1",
                "name": "test_create_or_update_secret_0_create_secret_no_method_specified",
                "time": 0.877,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v1.TestKvV1",
                "name": "test_create_or_update_secret_1_create_secret_post_method_specified",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v1.TestKvV1",
                "name": "test_create_or_update_secret_2_create_secret_invalid_method_specified",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v1.TestKvV1",
                "name": "test_create_or_update_secret_3_update_secret_no_method_specified",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v1.TestKvV1",
                "name": "test_create_or_update_secret_4_update_secret_put_method_specified",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v1.TestKvV1",
                "name": "test_create_or_update_secret_5_update_secret_invalid_method_specified",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v1.TestKvV1",
                "name": "test_delete_secret_0_nonexistent_secret",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v1.TestKvV1",
                "name": "test_delete_secret_1_delete_secret",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v1.TestKvV1",
                "name": "test_list_secrets_0_nonexistent_secret",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v1.TestKvV1",
                "name": "test_list_secrets_1_list_secret",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v1.TestKvV1",
                "name": "test_read_secret_0_nonexistent_secret",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v1.TestKvV1",
                "name": "test_read_secret_1_read_secret",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_configure_and_read_configuration_0_no_parameters",
                "time": 0.871,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_configure_and_read_configuration_1_set_max_versions",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_configure_and_read_configuration_2_set_cas_required",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_configure_and_read_configuration_3_set_max_versions_and_cas_required",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_configure_and_read_configuration_4_set_delete_version_after_to_thirty_minutes",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_create_or_update_secret_0_create_secret",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_create_or_update_secret_1_create_secret_with_cas_of_0",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_create_or_update_secret_2_update_secret",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_create_or_update_secret_3_update_secret_with_valid_cas_of_1",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_create_or_update_secret_4_update_secret_with_invalid_cas",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_create_or_update_secret_5_update_with_cas_of_0_after_path_already_written",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_00_successful_delete_one_version_written",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_01_successful_delete_one_version_written",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_02_successful_delete_one_version_written",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_03_successful_delete_one_version_written",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_04_successful_delete_two_versions_written",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_05_successful_delete_two_versions_written",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_06_successful_delete_two_versions_written",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_07_successful_delete_two_versions_written",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_08_successful_delete_three_versions_written",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_09_successful_delete_three_versions_written",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_10_successful_delete_three_versions_written",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_11_successful_delete_three_versions_written",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_12_nonexistent_path",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_13_nonexistent_path",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_14_nonexistent_path",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_latest_version_of_secret_15_nonexistent_path",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_metadata_and_all_versions_0_nonexistent_secret",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_metadata_and_all_versions_1_delete_extant_secret_metadata",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_secret_versions_00_successful_delete_one_version_written",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_secret_versions_01_successful_delete_one_out_of_two_versions_written_1",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_secret_versions_02_successful_delete_one_out_of_two_versions_written_2",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_secret_versions_03_successful_delete_two_out_of_two_versions_written",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_secret_versions_04_successful_delete_three_out_of_seven_versions_written_135",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_secret_versions_05_successful_delete_three_out_of_seven_versions_written_137",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_secret_versions_06_invalid_versions_arg_none",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_secret_versions_07_invalid_versions_arg_empty",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_secret_versions_08_invalid_versions_arg_not_a_list",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_secret_versions_09_nonexistent_version_1",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_secret_versions_10_nonexistent_version_2",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_delete_secret_versions_11_nonexistent_version_3",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_destroy_secret_versions_00_successful_destroy_one_version_written",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_destroy_secret_versions_01_successful_destroy_one_out_of_two_versions_written_1",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_destroy_secret_versions_02_successful_destroy_one_out_of_two_versions_written_2",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_destroy_secret_versions_03_successful_destroy_two_out_of_two_versions_written",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_destroy_secret_versions_04_successful_destroy_three_out_of_seven_versions_written_135",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_destroy_secret_versions_05_successful_destroy_three_out_of_seven_versions_written_137",
                "time": 0.116,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_destroy_secret_versions_06_invalid_versions_arg_None",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_destroy_secret_versions_07_invalid_versions_arg_empty",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_destroy_secret_versions_08_invalid_versions_arg_not_a_list",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_destroy_secret_versions_09_nonexistent_version_1",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_destroy_secret_versions_10_nonexistent_version_2",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_destroy_secret_versions_11_nonexistent_version_3",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_list_secrets_0_nonexistent_secret",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_list_secrets_1_list_secret",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_patch_0_add_new_key_to_existing_secret",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_patch_1_add_new_key_to_nonexistent_secret",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_patch_2_update_existing_key_on_existing_secret",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_read_secret_version_0_nonexistent_secret",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_read_secret_version_1_read_secret_version_2_back",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_read_secret_version_2_read_secret_version_1_back",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_read_secret_version_3_read_current_secret_version",
                "time": 0.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_read_secret_version_4_read_current_secret_version",
                "time": 0.112,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_undelete_secret_versions_00_successful_undelete_one_version_written",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_undelete_secret_versions_01_successful_undelete_one_out_of_two_versions_written_1",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_undelete_secret_versions_02_successful_undelete_one_out_of_two_versions_written_2",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_undelete_secret_versions_03_successful_undelete_two_out_of_two_versions_written",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_undelete_secret_versions_04_successful_undelete_three_out_of_seven_versions_written_135",
                "time": 0.132,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_undelete_secret_versions_05_successful_undelete_three_out_of_seven_versions_written_137",
                "time": 0.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_undelete_secret_versions_06_invalid_versions_arg_none",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_undelete_secret_versions_07_invalid_versions_arg_empty",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_undelete_secret_versions_08_invalid_versions_arg_not_a_list",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_undelete_secret_versions_09_nonexistent_version_1",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_undelete_secret_versions_10_nonexistent_version_2",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_undelete_secret_versions_11_nonexistent_version_3",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_update_metadata_0_update_with_no_params",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_update_metadata_1_update_max_versions_7",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_update_metadata_2_update_max_versions_0",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_update_metadata_3_update_cas_required_true",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_update_metadata_4_update_cas_required_false",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_update_metadata_5_update_with_invalid_cas_required_param",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_update_metadata_6_update_custom_medata",
                "time": 0.043,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "custom_metadata support added in Vault 1.9.0",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_update_metadata_7_update_with_invalid_custom_metadata_param",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_kv_v2.TestKvV2",
                "name": "test_update_metadata_8_update_with_delete_version_after_set",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_create_or_update_role_0_success",
                "time": 1.347,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_delete_role_0_success",
                "time": 0.545,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_delete_root_0_success",
                "time": 1.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_generate_certificate_0_success",
                "time": 0.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_generate_intermediate_0_success",
                "time": 0.683,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_generate_root_0_success",
                "time": 0.402,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_list_certificates_0_success",
                "time": 0.243,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_list_roles_0_success",
                "time": 0.23,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_read_ca_certificate_0_success",
                "time": 0.482,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_read_ca_certificate_chain_0_success",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_read_certificate_0_success",
                "time": 0.71,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_read_crl_0_success",
                "time": 0.184,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_read_crl_configuration_0_success",
                "time": 0.56,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_read_role_0_success",
                "time": 0.347,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_read_urls_0_success",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_revoke_certificate_0_success",
                "time": 1.113,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_rotate_crl_0_success",
                "time": 0.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_set_crl_configuration_0_success",
                "time": 0.214,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_set_signed_intermediate_0_success",
                "time": 0.736,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_set_urls_0_success",
                "time": 0.562,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_sign_certificate_0_success",
                "time": 0.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_sign_intermediate_0_success",
                "time": 0.508,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_sign_self_issued_0_success",
                "time": 0.453,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_sign_verbatim_0_success",
                "time": 0.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_submit_ca_information_0_success",
                "time": 0.649,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_pki.TestPki",
                "name": "test_tidy_0_success",
                "time": 0.642,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_configure_zeroaddress_roles_0_success",
                "time": 0.878,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_create_key_0_success",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_create_role_0_success",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_delete_ca_information_0_success",
                "time": 3.51,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_delete_key_0_success",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_delete_role_0_success",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_delete_zeroaddress_roles_0_success",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_generate_ssh_credentials_0_success",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_list_roles_0_success",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_list_roles_by_ip_0_success",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_list_zeroaddress_roles_0_success",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_read_role_0_success",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_sign_ssh_key_0_success",
                "time": 2.151,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_submit_ca_information_0_success",
                "time": 1.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_ssh.TestPki",
                "name": "test_verify_ssh_otp_0_success",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_create_or_update_alphabet",
                "time": 0.913,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_create_or_update_fpe_transformation",
                "time": 0.026,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Expanded tokenization support added in Vault version v1.7.0",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_create_or_update_masking_transformation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Expanded tokenization support added in Vault version v1.7.0",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_create_or_update_role",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_create_or_update_template",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_create_or_update_tokenization_transformation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Expanded tokenization support added in Vault version v1.7.0",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_create_or_update_transformation",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_decode",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_delete_alphabet",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_delete_role",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_delete_template",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_delete_transformation",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_encode",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_list_alphabets",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_list_roles",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_list_templates",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_list_transformations",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_read_alphabet",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_read_role",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_read_template",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transform.TestTransform",
                "name": "test_read_transformation",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_backup_key_0_success",
                "time": 0.968,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_backup_key_1_allow_plaintext_backup_false",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_create_key_0_success",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_create_key_1_auto_rotate_period_field",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_decrypt_data_0_success",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_delete_key_0_success",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_encrypt_data_0_success",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_export_key_0_success",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_export_key_1_invalid_key_type",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_generate_data_key_0_success",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_generate_data_key_1_invalid_key_type",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_generate_hmac_0_success",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_generate_hmac_1_invalid_algorithm",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_generate_random_bytes_0_success",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_hash_data_0_success",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_hash_data_1_invalid_algorithm",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_hash_data_2_invalid_output_format",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_list_keys_0_success",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_read_key_0_success",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_restore_key_0_success",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_restore_key_1_success_with_force",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_restore_key_2_existing_key_without_force",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_rewrap_data_0_success",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_rotate_key_0_success",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_sign_data_0_success",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_sign_data_1_invalid_algorithm",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_sign_data_2_invalid_signature_algorithm",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_sign_data_3_auto_salt_length",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_sign_data_4_hash_salt_length",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_sign_data_5_invalid_string_for_salt_length",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_sign_data_6_invalid_negative_salt_length",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_sign_data_7_valid_negative_salt_length",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_sign_data_8_zero_salt_length",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_sign_data_9_positive_salt_length",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_trim_key_0_success",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_verify_signed_data_0_success",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_verify_signed_data_1_invalid_algorithm",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_verify_signed_data_2_invalid_signature_algorithm",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_verify_signed_data_3_auto_salt_length",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_verify_signed_data_4_hash_salt_length",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_verify_signed_data_5_invalid_string_for_salt_length",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_verify_signed_data_6_invalid_negative_salt_length",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_verify_signed_data_7_valid_negative_salt_length",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_verify_signed_data_8_zero_salt_length",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.secrets_engines.test_transit.TestTransit",
                "name": "test_verify_signed_data_9_positive_salt_length",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_audit.TestAudit",
                "name": "test_audit_backend_manipulation",
                "time": 0.955,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_audit.TestAudit",
                "name": "test_audit_hash_0_hash_returned",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_audit.TestAudit",
                "name": "test_audit_hash_1_audit_backend_not_enabled",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_auth.TestAuth",
                "name": "test_auth_backend_manipulation",
                "time": 0.889,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_auth.TestAuth",
                "name": "test_tune_auth_backend",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_health.TestHealth",
                "name": "test_read_health_status_0_default_params",
                "time": 1.281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_health.TestHealth",
                "name": "test_read_health_status_1_unsealed_standby_node_HEAD_method",
                "time": 0.214,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping test case, Vault HA required but not available.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_health.TestHealth",
                "name": "test_read_health_status_2_unsealed_standby_node_GET_method",
                "time": 0.317,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping test case, Vault HA required but not available.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_health.TestHealth",
                "name": "test_read_health_status_3_sealed_standby_node_HEAD_method",
                "time": 0.228,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping test case, Vault HA required but not available.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_health.TestHealth",
                "name": "test_read_health_status_4_sealed_standby_node_GET_method",
                "time": 0.216,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping test case, Vault HA required but not available.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_health.TestHealth",
                "name": "test_read_health_status_5_GET_method",
                "time": 0.449,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_init.TestInit",
                "name": "test_read_init_status",
                "time": 0.885,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_key.TestKey",
                "name": "test_get_backed_up_keys",
                "time": 0.853,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_key.TestKey",
                "name": "test_rekey_multi",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_key.TestKey",
                "name": "test_rekey_verify_multi",
                "time": 0.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_key.TestKey",
                "name": "test_rotate",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_key.TestKey",
                "name": "test_start_generate_root_then_cancel",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_key.TestKey",
                "name": "test_start_generate_root_with_completion",
                "time": 0.153,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_leader.TestLeader",
                "name": "test_read_health_status",
                "time": 0.964,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_lease.TestLease",
                "name": "test_list_leases",
                "time": 1.586,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_lease.TestLease",
                "name": "test_read_lease",
                "time": 1.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_lease.TestLease",
                "name": "test_revoke_force",
                "time": 0.928,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_lease.TestLease",
                "name": "test_revoke_lease",
                "time": 1.306,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_lease.TestLease",
                "name": "test_revoke_prefix",
                "time": 0.714,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_mount.TestMount",
                "name": "test_get_secret_backend_tuning",
                "time": 0.899,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_mount.TestMount",
                "name": "test_secret_backend_manipulation",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_namespace.TestNamespace",
                "name": "test_list_namespaces",
                "time": 0.905,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_policy.TestPolicy",
                "name": "test_create_or_update_policy_0_success",
                "time": 0.887,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_policy.TestPolicy",
                "name": "test_create_or_update_policy_1_pretty_print_false",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_policy.TestPolicy",
                "name": "test_json_policy_manipulation",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_policy.TestPolicy",
                "name": "test_policy_manipulation",
                "time": 0.229,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_seal.TestSeal",
                "name": "test_seal_unseal",
                "time": 2.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_seal.TestSeal",
                "name": "test_unseal_multi",
                "time": 1.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.api.system_backend.test_wrapping.TestWrapping",
                "name": "test_unwrap",
                "time": 0.904,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_approle.TestApprole",
                "name": "test_auth_approle",
                "time": 0.922,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_approle.TestApprole",
                "name": "test_auth_approle_dont_use_token",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_approle.TestApprole",
                "name": "test_create_delete_role_secret_id",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_approle.TestApprole",
                "name": "test_create_role",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_approle.TestApprole",
                "name": "test_delete_role",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_approle.TestApprole",
                "name": "test_list_role_secrets_0_no_secret_ids",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_approle.TestApprole",
                "name": "test_list_role_secrets_1_one_secret_id",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_approle.TestApprole",
                "name": "test_list_role_secrets_2_two_secret_ids",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_auth_gcp_alternate_mount_point_with_no_client_token_exception",
                "time": 0.921,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_auth_token_manipulation",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_broken_token",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_client_authenticated",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_client_logout",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_client_logout_and_revoke",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_create_token_explicit_max_ttl",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_create_token_max_ttl",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_create_token_periodic",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_create_token_w_role",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_create_userpass",
                "time": 0.589,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_generic_secret_backend",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_gh51",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_illegal_token",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_invalid_token",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_kv2_secret_backend",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_list_directory",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_missing_token",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_read_nonexistent_key",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_seal_status",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_self_auth_token_manipulation",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_token_accessor",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_token_roles",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_userpass_auth",
                "time": 0.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_integration.IntegrationTest",
                "name": "test_write_with_response",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_audit_backend_manipulation",
                "time": 0.926,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_audit_hash_0_hash_returned",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_audit_hash_1_audit_backend_not_enabled",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_auth_backend_manipulation",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_cubbyhole_auth",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_get_backed_up_keys",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_get_secret_backend_tuning",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_ha_status",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_json_policy_manipulation",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_policy_manipulation",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_read_lease",
                "time": 0.788,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_rekey_multi",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_rotate",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_seal_unseal",
                "time": 1.159,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_secret_backend_manipulation",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_start_generate_root_then_cancel",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_start_generate_root_with_completion",
                "time": 0.175,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_tune_auth_backend",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_unseal_multi",
                "time": 1.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_wrap_write",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_wrapped_client_token_cleanup",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_wrapped_client_token_intercept",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_wrapped_client_token_revoke",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_wrapped_client_token_success",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_wrapped_token_cleanup",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_wrapped_token_intercept",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_wrapped_token_revoke",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration_tests.v1.test_system_backend.TestSystemBackend",
                "name": "test_wrapped_token_success",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \ud83d\ude80  Start image=crawlergpt:latest\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] \ud83d\ude80  Start image=crawlergpt:latest\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \ud83d\ude80  Start image=crawlergpt:latest\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ] \ud83d\ude80  Start image=crawlergpt:latest\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1.3.3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1.3.3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1.3.3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1.3.3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] \u2b50 Run Pre Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2705  Success - Pre Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \u2b50 Run Pre Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2705  Success - Pre Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ] \u2b50 Run Pre Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2705  Success - Pre Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \u2b50 Run Pre Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2705  Success - Pre Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] \u2b50 Run Main actions/checkout@v3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2705  Success - Main actions/checkout@v3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] \u2b50 Run Main Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ] \ud83e\uddea  Matrix: map[python-version:3.6]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/snok-install-poetry@v1.3.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3.3/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ] \u2b50 Run Main actions/checkout@v3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2705  Success - Main actions/checkout@v3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3.3/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] \u2b50 Run Main Install and configure Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-0.sh] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ] \u2b50 Run Main Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/snok-install-poetry@v1.3.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3.3/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3.3/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \ud83e\uddea  Matrix: map[python-version:3.6]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \u2b50 Run Main actions/checkout@v3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2705  Success - Main actions/checkout@v3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \u2b50 Run Main Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \ud83e\uddea  Matrix: map[python-version:3.7 vault-version:vault-enterprise=1.6.5+ent]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \u2b50 Run Main actions/checkout@v3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/snok-install-poetry@v1.3.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3.3/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2705  Success - Main actions/checkout@v3\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3.3/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \u2b50 Run Main Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/snok-install-poetry@v1.3.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3.3/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3.3/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \u2b50 Run Main Install and configure Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ] \u2b50 Run Main Install and configure Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \u2b50 Run Main Install and configure Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-0.sh] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-0.sh] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-0.sh] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Retrieving Poetry metadata\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | # Welcome to Poetry!\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | This will download and install the latest version of Poetry,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | a dependency and package manager for Python.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | /home/runneradmin/.local/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | You can uninstall at any time by executing this script with the --uninstall option,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | and these changes will be reverted.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Installing Poetry (1.4.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Installing Poetry (1.4.2): Creating environment\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Installing Poetry (1.4.2): Installing Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Installing Poetry (1.4.2): Creating script\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Installing Poetry (1.4.2): Done\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Poetry (1.4.2) is installed now. Great!\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | environment variable.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | You can test that everything is set up by executing:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | `poetry --version`\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \u001b[33mDone \u2705\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2705  Success - Main Install and configure Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2705  Success - Main Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] \u2b50 Run Main Set up Python 3.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2753  ::group::Installed versions\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::isExplicit: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::explicit? false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::matched: 3.6.14\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Successfully set up CPython (3.6.14)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2753  ::endgroup::\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/poetry.lock\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::Processing Poetry project at /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | [command]/home/runneradmin/.local/bin/poetry config --list\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | cache-dir = \"/home/runneradmin/.cache/pypoetry\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | experimental.new-installer = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | experimental.system-git-client = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | installer.max-workers = null\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | installer.modern-installation = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | installer.no-binary = null\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | installer.parallel = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | virtualenvs.create = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | virtualenvs.in-project = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | virtualenvs.options.always-copy = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | virtualenvs.options.no-pip = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | virtualenvs.options.no-setuptools = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | virtualenvs.options.system-site-packages = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | virtualenvs.path = \"{cache-dir}/virtualenvs\"  # /home/runneradmin/.cache/pypoetry/virtualenvs\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | virtualenvs.prefer-active-python = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | virtualenvs.prompt = \"{project_name}-py{python_version}\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::Resolved Keys:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::[\"setup-python-Linux-python-3.6.14-poetry-v2-06b36fdc59a316e219a6705939314f42a2bdbe24f16b94b4ea4f8e20163cf40e\"]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::1.5.0\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:44813/_apis/artifactcache/cache?keys=setup-python-Linux-python-3.6.14-poetry-v2-06b36fdc59a316e219a6705939314f42a2bdbe24f16b94b4ea4f8e20163cf40e&version=f78db083d0fd06a9ff5dc52b5dfbfa46593d3863521b617552f23f9fcae4491c\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udcac  ::debug::pythonLocation is /opt/hostedtoolcache/Python/3.6.14/x64/bin/python\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | [command]/home/runneradmin/.local/bin/poetry env use /opt/hostedtoolcache/Python/3.6.14/x64/bin/python\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Creating virtualenv hvac in /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Using virtualenv: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | poetry cache is not found\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2705  Success - Main Set up Python 3.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib/pkgconfig\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::set-output:: python-version=3.6.14\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.6.14/x64/bin/python\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::set-output:: cache-hit=false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] \u2b50 Run Main Install dependencies\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Retrieving Poetry metadata\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | # Welcome to Poetry!\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | This will download and install the latest version of Poetry,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | a dependency and package manager for Python.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | /home/runneradmin/.local/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | You can uninstall at any time by executing this script with the --uninstall option,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | and these changes will be reverted.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Installing Poetry (1.4.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Installing Poetry (1.4.2): Creating environment\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Installing Poetry (1.4.2): Installing Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Installing Poetry (1.4.2): Creating script\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Installing Poetry (1.4.2): Done\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Poetry (1.4.2) is installed now. Great!\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | environment variable.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | You can test that everything is set up by executing:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | `poetry --version`\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Retrieving Poetry metadata\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | # Welcome to Poetry!\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | This will download and install the latest version of Poetry,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | a dependency and package manager for Python.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | /home/runneradmin/.local/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | You can uninstall at any time by executing this script with the --uninstall option,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | and these changes will be reverted.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Installing Poetry (1.4.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Installing Poetry (1.4.2): Creating environment\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Installing Poetry (1.4.2): Installing Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Installing Poetry (1.4.2): Creating script\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Installing Poetry (1.4.2): Done\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Poetry (1.4.2) is installed now. Great!\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | environment variable.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | You can test that everything is set up by executing:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | `poetry --version`\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Retrieving Poetry metadata\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | # Welcome to Poetry!\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | This will download and install the latest version of Poetry,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | a dependency and package manager for Python.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | /home/runneradmin/.local/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | You can uninstall at any time by executing this script with the --uninstall option,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | and these changes will be reverted.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Installing Poetry (1.4.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Installing Poetry (1.4.2): Creating environment\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Installing Poetry (1.4.2): Installing Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Installing Poetry (1.4.2): Creating script\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Installing Poetry (1.4.2): Done\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Poetry (1.4.2) is installed now. Great!\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | environment variable.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | You can test that everything is set up by executing:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | `poetry --version`\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \u001b[33mDone \u2705\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2705  Success - Main Install and configure Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \u001b[33mDone \u2705\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2705  Success - Main Install and configure Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2705  Success - Main Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2705  Success - Main Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \u001b[33mDone \u2705\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2705  Success - Main Install and configure Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \u2b50 Run Main Set up Python 3.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ] \u2b50 Run Main Set up Python 3.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2705  Success - Main Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \u2b50 Run Main Set up Python 3.7\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Installing dependencies from lock file\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Warning: poetry.lock is not consistent with pyproject.toml. You may be getting improper dependencies. Run `poetry lock [--no-update]` to fix it.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Package operations: 74 installs, 0 updates, 0 removals\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing pycparser (2.21)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing typing-extensions (4.1.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing zipp (3.6.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing certifi (2022.12.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing cffi (1.15.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing dataclasses (0.8)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing idna (3.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing charset-normalizer (2.0.12)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing importlib-metadata (4.2.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing markupsafe (2.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing pyparsing (3.0.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing pytz (2022.2.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing urllib3 (1.26.12)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing wrapt (1.14.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing alabaster (0.7.12)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing attrs (22.1.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing click (8.0.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing cryptography (38.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing babel (2.10.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing greenlet (1.1.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing imagesize (1.4.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing iniconfig (1.1.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing deprecated (1.2.13)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing jinja2 (3.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing packaging (21.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing pluggy (1.0.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing py (1.11.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing requests (2.27.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing itsdangerous (2.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing docutils (0.17.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing sphinxcontrib-applehelp (1.0.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing sphinxcontrib-devhelp (1.0.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing sphinxcontrib-htmlhelp (2.0.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing sphinxcontrib-jsmath (1.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing snowballstemmer (2.2.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing sphinxcontrib-serializinghtml (1.1.5)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing sphinxcontrib-qthelp (1.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing pygments (2.13.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing tomli (1.2.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing werkzeug (2.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing coverage (6.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing flask (2.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing jwcrypto (1.4.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing mccabe (0.6.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing mistune (0.8.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing mypy-extensions (0.4.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing pathspec (0.9.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing py4j (0.10.9.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing pycodestyle (2.8.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing pytest (7.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing sphinx (3.1.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing sqlalchemy (1.4.41)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing pyflakes (2.4.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing platformdirs (2.4.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing six (1.16.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing typed-ast (1.5.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2753  ::group::Installed versions\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::isExplicit: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::explicit? false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2753  ::group::Installed versions\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::isExplicit: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::matched: 3.6.14\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::explicit? false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Successfully set up CPython (3.6.14)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2753  ::endgroup::\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::matched: 3.6.14\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Successfully set up CPython (3.6.14)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2753  ::endgroup::\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2753  ::group::Installed versions\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::isExplicit: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::explicit? false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::explicit? true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Successfully set up CPython (3.7.11)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2753  ::endgroup::\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/poetry.lock\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/poetry.lock\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/poetry.lock\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::Processing Poetry project at /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | [command]/home/runneradmin/.local/bin/poetry config --list\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Processing Poetry project at /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | [command]/home/runneradmin/.local/bin/poetry config --list\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::Processing Poetry project at /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | [command]/home/runneradmin/.local/bin/poetry config --list\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | cache-dir = \"/home/runneradmin/.cache/pypoetry\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | experimental.new-installer = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | experimental.system-git-client = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | installer.max-workers = null\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | installer.modern-installation = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | installer.no-binary = null\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | installer.parallel = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | virtualenvs.create = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | virtualenvs.in-project = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | virtualenvs.options.always-copy = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | virtualenvs.options.no-pip = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | virtualenvs.options.no-setuptools = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | virtualenvs.options.system-site-packages = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | virtualenvs.path = \"{cache-dir}/virtualenvs\"  # /home/runneradmin/.cache/pypoetry/virtualenvs\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | virtualenvs.prefer-active-python = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | virtualenvs.prompt = \"{project_name}-py{python_version}\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::Resolved Keys:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::[\"setup-python-Linux-python-3.6.14-poetry-v2-06b36fdc59a316e219a6705939314f42a2bdbe24f16b94b4ea4f8e20163cf40e\"]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::1.5.0\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:44813/_apis/artifactcache/cache?keys=setup-python-Linux-python-3.6.14-poetry-v2-06b36fdc59a316e219a6705939314f42a2bdbe24f16b94b4ea4f8e20163cf40e&version=f78db083d0fd06a9ff5dc52b5dfbfa46593d3863521b617552f23f9fcae4491c\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udcac  ::debug::pythonLocation is /opt/hostedtoolcache/Python/3.6.14/x64/bin/python\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | [command]/home/runneradmin/.local/bin/poetry env use /opt/hostedtoolcache/Python/3.6.14/x64/bin/python\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | cache-dir = \"/home/runneradmin/.cache/pypoetry\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | experimental.new-installer = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | experimental.system-git-client = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | installer.max-workers = null\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | installer.modern-installation = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | installer.no-binary = null\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | installer.parallel = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | virtualenvs.create = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | virtualenvs.in-project = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | virtualenvs.options.always-copy = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | virtualenvs.options.no-pip = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | virtualenvs.options.no-setuptools = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | virtualenvs.options.system-site-packages = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | virtualenvs.path = \"{cache-dir}/virtualenvs\"  # /home/runneradmin/.cache/pypoetry/virtualenvs\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | virtualenvs.prefer-active-python = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | virtualenvs.prompt = \"{project_name}-py{python_version}\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Resolved Keys:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::[\"setup-python-Linux-python-3.6.14-poetry-v2-06b36fdc59a316e219a6705939314f42a2bdbe24f16b94b4ea4f8e20163cf40e\"]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::1.5.0\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:44813/_apis/artifactcache/cache?keys=setup-python-Linux-python-3.6.14-poetry-v2-06b36fdc59a316e219a6705939314f42a2bdbe24f16b94b4ea4f8e20163cf40e&version=f78db083d0fd06a9ff5dc52b5dfbfa46593d3863521b617552f23f9fcae4491c\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::pythonLocation is /opt/hostedtoolcache/Python/3.6.14/x64/bin/python\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cache-dir = \"/home/runneradmin/.cache/pypoetry\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | experimental.new-installer = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | experimental.system-git-client = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | installer.max-workers = null\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | installer.modern-installation = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | installer.no-binary = null\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | installer.parallel = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | virtualenvs.create = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | virtualenvs.in-project = true\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | virtualenvs.options.always-copy = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | virtualenvs.options.no-pip = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | virtualenvs.options.no-setuptools = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | virtualenvs.options.system-site-packages = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | virtualenvs.path = \"{cache-dir}/virtualenvs\"  # /home/runneradmin/.cache/pypoetry/virtualenvs\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | virtualenvs.prefer-active-python = false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | virtualenvs.prompt = \"{project_name}-py{python_version}\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | [command]/home/runneradmin/.local/bin/poetry env use /opt/hostedtoolcache/Python/3.6.14/x64/bin/python\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::Resolved Keys:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::[\"setup-python-Linux-python-3.7.11-poetry-v2-06b36fdc59a316e219a6705939314f42a2bdbe24f16b94b4ea4f8e20163cf40e\"]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::1.5.0\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:44813/_apis/artifactcache/cache?keys=setup-python-Linux-python-3.7.11-poetry-v2-06b36fdc59a316e219a6705939314f42a2bdbe24f16b94b4ea4f8e20163cf40e&version=f78db083d0fd06a9ff5dc52b5dfbfa46593d3863521b617552f23f9fcae4491c\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udcac  ::debug::pythonLocation is /opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | [command]/home/runneradmin/.local/bin/poetry env use /opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Using virtualenv: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Recreating virtualenv hvac in /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | poetry cache is not found\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2705  Success - Main Set up Python 3.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Using virtualenv: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | poetry cache is not found\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2705  Success - Main Set up Python 3.6\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib/pkgconfig\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib/pkgconfig\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::set-output:: python-version=3.6.14\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.6.14/x64/bin/python\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::set-output:: cache-hit=false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ] \u2b50 Run Main Install dependencies\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::set-output:: python-version=3.6.14\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.6.14/x64/bin/python\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::set-output:: cache-hit=false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \u2b50 Run Main Install dependencies\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Using virtualenv: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | poetry cache is not found\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2705  Success - Main Set up Python 3.7\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::set-output:: python-version=3.7.11\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::set-output:: cache-hit=false\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \u2b50 Run Main Install dependencies\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Installing dependencies from lock file\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Installing dependencies from lock file\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Installing dependencies from lock file\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Warning: poetry.lock is not consistent with pyproject.toml. You may be getting improper dependencies. Run `poetry lock [--no-update]` to fix it.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Warning: poetry.lock is not consistent with pyproject.toml. You may be getting improper dependencies. Run `poetry lock [--no-update]` to fix it.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Warning: poetry.lock is not consistent with pyproject.toml. You may be getting improper dependencies. Run `poetry lock [--no-update]` to fix it.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | Package operations: 73 installs, 1 update, 0 removals\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing pycparser (2.21)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing typing-extensions (4.1.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing zipp (3.6.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Package operations: 73 installs, 1 update, 0 removals\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing pycparser (2.21)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Package operations: 73 installs, 1 update, 0 removals\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing pycparser (2.21)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing typing-extensions (4.1.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing typing-extensions (4.1.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing zipp (3.6.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing zipp (3.6.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing certifi (2022.12.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing cffi (1.15.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing charset-normalizer (2.0.12)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing importlib-metadata (4.2.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing markupsafe (2.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing pyparsing (3.0.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing idna (3.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing pytz (2022.2.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing urllib3 (1.26.12)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing wrapt (1.14.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing certifi (2022.12.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing cffi (1.15.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing charset-normalizer (2.0.12)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing importlib-metadata (4.2.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing idna (3.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing markupsafe (2.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing pyparsing (3.0.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing pytz (2022.2.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing urllib3 (1.26.12)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing wrapt (1.14.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing certifi (2022.12.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing cffi (1.15.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing charset-normalizer (2.0.12)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing idna (3.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing importlib-metadata (4.2.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing markupsafe (2.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing pyparsing (3.0.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing pytz (2022.2.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing urllib3 (1.26.12)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing wrapt (1.14.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing alabaster (0.7.12)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing attrs (22.1.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing babel (2.10.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing click (8.0.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing deprecated (1.2.13)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing docutils (0.17.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing imagesize (1.4.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing itsdangerous (2.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing jinja2 (3.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing greenlet (1.1.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing cryptography (38.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing iniconfig (1.1.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing py (1.11.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing pluggy (1.0.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing pygments (2.13.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing packaging (21.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing requests (2.27.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Updating setuptools (67.6.1 -> 59.6.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing snowballstemmer (2.2.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing sphinxcontrib-applehelp (1.0.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing sphinxcontrib-devhelp (1.0.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing sphinxcontrib-htmlhelp (2.0.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing sphinxcontrib-jsmath (1.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing sphinxcontrib-qthelp (1.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing sphinxcontrib-serializinghtml (1.1.5)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing tomli (1.2.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing werkzeug (2.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing alabaster (0.7.12)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing attrs (22.1.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing click (8.0.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing cryptography (38.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing docutils (0.17.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing imagesize (1.4.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing deprecated (1.2.13)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing jinja2 (3.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing babel (2.10.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing pluggy (1.0.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing iniconfig (1.1.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing requests (2.27.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing greenlet (1.1.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing py (1.11.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing packaging (21.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Updating setuptools (67.6.1 -> 59.6.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing pygments (2.13.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing snowballstemmer (2.2.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing itsdangerous (2.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing sphinxcontrib-devhelp (1.0.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing sphinxcontrib-applehelp (1.0.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing sphinxcontrib-htmlhelp (2.0.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing sphinxcontrib-qthelp (1.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing sphinxcontrib-jsmath (1.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing sphinxcontrib-serializinghtml (1.1.5)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing werkzeug (2.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \u2022 Installing tomli (1.2.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing alabaster (0.7.12)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing attrs (22.1.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing click (8.0.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing cryptography (38.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing babel (2.10.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing docutils (0.17.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing deprecated (1.2.13)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing iniconfig (1.1.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing itsdangerous (2.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing jinja2 (3.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing py (1.11.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing imagesize (1.4.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing requests (2.27.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Updating setuptools (67.6.1 -> 59.6.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing pygments (2.13.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing greenlet (1.1.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing packaging (21.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing pluggy (1.0.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing sphinxcontrib-applehelp (1.0.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing sphinxcontrib-htmlhelp (2.0.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing sphinxcontrib-jsmath (1.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing sphinxcontrib-qthelp (1.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing sphinxcontrib-devhelp (1.0.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing snowballstemmer (2.2.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing werkzeug (2.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing sphinxcontrib-serializinghtml (1.1.5)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing tomli (1.2.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing coverage (6.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing flask (2.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing jwcrypto (1.4.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing mccabe (0.6.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing mistune (0.8.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing mypy-extensions (0.4.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing pathspec (0.9.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing platformdirs (2.4.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing py4j (0.10.9.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing pyflakes (2.4.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing six (1.16.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing sphinx (3.1.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing sqlalchemy (1.4.41)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing pycodestyle (2.8.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing pytest (7.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing typed-ast (1.5.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   CalledProcessError\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   Command '['/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv/bin/python', '-m', 'pip', 'uninstall', 'setuptools', '-y']' returned non-zero exit status 2.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   at /usr/lib/python3.8/subprocess.py:516 in run\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |        512\u2502             # We don't call process.wait() as .__exit__ does that for us.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |        513\u2502             raise\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |        514\u2502         retcode = process.poll()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |        515\u2502         if check and retcode:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |     \u2192  516\u2502             raise CalledProcessError(retcode, process.args,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |        517\u2502                                      output=stdout, stderr=stderr)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |        518\u2502     return CompletedProcess(process.args, retcode, stdout, stderr)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |        519\u2502 \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |        520\u2502 \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | The following error occurred when trying to handle this error:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   EnvCommandError\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   Command ['/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv/bin/python', '-m', 'pip', 'uninstall', 'setuptools', '-y'] errored with the following return code 2\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   Output:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   Found existing installation: setuptools 67.6.1\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   Uninstalling setuptools-67.6.1:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   ERROR: Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   Traceback (most recent call last):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |     File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/shutil.py\", line 566, in move\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       os.rename(src, real_dst)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   OSError: [Errno 18] Invalid cross-device link: '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv/lib/python3.7/site-packages/_distutils_hack/' -> '/tmp/pip-uninstall-znf0i0u7/_distutils_hack'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   During handling of the above exception, another exception occurred:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   Traceback (most recent call last):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |     File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv/lib/python3.7/site-packages/pip/_internal/cli/base_command.py\", line 169, in exc_logging_wrapper\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       status = run_func(*args)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |     File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv/lib/python3.7/site-packages/pip/_internal/commands/uninstall.py\", line 107, in run\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       verbose=self.verbosity > 0,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |     File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv/lib/python3.7/site-packages/pip/_internal/req/req_install.py\", line 680, in uninstall\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       uninstalled_pathset.remove(auto_confirm, verbose)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |     File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv/lib/python3.7/site-packages/pip/_internal/req/req_uninstall.py\", line 381, in remove\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       moved.stash(path)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |     File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv/lib/python3.7/site-packages/pip/_internal/req/req_uninstall.py\", line 272, in stash\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       renames(path, new_path)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |     File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv/lib/python3.7/site-packages/pip/_internal/utils/misc.py\", line 313, in renames\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       shutil.move(old, new)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |     File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/shutil.py\", line 580, in move\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       copy_function(src, real_dst)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |     File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/shutil.py\", line 266, in copy2\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       copyfile(src, dst, follow_symlinks=follow_symlinks)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |     File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/shutil.py\", line 120, in copyfile\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       with open(src, 'rb') as fsrc:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   FileNotFoundError: [Errno 2] No such file or directory: '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv/lib/python3.7/site-packages/_distutils_hack/'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |   at ~/.local/venv/lib/python3.8/site-packages/poetry/utils/env.py:1545 in _run\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       1541\u2502                 return subprocess.call(cmd, stderr=stderr, env=env, **kwargs)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       1542\u2502             else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       1543\u2502                 output = subprocess.check_output(cmd, stderr=stderr, env=env, **kwargs)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       1544\u2502         except CalledProcessError as e:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |     \u2192 1545\u2502             raise EnvCommandError(e, input=input_)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       1546\u2502 \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       1547\u2502         return decode(output)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       1548\u2502 \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   |       1549\u2502     def execute(self, bin: str, *args: str, **kwargs: Any) -> int:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing coverage (6.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing flask (2.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing jwcrypto (1.4.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing mistune (0.8.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing mypy-extensions (0.4.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing mccabe (0.6.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing pathspec (0.9.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing pycodestyle (2.8.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing pyflakes (2.4.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing py4j (0.10.9.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing sphinx (3.1.2)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u274c  Failure - Main Install dependencies\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing typed-ast (1.5.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing pytest (7.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing sqlalchemy (1.4.41)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing six (1.16.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing platformdirs (2.4.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing authlib (1.1.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing autodocsumm (0.1.13)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing black (22.6.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing flake8 (4.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing flask-sqlalchemy (2.5.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing bump2version (1.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing m2r2 (0.2.5)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing ipaddress (1.0.23)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing mock (4.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing nose (1.3.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing parameterized (0.8.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing python-jwt (3.3.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing python-ldap-test (0.3.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing pyhcl (0.4.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing requests-mock (1.10.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing sphinx-rtd-theme (0.5.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing semantic-version (2.10.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   \u2022 Installing pytest-cov (3.0.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ] exitcode '1': failure\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ] \u2b50 Run Post Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/snok-install-poetry@v1.3.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3.3/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing authlib (1.1.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing autodocsumm (0.1.13)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing black (22.6.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing bump2version (1.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing flask-sqlalchemy (2.5.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing ipaddress (1.0.23)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing m2r2 (0.2.5)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing flake8 (4.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing mock (4.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing nose (1.3.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing parameterized (0.8.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing pyhcl (0.4.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing pytest-cov (3.0.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing python-jwt (3.3.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing requests-mock (1.10.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing semantic-version (2.10.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing python-ldap-test (0.3.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   \u2022 Installing sphinx-rtd-theme (0.5.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3.3/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing authlib (1.1.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing autodocsumm (0.1.13)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing black (22.6.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing bump2version (1.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing flask-sqlalchemy (2.5.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing flake8 (4.0.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing ipaddress (1.0.23)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing m2r2 (0.2.5)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing mock (4.0.3)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing nose (1.3.7)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing parameterized (0.8.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing pyhcl (0.4.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing pytest-cov (3.0.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing python-ldap-test (0.3.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing semantic-version (2.10.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing sphinx-rtd-theme (0.5.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing python-jwt (3.3.4)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   \u2022 Installing requests-mock (1.10.0)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2705  Success - Main Install dependencies\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \u2b50 Run Main Install library\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2705  Success - Main Install dependencies\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \u2b50 Run Main Install library\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ]   \u2705  Success - Post Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Installing dependencies from lock file\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Installing dependencies from lock file\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Warning: poetry.lock is not consistent with pyproject.toml. You may be getting improper dependencies. Run `poetry lock [--no-update]` to fix it.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Warning: poetry.lock is not consistent with pyproject.toml. You may be getting improper dependencies. Run `poetry lock [--no-update]` to fix it.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | No dependencies to install or update\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Installing the current project: hvac (1.1.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | No dependencies to install or update\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Installing the current project: hvac (1.1.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2705  Success - Main Install library\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2705  Success - Main Install library\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \u2b50 Run Main Install Vault and Consul (for integration tests)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \u2b50 Run Main pytest tests/unit_tests\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Lint               ] \ud83c\udfc1  Job failed\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2705  Success - Main Install dependencies\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] \u2b50 Run Main Install library\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Warning: apt-key output should not be parsed (stdout is not a terminal)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Installing dependencies from lock file\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Warning: poetry.lock is not consistent with pyproject.toml. You may be getting improper dependencies. Run `poetry lock [--no-update]` to fix it.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | No dependencies to install or update\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Installing the current project: hvac (1.1.1)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2705  Success - Main Install library\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | OK\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | deb [arch=amd64] https://apt.releases.hashicorp.com focal main\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | WARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Get:1 https://apt.releases.hashicorp.com focal InRelease [12.9 kB]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Get:2 https://apt.releases.hashicorp.com focal/main amd64 Packages [110 kB]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Fetched 123 kB in 0s (386 kB/s)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Reading package lists...\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Building dependency tree...\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Reading state information...\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | All packages are up to date.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | WARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] \u2b50 Run Main Install Vault (for doctests)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | ============================= test session starts ==============================\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | plugins: requests-mock-1.10.0, cov-3.0.0\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | collected 280 items / 3 skipped / 277 selected\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/test_adapters.py ...................................... [ 13%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Reading package lists...\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Building dependency tree...\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Reading state information...\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | ........................................................................ [ 39%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | .......                                                                  [ 41%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/test_vault_api_category.py ...                      [ 42%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | The following NEW packages will be installed:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   consul vault-enterprise\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_approle.py ...................... [ 50%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | 0 upgraded, 2 newly installed, 0 to remove and 20 not upgraded.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Need to get 130 MB of archives.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | After this operation, 355 MB of additional disk space will be used.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Get:1 https://apt.releases.hashicorp.com focal/main amd64 consul amd64 1.16.0-1 [61.3 MB]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | ...........                                                              [ 54%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_gcp.py .                          [ 55%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_github.py ..............          [ 60%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_ldap.py ......................    [ 67%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_mfa.py ..........                 [ 71%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_okta.py .                         [ 71%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/secrets_engines/test_aws.py ...                     [ 72%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/secrets_engines/test_gcp.py .                       [ 73%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/secrets_engines/test_kv.py ..................       [ 79%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/v1/test_approle_routes.py ..........................    [ 88%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/v1/test_auth_methods.py ..                              [ 89%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/v1/test_aws_ec2_methods.py ........................     [ 98%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/v1/test_aws_iam_methods.py .                            [ 98%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/v1/test_client.py .                                     [ 98%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/v1/test_gcp_methods.py ..                               [ 99%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/v1/test_system_backend_methods.py .                     [100%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | =============================== warnings summary ===============================\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | .venv/lib/python3.7/site-packages/pluggy/_callers.py:39\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | .venv/lib/python3.7/site-packages/pluggy/_callers.py:39\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | .venv/lib/python3.7/site-packages/pluggy/_callers.py:39\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.venv/lib/python3.7/site-packages/pluggy/_callers.py:39: PytestRemovedIn8Warning: Raising unittest.SkipTest to skip tests during collection is deprecated. Use pytest.skip() instead.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |     res = hook_impl.function(*args)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_mfa.py::TestMfa::test_configure_0_default_mount_point\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_mfa.py::TestMfa::test_configure_1_custom_mount_point\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/tests/unit_tests/api/auth_methods/test_mfa.py:31: DeprecationWarning: Call to deprecated function 'configure'. This method will be removed in version '2.0.0' Please use the 'configure' method on the 'hvac.api.auth_methods.legacy_mfa' class moving forward.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |     mount_point=mount_point,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_mfa.py::TestMfa::test_configure_duo_access_0_default_mount_point\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_mfa.py::TestMfa::test_configure_duo_access_1_custom_mount_point\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/tests/unit_tests/api/auth_methods/test_mfa.py:98: DeprecationWarning: Call to deprecated function 'configure_duo_access'. This method will be removed in version '2.0.0' Please use the 'configure_duo_access' method on the 'hvac.api.auth_methods.legacy_mfa' class moving forward.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |     secret_key=\"supersecret\",\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_mfa.py::TestMfa::test_configure_duo_behavior_0_default_mount_point\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_mfa.py::TestMfa::test_configure_duo_behavior_1_custom_mount_point\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/tests/unit_tests/api/auth_methods/test_mfa.py:124: DeprecationWarning: Call to deprecated function 'configure_duo_behavior'. This method will be removed in version '2.0.0' Please use the 'configure_duo_behavior' method on the 'hvac.api.auth_methods.legacy_mfa' class moving forward.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |     mount_point=mount_point, push_info=\"howdy\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_mfa.py::TestMfa::test_read_configuration_0_default_mount_point\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_mfa.py::TestMfa::test_read_configuration_1_custom_mount_point\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/tests/unit_tests/api/auth_methods/test_mfa.py:69: DeprecationWarning: Call to deprecated function 'read_configuration'. This method will be removed in version '2.0.0' Please use the 'read_configuration' method on the 'hvac.api.auth_methods.legacy_mfa' class moving forward.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |     mount_point=mount_point,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_mfa.py::TestMfa::test_read_duo_behvaior_configuration_0_default_mount_point\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | tests/unit_tests/api/auth_methods/test_mfa.py::TestMfa::test_read_duo_behvaior_configuration_1_custom_mount_point\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/tests/unit_tests/api/auth_methods/test_mfa.py:164: DeprecationWarning: Call to deprecated function 'read_duo_behavior_configuration'. This method will be removed in version '2.0.0' Please use the 'read_duo_behavior_configuration' method on the 'hvac.api.auth_methods.legacy_mfa' class moving forward.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   |     mount_point=mount_point,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/report.xml -\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Coverage XML written to file coverage.xml\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | ================= 280 passed, 3 skipped, 13 warnings in 3.68s ==================\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2705  Success - Main pytest tests/unit_tests\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \u2b50 Run Main Upload unit tests coverage artifacts\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/actions-upload-artifact@v3/ dst=/var/run/act/actions/actions-upload-artifact@v3/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Get:2 https://apt.releases.hashicorp.com focal/main amd64 vault-enterprise amd64 1.6.5+ent [69.0 MB]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-upload-artifact@v3/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Fetched 130 MB in 6s (22.0 MB/s)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Selecting previously unselected package consul.\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Preparing to unpack .../consul_1.16.0-1_amd64.deb ...\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Unpacking consul (1.16.0-1) ...\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Selecting previously unselected package vault-enterprise.\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Preparing to unpack .../vault-enterprise_1.6.5+ent_amd64.deb ...\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Unpacking vault-enterprise (1.6.5+ent) ...\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-upload-artifact@v3/dist/index.js] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Warning: apt-key output should not be parsed (stdout is not a terminal)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Setting up consul (1.16.0-1) ...\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Setting up vault-enterprise (1.6.5+ent) ...\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Generating Vault TLS key and self-signed certificate...\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Generating a RSA private key\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | OK\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | deb [arch=amd64] https://apt.releases.hashicorp.com focal main\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | WARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Get:1 https://apt.releases.hashicorp.com focal InRelease [12.9 kB]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Get:2 https://apt.releases.hashicorp.com focal/main amd64 Packages [110 kB]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Fetched 123 kB in 0s (288 kB/s)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Reading package lists...\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Building dependency tree...\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Reading state information...\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | All packages are up to date.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | WARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ...................................................................................................................................................................................................................................................................................................................................................................................................++++\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | .....................................................................++++\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | writing new private key to 'tls.key'\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | -----\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Vault TLS key and self-signed certificate have been generated in '/opt/vault/tls'.\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Reading package lists...\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2705  Success - Main Install Vault and Consul (for integration tests)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Building dependency tree...\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Reading state information...\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | The following NEW packages will be installed:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   vault-enterprise\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \u2b50 Run Main pytest tests/integration_tests\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | 0 upgraded, 1 newly installed, 0 to remove and 20 not upgraded.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Need to get 73.9 MB of archives.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | After this operation, 209 MB of additional disk space will be used.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Get:1 https://apt.releases.hashicorp.com focal/main amd64 vault-enterprise amd64 1.7.2+ent [73.9 MB]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Fetched 73.9 MB in 3s (26.7 MB/s)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Selecting previously unselected package vault-enterprise.\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Preparing to unpack .../vault-enterprise_1.7.2+ent_amd64.deb ...\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Unpacking vault-enterprise (1.7.2+ent) ...\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Setting up vault-enterprise (1.7.2+ent) ...\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Generating Vault TLS key and self-signed certificate...\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Generating a RSA private key\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | ..........................................................................................................................................................................................................................................++++\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | ...++++\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | writing new private key to 'tls.key'\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | -----\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Vault TLS key and self-signed certificate have been generated in '/opt/vault/tls'.\r\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2705  Success - Main Install Vault (for doctests)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] \u2b50 Run Main Sphinx - doctest Build\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=./docs\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/coverage.xml'\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/coverage.xml was found using the provided searchPath\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | With the provided path, there will be 1 file uploaded\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udcac  ::debug::Root artifact directory is /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Starting artifact upload\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   | Artifact name is valid!\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2757  ::error::Unable to get ACTIONS_RUNTIME_TOKEN env variable\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u274c  Failure - Main Upload unit tests coverage artifacts\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] exitcode '1': failure\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \u2b50 Run Post Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/snok-install-poetry@v1.3.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3.3/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3.3/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Running Sphinx v3.1.2\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | making output directory... done\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | building [mo]: all of 0 po files\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | building [doctest]: all source files\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | updating environment: [new config] 55 added, 0 changed, 0 removed\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [  1%] advanced_usage\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [  3%] changelog\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [  5%] contributing\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [  7%] index\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [  9%] overview\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ============================= test session starts ==============================\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | platform linux -- Python 3.7.11, pytest-7.0.1, pluggy-1.0.0\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | plugins: requests-mock-1.10.0, cov-3.0.0\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | collected 619 items\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_approle.py EEEEEEEEEEEEEEE [  2%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 10%] source/hvac_adapters\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | EEEEE                                                                    [  3%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 12%] source/hvac_api\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 14%] source/hvac_api_auth_methods\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_azure.py ................. [  5%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ..                                                                       [  6%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_cert.py .................. [  9%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ..........                                                               [ 10%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 16%] source/hvac_api_secrets_engines\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_gcp.py ................... [ 13%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ..                                                                       [ 14%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_github.py ................ [ 16%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ....                                                                     [ 17%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 18%] source/hvac_api_system_backend\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_jwt.py .......             [ 18%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 20%] source/hvac_aws_utils\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 21%] source/hvac_exceptions\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 23%] source/hvac_utils\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 25%] source/hvac_v1\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_kubernetes.py ............ [ 20%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 27%] source/index\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 29%] usage/auth_methods/approle\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 30%] usage/auth_methods/aws\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 32%] usage/auth_methods/azure\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 34%] usage/auth_methods/gcp\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 36%] usage/auth_methods/github\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 38%] usage/auth_methods/index\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 40%] usage/auth_methods/jwt-oidc\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 41%] usage/auth_methods/kubernetes\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 43%] usage/auth_methods/ldap\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ......                                                                   [ 21%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 45%] usage/auth_methods/mfa\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 47%] usage/auth_methods/okta\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 49%] usage/auth_methods/token\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 50%] usage/auth_methods/userpass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 52%] usage/index\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 54%] usage/secrets_engines/activedirectory\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 56%] usage/secrets_engines/aws\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 58%] usage/secrets_engines/azure\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 60%] usage/secrets_engines/gcp\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 61%] usage/secrets_engines/identity\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 63%] usage/secrets_engines/index\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 65%] usage/secrets_engines/kv\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 67%] usage/secrets_engines/kv_v1\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 69%] usage/secrets_engines/kv_v2\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 70%] usage/secrets_engines/pki\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | reading sources... [ 72%] usage/secrets_engines/transform\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Exception occurred:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |   File \"/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/tests/utils/server_manager.py\", line 51, in start\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   |     raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | The full traceback has been saved in /tmp/sphinx-err-7x4osdv0.log, if you want to report the issue to the developers.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | Please also report this if it was a user error, so that a better error message can be provided next time.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | A bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks!\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   | make: *** [Makefile:20: doctest] Error 2\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u274c  Failure - Main Sphinx - doctest Build\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] exitcode '2': failure\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] \u2b50 Run Post Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/snok-install-poetry@v1.3.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3.3/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3.3/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_ldap.py .................. [ 24%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | .......s.....                                                            [ 26%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_legacy_mfa.py ..........   [ 28%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_oidc.py .......            [ 29%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_okta.py .................. [ 32%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | .                                                                        [ 32%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_token.py .............     [ 34%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_aws.py ..........       [ 36%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_azure.py ....           [ 36%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_gcp.py .                [ 36%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_identity.py ........... [ 38%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ]   \u2705  Success - Post Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests]   \u2705  Success - Post Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ........................................................................ [ 50%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ..........                                                               [ 51%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_kv_v1.py ............   [ 53%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_kv_v2.py .............. [ 56%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ...................................................................s..   [ 67%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Unit Tests         ] \ud83c\udfc1  Job failed\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Documentation Tests] \ud83c\udfc1  Job failed\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_pki.py ................ [ 69%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ..........                                                               [ 71%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_ssh.py ...............  [ 73%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_transform.py .ss..s.... [ 75%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ...........                                                              [ 77%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_transit.py ............ [ 79%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | .................................                                        [ 84%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/system_backend/test_audit.py ...             [ 85%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/system_backend/test_auth.py ..               [ 85%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/system_backend/test_health.py .ssss.         [ 86%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/system_backend/test_init.py .                [ 86%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/system_backend/test_key.py ......            [ 87%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/system_backend/test_leader.py .              [ 87%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/system_backend/test_lease.py .....           [ 88%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/system_backend/test_mount.py ..              [ 88%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/system_backend/test_namespace.py .           [ 89%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/system_backend/test_policy.py ....           [ 89%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/system_backend/test_seal.py ..               [ 89%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/system_backend/test_wrapping.py .            [ 90%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/v1/test_approle.py ........                      [ 91%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/v1/test_integration.py ......................... [ 95%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                                                                          [ 95%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/v1/test_system_backend.py ...................... [ 99%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ......                                                                   [100%]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ==================================== ERRORS ====================================\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ ERROR at setup of TestAppRole.test_create_custom_secret_id_0_good_request_no_metadata _\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ------------------------------ Captured log setup ------------------------------\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | WARNING  root:hvac_integration_test_case.py:34 Unable to run Vault in HA mode, enterprise Vault version not currently supported.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ ERROR at setup of TestAppRole.test_create_custom_secret_id_1_good_request_good_metadata _\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ ERROR at setup of TestAppRole.test_create_custom_secret_id_2_good_request_good_metadata _\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ ERROR at setup of TestAppRole.test_create_custom_secret_id_3_bad_metadata_option _\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ ERROR at setup of TestAppRole.test_create_or_update_approle_0_create_test_role _\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ ERROR at setup of TestAppRole.test_create_or_update_approle_1_bad_token_type _\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ________________ ERROR at setup of TestAppRole.test_delete_role ________________\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _____________ ERROR at setup of TestAppRole.test_destroy_secret_id _____________\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ________ ERROR at setup of TestAppRole.test_destroy_secret_id_accessor _________\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ ERROR at setup of TestAppRole.test_generate_secret_id_0_good_request_no_metadata _\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ ERROR at setup of TestAppRole.test_generate_secret_id_1_good_request_good_metadata _\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ ERROR at setup of TestAppRole.test_generate_secret_id_2_good_request_good_metadata _\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ ERROR at setup of TestAppRole.test_generate_secret_id_3_bad_metadata_option __\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ________________ ERROR at setup of TestAppRole.test_list_roles _________________\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _________ ERROR at setup of TestAppRole.test_list_secret_id_accessors __________\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ___________________ ERROR at setup of TestAppRole.test_login ___________________\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _________________ ERROR at setup of TestAppRole.test_read_role _________________\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _______________ ERROR at setup of TestAppRole.test_read_role_id ________________\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ______________ ERROR at setup of TestAppRole.test_read_secret_id _______________\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | __________ ERROR at setup of TestAppRole.test_read_secret_id_accessor __________\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | cls = <class 'tests.integration_tests.api.auth_methods.test_approle.TestAppRole'>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     @classmethod\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def setUpClass(cls):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Use the ServerManager class to launch a vault server process.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         config_paths = [get_config_file_path(\"vault-tls.hcl\")]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"consul\") is None and cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, consul binary not found in path.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if is_enterprise():\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             # TODO: figure out why this bit isn't working\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             logging.warning(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 \"Unable to run Vault in HA mode, enterprise Vault version not currently supported.\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             cls.enable_vault_ha = False\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if cls.enable_vault_ha:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths = [\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node1.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |                 get_config_file_path(\"vault-ha-node2.hcl\"),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             ]\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         cls.manager = ServerManager(\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             config_paths=config_paths,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             client=create_client(),\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             use_consul=cls.enable_vault_ha,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         )\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           cls.manager.start()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/hvac_integration_test_case.py:48: \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | self = <tests.utils.server_manager.ServerManager object at 0x7f547ba33a90>\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     def start(self):\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         \"\"\"Launch the vault server process and wait until its online and ready.\"\"\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if self.use_consul:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.start_consul()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         if distutils.spawn.find_executable(\"vault\") is None:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             raise SkipTest(\"Vault executable not found\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If a vault server is already running then we won't be able to start another one.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         # If we can't start our vault server then we don't know what we're testing against.\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         try:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             self.client.sys.is_initialized()\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         except Exception:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |             pass\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |         else:\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | >           raise Exception(\"Vault server already running\")\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | E           Exception: Vault server already running\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/utils/server_manager.py:51: Exception\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | =============================== warnings summary ===============================\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_cert.py::TestCert::test_create_ca_certificate_with_filename_deprecated\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/auth_methods/test_cert.py::TestCertEnv::test_create_ca_certificate_with_filename_deprecated\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/hvac/api/auth_methods/cert.py:121: UserWarning: Passing a certificate file path to `certificate` is deprecated and will be removed in v3.0.0;use `certificate_file` instead. (See https://github.com/hvac/hvac/issues/914)\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     \"Passing a certificate file path to `certificate` is deprecated and will be removed in v3.0.0;\"\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_kv_v2.py::TestKvV2::test_patch_0_add_new_key_to_existing_secret\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_kv_v2.py::TestKvV2::test_patch_1_add_new_key_to_nonexistent_secret\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_kv_v2.py::TestKvV2::test_patch_2_update_existing_key_on_existing_secret\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/hvac/api/secrets_engines/kv_v2.py:226: DeprecationWarning: The raise_on_deleted parameter will change its default value to False in hvac v3.0.0. The current default of True will presere previous behavior. To use the old behavior with no warning, explicitly set this value to True. See https://github.com/hvac/hvac/pull/907\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     mount_point=mount_point,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_kv_v2.py::TestKvV2::test_patch_0_add_new_key_to_existing_secret\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_kv_v2.py::TestKvV2::test_patch_2_update_existing_key_on_existing_secret\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/tests/integration_tests/api/secrets_engines/test_kv_v2.py:271: DeprecationWarning: The raise_on_deleted parameter will change its default value to False in hvac v3.0.0. The current default of True will presere previous behavior. To use the old behavior with no warning, explicitly set this value to True. See https://github.com/hvac/hvac/pull/907\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     mount_point=mount_point,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_kv_v2.py::TestKvV2::test_read_secret_version_0_nonexistent_secret\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/tests/integration_tests/api/secrets_engines/test_kv_v2.py:118: DeprecationWarning: The raise_on_deleted parameter will change its default value to False in hvac v3.0.0. The current default of True will presere previous behavior. To use the old behavior with no warning, explicitly set this value to True. See https://github.com/hvac/hvac/pull/907\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     mount_point=self.DEFAULT_MOUNT_POINT,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_kv_v2.py::TestKvV2::test_read_secret_version_1_read_secret_version_2_back\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_kv_v2.py::TestKvV2::test_read_secret_version_2_read_secret_version_1_back\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_kv_v2.py::TestKvV2::test_read_secret_version_3_read_current_secret_version\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | tests/integration_tests/api/secrets_engines/test_kv_v2.py::TestKvV2::test_read_secret_version_4_read_current_secret_version\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/tests/integration_tests/api/secrets_engines/test_kv_v2.py:124: DeprecationWarning: The raise_on_deleted parameter will change its default value to False in hvac v3.0.0. The current default of True will presere previous behavior. To use the old behavior with no warning, explicitly set this value to True. See https://github.com/hvac/hvac/pull/907\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   |     mount_point=self.DEFAULT_MOUNT_POINT,\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/report.xml -\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | Coverage XML written to file coverage.xml\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | \n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | =========================== short test summary info ============================\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_create_custom_secret_id_0_good_request_no_metadata\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_create_custom_secret_id_1_good_request_good_metadata\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_create_custom_secret_id_2_good_request_good_metadata\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_create_custom_secret_id_3_bad_metadata_option\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_create_or_update_approle_0_create_test_role\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_create_or_update_approle_1_bad_token_type\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_delete_role\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_destroy_secret_id\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_destroy_secret_id_accessor\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_generate_secret_id_0_good_request_no_metadata\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_generate_secret_id_1_good_request_good_metadata\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_generate_secret_id_2_good_request_good_metadata\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_generate_secret_id_3_bad_metadata_option\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_list_roles\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_list_secret_id_accessors\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_login\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_read_role\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_read_role_id\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_read_secret_id\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ERROR tests/integration_tests/api/auth_methods/test_approle.py::TestAppRole::test_read_secret_id_accessor\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   | ====== 590 passed, 9 skipped, 12 warnings, 20 errors in 110.65s (0:01:50) ======\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u274c  Failure - Main pytest tests/integration_tests\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] exitcode '1': failure\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \u2b50 Run Post Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/0cb87827-2991-47c4-b4a5-5a585d44c6f3/act/snok-install-poetry@v1.3.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3.3/\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3.3/] user=0 workdir=\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ]   \u2705  Success - Post Install Poetry\n[2f8015fb-cb47-41b6-81af-713f92ef7dc1/Integration Tests  ] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Documentation Tests' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/hvac-hvac/.github/workflows/lint-and-test-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 436.59694361686707
    }
}