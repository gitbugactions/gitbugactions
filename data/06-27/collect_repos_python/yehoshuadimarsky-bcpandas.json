{
    "repository": "yehoshuadimarsky/bcpandas",
    "stars": 100,
    "language": "python",
    "size": 775,
    "clone_url": "https://github.com/yehoshuadimarsky/bcpandas.git",
    "timestamp": "2023-06-28T14:11:28.107577Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8] \ud83d\ude80  Start image=crawlergpt:latest\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/yehoshuadimarsky-bcpandas] user=0 workdir=\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8] \u2b50 Run Pre Install poetry\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2705  Success - Pre Install poetry\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8] \ud83e\uddea  Matrix: map[python-version:3.8]\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8] \u2b50 Run Main Checkout\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2705  Success - Main Checkout\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8] \u2b50 Run Main Set up Python\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker cp src=/tmp/act-cache/14fb26b7-e082-40c5-8f83-080b280ca1b3/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2753  ::group::Installed versions\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::isExplicit: \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::explicit? false\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::evaluating 6 versions\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::matched: 3.8.11\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Successfully set up CPython (3.8.11)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2753  ::endgroup::\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2705  Success - Main Set up Python\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::set-output:: python-version=3.8.11\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8] \u2b50 Run Main Install poetry\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker cp src=/tmp/act-cache/14fb26b7-e082-40c5-8f83-080b280ca1b3/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8] \u2b50 Run Main Install and configure Poetry\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Retrieving Poetry metadata\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | # Welcome to Poetry!\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | This will download and install the latest version of Poetry,\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | a dependency and package manager for Python.\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | /home/runneradmin/.local/bin\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | You can uninstall at any time by executing this script with the --uninstall option,\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | and these changes will be reverted.\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Installing Poetry (1.5.1)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Installing Poetry (1.5.1): Creating environment\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Installing Poetry (1.5.1): Installing Poetry\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Installing Poetry (1.5.1): Creating script\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Installing Poetry (1.5.1): Done\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Poetry (1.5.1) is installed now. Great!\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | environment variable.\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | You can test that everything is set up by executing:\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | `poetry --version`\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \u001b[33mDone \u2705\u001b[0m\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2705  Success - Main Install and configure Poetry\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2705  Success - Main Install poetry\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8] \u2b50 Run Main Install dependencies\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Creating virtualenv bcpandas-3zTF3W0T-py3.8 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Installing dependencies from lock file\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Package operations: 52 installs, 0 updates, 0 removals\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing six (1.16.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing asttokens (2.2.1)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing attrs (22.2.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing certifi (2022.12.7)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing charset-normalizer (2.0.12)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing exceptiongroup (1.1.1)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing idna (3.4)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing executing (1.2.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing iniconfig (2.0.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing numpy (1.24.2)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing packaging (23.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing parso (0.8.3)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing pluggy (1.0.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing ptyprocess (0.7.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing pure-eval (0.2.2)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing tomli (2.0.1)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing traitlets (5.9.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing urllib3 (1.26.15)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing wcwidth (0.2.6)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing backcall (0.2.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing contourpy (1.0.7)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing cycler (0.11.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing coverage (7.2.3)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing decorator (5.1.1)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing greenlet (2.0.2)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing kiwisolver (1.4.4)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing pexpect (4.8.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing pickleshare (0.7.5)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing pillow (9.5.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing pygments (2.14.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing pyparsing (3.0.9)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing pytest (7.2.1)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing prompt-toolkit (3.0.38)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing python-dateutil (2.8.2)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing matplotlib-inline (0.1.6)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing requests (2.31.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing sortedcontainers (2.4.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing pytz (2023.3)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing fonttools (4.39.3)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing jedi (0.18.2)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing tzdata (2023.3)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing stack-data (0.6.2)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing websocket-client (1.5.1)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing codetiming (1.4.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing docker (6.0.1)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing hypothesis (6.64.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing matplotlib (3.6.3)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing pandas (2.0.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing ipython (8.10.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing pyodbc (4.0.35)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing pytest-cov (4.0.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   |   \u2022 Installing sqlalchemy (1.4.47)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | \n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Installing the current project: bcpandas (0.0.0)\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2705  Success - Main Install dependencies\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8] \u2b50 Run Main Pull MSSQL server Docker image\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/images/create?fromImage=mcr.microsoft.com%2Fmssql%2Fserver&tag=2022-latest\": dial unix /var/run/docker.sock: connect: permission denied\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u274c  Failure - Main Pull MSSQL server Docker image\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8] exitcode '1': failure\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8] \u2b50 Run Post Install poetry\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker cp src=/tmp/act-cache/14fb26b7-e082-40c5-8f83-080b280ca1b3/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8]   \u2705  Success - Post Install poetry\n[bd367c32-83c2-4e5a-8080-eda6d4191866/Run Tests - Python 3.8] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Run Tests - Python ${{ matrix.python-version }}' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/yehoshuadimarsky-bcpandas/.github/workflows/ci-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 284.01020908355713
    }
}