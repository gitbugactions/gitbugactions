{
    "repository": "AlexandreDecan/sismic",
    "stars": 125,
    "language": "python",
    "size": 3141,
    "clone_url": "https://github.com/AlexandreDecan/sismic.git",
    "timestamp": "2023-07-01T10:38:50.571410Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_bdd",
                "name": "test_elevator[no contract]",
                "time": 0.217,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd",
                "name": "test_elevator[contract]",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestMicrowave",
                "name": "test_microwave[no contract]",
                "time": 0.172,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestMicrowave",
                "name": "test_microwave[contract]",
                "time": 0.188,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestMicrowave",
                "name": "test_microwave_with_properties[no contract]",
                "time": 0.523,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestMicrowave",
                "name": "test_microwave_with_properties[contract]",
                "time": 0.507,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestMicrowave",
                "name": "test_microwave_with_steps[no contract]",
                "time": 0.531,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestMicrowave",
                "name": "test_microwave_with_steps[contract]",
                "time": 0.481,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestMicrowave",
                "name": "test_microwave_with_steps_and_properties[no contract]",
                "time": 1.766,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestMicrowave",
                "name": "test_microwave_with_steps_and_properties[contract]",
                "time": 1.142,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd",
                "name": "test_cli",
                "time": 1.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_do_nothing",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_repeat_step",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_send_event",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_send_event_with_parameter",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_wait",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_state_is_entered",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_state_is_not_entered",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_state_is_exited",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_state_is_not_exited",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_state_is_active",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_state_is_not_active",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_event_is_fired",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_event_is_fired_with_parameter",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_event_is_not_fired",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_no_event_is_fired",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_variable_equals",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_variable_does_not_equal",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_final_configuration",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bdd.TestSteps",
                "name": "test_not_final_configuration",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_clock.TestSimulatedClock",
                "name": "test_initial_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_clock.TestSimulatedClock",
                "name": "test_manual_increment",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_clock.TestSimulatedClock",
                "name": "test_monotonicity",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_clock.TestSimulatedClock",
                "name": "test_automatic_increment",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_clock.TestSimulatedClock",
                "name": "test_increment",
                "time": 0.117,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_clock.TestSimulatedClock",
                "name": "test_speed_with_manual",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_clock.TestSimulatedClock",
                "name": "test_speed_with_automatic",
                "time": 0.203,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_clock.TestSimulatedClock",
                "name": "test_start_stop",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_clock.TestUtcClock",
                "name": "test_increase",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_clock.TestSynchronizedClock",
                "name": "test_init",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_clock.TestSynchronizedClock",
                "name": "test_sync",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_clock.TestSynchronizedClock",
                "name": "test_no_sync_with_clock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code",
                "name": "test_dummy_evaluator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code",
                "name": "test_frozen_context",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code.TestPythonEvaluator",
                "name": "test_condition",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code.TestPythonEvaluator",
                "name": "test_condition_on_event",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code.TestPythonEvaluator",
                "name": "test_setdefault",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code.TestPythonEvaluator",
                "name": "test_execution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code.TestPythonEvaluator",
                "name": "test_invalid_condition",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code.TestPythonEvaluator",
                "name": "test_invalid_action",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code.TestPythonEvaluator",
                "name": "test_send",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code.TestPythonEvaluator",
                "name": "test_send_with_delay",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code.TestPythonEvaluator",
                "name": "test_notify",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code.TestPythonEvaluator",
                "name": "test_no_event_raised_by_preamble",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code.TestPythonEvaluator",
                "name": "test_add_variable_in_context",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_code.TestPythonEvaluator",
                "name": "test_access_outer_scope",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_no_error[no contract]",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_no_error[contract]",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_state_precondition[no contract]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_state_precondition[contract]",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_state_postcondition[no contract]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_state_postcondition[contract]",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_state_invariant[no contract]",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_state_invariant[contract]",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_transition_precondition[no contract]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_transition_precondition[contract]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_transition_postcondition[no contract]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_transition_postcondition[contract]",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_do_not_raise[no contract]",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contract",
                "name": "test_do_not_raise[contract]",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_writer",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestElevator",
                "name": "test_init[no contract]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestElevator",
                "name": "test_init[contract]",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestElevator",
                "name": "test_floor_selection[no contract]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestElevator",
                "name": "test_floor_selection[contract]",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestElevator",
                "name": "test_floor_selected_and_reached[no contract]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestElevator",
                "name": "test_floor_selected_and_reached[contract]",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestRemoteElevator",
                "name": "test_button[no contract]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestRemoteElevator",
                "name": "test_button[contract]",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestRemoteElevator",
                "name": "test_button_0_on_groundfloor[no contract]",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestRemoteElevator",
                "name": "test_button_0_on_groundfloor[contract]",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestMicrowave",
                "name": "test_lamp_on[no contract]",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestMicrowave",
                "name": "test_lamp_on[contract]",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestMicrowave",
                "name": "test_heating_on[no contract]",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples.TestMicrowave",
                "name": "test_heating_on[contract]",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithSimple",
                "name": "test_init",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithSimple",
                "name": "test_time",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithSimple",
                "name": "test_deprecated_time",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithSimple",
                "name": "test_queue",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithSimple",
                "name": "test_simple_configuration",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithSimple",
                "name": "test_simple_entered",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithSimple",
                "name": "test_simple_final",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithInternal",
                "name": "test_sent",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithInternal",
                "name": "test_internal_before_external",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithInternal",
                "name": "test_active_guard",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithFinal",
                "name": "test_not_final",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithFinal",
                "name": "test_root_when_not_final",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithFinal",
                "name": "test_when_root_child_is_final",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithFinal",
                "name": "test_when_root_child_is_not_final",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithFinal",
                "name": "test_when_nested_child_is_final",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithFinal",
                "name": "test_with_parallel_states",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithNonDeterministic",
                "name": "test_nondeterminism",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithHistory",
                "name": "test_memory",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithHistory",
                "name": "test_resume_memory",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithHistory",
                "name": "test_after_memory",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithDeephistory",
                "name": "test_deep_memory",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithDeephistory",
                "name": "test_entered_order",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithDeephistory",
                "name": "test_exited_order",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithInfinite",
                "name": "test_three_steps",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithInfinite",
                "name": "test_auto_three_steps",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithInfinite",
                "name": "test_auto_stop",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithParallel",
                "name": "test_concurrent_transitions",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithParallel",
                "name": "test_concurrent_transitions_nested_target",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithParallel",
                "name": "test_unnested_transitions",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithParallel",
                "name": "test_unnested_transitions_2",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithParallel",
                "name": "test_conflicting_transitions",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithParallel",
                "name": "test_conflicting_transitions_2",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithNestedParallel",
                "name": "test_initial",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithNestedParallel",
                "name": "test_parallel_order",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithNestedParallel",
                "name": "test_partial_parallel_order",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithNestedParallel",
                "name": "test_partial_unnested_transition",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterWithNestedParallel",
                "name": "test_name_order",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestTransitionPriority",
                "name": "test_high_has_priority",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestTransitionPriority",
                "name": "test_eventless_first",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestTransitionPriority",
                "name": "test_conflicting_priorities",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestTransitionPriority",
                "name": "test_event_high_has_priority",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestLogTrace",
                "name": "test_empty_trace[no contract]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestLogTrace",
                "name": "test_empty_trace[contract]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestLogTrace",
                "name": "test_nonempty_trace[no contract]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestLogTrace",
                "name": "test_nonempty_trace[contract]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestLogTrace",
                "name": "test_log_content[no contract]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestLogTrace",
                "name": "test_log_content[contract]",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter",
                "name": "test_run_in_background[no contract]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter",
                "name": "test_run_in_background[contract]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestCoverageFromTrace",
                "name": "test_empty_trace",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestCoverageFromTrace",
                "name": "test_single_step",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestCoverageFromTrace",
                "name": "test_multiple_steps",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterBinding",
                "name": "test_bind",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterBinding",
                "name": "test_bind_callable",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterBinding",
                "name": "test_metaevent",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestInterpreterBinding",
                "name": "test_event",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter",
                "name": "test_interpreter_is_serialisable[no contract]",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter",
                "name": "test_interpreter_is_serialisable[contract]",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestEventQueue",
                "name": "test_delay",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestEventQueue",
                "name": "test_consume_order",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interpreter.TestEventQueue",
                "name": "test_internal_first",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io",
                "name": "test_yaml_parser_types_handling[1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io",
                "name": "test_yaml_parser_types_handling[-1]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io",
                "name": "test_yaml_parser_types_handling[1.0]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io",
                "name": "test_yaml_parser_types_handling[yes]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io",
                "name": "test_yaml_parser_types_handling[True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io",
                "name": "test_yaml_parser_types_handling[no]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io",
                "name": "test_yaml_parser_types_handling[]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io",
                "name": "test_yaml_parser_types_handling[data7]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io",
                "name": "test_yaml_parser_types_handling[data8]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io",
                "name": "test_yaml_parser_types_handling[data9]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io",
                "name": "test_yaml_parser_types_handling[data10]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io",
                "name": "test_import_from_yaml_args",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[actions]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[composite]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[history]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[deep_history]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[final]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[infinite]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[internal]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[priority]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[nested_parallel]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[nondeterministic]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[parallel]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[simple]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_tests[timer]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_docs[elevator/elevator]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_docs[elevator/elevator_contract]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_docs[microwave/microwave]",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_docs[elevator/tester_elevator_7th_floor_never_reached]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_docs[elevator/tester_elevator_moves_after_10s]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_import_example_from_docs[writer_options]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_transitions_to_unknown_state",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_history_not_in_compound",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestImportFromYaml",
                "name": "test_declare_both_states_and_parallel_states",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[actions]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[composite]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[history]",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[deep_history]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[final]",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[infinite]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[internal]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[priority]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[nested_parallel]",
                "time": 0.116,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[nondeterministic]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[parallel]",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[simple]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_tests[timer]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_docs[elevator/elevator]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_docs[elevator/elevator_contract]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_docs[microwave/microwave]",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_docs[elevator/tester_elevator_7th_floor_never_reached]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_docs[elevator/tester_elevator_moves_after_10s]",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_export_example_from_docs[writer_options]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[actions]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[composite]",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[history]",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[deep_history]",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[final]",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[infinite]",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[internal]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[priority]",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[nested_parallel]",
                "time": 0.174,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[nondeterministic]",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[parallel]",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[simple]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_tests[timer]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_docs[elevator/elevator]",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_docs[elevator/elevator_contract]",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_docs[microwave/microwave]",
                "time": 0.11,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_docs[elevator/tester_elevator_7th_floor_never_reached]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_docs[elevator/tester_elevator_moves_after_10s]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_validity_for_example_from_docs[writer_options]",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[actions]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[composite]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[history]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[deep_history]",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[final]",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[infinite]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[internal]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[priority]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[nested_parallel]",
                "time": 0.144,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[nondeterministic]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[parallel]",
                "time": 0.119,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[simple]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_tests[timer]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_docs[elevator/elevator]",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_docs[elevator/elevator_contract]",
                "time": 0.118,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_docs[microwave/microwave]",
                "time": 0.123,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_docs[elevator/tester_elevator_7th_floor_never_reached]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_docs[elevator/tester_elevator_moves_after_10s]",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToYaml",
                "name": "test_identity_for_example_from_docs[writer_options]",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[actions]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[composite]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[history]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[deep_history]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[final]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[infinite]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[internal]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[priority]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[nested_parallel]",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[nondeterministic]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[parallel]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[simple]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_tests[timer]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_docs[elevator/elevator]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_docs[elevator/elevator_contract]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_docs[microwave/microwave]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_docs[elevator/tester_elevator_7th_floor_never_reached]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_docs[elevator/tester_elevator_moves_after_10s]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_example_from_docs[writer_options]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_based_on_filepath[no contract]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_export_based_on_filepath[contract]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io.TestExportToPlantUML",
                "name": "test_cli",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestEvents",
                "name": "test_create_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestEvents",
                "name": "test_empty_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestEvents",
                "name": "test_truth_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestEvents",
                "name": "test_parametrized_events",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestEvents",
                "name": "test_cannot_use_name_as_parameter",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartTraveral",
                "name": "test_parent",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartTraveral",
                "name": "test_children",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartTraveral",
                "name": "test_ancestors",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartTraveral",
                "name": "test_descendants",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartTraveral",
                "name": "test_depth",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartTraveral",
                "name": "test_lca",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartTraveral",
                "name": "test_leaf",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartTraveral",
                "name": "test_events_for",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartTraveral",
                "name": "test_name_collision",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartTraveral",
                "name": "test_name_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartTraveral",
                "name": "test_root_already_defined",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartValidate",
                "name": "test_history_memory_is_not_a_child",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartValidate",
                "name": "test_history_memory_unknown",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartValidate",
                "name": "test_history_memory_self",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartValidate",
                "name": "test_compound_initial_not_a_child",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartValidate",
                "name": "test_compound_initial_unknown",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestTransition",
                "name": "test_transitions_from",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestTransition",
                "name": "test_transitions_to",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestTransition",
                "name": "test_transitions_with",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestTransition",
                "name": "test_add_transition",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestTransition",
                "name": "test_rotate_source",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestTransition",
                "name": "test_rotate_target",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestTransition",
                "name": "test_rotate_both",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestTransition",
                "name": "test_rotate_both_unexisting",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestTransition",
                "name": "test_rotate_both_with_internal",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestTransition",
                "name": "test_remove_existing_transition",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestTransition",
                "name": "test_remove_unexisting_transition",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_remove_existing_state",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_remove_unregister_parent_children",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_remove_unexisting_state",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_remove_root_state",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_remove_nested_states",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_remove_nested_states_continued",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_rename_unexisting_state",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_do_not_change_name",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_rename_to_an_existing_state",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_rename_old_disappears",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_rename_change_state_name",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_rename_new_appears",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_rename_adapt_transitions",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_rename_root",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_rename_change_initial",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_rename_change_memory",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_move_simple",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_move_composite",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_move_to_descendant",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_move_unexisting",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_move_with_initial",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestStatechartStates",
                "name": "test_move_with_memory",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestCopyFromStatechart",
                "name": "test_keep_other_states",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestCopyFromStatechart",
                "name": "test_keep_other_transitions",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestCopyFromStatechart",
                "name": "test_keep_existing_states",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestCopyFromStatechart",
                "name": "test_keep_existing_transitions",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestCopyFromStatechart",
                "name": "test_orphaned_transitions",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestCopyFromStatechart",
                "name": "test_non_duplicated_transitions",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestCopyFromStatechart",
                "name": "test_invalid_plug",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestCopyFromStatechart",
                "name": "test_with_namespace",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_model.TestCopyFromStatechart",
                "name": "test_conflicting_names",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_deprecated_interpreter[no contract]",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_deprecated_interpreter[contract]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_synchronised_time[no contract]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_synchronised_time[contract]",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_empty_step[no contract]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_empty_step[contract]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_event_sent[no contract]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_event_sent[contract]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_meta_event_sent[no contract]",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_meta_event_sent[contract]",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_trace[no contract]",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_trace[contract]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_final[no contract]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_property.TestInterpreterMetaEvents",
                "name": "test_final[contract]",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runner.TestAsyncRunner",
                "name": "test_not_yet_started",
                "time": 2.656,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runner.TestAsyncRunner",
                "name": "test_start",
                "time": 2.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runner.TestAsyncRunner",
                "name": "test_restart_stopped",
                "time": 1.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runner.TestAsyncRunner",
                "name": "test_start_again",
                "time": 0.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runner.TestAsyncRunner",
                "name": "test_hooks",
                "time": 0.902,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runner.TestAsyncRunner",
                "name": "test_final",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runner.TestAsyncRunner",
                "name": "test_pause",
                "time": 1.944,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runner.TestAsyncRunner",
                "name": "test_state",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runner.TestAsyncRunner",
                "name": "test_join_stopped",
                "time": 0.199,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[5da0cb69-0706-490a-a050-dfda4f667c06/test] \ud83d\ude80  Start image=crawlergpt:latest\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic] user=0 workdir=\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[5da0cb69-0706-490a-a050-dfda4f667c06/test] \ud83e\uddea  Matrix: map[python-version:3.7]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test] \u2b50 Run Main actions/checkout@v3\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2705  Success - Main actions/checkout@v3\n[5da0cb69-0706-490a-a050-dfda4f667c06/test] \u2b50 Run Main Set up Python\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/77c5c867-bc05-442c-adea-67b8228c9676/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2753  ::group::Installed versions\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::isExplicit: \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::explicit? false\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::explicit? true\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::explicit? true\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::explicit? true\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::explicit? true\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::explicit? true\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::explicit? true\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::matched: 3.7.11\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Successfully set up CPython (3.7.11)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2753  ::endgroup::\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2705  Success - Main Set up Python\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2699  ::set-output:: python-version=3.7.11\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[5da0cb69-0706-490a-a050-dfda4f667c06/test] \u2b50 Run Main Install dependencies\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting pip\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Installing collected packages: pip\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Attempting uninstall: pip\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     Found existing installation: pip 21.2.4\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     Uninstalling pip-21.2.4:\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |       Successfully uninstalled pip-21.2.4\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Successfully installed pip-23.1.2\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Installing build dependencies: started\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Installing build dependencies: finished with status 'done'\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Checking if build backend supports build_editable: started\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Checking if build backend supports build_editable: finished with status 'done'\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Getting requirements to build editable: started\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Getting requirements to build editable: finished with status 'done'\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Preparing editable metadata (pyproject.toml): started\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting ruamel.yaml>=0.12.10 (from sismic==1.6.5)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading ruamel.yaml-0.17.32-py3-none-any.whl (112 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 112.2/112.2 kB 1.2 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting schema>=0.5.0 (from sismic==1.6.5)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading schema-0.7.5-py2.py3-none-any.whl (17 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting behave>=1.2.6 (from sismic==1.6.5)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading behave-1.2.6-py2.py3-none-any.whl (136 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 136.8/136.8 kB 10.7 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting parse>=1.8.2 (from behave>=1.2.6->sismic==1.6.5)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading parse-1.19.1-py2.py3-none-any.whl (18 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting parse-type>=0.4.2 (from behave>=1.2.6->sismic==1.6.5)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading parse_type-0.6.0-py2.py3-none-any.whl (32 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting six>=1.11 (from behave>=1.2.6->sismic==1.6.5)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting ruamel.yaml.clib>=0.2.7 (from ruamel.yaml>=0.12.10->sismic==1.6.5)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading ruamel.yaml.clib-0.2.7-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (500 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 500.1/500.1 kB 22.9 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting contextlib2>=0.5.5 (from schema>=0.5.0->sismic==1.6.5)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading contextlib2-21.6.0-py2.py3-none-any.whl (13 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Building wheels for collected packages: sismic\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Building editable for sismic (pyproject.toml): started\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Building editable for sismic (pyproject.toml): finished with status 'done'\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Created wheel for sismic: filename=sismic-1.6.5-0.editable-py3-none-any.whl size=8520 sha256=e25075a10a716fa71c2db3400de702ed25e13383976bb7af8ebe825fa28a40db\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-g16q374m/wheels/a2/78/44/dc01ec764ec8608ba48a4ebdf8bf4ad77c0f50a4eb7a367006\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Successfully built sismic\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Installing collected packages: six, ruamel.yaml.clib, parse, contextlib2, schema, ruamel.yaml, parse-type, behave, sismic\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Successfully installed behave-1.2.6 contextlib2-21.6.0 parse-1.19.1 parse-type-0.6.0 ruamel.yaml-0.17.32 ruamel.yaml.clib-0.2.7 schema-0.7.5 sismic-1.6.5 six-1.16.0\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | [notice] To update, run: pip install --upgrade pip\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2705  Success - Main Install dependencies\n[5da0cb69-0706-490a-a050-dfda4f667c06/test] \u2b50 Run Main Install test dependencies\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting coverage\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading coverage-7.2.7-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (225 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 225.6/225.6 kB 10.2 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Installing collected packages: coverage\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Successfully installed coverage-7.2.7\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | [notice] To update, run: pip install --upgrade pip\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting Sphinx<7.0.0 (from -r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading sphinx-5.3.0-py3-none-any.whl (3.2 MB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.2/3.2 MB 20.7 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting sphinx-autodoc-typehints!=1.5.0,>=1.2.5 (from -r requirements.txt (line 2))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading sphinx_autodoc_typehints-1.23.0-py3-none-any.whl (17 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting pytest>=5.0.0 (from -r requirements.txt (line 3))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 19.5 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting pytest-mock>=3.0.0 (from -r requirements.txt (line 4))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading pytest_mock-3.11.1-py3-none-any.whl (9.6 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting sphinxcontrib-applehelp (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading sphinxcontrib_applehelp-1.0.2-py2.py3-none-any.whl (121 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 121.2/121.2 kB 5.8 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting sphinxcontrib-devhelp (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading sphinxcontrib_devhelp-1.0.2-py2.py3-none-any.whl (84 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 84.7/84.7 kB 5.4 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting sphinxcontrib-jsmath (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl (5.1 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting sphinxcontrib-htmlhelp>=2.0.0 (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading sphinxcontrib_htmlhelp-2.0.0-py2.py3-none-any.whl (100 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100.5/100.5 kB 11.5 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting sphinxcontrib-serializinghtml>=1.1.5 (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading sphinxcontrib_serializinghtml-1.1.5-py2.py3-none-any.whl (94 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 94.0/94.0 kB 1.5 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting sphinxcontrib-qthelp (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading sphinxcontrib_qthelp-1.0.3-py2.py3-none-any.whl (90 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 90.6/90.6 kB 967.3 kB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting Jinja2>=3.0 (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 2.2 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting Pygments>=2.12 (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 13.3 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting docutils<0.20,>=0.14 (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading docutils-0.19-py3-none-any.whl (570 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 570.5/570.5 kB 22.8 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting snowballstemmer>=2.0 (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading snowballstemmer-2.2.0-py2.py3-none-any.whl (93 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 93.0/93.0 kB 9.7 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting babel>=2.9 (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 10.1/10.1 MB 22.9 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting alabaster<0.8,>=0.7 (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading alabaster-0.7.13-py3-none-any.whl (13 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting imagesize>=1.3 (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading imagesize-1.4.1-py2.py3-none-any.whl (8.8 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting requests>=2.5.0 (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 2.3 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting packaging>=21.0 (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 4.1 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting importlib-metadata>=4.8 (from Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting iniconfig (from pytest>=5.0.0->-r requirements.txt (line 3))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting pluggy<2.0,>=0.12 (from pytest>=5.0.0->-r requirements.txt (line 3))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest>=5.0.0->-r requirements.txt (line 3))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting tomli>=1.0.0 (from pytest>=5.0.0->-r requirements.txt (line 3))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting pytz>=2015.7 (from babel>=2.9->Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 11.9 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting zipp>=0.5 (from importlib-metadata>=4.8->Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting typing-extensions>=3.6.4 (from importlib-metadata>=4.8->Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting MarkupSafe>=2.0 (from Jinja2>=3.0->Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting charset-normalizer<4,>=2 (from requests>=2.5.0->Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 171.0/171.0 kB 1.2 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting idna<4,>=2.5 (from requests>=2.5.0->Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 1.2 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting urllib3<3,>=1.21.1 (from requests>=2.5.0->Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 1.1 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting certifi>=2017.4.17 (from requests>=2.5.0->Sphinx<7.0.0->-r requirements.txt (line 1))\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 4.2 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Installing collected packages: snowballstemmer, pytz, zipp, urllib3, typing-extensions, tomli, sphinxcontrib-serializinghtml, sphinxcontrib-qthelp, sphinxcontrib-jsmath, sphinxcontrib-htmlhelp, sphinxcontrib-devhelp, sphinxcontrib-applehelp, Pygments, packaging, MarkupSafe, iniconfig, imagesize, idna, exceptiongroup, docutils, charset-normalizer, certifi, babel, alabaster, requests, Jinja2, importlib-metadata, Sphinx, pluggy, sphinx-autodoc-typehints, pytest, pytest-mock\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Successfully installed Jinja2-3.1.2 MarkupSafe-2.1.3 Pygments-2.15.1 Sphinx-5.3.0 alabaster-0.7.13 babel-2.12.1 certifi-2023.5.7 charset-normalizer-3.1.0 docutils-0.19 exceptiongroup-1.1.1 idna-3.4 imagesize-1.4.1 importlib-metadata-6.7.0 iniconfig-2.0.0 packaging-23.1 pluggy-1.2.0 pytest-7.4.0 pytest-mock-3.11.1 pytz-2023.3 requests-2.31.0 snowballstemmer-2.2.0 sphinx-autodoc-typehints-1.23.0 sphinxcontrib-applehelp-1.0.2 sphinxcontrib-devhelp-1.0.2 sphinxcontrib-htmlhelp-2.0.0 sphinxcontrib-jsmath-1.0.1 sphinxcontrib-qthelp-1.0.3 sphinxcontrib-serializinghtml-1.1.5 tomli-2.0.1 typing-extensions-4.7.0 urllib3-2.0.3 zipp-3.15.0\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | [notice] To update, run: pip install --upgrade pip\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2705  Success - Main Install test dependencies\n[5da0cb69-0706-490a-a050-dfda4f667c06/test] \u2b50 Run Main Execute tests\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | ============================= test session starts ==============================\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | platform linux -- Python 3.7.11, pytest-7.4.0, pluggy-1.2.0\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | plugins: mock-3.11.1\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | collected 345 items\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | tests/test_bdd.py ..............................                         [  8%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | tests/test_clock.py ............                                         [ 12%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | tests/test_code.py .............X                                        [ 16%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | tests/test_contract.py ..............                                    [ 20%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | tests/test_examples.py ...............                                   [ 24%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | tests/test_interpreter.py .............................................. [ 37%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | ...............                                                          [ 42%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | tests/test_io.py ....................................................... [ 58%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | ..........................................................               [ 75%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | tests/test_model.py .................................................... [ 90%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | ...........                                                              [ 93%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | tests/test_property.py ..............                                    [ 97%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | tests/test_runner.py .........                                           [100%]\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | =============================== warnings summary ===============================\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | tests/test_io.py: 57 warnings\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic/sismic/io/yaml.py:103: PendingDeprecationWarning: \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   dump will be removed, use\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     yaml=YAML(typ='unsafe', pure=True)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     yaml.dump(...)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   instead\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     width=1000, default_flow_style=False)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | tests/test_io.py: 57 warnings\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/ruamel/yaml/main.py:1379: PendingDeprecationWarning: \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   dump_all will be removed, use\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     yaml=YAML(typ='unsafe', pure=True)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     yaml.dump_all(...)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   instead\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     block_seq_indent=block_seq_indent,\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic/report.xml -\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | ================ 344 passed, 1 xpassed, 114 warnings in 31.29s =================\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2705  Success - Main Execute tests\n[5da0cb69-0706-490a-a050-dfda4f667c06/test] \u2b50 Run Main Execute documentation\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | sphinx-build -b doctest -d _build/doctrees   . _build/doctest\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Running Sphinx v5.3.0\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | WARNING: Invalid configuration value found: 'language = None'. Update your configuration to a valid language code. Falling back to 'en' (English).\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | making output directory... done\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | WARNING: html_static_path entry '_static' does not exist\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | loading intersphinx inventory from https://docs.python.org/3.7/objects.inv...\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | building [mo]: targets for 0 po files that are out of date\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | building [doctest]: targets for 27 source files that are out of date\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | updating environment: [new config] 27 added, 0 changed, 0 removed\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [  3%] api\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [  7%] api/bdd\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 11%] api/clock\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 14%] api/code\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 18%] api/exceptions\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 22%] api/helpers\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 25%] api/interpreter\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 29%] api/io\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 33%] api/model\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 37%] api/runner\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 40%] api/testing\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 44%] authors\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 48%] behavior\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 51%] changelog\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 55%] code\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 59%] concurrent\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 62%] contract\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 66%] execution\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 70%] extensions\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 74%] format\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 77%] index\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 81%] installation\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 85%] integration\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 88%] properties\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 92%] time\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [ 96%] unittests\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | reading sources... [100%] visualization\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic/sismic/helpers.py:docstring of sismic.helpers.log_trace:2: WARNING: Field list ends without a blank line; unexpected unindent.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic/sismic/model/events.py:docstring of sismic.model.events.Event:1: WARNING: duplicate object description of sismic.model.events.Event, other instance in api/interpreter, use :noindex: for one of them\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic/sismic/model/events.py:docstring of sismic.model.events.InternalEvent:1: WARNING: duplicate object description of sismic.model.events.InternalEvent, other instance in api/interpreter, use :noindex: for one of them\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic/sismic/model/events.py:docstring of sismic.model.events.MetaEvent:1: WARNING: duplicate object description of sismic.model.events.MetaEvent, other instance in api/interpreter, use :noindex: for one of them\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | /tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic/docs/properties.rst:117: WARNING: Include file '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic/docs/examples/elevator/heating_off_property.yaml' not found or reading it failed\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | looking for now-outdated files... none found\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | pickling environment... done\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | checking consistency... /tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic/docs/extensions.rst: WARNING: document isn't included in any toctree\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | done\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | running tests...\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Document: code\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | --------------\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 1 items passed all tests:\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |    6 tests in initial_context\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 6 tests in 1 items.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 6 passed and 0 failed.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Test passed.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Document: time\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | --------------\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 4 items passed all tests:\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |    4 tests in clock\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |    6 tests in default\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |    5 tests in delayed\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |    5 tests in realclock\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 20 tests in 4 items.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 20 passed and 0 failed.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Test passed.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Document: format\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | ----------------\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 1 items passed all tests:\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |    2 tests in python\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 2 tests in 1 items.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 2 passed and 0 failed.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Test passed.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Document: execution\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | -------------------\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 1 items passed all tests:\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   11 tests in interpreter\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 11 tests in 1 items.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 11 passed and 0 failed.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Test passed.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Document: contract\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | ------------------\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 1 items passed all tests:\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |    1 tests in default\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 1 tests in 1 items.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 1 passed and 0 failed.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Test passed.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Document: concurrent\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | --------------------\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 3 items passed all tests:\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |    4 tests in bind\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |    3 tests in buttons\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |    8 tests in time_sync\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 15 tests in 3 items.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | 15 passed and 0 failed.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Test passed.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Doctest summary\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | ===============\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |    55 tests\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     0 failures in tests\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     0 failures in setup code\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     0 failures in cleanup code\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | build succeeded, 8 warnings.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Testing of doctests in the sources finished, look at the results in _build/doctest/output.txt.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Testing of doctests in the sources finished, look at the  results in _build/doctest/output.txt.\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | ..\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | ----------------------------------------------------------------------\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Ran 2 tests in 0.136s\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | OK\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u2705  Success - Main Execute documentation\n[5da0cb69-0706-490a-a050-dfda4f667c06/test] \u2b50 Run Main Upload coverage\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting coveralls\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading coveralls-3.3.1-py2.py3-none-any.whl (14 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting coverage!=6.0.*,!=6.1,!=6.1.1,<7.0,>=4.1 (from coveralls)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading coverage-6.5.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (210 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 210.1/210.1 kB 15.2 MB/s eta 0:00:00\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Collecting docopt>=0.6.1 (from coveralls)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Downloading docopt-0.6.2.tar.gz (25 kB)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Installing build dependencies: started\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Installing build dependencies: finished with status 'done'\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Getting requirements to build wheel: started\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Getting requirements to build wheel: finished with status 'done'\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Preparing metadata (pyproject.toml): started\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Requirement already satisfied: requests>=1.0.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from coveralls) (2.31.0)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests>=1.0.0->coveralls) (3.1.0)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests>=1.0.0->coveralls) (3.4)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests>=1.0.0->coveralls) (2.0.3)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests>=1.0.0->coveralls) (2023.5.7)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Building wheels for collected packages: docopt\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Building wheel for docopt (pyproject.toml): started\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Building wheel for docopt (pyproject.toml): finished with status 'done'\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Created wheel for docopt: filename=docopt-0.6.2-py2.py3-none-any.whl size=13707 sha256=30cf49ab2cbf6c13bb58b012d557e135d9ece20a7405d79460375d1286bf2f3a\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/72/b0/3f/1d95f96ff986c7dfffe46ce2be4062f38ebd04b506c77c81b9\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Successfully built docopt\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Installing collected packages: docopt, coverage, coveralls\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   Attempting uninstall: coverage\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     Found existing installation: coverage 7.2.7\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     Uninstalling coverage-7.2.7:\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |       Successfully uninstalled coverage-7.2.7\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Successfully installed coverage-6.5.0 coveralls-3.3.1 docopt-0.6.2\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | [notice] To update, run: pip install --upgrade pip\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Submitting coverage to coveralls.io...\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Traceback (most recent call last):\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/coveralls/api.py\", line 290, in submit_report\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     response.raise_for_status()\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/requests/models.py\", line 1021, in raise_for_status\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     raise HTTPError(http_error_msg, response=self)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | requests.exceptions.HTTPError: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | The above exception was the direct cause of the following exception:\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | \n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | Traceback (most recent call last):\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/coveralls/cli.py\", line 95, in main\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     result = coverallz.wear()\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/coveralls/api.py\", line 257, in wear\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     return self.submit_report(json_string)\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/coveralls/api.py\", line 294, in submit_report\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   |     'Could not submit coverage: {}'.format(e)) from e\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | coveralls.exception.CoverallsException: Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   | resubmitting with id None\n[5da0cb69-0706-490a-a050-dfda4f667c06/test]   \u274c  Failure - Main Upload coverage\n[5da0cb69-0706-490a-a050-dfda4f667c06/test] exitcode '1': failure\n[5da0cb69-0706-490a-a050-dfda4f667c06/test] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'test' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/AlexandreDecan-sismic/.github/workflows/test-crawler.yaml",
            "type": "pytest"
        },
        "workflow_name": "5da0cb69-0706-490a-a050-dfda4f667c06",
        "build_tool": "pytest",
        "elapsed_time": 234.95639204978943
    }
}