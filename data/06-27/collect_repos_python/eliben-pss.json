{
    "repository": "eliben/pss",
    "stars": 312,
    "language": "python",
    "size": 292,
    "clone_url": "https://github.com/eliben/pss.git",
    "timestamp": "2023-07-01T09:38:15.083775Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unittest"
    ],
    "actions_test_build_tools": [
        "unittest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "test.test_driver.TestDriver",
                "name": "test_basic",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_driver.TestDriver",
                "name": "test_find_in_files_with_exclude_patterns",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_driver.TestDriver",
                "name": "test_find_in_files_with_include_patterns",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_driver.TestDriver",
                "name": "test_only_find_files_with_exclude_patterns",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_driver.TestDriver",
                "name": "test_only_find_files_with_include_pattern",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_driver.TestDriver",
                "name": "test_only_find_files_with_include_patterns",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_driver.TestDriver",
                "name": "test_only_find_files_with_include_types",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_filefinder.TestFileFinder",
                "name": "test_extensions",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_filefinder.TestFileFinder",
                "name": "test_file_patterns",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_filefinder.TestFileFinder",
                "name": "test_ignore_dirs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_filefinder.TestFileFinder",
                "name": "test_no_recurse",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_filefinder.TestFileFinder",
                "name": "test_text_only",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_contentmatcher.TestContentMatcher",
                "name": "test_defaults",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_contentmatcher.TestContentMatcher",
                "name": "test_id_regex_match_detailed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_contentmatcher.TestContentMatcher",
                "name": "test_ignore_case",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_contentmatcher.TestContentMatcher",
                "name": "test_invert_match",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_contentmatcher.TestContentMatcher",
                "name": "test_max_count",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_contentmatcher.TestContentMatcher",
                "name": "test_regex_match",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_contentmatcher.TestContentMatcher",
                "name": "test_whole_words",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_basic",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_basic_match_option",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_binary_matches",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_binary_matches_universal_newlines",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_case_of_match",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_context_merged",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_context_separate",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_ignored_dirs",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_include_types",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_no_break",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_only_find_files_G",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_only_find_files_GG",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_only_find_files_L",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_only_find_files_exclude_pattern",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_only_find_files_exclude_pattern_thrice",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_only_find_files_exclude_pattern_twice",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_only_find_files_f",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_only_find_files_g",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_only_find_files_gg",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_only_find_files_l",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_return_code",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_two_matches",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_universal_newlines",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_weird_chars",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_whole_words",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_only_find_files_GGG",
                "time": 0.008,
                "results": [
                    {
                        "result": "Failure",
                        "message": "Lists differ: [('FO[186 chars]dir4/file3.py'), ('FOUND_FILENAME', 'testdir4/[256 chars]xt')] != [('FO[186 chars]dir4/main1.py'), ('FOUND_FILENAME', 'testdir4/[48 chars]xt')]  First differing element 4: ('FOUND_FILENAME', 'testdir4/file3.py') ('FOUND_FILENAME', 'testdir4/main1.py')  First list contains 5 additional elements. First extra element 7: ('FOUND_FILENAME', 'testdir4/main1.txt')  Diff is 671 characters long. Set self.maxDiff to None to see it.",
                        "type": "AssertionError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_pssmain.TestPssMain",
                "name": "test_only_find_files_ggg",
                "time": 0.007,
                "results": [
                    {
                        "result": "Failure",
                        "message": "Lists differ: [('FO[186 chars]dir4/file3.py'), ('FOUND_FILENAME', 'testdir4/[256 chars]xt')] != [('FO[186 chars]dir4/main1.py'), ('FOUND_FILENAME', 'testdir4/[48 chars]xt')]  First differing element 4: ('FOUND_FILENAME', 'testdir4/file3.py') ('FOUND_FILENAME', 'testdir4/main1.py')  First list contains 5 additional elements. First extra element 7: ('FOUND_FILENAME', 'testdir4/main1.txt')  Diff is 671 characters long. Set self.maxDiff to None to see it.",
                        "type": "AssertionError"
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build] \ud83d\ude80  Start image=crawlergpt:latest\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/eliben-pss] user=0 workdir=\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.7]\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build] \u2b50 Run Main actions/checkout@v2\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \u2705  Success - Main actions/checkout@v2\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build] \u2b50 Run Main Set up Python 3.7\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/b130ff71-e02c-4122-bf74-ab00ee6b87c3/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::isExplicit: \n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::explicit? false\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::explicit? true\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::explicit? true\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::explicit? true\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::explicit? true\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::explicit? true\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::explicit? true\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | Successfully setup CPython (3.7.11)\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \u2705  Success - Main Set up Python 3.7\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \u2699  ::set-output:: python-version=3.7.11\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build] \u2b50 Run Main Test\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | Collecting unittest-xml-reporting\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   |   Downloading unittest_xml_reporting-3.2.0-py2.py3-none-any.whl (20 kB)\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | Collecting lxml\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   |   Downloading lxml-4.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.6 MB)\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | Installing collected packages: lxml, unittest-xml-reporting\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | Successfully installed lxml-4.9.2 unittest-xml-reporting-3.2.0\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | \n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | Running tests...\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ----------------------------------------------------------------------\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ...............................F.......F......\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ======================================================================\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | FAIL [0.008s]: test_only_find_files_GGG (test.test_pssmain.TestPssMain)\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ----------------------------------------------------------------------\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | Traceback (most recent call last):\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/eliben-pss/test/test_pssmain.py\", line 387, in test_only_find_files_GGG\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   |     'testdir4/main2.txt',\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/eliben-pss/test/test_pssmain.py\", line 601, in assertFoundFiles\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   |     self._build_found_list(expected_list))\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | AssertionError: Lists differ: [('FO[186 chars]dir4/file3.py'), ('FOUND_FILENAME', 'testdir4/[256 chars]xt')] != [('FO[186 chars]dir4/main1.py'), ('FOUND_FILENAME', 'testdir4/[48 chars]xt')]\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | \n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | First differing element 4:\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ('FOUND_FILENAME', 'testdir4/file3.py')\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ('FOUND_FILENAME', 'testdir4/main1.py')\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | \n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | First list contains 5 additional elements.\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | First extra element 7:\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ('FOUND_FILENAME', 'testdir4/main1.txt')\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | \n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | Diff is 671 characters long. Set self.maxDiff to None to see it.\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | \n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ======================================================================\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | FAIL [0.007s]: test_only_find_files_ggg (test.test_pssmain.TestPssMain)\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ----------------------------------------------------------------------\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | Traceback (most recent call last):\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/eliben-pss/test/test_pssmain.py\", line 337, in test_only_find_files_ggg\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   |     'testdir4/main2.txt',\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/eliben-pss/test/test_pssmain.py\", line 601, in assertFoundFiles\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   |     self._build_found_list(expected_list))\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | AssertionError: Lists differ: [('FO[186 chars]dir4/file3.py'), ('FOUND_FILENAME', 'testdir4/[256 chars]xt')] != [('FO[186 chars]dir4/main1.py'), ('FOUND_FILENAME', 'testdir4/[48 chars]xt')]\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | \n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | First differing element 4:\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ('FOUND_FILENAME', 'testdir4/file3.py')\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ('FOUND_FILENAME', 'testdir4/main1.py')\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | \n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | First list contains 5 additional elements.\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | First extra element 7:\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ('FOUND_FILENAME', 'testdir4/main1.txt')\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | \n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | Diff is 671 characters long. Set self.maxDiff to None to see it.\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | \n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | ----------------------------------------------------------------------\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | Ran 46 tests in 0.418s\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | \n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | FAILED (failures=2)\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | \n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   | Generating XML reports...\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build]   \u274c  Failure - Main Test\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build] exitcode '1': failure\n[bff7fa99-1ca1-4451-933f-18e3c60f8fb9/build] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/eliben-pss/.github/workflows/ci-crawler.yml",
            "type": "unittest"
        },
        "workflow_name": "bff7fa99-1ca1-4451-933f-18e3c60f8fb9",
        "build_tool": "unittest",
        "elapsed_time": 88.61301255226135
    }
}