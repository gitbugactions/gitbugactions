{
    "repository": "PaulSchweizer/flowpipe",
    "stars": 175,
    "language": "python",
    "size": 431,
    "clone_url": "https://github.com/PaulSchweizer/flowpipe.git",
    "timestamp": "2023-07-01T11:30:09.116690Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_input_plugs_are_taken_from_func_inputs",
                "time": 0.0021538734436,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_name_is_taken_from_func_name_if_not_provided",
                "time": 0.00116109848022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_name_can_be_provided_as_kwarg",
                "time": 0.00123691558838,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_doc_is_taken_from_func",
                "time": 0.0299615859985,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_define_outputs",
                "time": 0.00143074989319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_decorator_returns_node_instances",
                "time": 0.00146389007568,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_serialize_function_node",
                "time": 0.00343608856201,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_use_self_as_first_arg_if_present",
                "time": 0.00271368026733,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_assign_input_args_to_function_input_plugs",
                "time": 0.00165367126465,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_provide_custom_node_class",
                "time": 0.00150990486145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_passing_metadata_updates_exisiting_metadata",
                "time": 0.00299620628357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_default_args_are_assigned_to_input_plugs",
                "time": 0.00194597244263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_metadata_is_unique_for_each_node_created",
                "time": 0.00120902061462,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_class_name_restored_after_deserialization",
                "time": 0.00268983840942,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_node_reserved_names",
                "time": 0.000969648361206,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_convert_function_to_node",
                "name": "test_create_node_with_sub_output_plugs",
                "time": 0.00435066223145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_event",
                "name": "test_listeners_only_registered_once",
                "time": 0.00081205368042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_event",
                "name": "test_deregister_if_registered",
                "time": 0.00144195556641,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_event",
                "name": "test_event_emitt",
                "time": 0.000769853591919,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_event",
                "name": "test_event_clear",
                "time": 0.000778913497925,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_examples",
                "time": 0.73308300972,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": "---------------------------------------\nBuild a House\n+-------------------------------------------------------------------------------------------------------+\n|                                             Build a House                                             |\n|-------------------------------------------------------------------------------------------------------|\n| +------------------------+          +------------------------+          +---------------------------+ |\n| |      HireWorkers       |          |       Build Roof       |          |    Housewarming Party     | |\n| |------------------------|          |------------------------|          |---------------------------| |\n| o amount<4>              |          o section<roof>          |          % attendees<>               | |\n| |              workers<> %          % workers<>              |     +--->o  attendees.0<>            | |\n| |           workers.0<>  o-----+--->o  workers.0<>           |     |--->o  attendees.1<>            | |\n| |           workers.1<>  o-----|--->o  workers.1<>           |     |--->o  attendees.2<>            | |\n| |           workers.2<>  o-----|    |              workers<> %     |--->o  attendees.3<>            | |\n| |           workers.3<>  o-----|    |           workers.0<>  o-----|    o  attendees.4<Homeowner>   | |\n| +------------------------+     |    |           workers.1<>  o-----|    +---------------------------+ |\n|                                |    +------------------------+     |                                  |\n|                                |    +------------------------+     |                                  |\n|                                |    |      Build Walls       |     |                                  |\n|                                |    |------------------------|     |                                  |\n|                                |    o section<walls>         |     |                                  |\n|                                |    % workers<>              |     |                                  |\n|                                +--->o  workers.0<>           |     |                                  |\n|                                +--->o  workers.1<>           |     |                                  |\n|                                     |              workers<> %     |                                  |\n|                                     |           workers.0<>  o-----+                                  |\n|                                     |           workers.1<>  o-----+                                  |\n|                                     +------------------------+                                        |\n+-------------------------------------------------------------------------------------------------------+\n                                                                                                         \nBuild a House\n HireWorkers\n  [i] amount: 4\n  [o] workers\n   [o] workers.0 >> Build Walls.workers.0\n   [o] workers.1 >> Build Walls.workers.1\n   [o] workers.2 >> Build Roof.workers.0\n   [o] workers.3 >> Build Roof.workers.1\n Build Roof\n  [i] section: \"roof\"\n  [i] workers\n   [i] workers.0 << HireWorkers.workers.2\n   [i] workers.1 << HireWorkers.workers.3\n  [o] workers\n   [o] workers.0 >> Housewarming Party.attendees.1\n   [o] workers.1 >> Housewarming Party.attendees.3\n Build Walls\n  [i] section: \"walls\"\n  [i] workers\n   [i] workers.0 << HireWorkers.workers.0\n   [i] workers.1 << HireWorkers.workers.1\n  [o] workers\n   [o] workers.0 >> Housewarming Party.attendees.0\n   [o] workers.1 >> Housewarming Party.attendees.2\n Housewarming Party\n  [i] attendees\n   [i] attendees.0 << Build Walls.workers.0\n   [i] attendees.1 << Build Roof.workers.0\n   [i] attendees.2 << Build Walls.workers.1\n   [i] attendees.3 << Build Roof.workers.1\n   [i] attendees.4: \"Homeowner\"\n---------------------------------------\n4 workers are hired to build the house.\nMichelle, Mike are building the roof\nJane, John are building the walls\nMike, John, Michelle, Jane and Homeowner are having a great party!\n---------------------------------------\n---------------------------------------\nCelebrate a Birthday Party\n+--------------------------------------------------------+\n|               Celebrate a Birthday Party               |\n|--------------------------------------------------------|\n| +-------------------+          +---------------------+ |\n| |   InvitePeople    |          |   Birthday Party    | |\n| |-------------------|          |---------------------| |\n| o amount<4>         |     +--->o attendees<>         | |\n| |          people<> o-----+    +---------------------+ |\n| +-------------------+                                  |\n+--------------------------------------------------------+\n                                                          \n---------------------------------------\nJane, John, Michelle and Mike are having a great party!\n---------------------------------------\n+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n|                                                                                      fix_file                                                                                      |\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| +---udpate_db_from_file----+          +-------fix_file--------+          +--------fix_file---------+          +----udpate_db_from_file-----+          +---udpate_db_from_file----+ |\n| |        Find File         |          |   Cleanup Filename    |          |   Change Lineendings    |          |   Read Values from File    |          |        Update DB         | |\n| |--------------------------|          |-----------------------|          |-------------------------|          |----------------------------|          |--------------------------| |\n| o file<>                   |     +--->o file<>                |     +--->o file<>                  |     +--->o file<>                     |     +--->o file<>                   | |\n| |                   file<> o-----+    |                file<> o-----+    |                  file<> o-----+    |                     file<> o-----+    |                   file<> o |\n| +--------------------------+          +-----------------------+          +-------------------------+          +----------------------------+          +--------------------------+ |\n+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n                                                                                                                                                                                      \n+-----------------------------------------------------------------------------------------+\n|                                       World Clock                                       |\n|-----------------------------------------------------------------------------------------|\n| +------------------+          +---------------------+          +----------------------+ |\n| |   CurrentTime    |          |       London        |          |      ShowTimes       | |\n| |------------------|          |---------------------|          |----------------------| |\n| |           time<> o-----+--->o time<>              |          % times<>              | |\n| +------------------+     |    o timezone<0>         |     +--->o  times.London<>      | |\n|                          |    |    converted_time<> o-----+--->o  times.Munich<>      | |\n|                          |    +---------------------+     |--->o  times.Vancouver<>   | |\n|                          |    +---------------------+     |    +----------------------+ |\n|                          |    |       Munich        |     |                             |\n|                          |    |---------------------|     |                             |\n|                          |--->o time<>              |     |                             |\n|                          |    o timezone<1>         |     |                             |\n|                          |    |    converted_time<> o-----+                             |\n|                          |    +---------------------+     |                             |\n|                          |    +---------------------+     |                             |\n|                          |    |      Vancouver      |     |                             |\n|                          |    |---------------------|     |                             |\n|                          +--->o time<>              |     |                             |\n|                               o timezone<-8>        |     |                             |\n|                               |    converted_time<> o-----+                             |\n|                               +---------------------+                                   |\n+-----------------------------------------------------------------------------------------+\n                                                                                           \n-- World Clock -------------------\nIt is now: 11:33 in London\nIt is now: 03:33 in Vancouver\nIt is now: 12:33 in Munich\n----------------------------------\n",
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_evaluation_matrix",
                "time": 0.00839924812317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_linar_evaluation_sequence",
                "time": 0.00284504890442,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_branching_evaluation_sequence",
                "time": 0.00215411186218,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_complex_branching_evaluation_sequence",
                "time": 0.006591796875,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_serialize_graph_to_json",
                "time": 0.0211138725281,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_serialize_graph_to_pickle",
                "time": 0.0126028060913,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_string_representations",
                "time": 0.152741909027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_string_representations_with_subgraphs",
                "time": 0.179646015167,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_nodes_can_be_added_to_graph",
                "time": 0.0122411251068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_nodes_can_be_deleted",
                "time": 0.00575923919678,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_string_representation_with_inputpluggroups",
                "time": 0.278062105179,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_nested_graphs_expand_sub_graphs",
                "time": 0.00527310371399,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_nodes_can_be_accessed_via_name_through_indexing",
                "time": 0.00105381011963,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_node_names_on_graph_have_to_be_unique",
                "time": 0.00122690200806,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_nodes_are_only_added_once",
                "time": 0.00330114364624,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_nodes_can_add_to_graph_on_init",
                "time": 0.00111794471741,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_get_default_graph",
                "time": 0.000687122344971,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_set_default_graph",
                "time": 0.000895977020264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_reset_default_graph",
                "time": 0.000878810882568,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_threaded_evaluation",
                "time": 0.409507036209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_valid_evaluation_mode",
                "time": 0.0486152172089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_invalid_evaluation_mode",
                "time": 0.00109696388245,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_cycle_error_when_node_connects_to_itself",
                "time": 0.00169205665588,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_cycle_error_when_node_connects_out_to_own_upstream",
                "time": 0.00372505187988,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_cycle_error_when_node_connects_out_to_own_upstream_across_subgraphs",
                "time": 0.00358700752258,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_clear_plugs_after_use_if_not_data_persistent",
                "time": 0.0037899017334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_passing_evaluator",
                "time": 0.00746703147888,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_mode_and_evalutor_are_exclusive",
                "time": 0.0110569000244,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graph",
                "name": "test_evaluate_can_skip_clean_nodes",
                "time": 0.00230312347412,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inputpluggroup",
                "name": "test_connect_groupinput_to_output",
                "time": 0.0200390815735,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inputpluggroup",
                "name": "test_connect_output_to_groupinput",
                "time": 0.0026638507843,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inputpluggroup",
                "name": "test_rshift_connect_groupinput_to_output",
                "time": 0.00244688987732,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inputpluggroup",
                "name": "test_rshift_connect_output_to_groupinput",
                "time": 0.0493857860565,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inputpluggroup",
                "name": "test_connect_groupinput_to_suboutput",
                "time": 0.00269103050232,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inputpluggroup",
                "name": "test_connect_suboutput_to_groupinput",
                "time": 0.0090639591217,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inputpluggroup",
                "name": "test_setting_value_of_groupinput",
                "time": 0.00448417663574,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inputpluggroup",
                "name": "test_getting_value_of_groupinput_is_not_possible",
                "time": 0.00497817993164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_multiprocessing",
                "name": "test_multiprocessed_evaluation_is_faster",
                "time": 6.58065700531,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_multiprocessing",
                "name": "test_multiprocessing_evaluation_updates_the_original_graph",
                "time": 0.421595335007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_downstream_upstream_nodes_children_parents",
                "time": 0.00392770767212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_evaluate",
                "time": 0.00416231155396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_compute_receives_inputs",
                "time": 0.00213289260864,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_dirty_depends_on_inputs",
                "time": 0.00175976753235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_evaluate_sets_all_inputs_clean",
                "time": 0.00182580947876,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_cannot_connect_node_to_itself",
                "time": 0.00473403930664,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_string_representations",
                "time": 0.0064389705658,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_node_has_unique_identifier",
                "time": 0.31130027771,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_node_identifier_can_be_set_explicitely",
                "time": 0.00144100189209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_serialize_node_serialize_to_json",
                "time": 0.00656509399414,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_deserialize_from_json",
                "time": 0.00967001914978,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_serialize_node_serialize_to_pickle",
                "time": 0.0155169963837,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_deserialize_node_does_not_add_to_default_graph",
                "time": 0.00598788261414,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_omitting_node_does_not_evaluate_it",
                "time": 0.00131297111511,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_all_inputs_contains_all_sub_input_plugs",
                "time": 0.00196385383606,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_all_outputs_contains_all_sub_output_plugs",
                "time": 0.00582599639893,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_node_reports_stats",
                "time": 0.00168991088867,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_node_events",
                "time": 0.00227975845337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_node_event_emission_separation",
                "time": 0.00194001197815,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_rshift_into_plug",
                "time": 0.00295686721802,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_rshift_into_node",
                "time": 0.0040922164917,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_connection_to_node_with_subplugs",
                "time": 0.131063938141,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": "+------------------------------------------------------------------+\n|                             default                              |\n|------------------------------------------------------------------|\n| +-------------------------+          +-------------------------+ |\n| |          Node1          |          |          Node2          | |\n| |-------------------------|          |-------------------------| |\n| |              compound<> %-----+    % compound<>              | |\n| |        compound.sub1<>  o-----|--->o  compound.sub1<>        | |\n| |        compound.sub2<>  o-----|--->o  compound.sub2<>        | |\n| +-------------------------+     |    +-------------------------+ |\n|                                 |    +-------------------------+ |\n|                                 |    |          Node3          | |\n|                                 |    |-------------------------| |\n|                                 +--->% compound<>              | |\n|                                 +--->o  compound.sub1<>        | |\n|                                 +--->o  compound.sub2<>        | |\n|                                      +-------------------------+ |\n+------------------------------------------------------------------+\n                                                                    \n",
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_connection_to_plug_with_subplugs",
                "time": 0.00517272949219,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_connection_to_subplug",
                "time": 0.00268316268921,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_rshift_into_input_plug_group",
                "time": 0.00277638435364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_node",
                "name": "test_exception_event",
                "time": 0.00149083137512,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_connecting_different_input_disconnects_existing_ones",
                "time": 0.00692510604858,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_connect_and_disconnect_nodes",
                "time": 0.00445008277893,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_change_connections_sets_plug_dirty",
                "time": 0.00256824493408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_set_value_sets_plug_dirty",
                "time": 0.00141501426697,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_set_output_pushes_value_to_connected_input",
                "time": 0.00175070762634,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_assign_initial_value_to_input_plug",
                "time": 0.00161075592041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_serialize",
                "time": 0.0028281211853,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_compound_plugs_can_only_be_strings_or_unicodes",
                "time": 0.00257587432861,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_compound_input_plugs_are_accessible_by_index",
                "time": 0.0073070526123,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_compound_output_plugs_are_accessible_by_index",
                "time": 0.00482130050659,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_compound_plugs_can_be_connected_individually",
                "time": 0.0102229118347,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_compound_plugs_are_not_dirty_if_parent_plug_is_dirty",
                "time": 0.00496792793274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_compound_plugs_propagate_dirty_state_to_their_parent",
                "time": 0.00462031364441,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_compound_plug_ignores_direct_value_assignment",
                "time": 0.00347590446472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_plugs_can_not_contain_dots",
                "time": 0.00149917602539,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_compound_output_plugs_inform_parent_on_value_set",
                "time": 0.00397276878357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_plug_gets_dirty_only_on_change",
                "time": 0.00174379348755,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_forbidden_connect",
                "time": 0.00148224830627,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_plugs",
                "name": "test_rshift_into_node",
                "time": 0.0013689994812,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subgraphs",
                "name": "test_nodes_only_contains_levels_of_graph",
                "time": 0.00369954109192,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subgraphs",
                "name": "test_subgraph_names_need_to_be_unique",
                "time": 0.00406193733215,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subgraphs",
                "name": "test_subgraphs_can_be_accessed_by_name",
                "time": 0.00376677513123,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subgraphs",
                "name": "test_plugs_can_be_promoted_to_graph_level_under_new_name",
                "time": 0.00122809410095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subgraphs",
                "name": "test_plugs_can_only_be_promoted_once_to_graph_level",
                "time": 0.00129699707031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subgraphs",
                "name": "test_subplugs_can_not_be_promoted_individually",
                "time": 0.00178003311157,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subgraphs",
                "name": "test_serialize_nested_graph_to_json",
                "time": 0.0104560852051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subgraphs",
                "name": "test_access_node_of_subgraph_by_key",
                "time": 0.00175189971924,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_node_encoder",
                "time": 0.0019748210907,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_get_hash",
                "time": 0.00104284286499,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[6812a19f-092b-4145-b72b-7c428609b42b/Tests] \ud83d\ude80  Start image=crawlergpt:latest\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe] user=0 workdir=\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2601  git clone 'https://github.com/MishaKav/pytest-coverage-comment' # ref=main\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2601  git clone 'https://github.com/actions-js/push' # ref=master\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests] \ud83e\uddea  Matrix: map[python-version:2.7]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests] \u2b50 Run Main Check out repository code\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2705  Success - Main Check out repository code\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests] \u2b50 Run Main Set up Python 2.7\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/d0e3a7e7-bab4-47c7-9450-0d776648be7c/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udea7  ::warning::The support for python 2.7 will be removed on June 19. Related issue: https://github.com/actions/setup-python/issues/672\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::Semantic version spec of 2.7 is 2.7\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::isExplicit: \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::explicit? false\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::explicit? true\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::explicit? true\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::explicit? true\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::explicit? true\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::explicit? true\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::explicit? true\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::matched: 2.7.18\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/2.7.18/x64\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udcac  ::debug::Found tool in cache Python 2.7.18 x64\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Successfully setup CPython (2.7.18)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2705  Success - Main Set up Python 2.7\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/2.7.18/x64\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2699  ::set-output:: python-version=2.7.18\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests] \u2b50 Run Main Install Poetry\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting poetry\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading poetry-1.1.15-py2.py3-none-any.whl (175 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting wheel\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading wheel-0.37.1-py2.py3-none-any.whl (35 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting poetry-core<1.1.0,>=1.0.7\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading poetry_core-1.0.8-py2.py3-none-any.whl (425 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting futures<4.0.0,>=3.3.0; python_version >= \"2.7\" and python_version < \"2.8\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading futures-3.4.0-py2-none-any.whl (16 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting packaging<21.0,>=20.4\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading packaging-20.9-py2.py3-none-any.whl (40 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting pathlib2<3.0,>=2.3; python_version >= \"2.7\" and python_version < \"2.8\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading pathlib2-2.3.7.post1-py2.py3-none-any.whl (18 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting subprocess32<4.0,>=3.5; python_version >= \"2.7\" and python_version < \"2.8\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading subprocess32-3.5.4-cp27-cp27mu-manylinux2014_x86_64.whl (69 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.4; python_version < \"3.6\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading CacheControl-0.12.6-py2.py3-none-any.whl (19 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting keyring<19.0.0,>=18.0.1; python_version >= \"2.7\" and python_version < \"2.8\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading keyring-18.0.1-py2.py3-none-any.whl (35 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting requests<3.0,>=2.18\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting virtualenv<21.0.0,>=20.0.26\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading virtualenv-20.15.1-py2.py3-none-any.whl (10.1 MB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting tomlkit<1.0.0,>=0.7.0\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading tomlkit-0.7.2-py2.py3-none-any.whl (32 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting pexpect<5.0.0,>=4.7.0\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting shellingham<2.0,>=1.1\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading shellingham-1.4.0-py2.py3-none-any.whl (9.4 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting pkginfo<2.0,>=1.4\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading pkginfo-1.8.3-py2.py3-none-any.whl (26 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting glob2<0.7,>=0.6; python_version >= \"2.7\" and python_version < \"2.8\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading glob2-0.6.tar.gz (10 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting clikit<0.7.0,>=0.6.2\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading clikit-0.6.2-py2.py3-none-any.whl (91 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting cleo<0.9.0,>=0.8.1\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading cleo-0.8.1-py2.py3-none-any.whl (21 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting requests-toolbelt<0.10.0,>=0.9.1\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading requests_toolbelt-0.9.1-py2.py3-none-any.whl (54 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting cachy<0.4.0,>=0.3.0\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading cachy-0.3.0-py2.py3-none-any.whl (20 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting html5lib<2.0,>=1.0\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting importlib-metadata<2.0.0,>=1.6.0; python_version < \"3.8\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading importlib_metadata-1.7.0-py2.py3-none-any.whl (31 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting functools32<4.0.0,>=3.2.3; python_version >= \"2.7\" and python_version < \"2.8\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading functools32-3.2.3-2.tar.gz (31 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting typing<4.0,>=3.6; python_version >= \"2.7\" and python_version < \"2.8\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading typing-3.10.0.0-py2-none-any.whl (26 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting enum34<2.0.0,>=1.1.10; python_version >= \"2.7\" and python_version < \"2.8\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading enum34-1.1.10-py2-none-any.whl (11 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting pyparsing>=2.0.2\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading pyparsing-2.4.7-py2.py3-none-any.whl (67 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting scandir; python_version < \"3.5\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading scandir-1.10.0.tar.gz (33 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting six\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting msgpack>=0.5.2\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading msgpack-1.0.5.tar.gz (127 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Installing build dependencies: started\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Installing build dependencies: finished with status 'done'\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Getting requirements to build wheel: started\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Getting requirements to build wheel: finished with status 'done'\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Installing backend dependencies: started\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Installing backend dependencies: finished with status 'done'\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     Preparing wheel metadata: started\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     Preparing wheel metadata: finished with status 'done'\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting lockfile>=0.9; extra == \"filecache\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting secretstorage<3; (sys_platform == \"linux2\" or sys_platform == \"linux\") and python_version < \"3.5\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading SecretStorage-2.3.1.tar.gz (16 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting entrypoints\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading entrypoints-0.3-py2.py3-none-any.whl (11 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting certifi>=2017.4.17\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading certifi-2021.10.8-py2.py3-none-any.whl (149 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting urllib3<1.27,>=1.21.1\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting chardet<5,>=3.0.2; python_version < \"3\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading chardet-4.0.0-py2.py3-none-any.whl (178 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting idna<3,>=2.5; python_version < \"3\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading idna-2.10-py2.py3-none-any.whl (58 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting platformdirs<3,>=2\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading platformdirs-2.0.2-py2.py3-none-any.whl (10 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting importlib-resources>=1.0; python_version < \"3.7\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading importlib_resources-3.3.1-py2.py3-none-any.whl (26 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting distlib<1,>=0.3.1\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting filelock<4,>=3.2\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading filelock-3.2.1-py2.py3-none-any.whl (9.3 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting ptyprocess>=0.5\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting pylev<2.0,>=1.3\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading pylev-1.4.0-py2.py3-none-any.whl (6.1 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting pastel<0.3.0,>=0.2.0\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading pastel-0.2.1-py2.py3-none-any.whl (6.0 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting webencodings\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting contextlib2; python_version < \"3\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading contextlib2-0.6.0.post1-py2.py3-none-any.whl (9.8 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting zipp>=0.5\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading zipp-1.2.0-py2.py3-none-any.whl (4.8 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting configparser>=3.5; python_version < \"3\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading configparser-4.0.2-py2.py3-none-any.whl (22 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting cryptography\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading cryptography-3.3.2-cp27-cp27mu-manylinux2010_x86_64.whl (2.6 MB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting singledispatch; python_version < \"3.4\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading singledispatch-3.7.0-py2.py3-none-any.whl (9.2 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting ipaddress; python_version < \"3\"\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading ipaddress-1.0.23-py2.py3-none-any.whl (18 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting cffi>=1.12\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading cffi-1.15.1-cp27-cp27mu-manylinux1_x86_64.whl (390 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Collecting pycparser\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Using legacy 'setup.py install' for glob2, since package 'wheel' is not installed.\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Using legacy 'setup.py install' for functools32, since package 'wheel' is not installed.\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Using legacy 'setup.py install' for scandir, since package 'wheel' is not installed.\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Using legacy 'setup.py install' for secretstorage, since package 'wheel' is not installed.\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Building wheels for collected packages: msgpack\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Building wheel for msgpack (PEP 517): started\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Building wheel for msgpack (PEP 517): finished with status 'done'\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Created wheel for msgpack: filename=msgpack-1.0.5-py2-none-any.whl size=15525 sha256=8b6524597c7a4946d644f09d50398c17928e2780c06769f0d39801ab6ff2fd18\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/55/2e/7b/e48f51e0ef56c411889c9a66f117431b572e79b74c8f18fd06\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Successfully built msgpack\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Installing collected packages: enum34, contextlib2, zipp, configparser, typing, scandir, six, pathlib2, importlib-metadata, functools32, poetry-core, futures, pyparsing, packaging, subprocess32, certifi, urllib3, chardet, idna, requests, msgpack, lockfile, cachecontrol, ipaddress, pycparser, cffi, cryptography, secretstorage, entrypoints, keyring, platformdirs, singledispatch, importlib-resources, distlib, filelock, virtualenv, tomlkit, ptyprocess, pexpect, shellingham, pkginfo, glob2, pylev, pastel, clikit, cleo, requests-toolbelt, cachy, webencodings, html5lib, poetry, wheel\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     Running setup.py install for scandir: started\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     Running setup.py install for scandir: finished with status 'done'\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     Running setup.py install for functools32: started\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     Running setup.py install for functools32: finished with status 'done'\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     Running setup.py install for secretstorage: started\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     Running setup.py install for secretstorage: finished with status 'done'\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     Running setup.py install for glob2: started\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     Running setup.py install for glob2: finished with status 'done'\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Successfully installed cachecontrol-0.12.6 cachy-0.3.0 certifi-2021.10.8 cffi-1.15.1 chardet-4.0.0 cleo-0.8.1 clikit-0.6.2 configparser-4.0.2 contextlib2-0.6.0.post1 cryptography-3.3.2 distlib-0.3.6 entrypoints-0.3 enum34-1.1.10 filelock-3.2.1 functools32-3.2.3.post2 futures-3.4.0 glob2-0.6 html5lib-1.1 idna-2.10 importlib-metadata-1.7.0 importlib-resources-3.3.1 ipaddress-1.0.23 keyring-18.0.1 lockfile-0.12.2 msgpack-1.0.5 packaging-20.9 pastel-0.2.1 pathlib2-2.3.7.post1 pexpect-4.8.0 pkginfo-1.8.3 platformdirs-2.0.2 poetry-1.1.15 poetry-core-1.0.8 ptyprocess-0.7.0 pycparser-2.21 pylev-1.4.0 pyparsing-2.4.7 requests-2.27.1 requests-toolbelt-0.9.1 scandir-1.10.0 secretstorage-2.3.1 shellingham-1.4.0 singledispatch-3.7.0 six-1.16.0 subprocess32-3.5.4 tomlkit-0.7.2 typing-3.10.0.0 urllib3-1.26.16 virtualenv-20.15.1 webencodings-0.5.1 wheel-0.37.1 zipp-1.2.0\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2705  Success - Main Install Poetry\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests] \u2b50 Run Main Install dependencies\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Python 2.7 will no longer be supported in the next feature release of Poetry (1.2).\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | You should consider updating your Python version to a supported one.\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Note that you will still be able to manage Python 2.7 projects by using the env command.\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | See https://python-poetry.org/docs/managing-environments/ for more information.\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Creating virtualenv flowpipe-dT5Z3rk5-py2.7 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Installing dependencies from lock file\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Package operations: 35 installs, 0 updates, 0 removals\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing scandir (1.10.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing contextlib2 (0.6.0.post1)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing six (1.16.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing typing (3.10.0.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing configparser (4.0.2)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing pathlib2 (2.3.7.post1)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing zipp (1.2.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing importlib-metadata (2.1.3)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing atomicwrites (1.4.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing certifi (2021.10.8)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing attrs (21.4.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing chardet (4.0.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing funcsigs (1.0.2)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing idna (2.10)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing more-itertools (5.0.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing pluggy (0.13.1)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing py (1.11.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing urllib3 (1.26.9)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing coverage (5.5)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing enum34 (1.1.10)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing functools32 (3.2.3-2)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing mccabe (0.6.1)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing pycodestyle (2.7.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing pyflakes (2.3.1)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing pytest (3.10.1)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing requests (2.27.1)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing strip-hints (0.1.10)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing ascii-canvas (1.3.5)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing codacy-coverage (1.3.11)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing flake8 (3.9.2)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing futures (3.3.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing mock (3.0.5)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing numpy (1.16.6)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing ordereddict (1.1)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   \u2022 Installing pytest-cov (2.9.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Installing the current project: Flowpipe (0.10.0)\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2705  Success - Main Install dependencies\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests] \u2b50 Run Main Run tests without coverage\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Python 2.7 will no longer be supported in the next feature release of Poetry (1.2).\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | You should consider updating your Python version to a supported one.\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | Note that you will still be able to manage Python 2.7 projects by using the env command.\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | See https://python-poetry.org/docs/managing-environments/ for more information.\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | ============================= test session starts ==============================\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | platform linux2 -- Python 2.7.18, pytest-3.10.1, py-1.11.0, pluggy-0.13.1\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe, inifile:\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | plugins: cov-2.9.0\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | collected 115 items\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_convert_function_to_node.py ................                  [ 13%]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_event.py ....                                                 [ 17%]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_examples.py .                                                 [ 18%]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_graph.py .............................                        [ 43%]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_inputpluggroup.py ........                                    [ 50%]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_multiprocessing.py ..                                         [ 52%]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_node.py ..........................                            [ 74%]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_plugs.py ...................                                  [ 91%]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_subgraphs.py ........                                         [ 98%]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_utilities.py ..                                               [100%]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/report.xml -\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | =============================== warnings summary ===============================\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_graph.py::test_cycle_error_when_node_connects_out_to_own_upstream\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_graph.py:620: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     N1.inputs[\"in_\"] >> N3.outputs[\"out\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_graph.py:626: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     N1.inputs[\"in_\"][\"a\"] >> N3.outputs[\"out\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_graph.py:632: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     N1.inputs[\"in_\"][\"a\"] >> N3.outputs[\"out\"][\"a\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_graph.py::test_cycle_error_when_node_connects_out_to_own_upstream_across_subgraphs\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_graph.py:662: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     N1.inputs[\"in_\"] >> N3.outputs[\"out\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_graph.py:668: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     N1.inputs[\"in_\"][\"a\"] >> N3.outputs[\"out\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_graph.py:674: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     N1.inputs[\"in_\"][\"a\"] >> N3.outputs[\"out\"][\"a\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_inputpluggroup.py::test_rshift_connect_output_to_groupinput\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_inputpluggroup.py:102: DeprecationWarning: Use the disconnect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     main[\"A\"].outputs[\"out\"] << sub.inputs[\"graph_in\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_node.py::test_cannot_connect_node_to_itself\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_node.py:182: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     node.inputs[\"in1\"][\"0\"] >> node.outputs[\"out\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_node.py:186: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     node.inputs[\"in1\"] >> node.outputs[\"out\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_plugs.py::test_connect_and_disconnect_nodes\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_plugs.py:119: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     in_plug_b >> out_plug_a\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_plugs.py:122: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     in_plug_d >> out_plug_compound[\"0\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_plugs.py:125: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     in_plug_compound[\"2\"] >> out_plug_compound[\"1\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_plugs.py:130: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     in_plug_b >> out_plug_a\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_plugs.py:133: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     in_plug_d >> out_plug_compound[\"0\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_plugs.py:136: DeprecationWarning: Use the connect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     in_plug_compound[\"2\"] >> out_plug_compound[\"1\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_plugs.py::test_change_connections_sets_plug_dirty\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_plugs.py:155: DeprecationWarning: Use the disconnect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     out_plug << in_plug\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_plugs.py:163: DeprecationWarning: Use the disconnect method instead\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     out_compound_plug[\"0\"] << in_compound_plug[\"0\"]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_subgraphs.py::test_serialize_nested_graph_to_json\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/flowpipe/graph.py:348: DeprecationWarning: Graph.serialize is deprecated. Instead, use one of Graph.to_json or Graph.to_pickle\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     DeprecationWarning,\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/flowpipe/graph.py:348: DeprecationWarning: Graph.serialize is deprecated. Instead, use one of Graph.to_json or Graph.to_pickle\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     DeprecationWarning,\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/flowpipe/graph.py:348: DeprecationWarning: Graph.serialize is deprecated. Instead, use one of Graph.to_json or Graph.to_pickle\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     DeprecationWarning,\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/flowpipe/graph.py:348: DeprecationWarning: Graph.serialize is deprecated. Instead, use one of Graph.to_json or Graph.to_pickle\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     DeprecationWarning,\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/flowpipe/graph.py:348: DeprecationWarning: Graph.serialize is deprecated. Instead, use one of Graph.to_json or Graph.to_pickle\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     DeprecationWarning,\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/flowpipe/graph.py:348: DeprecationWarning: Graph.serialize is deprecated. Instead, use one of Graph.to_json or Graph.to_pickle\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     DeprecationWarning,\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | tests/test_utilities.py::test_node_encoder\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/tests/test_utilities.py:51: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   |     v == recovered_json[k]\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | \n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | -- Docs: https://docs.pytest.org/en/latest/warnings.html\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   | =================== 115 passed, 24 warnings in 10.30 seconds ===================\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2705  Success - Main Run tests without coverage\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests] \u2b50 Run Post Set up Python 2.7\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests]   \u2705  Success - Post Set up Python 2.7\n[6812a19f-092b-4145-b72b-7c428609b42b/Tests] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/PaulSchweizer-flowpipe/.github/workflows/pytest-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "6812a19f-092b-4145-b72b-7c428609b42b",
        "build_tool": "pytest",
        "elapsed_time": 207.77976727485657
    }
}