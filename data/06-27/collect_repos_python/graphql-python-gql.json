{
    "repository": "graphql-python/gql",
    "stars": 1313,
    "language": "python",
    "size": 637,
    "clone_url": "https://github.com/graphql-python/gql.git",
    "timestamp": "2023-07-01T10:56:37.135983Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_query",
                "time": 0.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_ignore_backend_content_type",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_cookies",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_error_code_401",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_error_code_429",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_error_code_500",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_error_code[{\"errors\": [\"Error 1\", \"Error 2\"]}]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_error_code[{\"errors\": {\"error_1\": \"Something\"}}]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_error_code[{\"errors\": 5}]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_invalid_protocol[param0]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_invalid_protocol[param1]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_invalid_protocol[param2]",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_invalid_protocol[param3]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_subscribe_not_supported",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_cannot_connect_twice",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_cannot_execute_if_not_connected",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_extra_args",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_query_variable_values",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_query_variable_values_fix_issue_292",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_execute_running_in_thread",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_subscribe_running_in_thread",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_file_upload",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_file_upload_with_content_type",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_file_upload_without_session",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_binary_file_upload",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_stream_reader_upload",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_async_generator_upload",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_file_upload_two_files",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_file_upload_list_of_two_files",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_using_cli",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_using_cli_ep[subprocess]",
                "time": 0.768,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_using_cli_invalid_param",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_using_cli_invalid_query",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_query_with_extensions",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_query_https[0]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_query_https[10]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_error_fetching_schema",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_reconnecting_session",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_reconnecting_session_retries[False]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_reconnecting_session_retries[<lambda>]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_reconnecting_session_start_connecting_task_twice",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_json_serializer",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp",
                "name": "test_aiohttp_connector_owner_false",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp_online",
                "name": "test_aiohttp_simple_query[http]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp_online",
                "name": "test_aiohttp_simple_query[https]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp_online",
                "name": "test_aiohttp_invalid_query",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_aiohttp_online",
                "name": "test_aiohttp_two_queries_in_parallel_using_two_tasks",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_auth",
                "name": "test_appsync_init_with_minimal_args",
                "time": 0.231,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_auth",
                "name": "test_appsync_init_with_no_credentials",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_auth",
                "name": "test_appsync_init_with_jwt_auth",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_auth",
                "name": "test_appsync_init_with_apikey_auth",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_auth",
                "name": "test_appsync_init_with_iam_auth_without_creds",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_auth",
                "name": "test_appsync_init_with_iam_auth_with_creds",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_auth",
                "name": "test_appsync_init_with_iam_auth_and_no_region",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_auth",
                "name": "test_munge_url",
                "time": 2.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_auth",
                "name": "test_munge_url_format",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_http",
                "name": "test_appsync_iam_mutation",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_websockets",
                "name": "test_appsync_subscription_api_key[realtime_appsync_server_keepalive]",
                "time": 0.457,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_websockets",
                "name": "test_appsync_subscription_iam_with_token[realtime_appsync_server]",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_websockets",
                "name": "test_appsync_subscription_iam_without_token[realtime_appsync_server]",
                "time": 0.361,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_websockets",
                "name": "test_appsync_execute_method_not_allowed[realtime_appsync_server]",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_websockets",
                "name": "test_appsync_fetch_schema_from_transport_not_allowed",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_websockets",
                "name": "test_appsync_subscription_api_key_unauthorized[realtime_appsync_server]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_websockets",
                "name": "test_appsync_subscription_iam_not_allowed[realtime_appsync_server]",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_websockets",
                "name": "test_appsync_subscription_server_sending_a_not_json_answer[realtime_appsync_server_not_json_answer]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_websockets",
                "name": "test_appsync_subscription_server_sending_an_error_without_an_id[realtime_appsync_server_error_without_id]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_appsync_websockets",
                "name": "test_appsync_subscription_variable_values_and_operation_name[realtime_appsync_server_keepalive]",
                "time": 0.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_async_client_validation",
                "name": "test_async_client_validation[client_params0-\\n    subscription ListenEpisodeReviews($ep: Episode!) {\\n      reviewAdded(episode: $ep) {\\n        stars,\\n        commentary,\\n        episode\\n      }\\n    }\\n-server_starwars]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_async_client_validation",
                "name": "test_async_client_validation[client_params1-\\n    subscription ListenEpisodeReviews($ep: Episode!) {\\n      reviewAdded(episode: $ep) {\\n        stars,\\n        commentary,\\n        episode\\n      }\\n    }\\n-server_starwars]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_async_client_validation",
                "name": "test_async_client_validation[client_params2-\\n    subscription ListenEpisodeReviews($ep: Episode!) {\\n      reviewAdded(episode: $ep) {\\n        stars,\\n        commentary,\\n        episode\\n      }\\n    }\\n-server_starwars]",
                "time": 0.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_async_client_validation",
                "name": "test_async_client_validation_invalid_query[client_params0-\\n    subscription ListenEpisodeReviews($ep: Episode!) {\\n      reviewAdded(episode: $ep) {\\n        not_valid_field,\\n        stars,\\n        commentary,\\n        episode\\n      }\\n    }\\n-server_starwars]",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_async_client_validation",
                "name": "test_async_client_validation_invalid_query[client_params1-\\n    subscription ListenEpisodeReviews($ep: Episode!) {\\n      reviewAdded(episode: $ep) {\\n        not_valid_field,\\n        stars,\\n        commentary,\\n        episode\\n      }\\n    }\\n-server_starwars]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_async_client_validation",
                "name": "test_async_client_validation_invalid_query[client_params2-\\n    subscription ListenEpisodeReviews($ep: Episode!) {\\n      reviewAdded(episode: $ep) {\\n        not_valid_field,\\n        stars,\\n        commentary,\\n        episode\\n      }\\n    }\\n-server_starwars]",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_async_client_validation",
                "name": "test_async_client_validation_different_schemas_parameters_forbidden[client_params0-\\n    subscription ListenEpisodeReviews($ep: Episode!) {\\n      reviewAdded(episode: $ep) {\\n        not_valid_field,\\n        stars,\\n        commentary,\\n        episode\\n      }\\n    }\\n-server_starwars]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_async_client_validation",
                "name": "test_async_client_validation_fetch_schema_from_server_valid_query[server0]",
                "time": 0.124,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_async_client_validation",
                "name": "test_async_client_validation_fetch_schema_from_server_invalid_query[server0]",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_async_client_validation",
                "name": "test_async_client_validation_fetch_schema_from_server_with_client_argument[server0]",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parser",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_headers",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_headers_invalid_header",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_operation_name",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_variable_value[param0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_variable_value[param1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_variable_value[param2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_variable_value[param3]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_variable_value[param4]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_variable_value[param5]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_variable_value[param6]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_variable_value[param7]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_variable_value_invalid_param[nocolon]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_variable_value_invalid_param[key:\"]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_aiohttp[http://your_server.com]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_aiohttp[https://your_server.com]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_websockets[ws://your_server.com]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_websockets[wss://your_server.com]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_phoenix[ws://your_server.com]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_phoenix[wss://your_server.com]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_appsync_websockets_iam[wss://XXXXXX.appsync-api.eu-west-3.amazonaws.com/graphql]",
                "time": 2.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_appsync_websockets_iam[wss://noregion.amazonaws.com/graphql]",
                "time": 2.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_main_appsync_websockets_iam[wss://XXXXXX.appsync-api.eu-west-3.amazonaws.com/graphql]",
                "time": 2.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_appsync_websockets_api_key[wss://XXXXXX.appsync-api.eu-west-3.amazonaws.com/graphql]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_appsync_websockets_jwt[wss://XXXXXX.appsync-api.eu-west-3.amazonaws.com/graphql]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_appsync_http_iam[https://XXXXXX.appsync-api.eu-west-3.amazonaws.com/graphql]",
                "time": 2.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_appsync_http_api_key[https://XXXXXX.appsync-api.eu-west-3.amazonaws.com/graphql]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_appsync_http_jwt[https://XXXXXX.appsync-api.eu-west-3.amazonaws.com/graphql]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_get_transport_no_protocol",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_ep_version[inprocess]",
                "time": 0.142,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_schema_download",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_schema_download_invalid_arg[invalid_args0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_schema_download_invalid_arg[invalid_args1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_parse_schema_download_invalid_arg[invalid_args2]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_request_transport_not_implemented",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_retries_on_transport",
                "time": 0.699,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_no_schema_exception",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_execute_result_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_http_transport_raise_for_status_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_http_transport_verify_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_http_transport_specify_method_valid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_http_transport_specify_method_invalid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_gql",
                "time": 0.108,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_sync_transport_close_on_schema_retrieval_failure",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_client",
                "name": "test_async_transport_close_on_schema_retrieval_failure",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_invalid_query[\\n    query getContinents {\\n      continents {\\n        code\\n        bloh\\n      }\\n    }\\n-graphqlws_server0]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_invalid_subscription[\\n    subscription getContinents {\\n      continents {\\n        code\\n        bloh\\n      }\\n    }\\n-server_invalid_subscription]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_server_does_not_send_ack[\\n    query getContinents {\\n      continents {\\n        code\\n        bloh\\n      }\\n    }\\n-server_no_ack]",
                "time": 1.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_sending_invalid_query[server_invalid_query]",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_transport_protocol_errors[graphqlws_server0]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_transport_protocol_errors[graphqlws_server1]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_transport_protocol_errors[graphqlws_server2]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_transport_protocol_errors[graphqlws_server3]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_transport_protocol_errors[graphqlws_server4]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_transport_protocol_errors[graphqlws_server5]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_transport_protocol_errors[graphqlws_server6]",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_transport_protocol_errors[graphqlws_server7]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_transport_protocol_errors[graphqlws_server8]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_transport_protocol_errors[graphqlws_server9]",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_transport_protocol_errors[graphqlws_server10]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_server_does_not_ack[server_without_ack]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_server_closing_directly[server_closing_directly]",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_exceptions",
                "name": "test_graphqlws_server_closing_after_ack[server_closing_after_ack]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.259,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_break[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_task_cancel[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.138,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_close_transport[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_server_connection_closed[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_close_connection_in_middle]",
                "time": 0.153,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_with_operation_name[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.278,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_with_keepalive[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_keepalive]",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_with_keepalive_with_timeout_ok[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_keepalive]",
                "time": 0.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_with_keepalive_with_timeout_nok[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_keepalive]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_with_ping_interval_ok[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_keepalive]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_with_ping_interval_nok[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_dont_answer_pings]",
                "time": 0.208,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_manual_pings_with_payload[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_keepalive]",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_manual_pong_answers_with_payload[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_keepalive]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_sync[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_keepalive]",
                "time": 0.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_sync_graceful_shutdown[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_keepalive]",
                "time": 0.144,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_running_in_thread[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_keepalive]",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_reconnecting_session[False-\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_disconnect]",
                "time": 0.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphqlws_subscription",
                "name": "test_graphqlws_subscription_reconnecting_session[True-\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_disconnect]",
                "time": 0.383,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_async_client_async_transport[True-http]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_async_client_async_transport[True-https]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_async_client_async_transport[False-http]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_async_client_async_transport[False-https]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_async_client_sync_transport[True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_async_client_sync_transport[False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_sync_client_async_transport[True-http]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_sync_client_async_transport[True-https]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_sync_client_async_transport[False-http]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_sync_client_async_transport[False-https]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_sync_client_sync_transport[True-http]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_sync_client_sync_transport[True-https]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_sync_client_sync_transport[False-http]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http_async_sync",
                "name": "test_sync_client_sync_transport[False-https]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_query",
                "time": 0.217,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_cookies",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_error_code_401",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_error_code_429",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_error_code_500",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_error_code",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_invalid_protocol[{}]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_invalid_protocol[qlsjfqsdlkj]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_invalid_protocol[{\"not_data_or_errors\": 35}]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_cannot_connect_twice",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_cannot_execute_if_not_connected",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_query_with_extensions",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_file_upload",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_file_upload_with_content_type",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_file_upload_additional_headers",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_binary_file_upload",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_file_upload_two_files",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_file_upload_list_of_two_files",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx",
                "name": "test_httpx_error_fetching_schema",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_query",
                "time": 0.149,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_ignore_backend_content_type",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_cookies",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_error_code_401",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_error_code_429",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_error_code_500",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_error_code[{\"errors\": [\"Error 1\", \"Error 2\"]}]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_error_code[{\"errors\": {\"error_1\": \"Something\"}}]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_error_code[{\"errors\": 5}]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_invalid_protocol[param0]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_invalid_protocol[param1]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_invalid_protocol[param2]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_invalid_protocol[param3]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_subscribe_not_supported",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_cannot_connect_twice",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_cannot_execute_if_not_connected",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_extra_args",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_query_variable_values",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_query_variable_values_fix_issue_292",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_execute_running_in_thread",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_subscribe_running_in_thread",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_file_upload",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_file_upload_without_session",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_binary_file_upload",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_file_upload_two_files",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_file_upload_list_of_two_files",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_using_cli",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_using_cli_ep[subprocess]",
                "time": 0.848,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_using_cli_invalid_param",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_using_cli_invalid_query",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_query_with_extensions",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_query_https",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_error_fetching_schema",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_reconnecting_session",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_reconnecting_session_retries[False]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_reconnecting_session_retries[<lambda>]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_reconnecting_session_start_connecting_task_twice",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_async",
                "name": "test_httpx_json_serializer",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_online",
                "name": "test_httpx_simple_query[http]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_online",
                "name": "test_httpx_simple_query[https]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_online",
                "name": "test_httpx_invalid_query",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_httpx_online",
                "name": "test_httpx_two_queries_in_parallel_using_two_tasks",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_query_protocol_error[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server0]",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_query_protocol_error[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server1]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_query_protocol_error[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server2]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_query_protocol_error[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server3]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_query_protocol_error[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server4]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_query_protocol_error[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-no_connection_ack_phoenix_server]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_query_protocol_error[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server5]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_query_error[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server0]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_query_error[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server1]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_query_error[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server2]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_query_error[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server3]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_subscription_protocol_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server0]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_subscription_protocol_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server1]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_subscription_protocol_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server2]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_subscription_protocol_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server3]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_subscription_protocol_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server4]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_subscription_protocol_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server5]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_subscription_protocol_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server6]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_subscription_protocol_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server7]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_subscription_protocol_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server8]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_subscription_protocol_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server9]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_subscription_protocol_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server10]",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_subscription_protocol_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server11]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_server_error[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_unsubscribe_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server0]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_unsubscribe_error[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server1]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_exceptions",
                "name": "test_phoenix_channel_unsubscribe_error_forcing[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-phoenix_server]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_query",
                "name": "test_phoenix_channel_query[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-query_server]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_query",
                "name": "test_phoenix_channel_subscription[\\n    subscription getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-subscription_server]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_subscription",
                "name": "test_phoenix_channel_subscription[0-\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_subscription",
                "name": "test_phoenix_channel_subscription[5-\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_subscription",
                "name": "test_phoenix_channel_subscription_no_break[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_phoenix_channel_subscription",
                "name": "test_phoenix_channel_heartbeat[\\n    subscription {\\n      heartbeat {\\n        heartbeat_count\\n      }\\n    }\\n-phoenix_heartbeat_server]",
                "time": 0.672,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_query",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_cookies",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_error_code_401",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_error_code_429",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_error_code_500",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_error_code",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_invalid_protocol[{}]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_invalid_protocol[qlsjfqsdlkj]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_invalid_protocol[{\"not_data_or_errors\": 35}]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_cannot_connect_twice",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_cannot_execute_if_not_connected",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_query_with_extensions",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_file_upload",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_file_upload_with_content_type",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_file_upload_additional_headers",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_binary_file_upload",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_file_upload_two_files",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_file_upload_list_of_two_files",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_requests",
                "name": "test_requests_error_fetching_schema",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_transport",
                "name": "test_hero_name_query",
                "time": 0.236,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_transport",
                "name": "test_query_with_variable",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_transport",
                "name": "test_named_query",
                "time": 0.111,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_transport",
                "name": "test_header_query",
                "time": 0.181,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_invalid_query[\\n    query getContinents {\\n      continents {\\n        code\\n        bloh\\n      }\\n    }\\n-server0]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_invalid_subscription[\\n    subscription getContinents {\\n      continents {\\n        code\\n        bloh\\n      }\\n    }\\n-server_invalid_subscription]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_server_does_not_send_ack[\\n    query getContinents {\\n      continents {\\n        code\\n        bloh\\n      }\\n    }\\n-server_no_ack]",
                "time": 1.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_sending_invalid_data[\\n    query getContinents {\\n      continents {\\n        code\\n        bloh\\n      }\\n    }\\n-server_connection_error]",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_sending_invalid_payload[\\n    query getContinents {\\n      continents {\\n        code\\n        bloh\\n      }\\n    }\\n-server_invalid_payload]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_transport_protocol_errors[server0]",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_transport_protocol_errors[server1]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_transport_protocol_errors[server2]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_transport_protocol_errors[server3]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_transport_protocol_errors[server4]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_transport_protocol_errors[server5]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_transport_protocol_errors[server6]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_transport_protocol_errors[server7]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_transport_protocol_errors[server8]",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_transport_protocol_errors[server9]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_server_does_not_ack[server_without_ack]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_server_closing_directly[server_closing_directly]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_server_closing_after_ack[server_closing_after_ack]",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_server_sending_invalid_query_errors[server_sending_invalid_query_errors]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_non_regression_bug_105[server_sending_invalid_query_errors]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_exceptions",
                "name": "test_websocket_using_cli_invalid_query[server0]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_online",
                "name": "test_websocket_simple_query",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_online",
                "name": "test_websocket_invalid_query",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_online",
                "name": "test_websocket_sending_invalid_data",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_online",
                "name": "test_websocket_sending_invalid_payload",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_online",
                "name": "test_websocket_sending_invalid_data_while_other_query_is_running",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_online",
                "name": "test_websocket_two_queries_in_parallel_using_two_tasks",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "need --run-online option to run",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_starting_client_in_context_manager[server0]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_using_ssl_connection[ws_ssl_server0]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_simple_query[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-server0]",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_two_queries_in_series[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-server0]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_two_queries_in_parallel[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-server1_two_queries_in_parallel]",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_server_closing_after_first_query[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-server_closing_while_we_are_doing_something_else]",
                "time": 0.125,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_ignore_invalid_id[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-server0]",
                "time": 0.15,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_multiple_connections_in_series[server0]",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_multiple_connections_in_parallel[server0]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_trying_to_connect_to_already_connected_transport[server0]",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_connect_success_with_authentication_in_connection_init[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-server_with_authentication_in_connection_init_payload]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_connect_failed_with_authentication_in_connection_init[init_payload0-\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-server_with_authentication_in_connection_init_payload]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_connect_failed_with_authentication_in_connection_init[init_payload1-\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-server_with_authentication_in_connection_init_payload]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_execute_sync[server0]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_add_extra_parameters_to_connect[server0]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_non_regression_bug_108[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-server_sending_keep_alive_before_connection_ack]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_using_cli[server0]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_query",
                "name": "test_websocket_simple_query_with_extensions[\\n    query getContinents {\\n      continents {\\n        code\\n        name\\n      }\\n    }\\n-server0]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_get_execution_result[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_break[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_task_cancel[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_close_transport[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_server_connection_closed[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown_close_connection_in_middle]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_slow_consumer[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.196,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_with_operation_name[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_with_keepalive[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.117,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_with_keepalive_with_timeout_ok[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_with_keepalive_with_timeout_nok[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_sync[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_sync_user_exception[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_sync_break[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_sync_graceful_shutdown[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_websocket_subscription",
                "name": "test_websocket_subscription_running_in_thread[\\n    subscription {{\\n      countdown (count: {count}) {{\\n        number\\n      }}\\n    }}\\n-server_countdown]",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_datetime",
                "name": "test_shift_days",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_datetime",
                "name": "test_shift_days_serialized_manually_in_query",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_datetime",
                "name": "test_shift_days_serialized_manually_in_variables",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_datetime",
                "name": "test_latest",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_datetime",
                "name": "test_seconds",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_datetime",
                "name": "test_seconds_omit_optional_start_argument",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_enum_colors",
                "name": "test_parse_value_enum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_enum_colors",
                "name": "test_serialize_enum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_enum_colors",
                "name": "test_get_all_colors",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_enum_colors",
                "name": "test_opposite_color_literal",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_enum_colors",
                "name": "test_opposite_color_variable_serialized_manually",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_enum_colors",
                "name": "test_opposite_color_variable_serialized_by_gql",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_enum_colors",
                "name": "test_list",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_enum_colors",
                "name": "test_list_of_list",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_enum_colors",
                "name": "test_list_of_list_of_list",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_enum_colors",
                "name": "test_update_schema_enum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_enum_colors",
                "name": "test_update_schema_enum_errors",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_enum_colors",
                "name": "test_parse_results_with_operation_type",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_json",
                "name": "test_json_value_output",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_json",
                "name": "test_json_value_input_in_ast",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_json",
                "name": "test_json_value_input_in_ast_with_variables",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_json",
                "name": "test_json_value_input_in_dsl_argument",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_json",
                "name": "test_none_json_value_input_in_dsl_argument",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_json",
                "name": "test_json_value_input_with_none_list_in_dsl_argument",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_in_output",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_in_output_embedded_fragments",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_list_in_output",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_in_input_query",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_in_input_variable_values",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_in_input_variable_values_serialized",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_in_input_variable_values_serialized_with_operation_name",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_serialize_variable_values_exception_multiple_ops_without_operation_name",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_serialize_variable_values_exception_operation_name_not_found",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_subscribe_in_input_variable_values_serialized",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_in_output_with_transport",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_in_input_query_with_transport",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_in_input_variable_values_with_transport",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_in_input_variable_values_split_with_transport",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_serialize_variables",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_serialize_variables_no_schema",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_serialize_variables_schema_from_introspection",
                "time": 0.121,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_update_schema_scalars",
                "time": 0.123,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_update_schema_scalars_invalid_scalar",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_update_schema_scalars_invalid_scalar_argument",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_update_schema_scalars_scalar_not_found_in_schema",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_update_schema_scalars_scalar_type_is_not_a_scalar_in_schema",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_custom_scalar_serialize_variables_sync_transport",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_serialize_value_with_invalid_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_serialize_value_with_non_null_type_null",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_serialize_value_with_nullable_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_money",
                "name": "test_gql_cli_print_schema",
                "time": 0.117,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_scalars.test_parse_results",
                "name": "test_parse_results_null_mapping",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.nested_input.test_nested_input",
                "name": "test_nested_input",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.nested_input.test_nested_input",
                "name": "test_nested_input_2",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.nested_input.test_nested_input",
                "name": "test_nested_input_3",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_ast_from_value_with_input_type_and_not_mapping_value",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_ast_from_value_with_list_type_and_non_iterable_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_ast_from_value_with_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_ast_from_value_with_undefined",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_ast_from_value_with_graphqlid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_ast_from_value_with_invalid_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_ast_from_value_with_non_null_type_and_none",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_ast_from_value_float_precision",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_ast_from_serialized_value_untyped_typeerror",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_variable_to_ast_type_passing_wrapping_type",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_use_variable_definition_multiple_times",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_add_variable_definitions",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_add_variable_definitions_with_default_value_enum",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_add_variable_definitions_with_default_value_input_object",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_add_variable_definitions_in_input_object",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_invalid_field_on_type_query",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_incompatible_field",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_hero_name_query",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_hero_name_and_friends_query",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_hero_id_and_name",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_nested_query",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_fetch_luke_query",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_fetch_luke_aliased",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_fetch_name_aliased",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_fetch_name_aliased_as_kwargs",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_hero_name_query_result",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_arg_serializer_list",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_arg_serializer_enum",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_create_review_mutation_result",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_subscription",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_field_does_not_exit_in_type",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_try_to_select_on_scalar_field",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_invalid_arg",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_multiple_root_fields",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_root_fields_aliased",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_operation_name",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_multiple_operations",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_inline_fragments",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_inline_fragments_nested",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_fragments_repr",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_fragments",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_fragment_without_type_condition_error",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_inline_fragment_in_dsl_gql",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_fragment_with_name_changed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_fragment_select_field_not_in_fragment",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_dsl_nested_query_with_fragment",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_dsl_query_all_fields_should_be_instances_of_DSLField",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_dsl_query_all_fields_should_correspond_to_the_root_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_dsl_root_type_not_default",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_dsl_gql_all_arguments_should_be_operations_or_fragments",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_DSLSchema_requires_a_schema",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_invalid_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_invalid_type_union",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_hero_name_query_with_typename",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_type_hero_query",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_invalid_meta_field_selection",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_get_introspection_query_ast[True]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_get_introspection_query_ast[False]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_dsl",
                "name": "test_typename_aliased",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_introspection",
                "name": "test_starwars_introspection_args",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_parse_results",
                "name": "test_hero_name_and_friends_query",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_parse_results",
                "name": "test_key_not_found_in_result",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_parse_results",
                "name": "test_invalid_result_raise_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_parse_results",
                "name": "test_fragment",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_parse_results",
                "name": "test_fragment_not_found",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_parse_results",
                "name": "test_return_none_if_result_is_none",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_parse_results",
                "name": "test_null_result_is_allowed",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_parse_results",
                "name": "test_inline_fragment",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_hero_name_query",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_hero_name_and_friends_query",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_nested_query",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_fetch_luke_query",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_fetch_some_id_query",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_fetch_some_id_query2",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_invalid_id_query",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_fetch_luke_aliased",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_fetch_luke_and_leia_aliased",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_duplicate_fields",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_use_fragment",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_check_type_of_r2",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_check_type_of_luke",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_parse_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_query",
                "name": "test_mutation_result",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_subscription",
                "name": "test_subscription_support",
                "time": 0.206,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_subscription",
                "name": "test_subscription_support_using_client",
                "time": 0.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_subscription",
                "name": "test_subscription_support_using_client_invalid_field",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_incompatible_request_gql[local_schema]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_incompatible_request_gql[typedef_schema]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_incompatible_request_gql[introspection_schema]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_incompatible_request_gql[introspection_schema_empty_directives]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_incompatible_request_gql[introspection_schema_no_directives]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_nested_query_with_fragment[local_schema]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_nested_query_with_fragment[typedef_schema]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_nested_query_with_fragment[introspection_schema]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_nested_query_with_fragment[introspection_schema_empty_directives]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_nested_query_with_fragment[introspection_schema_no_directives]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_non_existent_fields[local_schema]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_non_existent_fields[typedef_schema]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_non_existent_fields[introspection_schema]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_non_existent_fields[introspection_schema_empty_directives]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_non_existent_fields[introspection_schema_no_directives]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_require_fields_on_object[local_schema]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_require_fields_on_object[typedef_schema]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_require_fields_on_object[introspection_schema]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_require_fields_on_object[introspection_schema_empty_directives]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_require_fields_on_object[introspection_schema_no_directives]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_disallows_fields_on_scalars[local_schema]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_disallows_fields_on_scalars[typedef_schema]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_disallows_fields_on_scalars[introspection_schema]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_disallows_fields_on_scalars[introspection_schema_empty_directives]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_disallows_fields_on_scalars[introspection_schema_no_directives]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_disallows_object_fields_on_interfaces[local_schema]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_disallows_object_fields_on_interfaces[typedef_schema]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_disallows_object_fields_on_interfaces[introspection_schema]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_disallows_object_fields_on_interfaces[introspection_schema_empty_directives]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_disallows_object_fields_on_interfaces[introspection_schema_no_directives]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_allows_object_fields_in_fragments[local_schema]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_allows_object_fields_in_fragments[typedef_schema]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_allows_object_fields_in_fragments[introspection_schema]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_allows_object_fields_in_fragments[introspection_schema_empty_directives]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_allows_object_fields_in_fragments[introspection_schema_no_directives]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_allows_object_fields_in_inline_fragments[local_schema]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_allows_object_fields_in_inline_fragments[typedef_schema]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_allows_object_fields_in_inline_fragments[introspection_schema]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_allows_object_fields_in_inline_fragments[introspection_schema_empty_directives]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_allows_object_fields_in_inline_fragments[introspection_schema_no_directives]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_include_directive[local_schema]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_include_directive[typedef_schema]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_include_directive[introspection_schema]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_include_directive[introspection_schema_empty_directives]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_include_directive[introspection_schema_no_directives]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_skip_directive[local_schema]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_skip_directive[typedef_schema]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_skip_directive[introspection_schema]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_skip_directive[introspection_schema_empty_directives]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_skip_directive[introspection_schema_no_directives]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.starwars.test_validation",
                "name": "test_build_client_schema_invalid_introspection",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ] \ud83d\ude80  Start image=crawlergpt:latest\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra] \ud83d\ude80  Start image=crawlergpt:latest\n[049fcb52-f711-44a5-b822-6352e185fff7/build       ] \ud83d\udea7  Skipping unsupported platform -- Try running with `-P =...`\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/graphql-python-gql] user=0 workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/graphql-python-gql] user=0 workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra] \ud83e\uddea  Matrix: map[dependency:aiohttp]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra] \u2b50 Run Main actions/checkout@v3\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2705  Success - Main actions/checkout@v3\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra] \u2b50 Run Main Set up Python 3.8\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udc33  docker cp src=/tmp/act-cache/25520a1c-0286-4573-96d4-f96d58b2c461/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2753  ::group::Installed versions\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::isExplicit: \n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::explicit? false\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::explicit? true\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::explicit? true\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::explicit? true\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::explicit? true\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::explicit? true\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::explicit? true\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::evaluating 6 versions\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::matched: 3.8.11\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Successfully set up CPython (3.8.11)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2753  ::endgroup::\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2705  Success - Main Set up Python 3.8\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2699  ::set-output:: python-version=3.8.11\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra] \u2b50 Run Main Install dependencies with only aiohttp extra dependency\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ] \u2b50 Run Main actions/checkout@v3\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2705  Success - Main actions/checkout@v3\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ] \u2b50 Run Main Set up Python 3.8\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker cp src=/tmp/act-cache/25520a1c-0286-4573-96d4-f96d58b2c461/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2753  ::group::Installed versions\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::isExplicit: \n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::explicit? false\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::explicit? true\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::explicit? true\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::explicit? true\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::explicit? true\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::explicit? true\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::explicit? true\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::matched: 3.8.11\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Successfully set up CPython (3.8.11)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2753  ::endgroup::\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2705  Success - Main Set up Python 3.8\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (21.2.4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting pip\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting wheel\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading wheel-0.40.0-py3-none-any.whl (64 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2699  ::set-output:: python-version=3.8.11\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Installing collected packages: wheel, pip\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Attempting uninstall: pip\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |     Found existing installation: pip 21.2.4\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ] \u2b50 Run Main Install test dependencies\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |     Uninstalling pip-21.2.4:\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |       Successfully uninstalled pip-21.2.4\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Successfully installed pip-23.1.2 wheel-0.40.0\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/graphql-python-gql\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Preparing metadata (setup.py): started\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Preparing metadata (setup.py): finished with status 'done'\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting graphql-core<3.4,>=3.3.0a3 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading graphql_core-3.3.0a3-py3-none-any.whl (209 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 209.9/209.9 kB 8.2 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting yarl<2.0,>=1.6 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading yarl-1.9.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (266 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 266.9/266.9 kB 16.0 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting backoff<3.0,>=1.11.1 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading backoff-2.2.1-py3-none-any.whl (15 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting aiohttp<3.9.0,>=3.8.0 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading aiohttp-3.8.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.0/1.0 MB 23.9 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting parse==1.15.0 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading parse-1.15.0.tar.gz (29 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Preparing metadata (setup.py): started\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Preparing metadata (setup.py): finished with status 'done'\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting pytest==6.2.5 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading pytest-6.2.5-py3-none-any.whl (280 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 280.7/280.7 kB 9.1 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting pytest-asyncio==0.16.0 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading pytest_asyncio-0.16.0-py3-none-any.whl (12 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting pytest-console-scripts==1.3.1 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading pytest_console_scripts-1.3.1-py3-none-any.whl (9.0 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting pytest-cov==3.0.0 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading pytest_cov-3.0.0-py3-none-any.whl (20 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting mock==4.0.2 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading mock-4.0.2-py3-none-any.whl (28 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting vcrpy==4.0.2 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading vcrpy-4.0.2-py2.py3-none-any.whl (37 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting aiofiles (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading aiofiles-23.1.0-py3-none-any.whl (14 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting attrs>=19.2.0 (from pytest==6.2.5->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 3.3 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting iniconfig (from pytest==6.2.5->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting packaging (from pytest==6.2.5->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 773.7 kB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting pluggy<2.0,>=0.12 (from pytest==6.2.5->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting py>=1.8.2 (from pytest==6.2.5->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 98.7/98.7 kB 8.8 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting toml (from pytest==6.2.5->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov==3.0.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading coverage-7.2.7-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (229 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 229.9/229.9 kB 5.9 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting PyYAML (from vcrpy==4.0.2->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading PyYAML-6.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (701 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 701.2/701.2 kB 9.3 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting wrapt (from vcrpy==4.0.2->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading wrapt-1.15.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (81 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 81.5/81.5 kB 2.8 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting six>=1.5 (from vcrpy==4.0.2->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting charset-normalizer<4.0,>=2.0 (from aiohttp<3.9.0,>=3.8.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 195.9/195.9 kB 2.1 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting multidict<7.0,>=4.5 (from aiohttp<3.9.0,>=3.8.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading multidict-6.0.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (121 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 121.3/121.3 kB 1.6 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting async-timeout<5.0,>=4.0.0a3 (from aiohttp<3.9.0,>=3.8.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting frozenlist>=1.1.1 (from aiohttp<3.9.0,>=3.8.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading frozenlist-1.3.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (161 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 161.3/161.3 kB 6.4 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting aiosignal>=1.1.2 (from aiohttp<3.9.0,>=3.8.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading aiosignal-1.3.1-py3-none-any.whl (7.6 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting typing-extensions<5.0,>=4.5 (from graphql-core<3.4,>=3.3.0a3->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting idna>=2.0 (from yarl<2.0,>=1.6->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 2.8 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Collecting tomli (from coverage[toml]>=5.2.1->pytest-cov==3.0.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Building wheels for collected packages: parse, gql\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Building wheel for parse (setup.py): started\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Building wheel for parse (setup.py): finished with status 'done'\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Created wheel for parse: filename=parse-1.15.0-py3-none-any.whl size=23710 sha256=1b02a020b7a5baa08a4d25a5530997cd3d4a29b1d18c5c2ca7382e01730436d4\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/c3/19/07/8dbdfbbe6659e4dd5664b57526f05cd87678d2a9b3f0b5091f\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Building wheel for gql (setup.py): started\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (21.2.4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Building wheel for gql (setup.py): finished with status 'done'\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Created wheel for gql: filename=gql-3.5.0b4-py2.py3-none-any.whl size=69060 sha256=6a71ff166d778854ef3c032275a83675cfdeebcda294b7af55e01253ecc23b5f\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/7c/14/0b/ca35a652d91670d42facbfbbd4acae262844f20423cbbe6fbe\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Successfully built parse gql\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting pip\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting wheel\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading wheel-0.40.0-py3-none-any.whl (64 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Installing collected packages: parse, wrapt, typing-extensions, tomli, toml, six, PyYAML, py, pluggy, packaging, multidict, mock, iniconfig, idna, frozenlist, coverage, charset-normalizer, backoff, attrs, async-timeout, aiofiles, yarl, pytest, graphql-core, aiosignal, vcrpy, pytest-cov, pytest-console-scripts, pytest-asyncio, gql, aiohttp\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Installing collected packages: wheel, pip\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Attempting uninstall: pip\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     Found existing installation: pip 21.2.4\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     Uninstalling pip-21.2.4:\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |       Successfully uninstalled pip-21.2.4\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | Successfully installed PyYAML-6.0 aiofiles-23.1.0 aiohttp-3.8.4 aiosignal-1.3.1 async-timeout-4.0.2 attrs-23.1.0 backoff-2.2.1 charset-normalizer-3.1.0 coverage-7.2.7 frozenlist-1.3.3 gql-3.5.0b4 graphql-core-3.3.0a3 idna-3.4 iniconfig-2.0.0 mock-4.0.2 multidict-6.0.4 packaging-23.1 parse-1.15.0 pluggy-1.2.0 py-1.11.0 pytest-6.2.5 pytest-asyncio-0.16.0 pytest-console-scripts-1.3.1 pytest-cov-3.0.0 six-1.16.0 toml-0.10.2 tomli-2.0.1 typing-extensions-4.7.0 vcrpy-4.0.2 wrapt-1.15.0 yarl-1.9.2\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | \n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | [notice] A new release of pip is available: 21.1.1 -> 23.1.2\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | [notice] To update, run: pip install --upgrade pip\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2705  Success - Main Install dependencies with only aiohttp extra dependency\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra] \u2b50 Run Main Test with --aiohttp-only\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Successfully installed pip-23.1.2 wheel-0.40.0\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/graphql-python-gql\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Preparing metadata (setup.py): started\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Preparing metadata (setup.py): finished with status 'done'\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting graphql-core<3.4,>=3.3.0a3 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading graphql_core-3.3.0a3-py3-none-any.whl (209 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 209.9/209.9 kB 5.3 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting yarl<2.0,>=1.6 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading yarl-1.9.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (266 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 266.9/266.9 kB 8.8 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting backoff<3.0,>=1.11.1 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading backoff-2.2.1-py3-none-any.whl (15 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting aiohttp<3.9.0,>=3.8.0 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading aiohttp-3.8.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.0/1.0 MB 6.3 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting requests<3,>=2.26 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 7.2 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting requests_toolbelt<1,>=0.9.1 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading requests_toolbelt-0.10.1-py2.py3-none-any.whl (54 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 54.5/54.5 kB 7.9 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting urllib3<2,>=1.26 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.1/143.1 kB 12.7 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting httpx<1,>=0.23.1 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading httpx-0.24.1-py3-none-any.whl (75 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 75.4/75.4 kB 8.4 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting websockets<11,>=10 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading websockets-10.4-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (106 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 107.0/107.0 kB 4.0 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting botocore<2,>=1.21 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading botocore-1.29.165-py3-none-any.whl (11.0 MB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.0/11.0 MB 27.1 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting parse==1.15.0 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading parse-1.15.0.tar.gz (29 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Preparing metadata (setup.py): started\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Preparing metadata (setup.py): finished with status 'done'\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting pytest==6.2.5 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading pytest-6.2.5-py3-none-any.whl (280 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 280.7/280.7 kB 29.0 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting pytest-asyncio==0.16.0 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading pytest_asyncio-0.16.0-py3-none-any.whl (12 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting pytest-console-scripts==1.3.1 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading pytest_console_scripts-1.3.1-py3-none-any.whl (9.0 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting pytest-cov==3.0.0 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading pytest_cov-3.0.0-py3-none-any.whl (20 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting mock==4.0.2 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading mock-4.0.2-py3-none-any.whl (28 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting vcrpy==4.0.2 (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading vcrpy-4.0.2-py2.py3-none-any.whl (37 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting aiofiles (from gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading aiofiles-23.1.0-py3-none-any.whl (14 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting attrs>=19.2.0 (from pytest==6.2.5->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 13.9 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting iniconfig (from pytest==6.2.5->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting packaging (from pytest==6.2.5->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 7.9 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting pluggy<2.0,>=0.12 (from pytest==6.2.5->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting py>=1.8.2 (from pytest==6.2.5->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 98.7/98.7 kB 3.4 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting toml (from pytest==6.2.5->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov==3.0.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading coverage-7.2.7-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (229 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 229.9/229.9 kB 7.1 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting PyYAML (from vcrpy==4.0.2->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading PyYAML-6.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (701 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 701.2/701.2 kB 13.8 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting wrapt (from vcrpy==4.0.2->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading wrapt-1.15.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (81 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 81.5/81.5 kB 1.5 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting six>=1.5 (from vcrpy==4.0.2->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting charset-normalizer<4.0,>=2.0 (from aiohttp<3.9.0,>=3.8.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 195.9/195.9 kB 9.0 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting multidict<7.0,>=4.5 (from aiohttp<3.9.0,>=3.8.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading multidict-6.0.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (121 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 121.3/121.3 kB 5.9 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting async-timeout<5.0,>=4.0.0a3 (from aiohttp<3.9.0,>=3.8.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting frozenlist>=1.1.1 (from aiohttp<3.9.0,>=3.8.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading frozenlist-1.3.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (161 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 161.3/161.3 kB 2.6 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting aiosignal>=1.1.2 (from aiohttp<3.9.0,>=3.8.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading aiosignal-1.3.1-py3-none-any.whl (7.6 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting jmespath<2.0.0,>=0.7.1 (from botocore<2,>=1.21->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting python-dateutil<3.0.0,>=2.1 (from botocore<2,>=1.21->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | ============================= test session starts ==============================\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | platform linux -- Python 3.8.11, pytest-6.2.5, py-1.11.0, pluggy-1.2.0\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/graphql-python-gql, configfile: setup.cfg\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | plugins: asyncio-0.16.0, console-scripts-1.3.1, cov-3.0.0\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | collected 542 items\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | \n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 9.8 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting typing-extensions<5.0,>=4.5 (from graphql-core<3.4,>=3.3.0a3->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting certifi (from httpx<1,>=0.23.1->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 10.4 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting httpcore<0.18.0,>=0.15.0 (from httpx<1,>=0.23.1->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading httpcore-0.17.2-py3-none-any.whl (72 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 72.5/72.5 kB 5.2 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting idna (from httpx<1,>=0.23.1->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 4.0 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting sniffio (from httpx<1,>=0.23.1->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading sniffio-1.3.0-py3-none-any.whl (10 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting tomli (from coverage[toml]>=5.2.1->pytest-cov==3.0.0->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_aiohttp.py ...........................................        [  7%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_aiohttp_online.py ssss                                        [  8%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_appsync_auth.py sssssssss                                     [ 10%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_appsync_http.py s                                             [ 10%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_appsync_websockets.py ssssssssss                              [ 12%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_async_client_validation.py ssssssssss                         [ 14%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting h11<0.15,>=0.13 (from httpcore<0.18.0,>=0.15.0->httpx<1,>=0.23.1->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading h11-0.14.0-py3-none-any.whl (58 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 58.3/58.3 kB 5.2 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_cli.py ................ssssssssss........                     [ 20%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting anyio<5.0,>=3.0 (from httpcore<0.18.0,>=0.15.0->httpx<1,>=0.23.1->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_client.py .s.sssss.s.                                         [ 22%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_graphqlws_exceptions.py ssssssssssssssssss                    [ 25%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading anyio-3.7.0-py3-none-any.whl (80 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_graphqlws_subscription.py ssssssssssssssssss                  [ 29%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_http_async_sync.py ssssssssssssss                             [ 31%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 80.9/80.9 kB 1.4 MB/s eta 0:00:00\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_httpx.py sssssssssssssssssss                                  [ 35%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_httpx_async.py ssssssssssssssssssssssssssssssssssssss         [ 42%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_httpx_online.py ssss                                          [ 42%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_phoenix_channel_exceptions.py sssssssssssssssssssssssssss     [ 47%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_phoenix_channel_query.py ss                                   [ 48%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_phoenix_channel_subscription.py ssss                          [ 49%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_requests.py sssssssssssssssssss                               [ 52%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_transport.py ssss                                             [ 53%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_websocket_exceptions.py sssssssssssssssssssss                 [ 57%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_websocket_online.py ssssss                                    [ 58%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_websocket_query.py ssssssssssssssssss                         [ 61%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/test_websocket_subscription.py ssssssssssssssss                    [ 64%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/custom_scalars/test_datetime.py ......                             [ 65%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/custom_scalars/test_enum_colors.py ............                    [ 67%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/custom_scalars/test_json.py ......                                 [ 69%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Collecting exceptiongroup (from anyio<5.0,>=3.0->httpcore<0.18.0,>=0.15.0->httpx<1,>=0.23.1->gql==3.5.0b4)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Building wheels for collected packages: parse\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Building wheel for parse (setup.py): started\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/custom_scalars/test_money.py ......................s....           [ 73%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/custom_scalars/test_parse_results.py .                             [ 74%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/nested_input/test_nested_input.py ...                              [ 74%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/starwars/test_dsl.py ............................................. [ 83%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | ..............                                                           [ 85%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/starwars/test_introspection.py .                                   [ 85%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/starwars/test_parse_results.py ........                            [ 87%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Building wheel for parse (setup.py): finished with status 'done'\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Created wheel for parse: filename=parse-1.15.0-py3-none-any.whl size=23710 sha256=3d0598a282aca0bab341921cc90f11a670b1325f1db37004688735325db780ac\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/c3/19/07/8dbdfbbe6659e4dd5664b57526f05cd87678d2a9b3f0b5091f\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Successfully built parse\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/starwars/test_query.py ...............                             [ 90%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Installing collected packages: parse, wrapt, websockets, urllib3, typing-extensions, tomli, toml, sniffio, six, PyYAML, py, pluggy, packaging, multidict, mock, jmespath, iniconfig, idna, h11, frozenlist, exceptiongroup, coverage, charset-normalizer, certifi, backoff, attrs, async-timeout, aiofiles, yarl, requests, python-dateutil, pytest, graphql-core, anyio, aiosignal, vcrpy, requests_toolbelt, pytest-cov, pytest-console-scripts, pytest-asyncio, httpcore, gql, botocore, aiohttp, httpx\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/starwars/test_subscription.py ...                                  [ 90%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | tests/starwars/test_validation.py ...................................... [ 97%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | .............                                                            [100%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | \n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/graphql-python-gql/report.xml -\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   | ======================= 262 passed, 280 skipped in 5.95s =======================\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2705  Success - Main Test with --aiohttp-only\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra] \u2b50 Run Post Set up Python 3.8\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   Running setup.py develop for gql\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Successfully installed PyYAML-6.0 aiofiles-23.1.0 aiohttp-3.8.4 aiosignal-1.3.1 anyio-3.7.0 async-timeout-4.0.2 attrs-23.1.0 backoff-2.2.1 botocore-1.29.165 certifi-2023.5.7 charset-normalizer-3.1.0 coverage-7.2.7 exceptiongroup-1.1.1 frozenlist-1.3.3 gql-3.5.0b4 graphql-core-3.3.0a3 h11-0.14.0 httpcore-0.17.2 httpx-0.24.1 idna-3.4 iniconfig-2.0.0 jmespath-1.0.1 mock-4.0.2 multidict-6.0.4 packaging-23.1 parse-1.15.0 pluggy-1.2.0 py-1.11.0 pytest-6.2.5 pytest-asyncio-0.16.0 pytest-console-scripts-1.3.1 pytest-cov-3.0.0 python-dateutil-2.8.2 requests-2.31.0 requests_toolbelt-0.10.1 six-1.16.0 sniffio-1.3.0 toml-0.10.2 tomli-2.0.1 typing-extensions-4.7.0 urllib3-1.26.16 vcrpy-4.0.2 websockets-10.4 wrapt-1.15.0 yarl-1.9.2\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | [notice] A new release of pip is available: 21.1.1 -> 23.1.2\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | [notice] To update, run: pip install --upgrade pip\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2705  Success - Main Install test dependencies\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ] \u2b50 Run Main Test with coverage\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra]   \u2705  Success - Post Set up Python 3.8\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | ============================= test session starts ==============================\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | platform linux -- Python 3.8.11, pytest-6.2.5, py-1.11.0, pluggy-1.2.0\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/graphql-python-gql, configfile: setup.cfg\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | plugins: anyio-3.7.0, asyncio-0.16.0, console-scripts-1.3.1, cov-3.0.0\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | collected 542 items\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_aiohttp.py ...........................................        [  7%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_aiohttp_online.py ssss                                        [  8%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_appsync_auth.py .........                                     [ 10%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_appsync_http.py .                                             [ 10%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_appsync_websockets.py ..........                              [ 12%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_async_client_validation.py ..........                         [ 14%]\n[049fcb52-f711-44a5-b822-6352e185fff7/single_extra] \ud83c\udfc1  Job succeeded\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_cli.py ..................................                     [ 20%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_client.py ...sssss...                                         [ 22%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_graphqlws_exceptions.py ..................                    [ 25%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_graphqlws_subscription.py ..................                  [ 29%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_http_async_sync.py ssssssssssssss                             [ 31%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_httpx.py ...................                                  [ 35%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_httpx_async.py ......................................         [ 42%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_httpx_online.py ssss                                          [ 42%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_phoenix_channel_exceptions.py ...........................     [ 47%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_phoenix_channel_query.py ..                                   [ 48%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_phoenix_channel_subscription.py ....                          [ 49%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_requests.py ...................                               [ 52%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_transport.py ....                                             [ 53%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_websocket_exceptions.py .....................                 [ 57%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_websocket_online.py ssssss                                    [ 58%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_websocket_query.py ..................                         [ 61%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/test_websocket_subscription.py ................                    [ 64%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/custom_scalars/test_datetime.py ......                             [ 65%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/custom_scalars/test_enum_colors.py ............                    [ 67%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/custom_scalars/test_json.py ......                                 [ 69%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/custom_scalars/test_money.py ...........................           [ 73%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/custom_scalars/test_parse_results.py .                             [ 74%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/nested_input/test_nested_input.py ...                              [ 74%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/starwars/test_dsl.py ............................................. [ 83%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | ..............                                                           [ 85%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/starwars/test_introspection.py .                                   [ 85%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/starwars/test_parse_results.py ........                            [ 87%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/starwars/test_query.py ...............                             [ 90%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/starwars/test_subscription.py ...                                  [ 90%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | tests/starwars/test_validation.py ...................................... [ 97%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | .............                                                            [100%]\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/graphql-python-gql/report.xml -\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | ---------- coverage: platform linux, python 3.8.11-final-0 -----------\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Name                                           Stmts   Miss  Cover   Missing\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | ----------------------------------------------------------------------------\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/__init__.py                                    4      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/__version__.py                                 1      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/cli.py                                       198      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/client.py                                    321      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/dsl.py                                       337      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/gql.py                                         4      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/__init__.py                          3      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/aiohttp.py                         138      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/appsync_auth.py                     72      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/appsync_websockets.py               58      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/async_transport.py                  12      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/exceptions.py                       22      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/httpx.py                           107      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/local_schema.py                     25      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/phoenix_channel_websockets.py      168      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/requests.py                         99      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/transport.py                         7      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/websockets.py                      186      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/transport/websockets_base.py                 263      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/utilities/__init__.py                          7      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/utilities/build_client_schema.py              19      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/utilities/get_introspection_query_ast.py      50      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/utilities/parse_result.py                    165      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/utilities/serialize_variable_values.py        44      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/utilities/update_schema_enum.py               24      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/utilities/update_schema_scalars.py            20      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | gql/utils.py                                      31      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | ----------------------------------------------------------------------------\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | TOTAL                                           2385      0   100%\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Coverage XML written to file coverage.xml\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | ======================= 509 passed, 33 skipped in 39.73s =======================\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2705  Success - Main Test with coverage\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ] \u2b50 Run Main Upload coverage to Codecov\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker cp src=/tmp/act-cache/25520a1c-0286-4573-96d4-f96d58b2c461/act/codecov-codecov-action@v1/ dst=/var/run/act/actions/codecov-codecov-action@v1/\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v1/] user=0 workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v1/dist/index.js] user= workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | [command]/usr/bin/bash codecov.sh -n  -F  -Q github-action-v1.5.2\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   _____          _\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |  / ____|        | |\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | | |     ___   __| | ___  ___ _____   __\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |  \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |                               Bash-1.0.3\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;36m==>\u001b[0m git version 2.33.0 found\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;36m==>\u001b[0m curl 7.68.0 (x86_64-pc-linux-gnu) libcurl/7.68.0 OpenSSL/1.1.1f zlib/1.2.11 brotli/1.0.7 libidn2/2.2.0 libpsl/0.21.0 (+libidn2/2.2.0) libssh/0.9.3/openssl/zlib nghttp2/1.40.0 librtmp/2.3\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Release-Date: 2020-01-08\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | Features: AsynchDNS brotli GSS-API HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;90m==>\u001b[0m GitHub Actions detected.\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     Env vars used:\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |       -> GITHUB_ACTIONS:    true\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |       -> GITHUB_HEAD_REF:   \n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |       -> GITHUB_REF:        refs/heads/master\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |       -> GITHUB_REPOSITORY: graphql-python/gql\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |       -> GITHUB_RUN_ID:     1\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |       -> GITHUB_SHA:        8b5213433ead11912fad79f5899580406112ed4a\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |       -> GITHUB_WORKFLOW:   049fcb52-f711-44a5-b822-6352e185fff7\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     \u001b[0;90mproject root:\u001b[0m .\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     \u001b[0;32mYaml not found, that's ok! Learn more at\u001b[0m \u001b[0;36mhttp://docs.codecov.io/docs/codecov-yaml\u001b[0m\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;90m==>\u001b[0m Running gcov in . \u001b[0;90m(disable via -X gcov)\u001b[0m\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;90m==>\u001b[0m Searching for coverage reports in:\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     \u001b[0;32m+\u001b[0m .\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     \u001b[0;90m->\u001b[0m Found 2 reports\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;90m==>\u001b[0m Detecting git/mercurial file structure\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;90m==>\u001b[0m Reading reports\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     \u001b[0;32m+\u001b[0m ./coverage.xml \u001b[0;90mbytes=90710\u001b[0m\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     \u001b[0;32m+\u001b[0m ./report.xml \u001b[0;90mbytes=80574\u001b[0m\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;90m==>\u001b[0m Appending adjustments\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     \u001b[0;36mhttps://docs.codecov.io/docs/fixing-reports\u001b[0m\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     \u001b[0;90m->\u001b[0m No adjustments found\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;90m==>\u001b[0m Gzipping contents\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |         16K\t/tmp/codecov.q7zDLz.gz\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;90m==>\u001b[0m Uploading reports\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     \u001b[0;90murl:\u001b[0m https://codecov.io\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     \u001b[0;90mquery:\u001b[0m branch=master&commit=8b5213433ead11912fad79f5899580406112ed4a&build=1&build_url=http%3A%2F%2Fgithub.com%2Fgraphql-python%2Fgql%2Factions%2Fruns%2F1&name=&tag=&slug=graphql-python%2Fgql&service=github-actions&flags=&pr=&job=049fcb52-f711-44a5-b822-6352e185fff7&cmd_args=n,F,Q\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;90m->\u001b[0m  Pinging Codecov\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | https://codecov.io/upload/v4?package=github-action-v1.5.2-1.0.3&token=secret&branch=master&commit=8b5213433ead11912fad79f5899580406112ed4a&build=1&build_url=http%3A%2F%2Fgithub.com%2Fgraphql-python%2Fgql%2Factions%2Fruns%2F1&name=&tag=&slug=graphql-python%2Fgql&service=github-actions&flags=&pr=&job=049fcb52-f711-44a5-b822-6352e185fff7&cmd_args=n,F,Q\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;31m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | 404\u001b[0m\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \u001b[0;90m==>\u001b[0m Uploading to Codecov\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100 13928  100   171  100 13757    308  24787 --:--:-- --:--:-- --:--:-- 25050\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   |     \u001b[0;32m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\u001b[0m\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2705  Success - Main Upload coverage to Codecov\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ] \u2b50 Run Post Set up Python 3.8\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ]   \u2705  Success - Post Set up Python 3.8\n[049fcb52-f711-44a5-b822-6352e185fff7/coverage    ] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/graphql-python-gql/.github/workflows/tests-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "049fcb52-f711-44a5-b822-6352e185fff7",
        "build_tool": "pytest",
        "elapsed_time": 327.32692766189575
    }
}