{
    "repository": "liiight/notifiers",
    "stars": 2470,
    "language": "python",
    "size": 951,
    "clone_url": "https://github.com/liiight/notifiers.git",
    "timestamp": "2023-07-01T11:36:47.463392Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test] \ud83d\ude80  Start image=crawlergpt:latest\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/liiight-notifiers] user=0 workdir=\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v2\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test] \ud83e\uddea  Matrix: map[poetry-version:1.1.12 python-version:3.7]\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test] \u2b50 Run Main actions/checkout@v2\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2705  Success - Main actions/checkout@v2\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test] \u2b50 Run Main Set up Python 3.7\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/57269a64-c363-44ca-9dd3-7d0b7f42f5e3/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::isExplicit: \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::explicit? false\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::explicit? true\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::explicit? true\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::explicit? true\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::explicit? true\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::explicit? true\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::explicit? true\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::matched: 3.7.11\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Successfully setup CPython (3.7.11)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2705  Success - Main Set up Python 3.7\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2699  ::set-output:: python-version=3.7.11\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test] \u2b50 Run Main Install Poetry\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2.sh] user= workdir=\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Retrieving Poetry metadata\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | # Welcome to Poetry!\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | This will download and install the latest version of Poetry,\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | a dependency and package manager for Python.\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | /home/runneradmin/.local/bin\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | You can uninstall at any time by executing this script with the --uninstall option,\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | and these changes will be reverted.\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Installing Poetry (1.1.12)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Installing Poetry (1.1.12): Creating environment\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Installing Poetry (1.1.12): Installing Poetry\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Installing Poetry (1.1.12): Creating script\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Installing Poetry (1.1.12): Done\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Poetry (1.1.12) is installed now. Great!\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | environment variable.\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | You can test that everything is set up by executing:\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | `poetry --version`\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2705  Success - Main Install Poetry\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test] \u2b50 Run Main Update PATH\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2705  Success - Main Update PATH\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test] \u2b50 Run Main Install package\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4.sh] user= workdir=\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Creating virtualenv notifiers-4WIlY8Pu-py3.7 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Installing dependencies from lock file\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Warning: The lock file is not up to date with the latest changes in pyproject.toml. You may be getting outdated dependencies. Run update to update them.\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | Package operations: 56 installs, 0 updates, 0 removals\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing typing-extensions (4.0.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing zipp (3.7.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing certifi (2021.10.8)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing charset-normalizer (2.0.11)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing idna (3.3)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing importlib-metadata (4.10.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing markupsafe (2.0.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing pyparsing (3.0.7)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing pytz (2021.3)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing urllib3 (1.26.8)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing alabaster (0.7.12)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing attrs (21.4.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing babel (2.9.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing distlib (0.3.4)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing docutils (0.17.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing filelock (3.4.2)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing imagesize (1.3.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing iniconfig (1.1.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing jinja2 (3.0.3)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing packaging (21.3)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing platformdirs (2.5.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing pluggy (1.0.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing py (1.11.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing pygments (2.11.2)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing requests (2.27.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing six (1.16.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing snowballstemmer (2.2.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing sphinxcontrib-applehelp (1.0.2)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing sphinxcontrib-devhelp (1.0.2)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing sphinxcontrib-htmlhelp (2.0.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing sphinxcontrib-jsmath (1.0.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing sphinxcontrib-qthelp (1.0.3)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing sphinxcontrib-serializinghtml (1.1.5)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing tomli (2.0.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing cfgv (3.3.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing coverage (6.3.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing decorator (5.1.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing identify (2.4.9)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing importlib-resources (5.4.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing nodeenv (1.6.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing pyrsistent (0.18.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing pytest (7.1.2)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing pyyaml (6.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing sortedcontainers (2.4.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing sphinx (5.0.2)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing toml (0.10.2)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing virtualenv (20.13.1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing click (8.0.3)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing codecov (2.1.12)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing hypothesis (6.37.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing jsonschema (4.4.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing pre-commit (2.20.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing pytest-cov (3.0.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing retry (0.9.2)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing sphinx-autodoc-annotation (1.0-1)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   \u2022 Installing sphinx-rtd-theme (1.0.0)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   RuntimeError\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   Unable to find installation candidates for codecov (2.1.12)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |   at ~/.local/share/pypoetry/venv/lib/python3.7/site-packages/poetry/installation/chooser.py:73 in choose_for\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |        69\u2502             links.append(link)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |        70\u2502 \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |        71\u2502         if not links:\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |        72\u2502             raise RuntimeError(\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |     \u2192  73\u2502                 \"Unable to find installation candidates for {}\".format(package)\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |        74\u2502             )\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |        75\u2502 \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |        76\u2502         # Get the best link\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   |        77\u2502         chosen = max(links, key=lambda link: self._sort_key(package, link))\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   | \n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test]   \u274c  Failure - Main Install package\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test] exitcode '1': failure\n[13a2f3c8-d8f6-4731-8ee9-7206c5bf9573/test] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'test' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/liiight-notifiers/.github/workflows/pythonpackage-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "13a2f3c8-d8f6-4731-8ee9-7206c5bf9573",
        "build_tool": "pytest",
        "elapsed_time": 271.79517912864685
    }
}