{
    "repository": "plangrid/pdf-annotate",
    "stars": 161,
    "language": "python",
    "size": 10559,
    "clone_url": "https://github.com/plangrid/pdf-annotate.git",
    "timestamp": "2023-06-28T13:04:20.913772Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_graphics.TestCommandEquality",
                "name": "test_no_ordering",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestCommandEquality",
                "name": "test_static_commands",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestCommandEquality",
                "name": "test_tuple_commands",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestTupleCommand",
                "name": "test_args_list_removed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestTupleCommand",
                "name": "test_from_tokens",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestTupleCommand",
                "name": "test_meta_resolve",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestTupleCommand",
                "name": "test_num_args_filled_in",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestFloatTupleCommand",
                "name": "test_from_tokens",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestFloatTupleCommand",
                "name": "test_resolve",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestMatrixCommand",
                "name": "test_equality",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestMatrixCommand",
                "name": "test_from_tokens",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestMatrixCommand",
                "name": "test_raises_for_bad_matrix_size",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestMatrixCommand",
                "name": "test_resolve",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestMatrixCommand",
                "name": "test_transform",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestContentStream",
                "name": "test_content_stream",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestContentStream",
                "name": "test_content_stream_not_equal_to_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestContentStream",
                "name": "test_equality",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestContentStream",
                "name": "test_resolve",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestContentStream",
                "name": "test_text_content_stream",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestContentStream",
                "name": "test_transform_bezier",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestContentStream",
                "name": "test_transform_content_stream",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestContentStream",
                "name": "test_transform_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestContentStream",
                "name": "test_transform_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestContentStream",
                "name": "test_transform_rect",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestFormatting",
                "name": "test_commands_get_number_formatting",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_graphics.TestFormatting",
                "name": "test_format_number",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotator",
                "name": "test_add_annotation_page_dimensions",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotator",
                "name": "test_get_page_bounding_box",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotator",
                "name": "test_get_rotated_scale_from_dimensions",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotator",
                "name": "test_get_rotation",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotator",
                "name": "test_get_scale_default",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotator",
                "name": "test_get_scale_from_init",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotator",
                "name": "test_get_scale_from_page_dimensions",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotator",
                "name": "test_get_size",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotator",
                "name": "test_init_with_reader",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotator",
                "name": "test_write_with_compress_off_smoke_test",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotatorGetTransform",
                "name": "test_identity",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotatorGetTransform",
                "name": "test_rotated",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotatorGetTransform",
                "name": "test_scale_rotate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotatorGetTransform",
                "name": "test_scaled",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotatorGetTransform",
                "name": "test_weird_bounding_box",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotatorGetTransform",
                "name": "test_weird_bounding_box_rotated",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pdf_annotator.TestPdfAnnotatorGetTransform",
                "name": "test_weird_bounding_box_scaled",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.annotations.test_image.TestImage",
                "name": "test_as_pdf_object",
                "time": 0.158,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.annotations.test_image.TestImageModes",
                "name": "test_convert_grayscale_with_alpha",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.annotations.test_image.TestImageModes",
                "name": "test_convert_noop",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.annotations.test_rect.TestSquare",
                "name": "test_pdf_object",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.annotations.test_rect.TestRoundedRectangle",
                "name": "test_rounded_rectangle_stream",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.annotations.test_rect.TestCircle",
                "name": "test_pdf_object",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.annotations.test_text.TestText",
                "name": "test_make_composite_font",
                "time": 1.198,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.annotations.test_text.TestText",
                "name": "test_pdf_object",
                "time": 0.852,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.annotations.test_text.TestText",
                "name": "test_pdf_object_backslash_escapes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_appearance.TestAppearance",
                "name": "test_copy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_appearance.TestAppearance",
                "name": "test_explicit_transparency",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_appearance.TestAppearance",
                "name": "test_implicit_transparency",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_graphics_state.TestGraphicsState",
                "name": "test_blank",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_graphics_state.TestGraphicsState",
                "name": "test_dash_array",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_graphics_state.TestGraphicsState",
                "name": "test_graphics_state",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_graphics_state.TestGraphicsState",
                "name": "test_has_content",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_metadata.TestMetadata",
                "name": "test_defaults",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_metadata.TestMetadata",
                "name": "test_extra_kwargs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_metadata.TestMetadata",
                "name": "test_serialize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_metadata.TestMetadata",
                "name": "test_specified",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.end_to_end.test_annotate_pdf.TestEndToEnd",
                "name": "test_end_to_end",
                "time": 5.713,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.end_to_end.test_annotate_pdf.TestEndToEndRotated90",
                "name": "test_end_to_end",
                "time": 5.392,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.end_to_end.test_annotate_pdf.TestEndToEndRotated180",
                "name": "test_end_to_end",
                "time": 5.29,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.end_to_end.test_annotate_pdf.TestEndToEndRotated270",
                "name": "test_end_to_end",
                "time": 5.127,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_font_metrics.TestFontMetrics",
                "name": "test__format_widths_both",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_font_metrics.TestFontMetrics",
                "name": "test__format_widths_constant_segment",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_font_metrics.TestFontMetrics",
                "name": "test__format_widths_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_font_metrics.TestFontMetrics",
                "name": "test__format_widths_single",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_graphics.TestMatrixMath",
                "name": "test_invert_identity",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_graphics.TestMatrixMath",
                "name": "test_invert_rotation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_graphics.TestMatrixMath",
                "name": "test_invert_scale",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_graphics.TestMatrixMath",
                "name": "test_invert_translate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_graphics.TestMatrixMath",
                "name": "test_multiply_identity",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_graphics.TestMatrixMath",
                "name": "test_multiply_is_associative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_graphics.TestMatrixMath",
                "name": "test_rotations_add",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_graphics.TestMatrixMath",
                "name": "test_scales_multiply",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_graphics.TestMatrixMath",
                "name": "test_translates_add",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftToken",
                "name": "test_abc_newline_a_token",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftToken",
                "name": "test_abc_newline_token",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftToken",
                "name": "test_abc_space_token",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftToken",
                "name": "test_abc_token",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftToken",
                "name": "test_empty_token",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftToken",
                "name": "test_newline_token",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftToken",
                "name": "test_space_a_token",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftToken",
                "name": "test_spaces_token",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftLine",
                "name": "test_break_between_words",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftLine",
                "name": "test_break_midword",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftLine",
                "name": "test_break_midword_length_0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftLine",
                "name": "test_newline",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftLine",
                "name": "test_prefer_space_breaks",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftLine",
                "name": "test_single_character_length_0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestUnshiftLine",
                "name": "test_trailing_newline",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestGetWrappedLines",
                "name": "test_single_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_text_wrapping.TestGetWrappedLines",
                "name": "test_wrap_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_true_type_font.TestTrueTypeFont",
                "name": "test_composability",
                "time": 0.54,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_true_type_font.TestTrueTypeFont",
                "name": "test_font_cache",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_true_type_font.TestTrueTypeFont",
                "name": "test_measure_missing_chars_equal_width",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_true_type_font.TestTrueTypeFont",
                "name": "test_measure_text",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_true_type_font.TestTrueTypeFont",
                "name": "test_missing_font_size",
                "time": 0.61,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestRequired",
                "name": "test_required",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestBoolean",
                "name": "test_boolean",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestColor",
                "name": "test_color",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestColor",
                "name": "test_invalid_colors",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestColor",
                "name": "test_transparent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestEnum",
                "name": "test_enum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestEnum",
                "name": "test_not_in_enum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestField",
                "name": "test_custom_validator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestField",
                "name": "test_disallowed_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestField",
                "name": "test_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestInteger",
                "name": "test_integer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestInteger",
                "name": "test_invalid_integer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestInteger",
                "name": "test_positive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestNumber",
                "name": "test_between",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestNumber",
                "name": "test_default",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestNumber",
                "name": "test_positive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestPoints",
                "name": "test_not_points",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestPoints",
                "name": "test_points",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestString",
                "name": "test_not_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_validation.TestString",
                "name": "test_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5] \ud83d\ude80  Start image=crawlergpt:latest\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/plangrid-pdf-annotate] user=0 workdir=\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5] \ud83e\uddea  Matrix: map[python:3.5]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5] \u2b50 Run Main actions/checkout@v2\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2705  Success - Main actions/checkout@v2\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5] \u2b50 Run Main Set up Python:3.5\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udc33  docker cp src=/tmp/act-cache/9e61c6cf-6574-4536-9c47-32327116969d/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::Semantic version spec of 3.5 is 3.5\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::isExplicit: \n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::explicit? false\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::explicit? true\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::explicit? true\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::explicit? true\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::explicit? true\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::explicit? true\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::explicit? true\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::evaluating 6 versions\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::matched: 3.5.10\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.5.10/x64\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udcac  ::debug::Found tool in cache Python 3.5.10 x64\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Successfully setup CPython (3.5.10)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2705  Success - Main Set up Python:3.5\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.5.10/x64\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.5.10/x64/lib\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2699  ::set-output:: python-version=3.5.10\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.5.10/x64\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.5.10/x64/bin\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5] \u2b50 Run Main Test with \n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | DEPRECATION: Python 3.5 reached the end of its life on September 13th, 2020. Please upgrade your Python as Python 3.5 is no longer maintained. pip 21.0 will drop support for Python 3.5 in January 2021. pip 21.0 will remove support for this functionality.\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages (20.3.4)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting pip\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading pip-20.3.4-py2.py3-none-any.whl (1.5 MB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading pip-20.3.3-py2.py3-none-any.whl (1.5 MB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | DEPRECATION: Python 3.5 reached the end of its life on September 13th, 2020. Please upgrade your Python as Python 3.5 is no longer maintained. pip 21.0 will drop support for Python 3.5 in January 2021. pip 21.0 will remove support for this functionality.\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Obtaining file:///tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/plangrid-pdf-annotate\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Installing build dependencies: started\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Installing build dependencies: finished with status 'done'\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Getting requirements to build wheel: started\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Getting requirements to build wheel: finished with status 'done'\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |     Preparing wheel metadata: started\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |     Preparing wheel metadata: finished with status 'done'\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting fonttools>=3.44.0\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading fonttools-3.44.0-py2.py3-none-any.whl (728 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting pillow>=5.2.0\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading Pillow-7.2.0-cp35-cp35m-manylinux1_x86_64.whl (2.2 MB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting attrs>=18.1.0\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading attrs-22.1.0-py2.py3-none-any.whl (58 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting pdfrw>=0.4\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading pdfrw-0.4-py2.py3-none-any.whl (69 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting flake8\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading flake8-3.9.2-py2.py3-none-any.whl (73 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting pre-commit\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading pre_commit-1.21.0-py2.py3-none-any.whl (166 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting coverage\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading coverage-5.5-cp35-cp35m-manylinux2010_x86_64.whl (240 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting pytest\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading pytest-6.1.2-py3-none-any.whl (272 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting importlib-metadata\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading importlib_metadata-2.1.3-py2.py3-none-any.whl (10 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting mccabe<0.7.0,>=0.6.0\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading mccabe-0.6.1-py2.py3-none-any.whl (8.6 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting pyflakes<2.4.0,>=2.3.0\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading pyflakes-2.3.1-py2.py3-none-any.whl (68 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting pycodestyle<2.8.0,>=2.7.0\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading pycodestyle-2.7.0-py2.py3-none-any.whl (41 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting zipp>=0.5\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading zipp-1.2.0-py2.py3-none-any.whl (4.8 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting virtualenv>=15.2\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading virtualenv-20.15.1-py2.py3-none-any.whl (10.1 MB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting cfgv>=2.0.0\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading cfgv-2.0.1-py2.py3-none-any.whl (7.4 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting aspy.yaml\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading aspy.yaml-1.3.0-py2.py3-none-any.whl (3.5 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting identify>=1.0.0\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading identify-1.6.2-py2.py3-none-any.whl (98 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting toml\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting nodeenv>=0.11.1\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading nodeenv-1.6.0-py2.py3-none-any.whl (21 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting pyyaml\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading PyYAML-5.3.1.tar.gz (269 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting importlib-resources\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading importlib_resources-3.2.1-py2.py3-none-any.whl (26 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting six\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting platformdirs<3,>=2\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading platformdirs-2.0.2-py2.py3-none-any.whl (10 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting filelock<4,>=3.2\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading filelock-3.2.1-py2.py3-none-any.whl (9.3 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting distlib<1,>=0.3.1\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting iniconfig\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading iniconfig-1.1.1-py2.py3-none-any.whl (5.0 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting pathlib2>=2.2.0\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading pathlib2-2.3.7.post1-py2.py3-none-any.whl (18 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting py>=1.8.2\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting pluggy<1.0,>=0.12\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading pluggy-0.13.1-py2.py3-none-any.whl (18 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting packaging\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading packaging-20.9-py2.py3-none-any.whl (40 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Collecting pyparsing>=2.0.2\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Downloading pyparsing-2.4.7-py2.py3-none-any.whl (67 kB)\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Using legacy 'setup.py install' for pyyaml, since package 'wheel' is not installed.\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Installing collected packages: zipp, six, pyyaml, pyparsing, platformdirs, importlib-resources, importlib-metadata, filelock, distlib, virtualenv, toml, pyflakes, pycodestyle, py, pluggy, pillow, pdfrw, pathlib2, packaging, nodeenv, mccabe, iniconfig, identify, fonttools, cfgv, attrs, aspy.yaml, pytest, pre-commit, pdf-annotate, flake8, coverage\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |     Running setup.py install for pyyaml: started\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |     Running setup.py install for pyyaml: finished with status 'done'\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   |   Running setup.py develop for pdf-annotate\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Successfully installed aspy.yaml-1.3.0 attrs-22.1.0 cfgv-2.0.1 coverage-5.5 distlib-0.3.6 filelock-3.2.1 flake8-3.9.2 fonttools-3.44.0 identify-1.6.2 importlib-metadata-2.1.3 importlib-resources-3.2.1 iniconfig-1.1.1 mccabe-0.6.1 nodeenv-1.6.0 packaging-20.9 pathlib2-2.3.7.post1 pdf-annotate pdfrw-0.4 pillow-7.2.0 platformdirs-2.0.2 pluggy-0.13.1 pre-commit-1.21.0 py-1.11.0 pycodestyle-2.7.0 pyflakes-2.3.1 pyparsing-2.4.7 pytest-6.1.2 pyyaml-5.3.1 six-1.16.0 toml-0.10.2 virtualenv-20.15.1 zipp-1.2.0\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2705  Success - Main Test with \n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5] \u2b50 Run Main Syntax Checking\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2705  Success - Main Syntax Checking\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5] \u2b50 Run Main Run Tests\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | ============================= test session starts ==============================\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | platform linux -- Python 3.5.10, pytest-6.1.2, py-1.11.0, pluggy-0.13.1\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/plangrid-pdf-annotate, configfile: tox.ini\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | collected 122 items\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | \n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/test_graphics.py ..........................                        [ 21%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/test_pdf_annotator.py .................                            [ 35%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/annotations/test_image.py ...                                      [ 37%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/annotations/test_rect.py ...                                       [ 40%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/annotations/test_text.py ...                                       [ 42%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/config/test_appearance.py ...                                      [ 45%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/config/test_graphics_state.py ....                                 [ 48%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/config/test_metadata.py ....                                       [ 51%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/end_to_end/test_annotate_pdf.py ....                               [ 54%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/util/test_font_metrics.py ....                                     [ 58%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/util/test_graphics.py .........                                    [ 65%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/util/test_text_wrapping.py .................                       [ 79%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/util/test_true_type_font.py .....                                  [ 83%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/util/test_validation.py ....................                       [100%]\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | \n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/plangrid-pdf-annotate/report.xml -\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | ============================= 122 passed in 26.21s =============================\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2705  Success - Main Run Tests\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5] \u2b50 Run Main Coverage\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | Name                                    Stmts   Miss  Cover\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | -----------------------------------------------------------\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/__init__.py                    5      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/annotations/__init__.py        0      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/annotations/base.py           91      5    95%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/annotations/image.py         113      7    94%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/annotations/points.py         93      4    96%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/annotations/rect.py           76      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/annotations/text.py          112      1    99%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/annotator.py                 147     12    92%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/config/__init__.py             0      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/config/appearance.py          92      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/config/constants.py           34      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/config/graphics_state.py      31      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/config/location.py            19      4    79%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/config/metadata.py            54      3    94%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/graphics.py                  212     10    95%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/util/__init__.py               0      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/util/font_metrics.py          26      3    88%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/util/geometry.py              62      4    94%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/util/text.py                  51      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/util/true_type_font.py        94     10    89%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | pdf_annotate/util/validation.py           102      4    96%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/__init__.py                           0      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/annotations/__init__.py               5      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/annotations/test_image.py            44      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/annotations/test_rect.py             34      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/annotations/test_text.py             34      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/config/__init__.py                    0      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/config/test_appearance.py            18      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/config/test_graphics_state.py        27      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/config/test_metadata.py              28      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/end_to_end/__init__.py                0      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/end_to_end/test_annotate_pdf.py     155      2    99%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/files.py                             18      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/test_graphics.py                    140      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/test_pdf_annotator.py                82      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/util/__init__.py                      0      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/util/test_font_metrics.py            45      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/util/test_graphics.py                54      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/util/test_text_wrapping.py           47      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/util/test_true_type_font.py          35      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/util/test_validation.py             134      1    99%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | tests/utils.py                             16      0   100%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | -----------------------------------------------------------\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   | TOTAL                                    2330     70    97%\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2705  Success - Main Coverage\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5] \u2b50 Run Post Set up Python:3.5\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5]   \u2705  Success - Post Set up Python:3.5\n[4e2326f4-edc3-4eb4-b61a-c092e5f1b00a/Testing on Python 3.5] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/plangrid-pdf-annotate/.github/workflows/pullrequests-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 230.86867094039917
    }
}