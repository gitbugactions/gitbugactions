{
    "repository": "andreafrancia/trash-cli",
    "stars": 2972,
    "language": "python",
    "size": 2222,
    "clone_url": "https://github.com/andreafrancia/trash-cli.git",
    "timestamp": "2023-07-01T09:19:34.204689Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_bump.Test_version_from_date",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bump.Test_save_new_version",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bump.Test_save_new_version",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_candidate_shrink_user.TestCandidateShrinkUser",
                "name": "test_dont_get_confused_by_empty_home_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_candidate_shrink_user.TestCandidateShrinkUser",
                "name": "test_should_not_substitute",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_candidate_shrink_user.TestCandidateShrinkUser",
                "name": "test_should_substitute_tilde_in_place_of_home_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_candidate_shrink_user.TestCandidateShrinkUser",
                "name": "test_should_work_even_if_HOME_does_not_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_candidate_shrink_user.TestCandidateShrinkUser",
                "name": "test_str_uses_tilde_with_many_slashes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_candidate_shrink_user.TestCandidateShrinkUser",
                "name": "test_tilde_works_also_with_trailing_slash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_candidate_shrink_user.TestCandidateShrinkUser",
                "name": "test_when_not_in_home_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_file_system.TestFakeFileSystem",
                "name": "test_after_a_creation_the_file_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_file_system.TestFakeFileSystem",
                "name": "test_create_fake_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_file_system.TestFakeFileSystem",
                "name": "test_no_file_exists_at_beginning",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_file_system.TestFakeFileSystem",
                "name": "test_when_creating_a_fake_file_it_creates_also_the_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_file_system.TestFakeFileSystem",
                "name": "test_you_can_create_multiple_fake_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_file_system.TestFakeFileSystem",
                "name": "test_you_can_read_from_files",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_fstab.TestFakeFstab",
                "name": "test_default",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_fstab.TestFakeFstab",
                "name": "test_it_should_accept_fake_mount_points",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_fstab.TestFakeFstab",
                "name": "test_something",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_ismount.TestOnDefault",
                "name": "test_by_default_root_is_mount",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_ismount.TestOnDefault",
                "name": "test_while_by_default_any_other_is_not_a_mount_point",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_ismount.WhenOneFakeVolumeIsDefined",
                "name": "test_accept_fake_mount_point",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_ismount.WhenOneFakeVolumeIsDefined",
                "name": "test_dont_get_confused_by_traling_slash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_ismount.WhenOneFakeVolumeIsDefined",
                "name": "test_other_still_are_not_mounts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_ismount.TestWhenMultipleFakesMountPoints",
                "name": "test_recognize_both",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fake_ismount",
                "name": "test_should_handle_relative_volumes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_filesystem.TestWithInSandbox",
                "name": "test_has_sticky_bit_returns_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_filesystem.TestWithInSandbox",
                "name": "test_has_sticky_bit_returns_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_filesystem.TestWithInSandbox",
                "name": "test_mkdirs_with_default_mode",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_filesystem.Test_is_sticky_dir",
                "name": "test_dir_non_sticky",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_filesystem.Test_is_sticky_dir",
                "name": "test_dir_sticky",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_filesystem.Test_is_sticky_dir",
                "name": "test_non_dir_but_sticky",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_generate_scripts.TestGenerateScripts",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_joining_paths",
                "name": "test_how_path_joining_works",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list_all_trashinfo_contents.TestListing",
                "name": "test_it_should_read_all_trashinfo_from_home_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list_all_trashinfo_contents.TestTrashDirReader",
                "name": "test_should_list_all_trashinfo_found",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_make_script.TestMakeScript",
                "name": "test_should_set_executable_permission",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_make_script.TestMakeScript",
                "name": "test_should_write_the_script",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_make_script.TestMakeScript",
                "name": "test_the_script_should_call_the_right_function_from_the_right_module",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_make_script.TestListOfCreatedScripts",
                "name": "test_collect_added_script",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_make_script.TestListOfCreatedScripts",
                "name": "test_is_empty_on_start_up",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mock_dir_reader.TestMockDirReader",
                "name": "test_add_file_in_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mock_dir_reader.TestMockDirReader",
                "name": "test_add_file_in_root",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mock_dir_reader.TestMockDirReader",
                "name": "test_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mock_dir_reader.TestMockDirReader",
                "name": "test_mkdir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_my_mock.TestMyMock",
                "name": "test_existing_method",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_my_mock.TestMyMock",
                "name": "test_not_existing_method",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parsing_trashinfo_contents.TestParseTrashInfo",
                "name": "test_it_should_parse_date",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parsing_trashinfo_contents.TestParseTrashInfo",
                "name": "test_it_should_parse_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parsing_trashinfo_contents.TestParseDeletionDate",
                "name": "test1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parsing_trashinfo_contents.TestParseDeletionDate",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parsing_trashinfo_contents.TestParseDeletionDate",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parsing_trashinfo_contents.TestParseDeletionDate",
                "name": "test_two_deletion_dates",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parsing_trashinfo_contents.Test_maybe_parse_deletion_date",
                "name": "test_on_trashinfo_with_date_parse_to_date",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parsing_trashinfo_contents.Test_maybe_parse_deletion_date",
                "name": "test_on_trashinfo_with_invalid_date_parse_to_unknown_date",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parsing_trashinfo_contents.Test_maybe_parse_deletion_date",
                "name": "test_on_trashinfo_without_date_parse_to_unknown_date",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parsing_trashinfo_contents",
                "name": "test_how_to_parse_original_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parsing_trashinfo_contents.TestTrashInfoParser",
                "name": "test_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parsing_trashinfo_contents.TestTrashInfoParser",
                "name": "test_it_raises_error_on_parsing_original_location",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_partitions.TestOsMountPoints",
                "name": "test_a_physical_fs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_partitions.TestOsMountPoints",
                "name": "test_tmpfs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_partitions.TestOsMountPoints",
                "name": "test_virtual_fs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_top_trash_dir_rules.TestTopTrashDirRules",
                "name": "test_is_valid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_top_trash_dir_rules.TestTopTrashDirRules",
                "name": "test_not_valid_parent_should_be_sticky",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_top_trash_dir_rules.TestTopTrashDirRules",
                "name": "test_not_valid_parent_should_not_be_a_symlink",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_top_trash_dir_rules.TestTopTrashDirRules",
                "name": "test_not_valid_should_be_a_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_trash_dir_reader.TestTrashDirReader",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_trash_dir_reader.TestTrashDirReader",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_trash_put_reporter.TestTrashPutReporter",
                "name": "test_it_should_record_failures",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_volume_of.Test_create_fake_volume_of",
                "name": "test_it_work_also_with_relative_mount_point",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_volume_of.Test_create_fake_volume_of",
                "name": "test_return_the_containing_volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_volume_of.Test_create_fake_volume_of",
                "name": "test_with_file_that_are_outside",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_clock.TestClock",
                "name": "test_return_fake_time",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_clock.TestClock",
                "name": "test_return_real_time",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_clock.TestClock",
                "name": "test_return_true_now_whe_fake_time_is_invalid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end.TestEmptyEndToEnd",
                "name": "test_h",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end.TestEmptyEndToEnd",
                "name": "test_help",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end.TestEmptyEndToEnd",
                "name": "test_on_invalid_option",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end.TestEmptyEndToEnd",
                "name": "test_on_print_time",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end.TestEmptyEndToEnd",
                "name": "test_on_trash_date_not_parsable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end.TestEmptyEndToEnd",
                "name": "test_version",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end_interactive.TestEmptyEndToEndInteractive",
                "name": "test_it_should_keep_files_newer_than_N_days",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end_with_argument.TestEmptyEndToEndWithArgument",
                "name": "test_it_should_keep_files_newer_than_N_days",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end_with_argument.TestEmptyEndToEndWithArgument",
                "name": "test_it_should_kept_files_with_invalid_deletion_date",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end_with_argument.TestEmptyEndToEndWithArgument",
                "name": "test_it_should_remove_files_older_than_N_days",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end_with_argument.TestEmptyEndToEndWithArgument",
                "name": "test_set_clock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end_with_trash_dir.TestEmptyEndToEndWithTrashDir",
                "name": "test_add_trashed_file",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end_with_trash_dir.TestEmptyEndToEndWithTrashDir",
                "name": "test_non_trash_info_is_not_deleted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end_with_trash_dir.TestEmptyEndToEndWithTrashDir",
                "name": "test_orphan_are_deleted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end_with_trash_dir.TestEmptyEndToEndWithTrashDir",
                "name": "test_trash_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_empty_end_to_end_with_trash_dir.TestEmptyEndToEndWithTrashDir",
                "name": "test_xdg_data_home",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_existing_file_remover.TestExistingFileRemover",
                "name": "test_remove_file_if_exists_fails_when_file_does_not_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_guard.TestGuard",
                "name": "test_it_just_calls_the_emptier",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_guard.TestGuard",
                "name": "test_user_says_no",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_guard.TestGuard",
                "name": "test_user_says_yes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_make_parser.TestMakeParser",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_make_parser.TestMakeParser",
                "name": "test_dry_run",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_make_parser.TestMakeParser",
                "name": "test_dry_run_default",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_make_parser.TestMakeParser",
                "name": "test_interactive_default_is_interactive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_make_parser.TestMakeParser",
                "name": "test_interactive_made_non_interactive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_make_parser.TestMakeParser",
                "name": "test_non_interactive_default_is_non_interactive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_parse_reply.TestParseReply",
                "name": "test_N",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_parse_reply.TestParseReply",
                "name": "test_Y",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_parse_reply.TestParseReply",
                "name": "test_empty_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_parse_reply.TestParseReply",
                "name": "test_n",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_parse_reply.TestParseReply",
                "name": "test_y",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_prepare_output_message.TestPrepareOutputMessage",
                "name": "test_multiple_dirs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_prepare_output_message.TestPrepareOutputMessage",
                "name": "test_no_dirs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_prepare_output_message.TestPrepareOutputMessage",
                "name": "test_one_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.test_user.TestUser",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.empty_cmd.test_empty_cmd.TestTrashEmptyCmdFs",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.empty_cmd.test_empty_cmd.TestTrashEmptyCmdFs",
                "name": "test_with_dry_run",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.empty_cmd.test_empty_cmd_fs.TestTrashEmptyCmdFs",
                "name": "test_trash_empty_will_skip_unreadable_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.empty_cmd.test_empty_cmd_with_multiple_volumes_fs.TestEmptyCmdWithMultipleVolumesFs",
                "name": "test_it_removes_trashinfo_from_specified_trash_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.empty_cmd.test_empty_cmd_with_multiple_volumes_fs.TestEmptyCmdWithMultipleVolumesFs",
                "name": "test_it_removes_trashinfos_from_method_1_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_empty.empty_cmd.test_empty_cmd_with_multiple_volumes_fs.TestEmptyCmdWithMultipleVolumesFs",
                "name": "test_it_removes_trashinfos_from_method_2_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fs.test_move.TestMove",
                "name": "test_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fs.test_move.TestMove",
                "name": "test_two_files",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fstab.test_volumes_listing.TestVolumesListingImpl",
                "name": "test_empty_environ",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fstab.test_volumes_listing.TestVolumesListingImpl",
                "name": "test_multiple_vols_from_environ",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fstab.test_volumes_listing.TestVolumesListingImpl",
                "name": "test_one_vol_from_environ",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fstab.test_volumes_listing.TestVolumesListingImpl",
                "name": "test_os_mount_points",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fstab.test_volumes_listing.TestVolumesListingImpl",
                "name": "test_skip_empty_vol",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_alternate_trash_dir.TestAlternateTrashDir",
                "name": "test_should_list_contents_of_alternate_trashdir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_end_to_end_list.TestEndToEndList",
                "name": "test_help",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_end_to_end_list.TestEndToEndList",
                "name": "test_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_end_to_end_list.TestEndToEndList",
                "name": "test_list_trash_dirs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_end_to_end_list.TestEndToEndList",
                "name": "test_list_with_paths",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_trash_list.TestTrashList",
                "name": "test_should_output_deletion_date_and_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_trash_list.TestTrashList",
                "name": "test_should_output_info_for_multiple_files",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_trash_list.TestTrashList",
                "name": "test_should_output_invalid_dates_using_question_marks",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_trash_list.TestTrashList",
                "name": "test_should_output_nothing_when_trashcan_is_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_trash_list.TestTrashList",
                "name": "test_should_output_unknown_dates_with_question_marks",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_trash_list.TestTrashList",
                "name": "test_should_warn_about_empty_trashinfos",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_trash_list.TestTrashList",
                "name": "test_should_warn_about_unexistent_path_entry",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_trash_list.TestTrashList",
                "name": "test_should_warn_about_unreadable_trashinfo",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_version.TestVersion",
                "name": "test_should_output_the_version",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_with_a_top_trash_dir.TestWithATopTrashDir",
                "name": "test_and_should_warn_about_it",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_with_a_top_trash_dir.TestWithATopTrashDir",
                "name": "test_and_should_warn_if_parent_is_not_sticky",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_with_a_top_trash_dir.TestWithATopTrashDir",
                "name": "test_but_it_should_not_warn_when_the_parent_is_unsticky_but_there_is_no_trashdir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_with_a_top_trash_dir.TestWithATopTrashDir",
                "name": "test_it_should_ignore_Trash_is_a_symlink",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_with_a_top_trash_dir.TestWithATopTrashDir",
                "name": "test_should_ignore_trash_from_a_unsticky_topdir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.cmd.test_with_a_top_trash_dir.TestWithATopTrashDir",
                "name": "test_should_list_its_contents_if_parent_is_sticky",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_deletion_date_extractor.TestDeletionDateExtractor",
                "name": "test_extract_attribute_default",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_deletion_date_extractor.TestDeletionDateExtractor",
                "name": "test_extract_attribute_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_file_size.Test_file_size",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_trash_dirs_selector.TestTrashDirsSelector",
                "name": "test_all_user_specified",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_trash_dirs_selector.TestTrashDirsSelector",
                "name": "test_default",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_trash_dirs_selector.TestTrashDirsSelector",
                "name": "test_user_specified",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_trash_list_parser.TestTrashListParser",
                "name": "test_files_off",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_trash_list_parser.TestTrashListParser",
                "name": "test_files_on",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_trash_list_parser.TestTrashListParser",
                "name": "test_size_off",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_trash_list_parser.TestTrashListParser",
                "name": "test_size_on",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_trash_list_parser.TestTrashListParser",
                "name": "test_trash_dir_not_specified",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_trash_list_parser.TestTrashListParser",
                "name": "test_trash_dir_specified",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_list.components.test_trash_list_parser.TestTrashListParser",
                "name": "test_version",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_atomic_write.Test_atomic_write",
                "name": "test_filename_already_taken",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_atomic_write.Test_atomic_write",
                "name": "test_short_filename",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_atomic_write.Test_atomic_write",
                "name": "test_the_second_open_should_fail",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_atomic_write.Test_atomic_write",
                "name": "test_too_long_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_create_trashinfo_basename.Test_create_trashinfo_basename",
                "name": "test_when_file_name_is_not_too_long",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_create_trashinfo_basename.Test_create_trashinfo_basename",
                "name": "test_when_file_name_too_long",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_create_trashinfo_basename.Test_create_trashinfo_basename",
                "name": "test_when_file_name_too_long_with_big_suffix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer.TestDescriber",
                "name": "test_name_for_empty_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer.TestDescriber",
                "name": "test_name_for_non_existent_entries",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer.TestDescriber",
                "name": "test_name_for_regular_files_non_empty_files",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer.TestDescriber",
                "name": "test_name_for_symbolic_links",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer.TestDescriber",
                "name": "test_on_directories",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer.TestDescriber",
                "name": "test_on_dot_directories",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer.TestDescriber",
                "name": "test_on_dot_dot_directories",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer_integration.TestDescriber",
                "name": "test_name_for_empty_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer_integration.TestDescriber",
                "name": "test_name_for_non_existent_entries",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer_integration.TestDescriber",
                "name": "test_name_for_regular_files_non_empty_files",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer_integration.TestDescriber",
                "name": "test_name_for_symbolic_links",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer_integration.TestDescriber",
                "name": "test_on_directories",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer_integration.TestDescriber",
                "name": "test_on_dot_directories",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_describer_integration.TestDescriber",
                "name": "test_on_dot_dot_directories",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_end_to_end_put.TestEndToEndPut",
                "name": "test_it_should_print_usage_on_no_argument",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_end_to_end_put.TestEndToEndPut",
                "name": "test_it_should_skip_dot_entry",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_end_to_end_put.TestEndToEndPut",
                "name": "test_it_should_skip_dotdot_entry",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_end_to_end_put.TestEndToEndPut",
                "name": "test_it_should_skip_missing_files",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_end_to_end_put.TestEndToEndPut",
                "name": "test_last_line_of_help",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_end_to_end_put.TestEndToEndPut",
                "name": "test_on_help",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_end_to_end_put.TestEndToEndPut",
                "name": "test_without_args",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_end_to_end_put.TestEndToEndPut",
                "name": "test_wrong_option",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_ensure_dir.TestEnsureDir",
                "name": "test_bug_when_no_permissions_it_overrides_the_permissions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_ensure_dir.TestEnsureDir",
                "name": "test_happy_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_ensure_dir.TestEnsureDir",
                "name": "test_makedirs_honor_permissions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_absolute_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_chmod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_create_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_create_dir_in_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_create_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_exists_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_exists_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_find_dir_root",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_find_dir_root_subdir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_get_mod_s_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_get_mod_s_2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_getsize_with_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_getsize_with_empty_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_getsize_with_non_empty_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_is_dir_when_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_is_dir_when_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_is_dir_when_it_does_not_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_isfile_with_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_isfile_with_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_islink_on_a_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_islink_on_a_link",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_islink_when_directory_not_exisiting",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_islink_when_not_found",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_makedirs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_makedirs_honor_file_permissions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_mode_does_not_let_create_a_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_mode_lets_create_a_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_move_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_relativae_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_relativae_path_with_cd",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_remove_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_set_sticky_bit_when_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_fake_fs.TestFakeFs",
                "name": "test_set_sticky_bit_when_unset",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_gate.TestGate",
                "name": "test_gate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_gentle_stat_read.TestGentleStatRead",
                "name": "test_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_gentle_stat_read.TestGentleStatRead",
                "name": "test_file_non_found",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_home_fallback_gate_impl.TestHomeFallbackGateImpl",
                "name": "test_enabled",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_home_fallback_gate_impl.TestHomeFallbackGateImpl",
                "name": "test_not_enabled",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_make_parser.Test_make_parser",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_make_parser.Test_make_parser",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_make_parser.Test_make_parser",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_make_parser.Test_make_parser",
                "name": "test_force_option",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_make_parser.Test_make_parser",
                "name": "test_force_option_default",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_make_parser.Test_make_parser",
                "name": "test_force_volume_off",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_make_parser.Test_make_parser",
                "name": "test_force_volume_on",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_make_parser.Test_make_parser",
                "name": "test_interactive_option",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_make_parser.Test_make_parser",
                "name": "test_interactive_override_force_option",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_make_parser.Test_make_parser",
                "name": "test_trash_dir_not_specified",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_make_parser.Test_make_parser",
                "name": "test_trash_dir_specified",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_original_location.TestOriginalLocation",
                "name": "test_original_location_00__volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_original_location.TestOriginalLocation",
                "name": "test_original_location_01__volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_original_location.TestOriginalLocation",
                "name": "test_original_location_02__volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_original_location.TestOriginalLocation",
                "name": "test_original_location_03__volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_original_location.TestOriginalLocation",
                "name": "test_original_location_04__volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_original_location.TestOriginalLocation",
                "name": "test_original_location_05__volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_original_location.TestOriginalLocation",
                "name": "test_original_location_06__volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_original_location.TestOriginalLocation",
                "name": "test_original_location_07__volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_original_location.TestOriginalLocation",
                "name": "test_original_location_08__volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_original_location.TestOriginalLocation",
                "name": "test_original_location_09__volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_original_location.TestOriginalLocation",
                "name": "test_original_location_10__volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_original_location.TestOriginalLocation",
                "name": "test_original_location_11__volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_parent_path.Test_parent_path",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_parent_path.Test_parent_path",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_parent_path.Test_parent_path",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_parent_path.Test_parent_path",
                "name": "test4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_persist_trash_info.Test_persist_trash_info",
                "name": "test_persist_trash_info_first_100_times",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_persist_trash_info.Test_persist_trash_info",
                "name": "test_persist_trash_info_first_time",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_put.TestPut",
                "name": "test_make_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_put.TestPut",
                "name": "test_multiple_volumes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_put.TestPut",
                "name": "test_put_does_not_try_to_trash_non_existing_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_put.TestPut",
                "name": "test_when_a_error_during_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_put.TestPut",
                "name": "test_when_file_does_not_exist",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_put.TestPut",
                "name": "test_when_file_does_not_exist_with_force",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_put.TestPut",
                "name": "test_when_file_exists",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_put.TestPut",
                "name": "test_when_file_move_fails",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_put.TestPut",
                "name": "test_when_there_is_no_working_trash_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_suffix.TestSuffix",
                "name": "test_first_attempt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_suffix.TestSuffix",
                "name": "test_hundredth_attempt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_suffix.TestSuffix",
                "name": "test_second_attempt",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_dir_volume.TestTrashDirVolume",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_directories_finder.TestTrashDirectoriesFinder",
                "name": "test_no_specific_user_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_directories_finder.TestTrashDirectoriesFinder",
                "name": "test_specific_user_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_script.TestPutScripts",
                "name": "test_trash_put_touch_filesystem",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_script.TestPutScripts",
                "name": "test_trash_put_works",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_script.TestPutScripts",
                "name": "test_trashes_connected_symlink",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_script.TestPutScripts",
                "name": "test_trashes_dangling_symlink",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.TestDeletingExistingFile",
                "name": "test_a_trashinfo_file_should_have_been_created",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.TestDeletingExistingFile",
                "name": "test_it_should_remove_it_silently",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.TestDeletingExistingFile",
                "name": "test_it_should_remove_the_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.Test_when_deleting_an_existing_file_in_verbose_mode",
                "name": "test_should_be_succesfull",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.Test_when_deleting_an_existing_file_in_verbose_mode",
                "name": "test_should_tell_where_a_file_is_trashed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.Test_when_deleting_a_non_existing_file",
                "name": "test_should_be_succesfull",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.Test_when_fed_with_dot_arguments",
                "name": "test_dot_argument_is_skipped",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.Test_when_fed_with_dot_arguments",
                "name": "test_dot_argument_is_skipped_even_in_subdirs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.Test_when_fed_with_dot_arguments",
                "name": "test_dot_dot_argument_is_skipped",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.Test_when_fed_with_dot_arguments",
                "name": "test_dot_dot_argument_is_skipped_even_in_subdirs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.TestUnsecureTrashDirMessages",
                "name": "test_when_is_a_symlink",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.TestUnsecureTrashDirMessages",
                "name": "test_when_is_unsticky",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trash_put_slow.TestUnsecureTrashDirMessages",
                "name": "test_when_it_is_not_a_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trasher.TestTrasher",
                "name": "test",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trasher.TestTrasher",
                "name": "test_dot_entry",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trasher.TestTrasher",
                "name": "test_interactive_no",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trasher.TestTrasher",
                "name": "test_interactive_yes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trashing_checker.TestTrashingChecker",
                "name": "test_home_in_same_volume",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trashing_checker.TestTrashingChecker",
                "name": "test_trashing_checker_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_trashing_checker.TestTrashingChecker",
                "name": "test_trashing_checker_same",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_user.TestUser",
                "name": "test_yes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_user.Test_parse_user_reply",
                "name": "test_N",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_user.Test_parse_user_reply",
                "name": "test_Y",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_user.Test_parse_user_reply",
                "name": "test_n",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_user.Test_parse_user_reply",
                "name": "test_other",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_user.Test_parse_user_reply",
                "name": "test_y",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.test_volume_of_parent.TestVolumeOfParent",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.gate_impl.test_gate_check_result.TestGateCheckResult",
                "name": "test_equality",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.gate_impl.test_gate_check_result.TestGateCheckResult",
                "name": "test_not_equals_by_ok",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.gate_impl.test_gate_check_result.TestGateCheckResult",
                "name": "test_not_equals_by_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_fake_fs_list_dir.TestFakeFsListDir",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_fake_fs_walk_no_follow.TestWalkNoFollow",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_real_fs_is_accessible.TestRealFsIsAccessible",
                "name": "test_connected_link",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_real_fs_is_accessible.TestRealFsIsAccessible",
                "name": "test_connected_link_with_lexists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_real_fs_is_accessible.TestRealFsIsAccessible",
                "name": "test_dangling_link",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_real_fs_is_accessible.TestRealFsIsAccessible",
                "name": "test_dangling_link_with_lexists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_real_fs_list_dir.TestRealFsListDir",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_real_fs_permissions.TestRealFsPermissions",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_real_fs_permissions.TestRealFsPermissions",
                "name": "test_chmod_and_get_mod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_size_counter_on_fake_fs.TestSizeCounterOnFakeFs",
                "name": "test_a_single_file",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_size_counter_on_fake_fs.TestSizeCounterOnFakeFs",
                "name": "test_recursive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_size_counter_on_fake_fs.TestSizeCounterOnFakeFs",
                "name": "test_two_files",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_size_counter_on_real_fs.TestSizeCounterOnRealFs",
                "name": "test_a_single_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_size_counter_on_real_fs.TestSizeCounterOnRealFs",
                "name": "test_recursive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_put.real_fs.test_size_counter_on_real_fs.TestSizeCounterOnRealFs",
                "name": "test_two_files",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_removing_files.test_file_remover.TestFileRemover",
                "name": "test_remove_file_fails_when_file_does_not_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.arg_parser.test_restore_arg_parser.TestRestoreArgs",
                "name": "test_default_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.arg_parser.test_restore_arg_parser.TestRestoreArgs",
                "name": "test_path_specified_fullpath",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.arg_parser.test_restore_arg_parser.TestRestoreArgs",
                "name": "test_path_specified_relative_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.arg_parser.test_restore_arg_parser.TestRestoreArgs",
                "name": "test_show_version",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_all_trash_directories.TestTrashDirectories",
                "name": "test_list_all_directories",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_is_trashed_from_path.TestOriginalLocationMatchesPath",
                "name": "test1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_is_trashed_from_path.TestOriginalLocationMatchesPath",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_is_trashed_from_path.TestOriginalLocationMatchesPath",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_is_trashed_from_path.TestOriginalLocationMatchesPath",
                "name": "test_root",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_parse_indexes.TestParseIndexes",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_parse_indexes.TestParseIndexes",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_parse_indexes.TestParseIndexes",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_parse_indexes.TestParseIndexes",
                "name": "test4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_parse_indexes.TestParseIndexes",
                "name": "test5",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_parse_indexes.TestParseIndexes",
                "name": "test_complex",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_parse_indexes.TestParseIndexes",
                "name": "test_interval_without_end",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_parse_indexes.TestParseIndexes",
                "name": "test_interval_without_start",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_parse_indexes.TestParseIndexes",
                "name": "test_non_numeric",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_restore_asking_the_user.TestRestoreAskingTheUser",
                "name": "test",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_restore_asking_the_user.TestRestoreAskingTheUser",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_sequences.TestSequences",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_trash_directories2.TestTrashDirectories2",
                "name": "test_when_user_dir_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_trash_directories2.TestTrashDirectories2",
                "name": "test_when_user_dir_is_specified",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_trash_directory.TestTrashDirectory",
                "name": "test_non_trashinfo_should_reported_as_a_warn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_trash_directory.TestTrashDirectory",
                "name": "test_should_list_a_trashinfo",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.collaborators.test_trash_directory.TestTrashDirectory",
                "name": "test_should_list_multiple_trashinfo",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.end_to_end.test_end_to_end_restore.TestEndToEndRestore",
                "name": "test_no_file_trashed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.end_to_end.test_end_to_end_restore.TestEndToEndRestore",
                "name": "test_original_file_not_existing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.end_to_end.test_end_to_end_restore.TestEndToEndRestore",
                "name": "test_restore_happy_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.end_to_end.test_end_to_end_restore.TestEndToEndRestore",
                "name": "test_restore_with_relative_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.test_support.test_has_been_restored.TestHasBeenRestored",
                "name": "test_fail_if_backup_copy_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.test_support.test_has_been_restored.TestHasBeenRestored",
                "name": "test_fail_if_info_file_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.test_support.test_has_been_restored.TestHasBeenRestored",
                "name": "test_fail_if_not_yet_restored",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.test_support.test_has_been_restored.TestHasBeenRestored",
                "name": "test_fail_if_original_location_does_not_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.test_support.test_has_been_restored.TestHasBeenRestored",
                "name": "test_ok_if_backup_copy_does_not_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.test_support.test_has_been_restored.TestHasBeenRestored",
                "name": "test_ok_if_info_file_does_not_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.test_support.test_has_been_restored.TestHasBeenRestored",
                "name": "test_ok_if_original_location_does_not_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.test_support.test_has_been_restored.TestHasBeenRestored",
                "name": "test_ok_if_restored",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.trashed_files.test_trashed_files.TestTrashedFiles",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.trashed_files.test_trashed_files_integration.TestTrashedFilesIntegration",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_cmd.test_listing_in_restore_cmd.TestListingInRestoreCmd",
                "name": "test_with_no_args_and_files_in_trashcan",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_cmd.test_listing_in_restore_cmd.TestListingInRestoreCmd",
                "name": "test_with_no_args_and_files_in_trashcan_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_cmd.test_listing_in_restore_cmd.TestListingInRestoreCmd",
                "name": "test_with_with_path_prefix_bug",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_cmd.test_trashed_file_restore_integration.TestTrashedFileRestoreIntegration",
                "name": "test_restore",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_cmd.test_trashed_file_restore_integration.TestTrashedFileRestoreIntegration",
                "name": "test_restore_over_existing_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore.TestSearcher",
                "name": "test_will_not_detect_trashed_file_in_dirs_other_than_cur_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore.TestSearcher",
                "name": "test_will_show_file_in_cur_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore.TestSearcher",
                "name": "test_actual_restore",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore.TestSearcher",
                "name": "test_will_sort_by_date_by_default",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore.TestSearcher",
                "name": "test_will_sort_by_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore2.TestRestore2",
                "name": "test_restore_operation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore2.TestRestore2",
                "name": "test_restore_operation_when_dest_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore2.TestRestore2",
                "name": "test_should_print_version",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore2.TestRestore2",
                "name": "test_when_user_reply_with_empty_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore2.TestRestore2",
                "name": "test_when_user_reply_with_not_number",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore2.TestRestore2",
                "name": "test_with_no_args_and_no_files_in_trashcan",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore_with_real_fs.TestRestoreTrash",
                "name": "test_gives_an_error_on_not_a_number_input",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore_with_real_fs.TestRestoreTrash",
                "name": "test_it_does_nothing_when_no_file_have_been_found_in_current_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore_with_real_fs.TestRestoreTrash",
                "name": "test_it_gives_error_when_user_input_is_too_large",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore_with_real_fs.TestRestoreTrash",
                "name": "test_it_gives_error_when_user_input_is_too_small",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore_with_real_fs.TestRestoreTrash",
                "name": "test_it_refuses_overwriting_existing_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore_with_real_fs.TestRestoreTrash",
                "name": "test_it_restores_the_file_and_delete_the_trash_info",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore_with_real_fs.TestRestoreTrash",
                "name": "test_it_restores_the_file_selected_by_the_user",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_restore.use_cases.restore_user.test_restore_with_real_fs.TestRestoreTrash",
                "name": "test_it_shows_the_file_deleted_from_the_current_dir",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_filter.TestFilter",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_filter.TestFilter",
                "name": "test_a_star_matches_all",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_filter.TestFilter",
                "name": "test_absolute_pattern",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_filter.TestFilter",
                "name": "test_basename_matches",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_filter.TestFilter",
                "name": "test_example_with_star_dot_o",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_list_trash_info.TestListTrashinfos",
                "name": "test_absolute_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_list_trash_info.TestListTrashinfos",
                "name": "test_relative_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_rm_script.TestRmScript",
                "name": "test_trash_put_touch_filesystem",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_rm_script.TestRmScript",
                "name": "test_trash_put_works",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_trash_rm.TestTrashRmCmdRun",
                "name": "test_without_arguments",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_trash_rm.TestTrashRmCmdRun",
                "name": "test_without_pattern_argument",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_trash_rm_slow.TestTrashRm",
                "name": "test_integration",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rm.test_trash_rm_slow.TestTrashRm",
                "name": "test_issue69",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_support.files.test_make_unreadable_dir.Test_make_unreadable_dir",
                "name": "test_and_can_not_be_removed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_support.files.test_make_unreadable_dir.Test_make_unreadable_dir",
                "name": "test_the_directory_has_been_created",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_support.files.test_make_unreadable_file.Test_make_unreadable_file",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.trash_dir_scanner.test_top_trash_dir_rules.TestTopTrashDirRules",
                "name": "test_parent_is_sym",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.trash_dir_scanner.test_top_trash_dir_rules.TestTopTrashDirRules",
                "name": "test_parent_is_symlink",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.trash_dir_scanner.test_top_trash_dir_rules.TestTopTrashDirRules",
                "name": "test_parent_not_sticky",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.trash_dir_scanner.test_top_trash_dir_rules.TestTopTrashDirRules",
                "name": "test_path_not_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.trash_dir_scanner.test_trash_dir_scanner.TestTrashDirScanner",
                "name": "test_scan_trash_dirs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.trash_dir_scanner.test_user_info_provider.TestUserInfoProvider",
                "name": "test_getuid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.trash_dir_scanner.test_user_info_provider.TestUserInfoProvider",
                "name": "test_home",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[e79850d0-4737-4ecb-bc1c-77667b062e42/build] \ud83d\ude80  Start image=crawlergpt:latest\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/andreafrancia-trash-cli] user=0 workdir=\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:2.7]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build] \u2b50 Run Main actions/checkout@v3\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2705  Success - Main actions/checkout@v3\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build] \u2b50 Run Main Set up Python 2.7\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/c71dfb24-1a3d-4e94-b23f-127be030a42b/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2753  ::group::Installed versions\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udea7  ::warning::The support for python 2.7 will be removed on June 19. Related issue: https://github.com/actions/setup-python/issues/672\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::Semantic version spec of 2.7 is 2.7\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::isExplicit: \n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::explicit? false\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::explicit? true\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::explicit? true\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::explicit? true\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::explicit? true\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::explicit? true\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::explicit? true\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::matched: 2.7.18\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/2.7.18/x64\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udcac  ::debug::Found tool in cache Python 2.7.18 x64\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Successfully set up CPython (2.7.18)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2753  ::endgroup::\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2705  Success - Main Set up Python 2.7\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib/pkgconfig\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/2.7.18/x64\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/2.7.18/x64\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/2.7.18/x64\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/2.7.18/x64\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2699  ::set-output:: python-version=2.7.18\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/2.7.18/x64/bin/python\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build] \u2b50 Run Main Upgrade pip\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Requirement already up-to-date: pip in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (20.3.4)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2705  Success - Main Upgrade pip\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build] \u2b50 Run Main Install dependencies\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting mock\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading mock-3.0.5-py2.py3-none-any.whl (25 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting pytest\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading pytest-4.6.11-py2.py3-none-any.whl (231 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting six\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting twine\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading twine-1.15.0-py2.py3-none-any.whl (35 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from -r requirements-dev.txt (line 5)) (41.2.0)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting build\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading build-0.5.1-py2.py3-none-any.whl (15 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting flexmock\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading flexmock-0.10.10.tar.gz (49 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting parameterized\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading parameterized-0.8.1-py2.py3-none-any.whl (26 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting types-six\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading types-six-1.16.21.8.tar.gz (9.7 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting types-mock\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading types-mock-5.0.0.7.tar.gz (5.6 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting types-psutil\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading types-psutil-5.9.5.15.tar.gz (13 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting psutil\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading psutil-5.9.5-cp27-cp27mu-manylinux2010_x86_64.whl (300 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting funcsigs>=1; python_version < \"3.3\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading funcsigs-1.0.2-py2.py3-none-any.whl (17 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting importlib-metadata>=0.12; python_version < \"3.8\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading importlib_metadata-2.1.3-py2.py3-none-any.whl (10 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting pathlib2>=2.2.0; python_version < \"3.6\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading pathlib2-2.3.7.post1-py2.py3-none-any.whl (18 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting pluggy<1.0,>=0.12\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading pluggy-0.13.1-py2.py3-none-any.whl (18 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting packaging\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading packaging-20.9-py2.py3-none-any.whl (40 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting wcwidth\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading wcwidth-0.2.6-py2.py3-none-any.whl (29 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting atomicwrites>=1.0\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading atomicwrites-1.4.1.tar.gz (14 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting attrs>=17.4.0\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading attrs-21.4.0-py2.py3-none-any.whl (60 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting py>=1.5.0\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting more-itertools<6.0.0,>=4.0.0; python_version <= \"2.7\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading more_itertools-5.0.0-py2-none-any.whl (52 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting pkginfo>=1.4.2\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading pkginfo-1.8.3-py2.py3-none-any.whl (26 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting readme-renderer>=21.0\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading readme_renderer-30.0-py2.py3-none-any.whl (15 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting tqdm>=4.14\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading tqdm-4.64.1-py2.py3-none-any.whl (78 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting requests-toolbelt!=0.9.0,>=0.8.0\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting requests!=2.15,!=2.16,>=2.5.0\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting virtualenv>=20.0.35; python_version < \"3\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading virtualenv-20.15.1-py2.py3-none-any.whl (10.1 MB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting typing>=3.5.3.0; python_version < \"3\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading typing-3.10.0.0-py2-none-any.whl (26 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting toml>=0.10.0\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting pep517>=0.9.1\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading pep517-0.12.0-py2.py3-none-any.whl (19 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting contextlib2; python_version < \"3\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading contextlib2-0.6.0.post1-py2.py3-none-any.whl (9.8 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting zipp>=0.5\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading zipp-1.2.0-py2.py3-none-any.whl (4.8 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting configparser>=3.5; python_version < \"3\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading configparser-4.0.2-py2.py3-none-any.whl (22 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting scandir; python_version < \"3.5\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading scandir-1.10.0.tar.gz (33 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting pyparsing>=2.0.2\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading pyparsing-2.4.7-py2.py3-none-any.whl (67 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting backports.functools-lru-cache>=1.2.1; python_version < \"3.2\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading backports.functools_lru_cache-1.6.5-py2.py3-none-any.whl (6.0 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting Pygments>=2.5.1\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading Pygments-2.5.2-py2.py3-none-any.whl (896 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting docutils>=0.13.1\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading docutils-0.18.1-py2.py3-none-any.whl (570 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting bleach>=2.1.0\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading bleach-3.3.1-py2.py3-none-any.whl (146 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting importlib-resources; python_version < \"3.7\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading importlib_resources-3.3.1-py2.py3-none-any.whl (26 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting certifi>=2017.4.17\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading certifi-2021.10.8-py2.py3-none-any.whl (149 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting urllib3<1.27,>=1.21.1\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting chardet<5,>=3.0.2; python_version < \"3\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading chardet-4.0.0-py2.py3-none-any.whl (178 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting idna<3,>=2.5; python_version < \"3\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading idna-2.10-py2.py3-none-any.whl (58 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting platformdirs<3,>=2\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading platformdirs-2.0.2-py2.py3-none-any.whl (10 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting distlib<1,>=0.3.1\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting filelock<4,>=3.2\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading filelock-3.2.1-py2.py3-none-any.whl (9.3 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting webencodings\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Collecting singledispatch; python_version < \"3.4\"\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |   Downloading singledispatch-3.7.0-py2.py3-none-any.whl (9.2 kB)\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Using legacy 'setup.py install' for flexmock, since package 'wheel' is not installed.\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Using legacy 'setup.py install' for types-six, since package 'wheel' is not installed.\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Using legacy 'setup.py install' for types-mock, since package 'wheel' is not installed.\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Using legacy 'setup.py install' for types-psutil, since package 'wheel' is not installed.\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Using legacy 'setup.py install' for atomicwrites, since package 'wheel' is not installed.\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Using legacy 'setup.py install' for scandir, since package 'wheel' is not installed.\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Installing collected packages: funcsigs, six, mock, contextlib2, zipp, configparser, typing, scandir, pathlib2, importlib-metadata, pluggy, pyparsing, packaging, backports.functools-lru-cache, wcwidth, atomicwrites, attrs, py, more-itertools, pytest, pkginfo, Pygments, docutils, webencodings, bleach, readme-renderer, singledispatch, importlib-resources, tqdm, certifi, urllib3, chardet, idna, requests, requests-toolbelt, twine, platformdirs, distlib, filelock, virtualenv, toml, pep517, build, flexmock, parameterized, types-six, types-mock, types-psutil, psutil\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |     Running setup.py install for scandir: started\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |     Running setup.py install for scandir: finished with status 'done'\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |     Running setup.py install for atomicwrites: started\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |     Running setup.py install for atomicwrites: finished with status 'done'\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |     Running setup.py install for flexmock: started\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |     Running setup.py install for flexmock: finished with status 'done'\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |     Running setup.py install for types-six: started\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |     Running setup.py install for types-six: finished with status 'done'\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |     Running setup.py install for types-mock: started\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |     Running setup.py install for types-mock: finished with status 'done'\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |     Running setup.py install for types-psutil: started\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   |     Running setup.py install for types-psutil: finished with status 'done'\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | Successfully installed Pygments-2.5.2 atomicwrites-1.4.1 attrs-21.4.0 backports.functools-lru-cache-1.6.5 bleach-3.3.1 build-0.5.1 certifi-2021.10.8 chardet-4.0.0 configparser-4.0.2 contextlib2-0.6.0.post1 distlib-0.3.6 docutils-0.18.1 filelock-3.2.1 flexmock-0.10.10 funcsigs-1.0.2 idna-2.10 importlib-metadata-2.1.3 importlib-resources-3.3.1 mock-3.0.5 more-itertools-5.0.0 packaging-20.9 parameterized-0.8.1 pathlib2-2.3.7.post1 pep517-0.12.0 pkginfo-1.8.3 platformdirs-2.0.2 pluggy-0.13.1 psutil-5.9.5 py-1.11.0 pyparsing-2.4.7 pytest-4.6.11 readme-renderer-30.0 requests-2.27.1 requests-toolbelt-1.0.0 scandir-1.10.0 singledispatch-3.7.0 six-1.16.0 toml-0.10.2 tqdm-4.64.1 twine-1.15.0 types-mock-5.0.0.7 types-psutil-5.9.5.15 types-six-1.16.21.8 typing-3.10.0.0 urllib3-1.26.16 virtualenv-20.15.1 wcwidth-0.2.6 webencodings-0.5.1 zipp-1.2.0\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2705  Success - Main Install dependencies\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build] \u2b50 Run Main Run tests\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | ============================= test session starts ==============================\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | platform linux2 -- Python 2.7.18, pytest-4.6.11, py-1.11.0, pluggy-0.13.1\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/andreafrancia-trash-cli\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | collected 409 items\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | \n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_bump.py ...                                                   [  0%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_candidate_shrink_user.py .......                              [  2%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_fake_file_system.py ......                                    [  3%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_fake_fstab.py ...                                             [  4%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_fake_ismount.py .......                                       [  6%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_filesystem.py ......                                          [  7%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_generate_scripts.py .                                         [  8%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_joining_paths.py .                                            [  8%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_list_all_trashinfo_contents.py ..                             [  8%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_make_script.py .....                                          [ 10%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_mock_dir_reader.py ....                                       [ 11%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_my_mock.py ..                                                 [ 11%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_parsing_trashinfo_contents.py ............                    [ 14%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_partitions.py ...                                             [ 15%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_top_trash_dir_rules.py ....                                   [ 16%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_trash_dir_reader.py ..                                        [ 16%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_trash_put_reporter.py .                                       [ 16%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_volume_of.py ...                                              [ 17%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/test_clock.py ...                                       [ 18%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/test_empty_end_to_end.py ......                         [ 19%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/test_empty_end_to_end_interactive.py .                  [ 20%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/test_empty_end_to_end_with_argument.py ....             [ 21%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/test_empty_end_to_end_with_trash_dir.py .....           [ 22%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/test_existing_file_remover.py .                         [ 22%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/test_guard.py ...                                       [ 23%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/test_make_parser.py ......                              [ 24%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/test_parse_reply.py .....                               [ 25%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/test_prepare_output_message.py ...                      [ 26%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/test_user.py .                                          [ 26%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/empty_cmd/test_empty_cmd.py ..                          [ 27%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/empty_cmd/test_empty_cmd_fs.py .                        [ 27%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_empty/empty_cmd/test_empty_cmd_with_multiple_volumes_fs.py .. [ 28%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | .                                                                        [ 28%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_fs/test_move.py ..                                            [ 28%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_fstab/test_volumes_listing.py .....                           [ 30%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_list/cmd/test_alternate_trash_dir.py .                        [ 30%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_list/cmd/test_end_to_end_list.py ....                         [ 31%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_list/cmd/test_trash_list.py ........                          [ 33%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_list/cmd/test_version.py .                                    [ 33%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_list/cmd/test_with_a_top_trash_dir.py ......                  [ 34%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_list/components/test_deletion_date_extractor.py ..            [ 35%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_list/components/test_file_size.py .                           [ 35%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_list/components/test_trash_dirs_selector.py ...               [ 36%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_list/components/test_trash_list_parser.py .......             [ 38%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_atomic_write.py ....                                 [ 39%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_create_trashinfo_basename.py ...                     [ 39%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_describer.py .......                                 [ 41%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_describer_integration.py .......                     [ 43%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_end_to_end_put.py ........                           [ 45%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_ensure_dir.py ...                                    [ 45%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_fake_fs.py ...................................       [ 54%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_gate.py .                                            [ 54%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_gentle_stat_read.py ..                               [ 55%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_home_fallback_gate_impl.py ..                        [ 55%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_make_parser.py ...........                           [ 58%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_original_location.py ............                    [ 61%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_parent_path.py ....                                  [ 62%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_persist_trash_info.py ..                             [ 62%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_put.py .........                                     [ 65%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_suffix.py ...                                        [ 65%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_trash_dir_volume.py .                                [ 66%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_trash_directories_finder.py ..                       [ 66%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_trash_put_script.py ....                             [ 67%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_trash_put_slow.py .............                      [ 70%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_trasher.py ....                                      [ 71%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_trashing_checker.py ...                              [ 72%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_user.py ......                                       [ 73%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/test_volume_of_parent.py .                                [ 74%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/gate_impl/test_gate_check_result.py ...                   [ 74%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/real_fs/test_fake_fs_list_dir.py .                        [ 75%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/real_fs/test_fake_fs_walk_no_follow.py .                  [ 75%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/real_fs/test_real_fs_is_accessible.py ....                [ 76%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/real_fs/test_real_fs_list_dir.py .                        [ 76%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/real_fs/test_real_fs_permissions.py ..                    [ 77%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/real_fs/test_size_counter_on_fake_fs.py ...               [ 77%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_put/real_fs/test_size_counter_on_real_fs.py ...               [ 78%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_removing_files/test_file_remover.py .                         [ 78%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/arg_parser/test_restore_arg_parser.py ....            [ 79%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/collaborators/test_all_trash_directories.py .         [ 79%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/collaborators/test_is_trashed_from_path.py ....       [ 80%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/collaborators/test_parse_indexes.py .........         [ 83%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/collaborators/test_restore_asking_the_user.py ..      [ 83%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/collaborators/test_sequences.py .                     [ 83%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/collaborators/test_trash_directories2.py ..           [ 84%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/collaborators/test_trash_directory.py ...             [ 85%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/end_to_end/test_end_to_end_restore.py ....            [ 86%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/test_support/test_has_been_restored.py ........       [ 88%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/trashed_files/test_trashed_files.py .                 [ 88%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/trashed_files/test_trashed_files_integration.py .     [ 88%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/use_cases/restore_cmd/test_listing_in_restore_cmd.py . [ 88%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | ..                                                                       [ 89%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/use_cases/restore_cmd/test_trashed_file_restore_integration.py . [ 89%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | .                                                                        [ 89%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/use_cases/restore_user/test_restore.py .....          [ 90%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/use_cases/restore_user/test_restore2.py ......        [ 92%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_restore/use_cases/restore_user/test_restore_with_real_fs.py . [ 92%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | .......                                                                  [ 94%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_rm/test_filter.py .....                                       [ 95%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_rm/test_list_trash_info.py ..                                 [ 96%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_rm/test_rm_script.py ..                                       [ 96%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_rm/test_trash_rm.py ..                                        [ 97%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_rm/test_trash_rm_slow.py ..                                   [ 97%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_support/files/test_make_unreadable_dir.py ..                  [ 98%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/test_support/files/test_make_unreadable_file.py .                  [ 98%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/trash_dir_scanner/test_top_trash_dir_rules.py ....                 [ 99%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/trash_dir_scanner/test_trash_dir_scanner.py .                      [ 99%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | tests/trash_dir_scanner/test_user_info_provider.py ..                    [100%]\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | \n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/andreafrancia-trash-cli/report.xml -\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   | ========================== 409 passed in 9.54 seconds ==========================\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2705  Success - Main Run tests\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build] \u2b50 Run Post Set up Python 2.7\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build]   \u2705  Success - Post Set up Python 2.7\n[e79850d0-4737-4ecb-bc1c-77667b062e42/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/andreafrancia-trash-cli/.github/workflows/run-tests-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "e79850d0-4737-4ecb-bc1c-77667b062e42",
        "build_tool": "pytest",
        "elapsed_time": 64.46752834320068
    }
}