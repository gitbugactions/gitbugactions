{
    "repository": "christopherney/Enigma",
    "stars": 136,
    "language": "java",
    "size": 309,
    "clone_url": "https://github.com/christopherney/Enigma.git",
    "timestamp": "2023-06-29T14:17:00.776484Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "com.chrisney.enigma.UnitTests",
                "name": "testJavaParser",
                "time": 46.34,
                "results": [
                    {
                        "result": "Failure",
                        "message": "org.junit.ComparisonFailure: expected:<...kStep.\n * </pre>\n */[\npublic class StatsLogManager implements ResourceBasedOverride {\n\n    public static final int LAUNCHER_STATE_UNSPECIFIED = 0;\n    public static final int LAUNCHER_STATE_BACKGROUND = 1;\n    public static final int LAUNCHER_STATE_HOME = 2;\n    public static final int LAUNCHER_STATE_OVERVIEW = 3;\n    public static final int LAUNCHER_STATE_ALLAPPS = 4;\n    public static final int LAUNCHER_STATE_UNCHANGED = 5;\n\n    private InstanceId mInstanceId;\n\n    protected @Nullable ActivityContext mActivityContext = null;\n    private KeyboardStateManager mKeyboardStateManager;\n\n    /**\n     * Returns event enum based on the two state transition information when swipe\n     * gesture happens(to be removed during UserEventDispatcher cleanup).\n     */\n    public static EventEnum getLauncherAtomEvent(int startState,\n            int targetState, EventEnum fallbackEvent) {\n        if (startState == LAUNCHER_STATE_HOME\n                && targetState == LAUNCHER_STATE_HOME) {\n            return LAUNCHER_HOME_GESTURE;\n        } else if (startState != LAUNCHER_STATE_OVERVIEW\n                && targetState == LAUNCHER_STATE_OVERVIEW) {\n            return LAUNCHER_OVERVIEW_GESTURE;\n        } else if (startState != LAUNCHER_STATE_ALLAPPS\n                && targetState == LAUNCHER_STATE_ALLAPPS) {\n            return LAUNCHER_ALLAPPS_OPEN_UP;\n        } else if (startState == LAUNCHER_STATE_ALLAPPS\n                && targetState != LAUNCHER_STATE_ALLAPPS) {\n            return LAUNCHER_ALLAPPS_CLOSE_DOWN;\n        }\n        return fallbackEvent; // TODO fix\n    }\n\n    public interface EventEnum {\n\n        /**\n         * Tag used to request new UI Event IDs via presubmit analysis.\n         *\n         * <p>Use RESERVE_NEW_UI_EVENT_ID as the constructor parameter for a new {@link EventEnum}\n         * to signal the presubmit analyzer to reserve a new ID for the event. The new ID will be\n         * returned as a Gerrit presubmit finding.  Do not submit {@code RESERVE_NEW_UI_EVENT_ID} as\n         * the constructor parameter for any event.\n         *\n         * <pre>\n         * &#064;UiEvent(doc = \"Briefly describe the interaction when this event will be logged\")\n         * UNIQUE_EVENT_NAME(RESERVE_NEW_UI_EVENT_ID);\n         * </pre>\n         */\n        int RESERVE_NEW_UI_EVENT_ID = Integer.MIN_VALUE; // Negative IDs are ignored by the logger.\n\n        int getId();\n    }\n\n    public enum LauncherEvent implements EventEnum {\n        /* Used to prevent double logging. */\n        IGNORE(-1),\n\n        @UiEvent(doc = \"App launched from workspace, hotseat or folder in launcher\")\n        LAUNCHER_APP_LAUNCH_TAP(338),\n\n        @UiEvent(doc = \"Task launched from overview using TAP\")\n        LAUNCHER_TASK_LAUNCH_TAP(339),\n\n        @UiEvent(doc = \"User tapped on notification inside popup context menu.\")\n        LAUNCHER_NOTIFICATION_LAUNCH_TAP(516),\n\n        @UiEvent(doc = \"Task launched from overview using SWIPE DOWN\")\n        LAUNCHER_TASK_LAUNCH_SWIPE_DOWN(340),\n\n        @UiEvent(doc = \"TASK dismissed from overview using SWIPE UP\")\n        LAUNCHER_TASK_DISMISS_SWIPE_UP(341),\n\n        @UiEvent(doc = \"User dragged a launcher item\")\n        LAUNCHER_ITEM_DRAG_STARTED(383),\n\n        @UiEvent(doc = \"A dragged launcher item is successfully dropped onto workspace, hotseat \"\n                + \"open folder etc\")\n        LAUNCHER_ITEM_DROP_COMPLETED(385),\n\n        @UiEvent(doc = \"A dragged launcher item is successfully dropped onto a folder icon.\")\n        LAUNCHER_ITEM_DROP_COMPLETED_ON_FOLDER_ICON(697),\n\n        @UiEvent(doc = \"A dragged launcher item is successfully dropped on another item \"\n                + \"resulting in a new folder creation\")\n        LAUNCHER_ITEM_DROP_FOLDER_CREATED(386),\n\n        @UiEvent(doc = \"Folder's label is automatically assigned.\")\n        LAUNCHER_FOLDER_AUTO_LABELED(591),\n\n        @UiEvent(doc = \"Could not auto-label a folder because primary suggestion is null or empty.\")\n        LAUNCHER_FOLDER_AUTO_LABELING_SKIPPED_EMPTY_PRIMARY(592),\n\n        @UiEvent(doc = \"Could not auto-label a folder because no suggestions exist.\")\n        LAUNCHER_FOLDER_AUTO_LABELING_SKIPPED_EMPTY_SUGGESTIONS(593),\n\n        @UiEvent(doc = \"User manually updated the folder label.\")\n        LAUNCHER_FOLDER_LABEL_UPDATED(460),\n\n        @UiEvent(doc = \"User long pressed on the workspace empty space.\")\n        LAUNCHER_WORKSPACE_LONGPRESS(461),\n\n        @UiEvent(doc = \"User tapped or long pressed on a wallpaper icon inside launcher settings.\")\n        LAUNCHER_WALLPAPER_BUTTON_TAP_OR_LONGPRESS(462),\n\n        @UiEvent(doc = \"User tapped or long pressed on settings icon inside launcher settings.\")\n        LAUNCHER_SETTINGS_BUTTON_TAP_OR_LONGPRESS(463),\n\n        @UiEvent(doc = \"User tapped or long pressed on widget tray icon inside launcher settings.\")\n        LAUNCHER_WIDGETSTRAY_BUTTON_TAP_OR_LONGPRESS(464),\n\n        @UiEvent(doc = \"User expanded the list of widgets for a single app in the widget picker.\")\n        LAUNCHER_WIDGETSTRAY_APP_EXPANDED(818),\n\n        @UiEvent(doc = \"User searched for a widget in the widget picker.\")\n        LAUNCHER_WIDGETSTRAY_SEARCHED(819),\n\n        @UiEvent(doc = \"A dragged item is dropped on 'Remove' button in the target bar\")\n        LAUNCHER_ITEM_DROPPED_ON_REMOVE(465),\n\n        @UiEvent(doc = \"A dragged item is dropped on 'Cancel' button in the target bar\")\n        LAUNCHER_ITEM_DROPPED_ON_CANCEL(466),\n\n        @UiEvent(doc = \"A predicted item is dragged and dropped on 'Don't suggest app'\"\n                + \" button in the target bar\")\n        LAUNCHER_ITEM_DROPPED_ON_DONT_SUGGEST(467),\n\n        @UiEvent(doc = \"A dragged item is dropped on 'Uninstall' button in target bar\")\n        LAUNCHER_ITEM_DROPPED_ON_UNINSTALL(468),\n\n        @UiEvent(doc = \"User completed uninstalling the package after dropping on \"\n                + \"the icon onto 'Uninstall' button in the target bar\")\n        LAUNCHER_ITEM_UNINSTALL_COMPLETED(469),\n\n        @UiEvent(doc = \"User cancelled uninstalling the package after dropping on \"\n                + \"the icon onto 'Uninstall' button in the target bar\")\n        LAUNCHER_ITEM_UNINSTALL_CANCELLED(470),\n\n        @UiEvent(doc = \"User tapped or long pressed on the task icon(aka package icon) \"\n                + \"from overview to open task menu.\")\n        LAUNCHER_TASK_ICON_TAP_OR_LONGPRESS(517),\n\n        @UiEvent(doc = \"User opened package specific widgets list by tapping on widgets system \"\n                + \"shortcut inside popup context menu.\")\n        LAUNCHER_SYSTEM_SHORTCUT_WIDGETS_TAP(514),\n\n        @UiEvent(doc = \"User tapped on app info system shortcut.\")\n        LAUNCHER_SYSTEM_SHORTCUT_APP_INFO_TAP(515),\n\n        @UiEvent(doc = \"User tapped on split screen icon on a task menu.\")\n        LAUNCHER_SYSTEM_SHORTCUT_SPLIT_SCREEN_TAP(518),\n\n        @UiEvent(doc = \"User tapped on free form icon on a task menu.\")\n        LAUNCHER_SYSTEM_SHORTCUT_FREE_FORM_TAP(519),\n\n        @UiEvent(doc = \"User tapped on pause app system shortcut.\")\n        LAUNCHER_SYSTEM_SHORTCUT_PAUSE_TAP(521),\n\n        @UiEvent(doc = \"User tapped on pin system shortcut.\")\n        LAUNCHER_SYSTEM_SHORTCUT_PIN_TAP(522),\n\n        @UiEvent(doc = \"User is shown All Apps education view.\")\n        LAUNCHER_ALL_APPS_EDU_SHOWN(523),\n\n        @UiEvent(doc = \"User opened a folder.\")\n        LAUNCHER_FOLDER_OPEN(551),\n\n        @UiEvent(doc = \"Hotseat education half sheet seen\")\n        LAUNCHER_HOTSEAT_EDU_SEEN(479),\n\n        @UiEvent(doc = \"Hotseat migration accepted\")\n        LAUNCHER_HOTSEAT_EDU_ACCEPT(480),\n\n        @UiEvent(doc = \"Hotseat migration denied\")\n        LAUNCHER_HOTSEAT_EDU_DENY(481),\n\n        @UiEvent(doc = \"Hotseat education tip shown\")\n        LAUNCHER_HOTSEAT_EDU_ONLY_TIP(482),\n\n        /**\n         * @deprecated LauncherUiChanged.rank field is repurposed to store all apps rank, so no\n         * separate event is required.\n         */\n        @Deprecated\n        @UiEvent(doc = \"App launch ranking logged for all apps predictions\")\n        LAUNCHER_ALL_APPS_RANKED(552),\n\n        @UiEvent(doc = \"App launch ranking logged for hotseat predictions)\")\n        LAUNCHER_HOTSEAT_RANKED(553),\n        @UiEvent(doc = \"Launcher is now in background. e.g., Screen off event\")\n        LAUNCHER_ONSTOP(562),\n\n        @UiEvent(doc = \"Launcher is now in foreground. e.g., Screen on event, back button\")\n        LAUNCHER_ONRESUME(563),\n\n        @UiEvent(doc = \"User swipes or fling in LEFT direction on workspace.\")\n        LAUNCHER_SWIPELEFT(564),\n\n        @UiEvent(doc = \"User swipes or fling in RIGHT direction on workspace.\")\n        LAUNCHER_SWIPERIGHT(565),\n\n        @UiEvent(doc = \"User swipes or fling in UP direction in unknown way.\")\n        LAUNCHER_UNKNOWN_SWIPEUP(566),\n\n        @UiEvent(doc = \"User swipes or fling in DOWN direction in unknown way.\")\n        LAUNCHER_UNKNOWN_SWIPEDOWN(567),\n\n        @UiEvent(doc = \"User swipes or fling in UP direction to open apps drawer.\")\n        LAUNCHER_ALLAPPS_OPEN_UP(568),\n\n        @UiEvent(doc = \"User swipes or fling in DOWN direction to close apps drawer.\")\n        LAUNCHER_ALLAPPS_CLOSE_DOWN(569),\n\n        @UiEvent(doc = \"User tap outside apps drawer sheet to close apps drawer.\")\n        LAUNCHER_ALLAPPS_CLOSE_TAP_OUTSIDE(941),\n\n        @UiEvent(doc = \"User swipes or fling in UP direction and hold from the bottom bazel area\")\n        LAUNCHER_OVERVIEW_GESTURE(570),\n\n        @UiEvent(doc = \"User swipes or fling in LEFT direction on the bottom bazel area.\")\n        LAUNCHER_QUICKSWITCH_LEFT(571),\n\n        @UiEvent(doc = \"User swipes or fling in RIGHT direction on the bottom bazel area.\")\n        LAUNCHER_QUICKSWITCH_RIGHT(572),\n\n        @UiEvent(doc = \"User swipes or fling in DOWN direction on the bottom bazel area.\")\n        LAUNCHER_SWIPEDOWN_NAVBAR(573),\n\n        @UiEvent(doc = \"User swipes or fling in UP direction from bottom bazel area.\")\n        LAUNCHER_HOME_GESTURE(574),\n\n        @UiEvent(doc = \"User's workspace layout information is snapshot in the background.\")\n        LAUNCHER_WORKSPACE_SNAPSHOT(579),\n\n        @UiEvent(doc = \"User tapped on the screenshot button on overview)\")\n        LAUNCHER_OVERVIEW_ACTIONS_SCREENSHOT(580),\n\n        @UiEvent(doc = \"User tapped on the select button on overview)\")\n        LAUNCHER_OVERVIEW_ACTIONS_SELECT(581),\n\n        @UiEvent(doc = \"User tapped on the share button on overview\")\n        LAUNCHER_OVERVIEW_ACTIONS_SHARE(582),\n\n        @UiEvent(doc = \"User tapped on the split screen button on overview\")\n        LAUNCHER_OVERVIEW_ACTIONS_SPLIT(895),\n\n        @UiEvent(doc = \"User tapped on the close button in select mode\")\n        LAUNCHER_SELECT_MODE_CLOSE(583),\n\n        @UiEvent(doc = \"User tapped on the highlight items in select mode\")\n        LAUNCHER_SELECT_MODE_ITEM(584),\n\n        @UiEvent(doc = \"Notification dot on app icon enabled.\")\n        LAUNCHER_NOTIFICATION_DOT_ENABLED(611),\n\n        @UiEvent(doc = \"Notification dot on app icon disabled.\")\n        LAUNCHER_NOTIFICATION_DOT_DISABLED(612),\n\n        @UiEvent(doc = \"For new apps, add app icons to home screen enabled.\")\n        LAUNCHER_ADD_NEW_APPS_TO_HOME_SCREEN_ENABLED(613),\n\n        @UiEvent(doc = \"For new apps, add app icons to home screen disabled.\")\n        LAUNCHER_ADD_NEW_APPS_TO_HOME_SCREEN_DISABLED(614),\n\n        @UiEvent(doc = \"Home screen rotation is enabled when phone is rotated.\")\n        LAUNCHER_HOME_SCREEN_ROTATION_ENABLED(615),\n\n        @UiEvent(doc = \"Home screen rotation is disabled when phone is rotated.\")\n        LAUNCHER_HOME_SCREEN_ROTATION_DISABLED(616),\n\n        @UiEvent(doc = \"Suggestions in all apps list enabled.\")\n        LAUNCHER_ALL_APPS_SUGGESTIONS_ENABLED(619),\n\n        @UiEvent(doc = \"Suggestions in all apps list disabled.\")\n        LAUNCHER_ALL_APPS_SUGGESTIONS_DISABLED(620),\n\n        @UiEvent(doc = \"Suggestions on home screen is enabled.\")\n        LAUNCHER_HOME_SCREEN_SUGGESTIONS_ENABLED(621),\n\n        @UiEvent(doc = \"Suggestions on home screen is disabled.\")\n        LAUNCHER_HOME_SCREEN_SUGGESTIONS_DISABLED(622),\n\n        @UiEvent(doc = \"System navigation is 3 button mode.\")\n        LAUNCHER_NAVIGATION_MODE_3_BUTTON(623),\n\n        @UiEvent(doc = \"System navigation mode is 2 button mode.\")\n        LAUNCHER_NAVIGATION_MODE_2_BUTTON(624),\n\n        @UiEvent(doc = \"System navigation mode is 0 button mode/gesture navigation mode .\")\n        LAUNCHER_NAVIGATION_MODE_GESTURE_BUTTON(625),\n\n        @UiEvent(doc = \"User tapped on image content in Overview Select mode.\")\n        LAUNCHER_SELECT_MODE_IMAGE(627),\n\n        @UiEvent(doc = \"Activity to add external item was started\")\n        LAUNCHER_ADD_EXTERNAL_ITEM_START(641),\n\n        @UiEvent(doc = \"Activity to add external item was cancelled\")\n        LAUNCHER_ADD_EXTERNAL_ITEM_CANCELLED(642),\n\n        @UiEvent(doc = \"Activity to add external item was backed out\")\n        LAUNCHER_ADD_EXTERNAL_ITEM_BACK(643),\n\n        @UiEvent(doc = \"Item was placed automatically in external item addition flow\")\n        LAUNCHER_ADD_EXTERNAL_ITEM_PLACED_AUTOMATICALLY(644),\n\n        @UiEvent(doc = \"Item was dragged in external item addition flow\")\n        LAUNCHER_ADD_EXTERNAL_ITEM_DRAGGED(645),\n\n        @UiEvent(doc = \"A folder was replaced by a single item\")\n        LAUNCHER_FOLDER_CONVERTED_TO_ICON(646),\n\n        @UiEvent(doc = \"A hotseat prediction item was pinned\")\n        LAUNCHER_HOTSEAT_PREDICTION_PINNED(647),\n\n        @UiEvent(doc = \"Undo event was tapped.\")\n        LAUNCHER_UNDO(648),\n\n        @UiEvent(doc = \"Task switcher clear all target was tapped.\")\n        LAUNCHER_TASK_CLEAR_ALL(649),\n\n        @UiEvent(doc = \"Task preview was long pressed.\")\n        LAUNCHER_TASK_PREVIEW_LONGPRESS(650),\n\n        @UiEvent(doc = \"User swiped down on workspace (triggering noti shade to open).\")\n        LAUNCHER_SWIPE_DOWN_WORKSPACE_NOTISHADE_OPEN(651),\n\n        @UiEvent(doc = \"Notification dismissed by swiping right.\")\n        LAUNCHER_NOTIFICATION_DISMISSED(652),\n\n        @UiEvent(doc = \"Current grid size is changed to 6.\")\n        LAUNCHER_GRID_SIZE_6(930),\n\n        @UiEvent(doc = \"Current grid size is changed to 5.\")\n        LAUNCHER_GRID_SIZE_5(662),\n\n        @UiEvent(doc = \"Current grid size is changed to 4.\")\n        LAUNCHER_GRID_SIZE_4(663),\n\n        @UiEvent(doc = \"Current grid size is changed to 3.\")\n        LAUNCHER_GRID_SIZE_3(664),\n\n        @UiEvent(doc = \"Current grid size is changed to 2.\")\n        LAUNCHER_GRID_SIZE_2(665),\n\n        @UiEvent(doc = \"Launcher entered into AllApps state.\")\n        LAUNCHER_ALLAPPS_ENTRY(692),\n\n        @UiEvent(doc = \"Launcher exited from AllApps state.\")\n        LAUNCHER_ALLAPPS_EXIT(693),\n\n        @UiEvent(doc = \"User closed the AllApps keyboard.\")\n        LAUNCHER_ALLAPPS_KEYBOARD_CLOSED(694),\n\n        @UiEvent(doc = \"User switched to AllApps Main/Personal tab by swiping left.\")\n        LAUNCHER_ALLAPPS_SWIPE_TO_PERSONAL_TAB(695),\n\n        @UiEvent(doc = \"User switched to AllApps Work tab by swiping right.\")\n        LAUNCHER_ALLAPPS_SWIPE_TO_WORK_TAB(696),\n\n        @UiEvent(doc = \"Default event when dedicated UI event is not available for the user action\"\n                + \" on slice .\")\n        LAUNCHER_SLICE_DEFAULT_ACTION(700),\n\n        @UiEvent(doc = \"User toggled-on a Slice item.\")\n        LAUNCHER_SLICE_TOGGLE_ON(701),\n\n        @UiEvent(doc = \"User toggled-off a Slice item.\")\n        LAUNCHER_SLICE_TOGGLE_OFF(702),\n\n        @UiEvent(doc = \"User acted on a Slice item with a button.\")\n        LAUNCHER_SLICE_BUTTON_ACTION(703),\n\n        @UiEvent(doc = \"User acted on a Slice item with a slider.\")\n        LAUNCHER_SLICE_SLIDER_ACTION(704),\n\n        @UiEvent(doc = \"User tapped on the entire row of a Slice.\")\n        LAUNCHER_SLICE_CONTENT_ACTION(705),\n\n        @UiEvent(doc = \"User tapped on the see more button of a Slice.\")\n        LAUNCHER_SLICE_SEE_MORE_ACTION(706),\n\n        @UiEvent(doc = \"User selected from a selection row of Slice.\")\n        LAUNCHER_SLICE_SELECTION_ACTION(707),\n\n        @UiEvent(doc = \"IME is used for selecting the focused item on the AllApps screen.\")\n        LAUNCHER_ALLAPPS_FOCUSED_ITEM_SELECTED_WITH_IME(718),\n\n        @UiEvent(doc = \"User long-pressed on an AllApps item.\")\n        LAUNCHER_ALLAPPS_ITEM_LONG_PRESSED(719),\n\n        @UiEvent(doc = \"Launcher entered into AllApps state with device search enabled.\")\n        LAUNCHER_ALLAPPS_ENTRY_WITH_DEVICE_SEARCH(720),\n\n        @UiEvent(doc = \"User switched to AllApps Main/Personal tab by tapping on it.\")\n        LAUNCHER_ALLAPPS_TAP_ON_PERSONAL_TAB(721),\n\n        @UiEvent(doc = \"User switched to AllApps Work tab by tapping on it.\")\n        LAUNCHER_ALLAPPS_TAP_ON_WORK_TAB(722),\n\n        @UiEvent(doc = \"All apps vertical fling started.\")\n        LAUNCHER_ALLAPPS_VERTICAL_SWIPE_BEGIN(724),\n\n        @UiEvent(doc = \"All apps vertical fling ended.\")\n        LAUNCHER_ALLAPPS_VERTICAL_SWIPE_END(725),\n\n        @UiEvent(doc = \"Show URL indicator for Overview Sharing\")\n        LAUNCHER_OVERVIEW_SHARING_SHOW_URL_INDICATOR(764),\n\n        @UiEvent(doc = \"Show image indicator for Overview Sharing\")\n        LAUNCHER_OVERVIEW_SHARING_SHOW_IMAGE_INDICATOR(765),\n\n        @UiEvent(doc = \"User taps URL indicator in Overview\")\n        LAUNCHER_OVERVIEW_SHARING_URL_INDICATOR_TAP(766),\n\n        @UiEvent(doc = \"User taps image indicator in Overview\")\n        LAUNCHER_OVERVIEW_SHARING_IMAGE_INDICATOR_TAP(767),\n\n        @UiEvent(doc = \"User long presses an image in Overview\")\n        LAUNCHER_OVERVIEW_SHARING_IMAGE_LONG_PRESS(768),\n\n        @UiEvent(doc = \"User drags a URL in Overview\")\n        LAUNCHER_OVERVIEW_SHARING_URL_DRAG(769),\n\n        @UiEvent(doc = \"User drags an image in Overview\")\n        LAUNCHER_OVERVIEW_SHARING_IMAGE_DRAG(770),\n\n        @UiEvent(doc = \"User drops URL to a direct share target\")\n        LAUNCHER_OVERVIEW_SHARING_DROP_URL_TO_TARGET(771),\n\n        @UiEvent(doc = \"User drops an image to a direct share target\")\n        LAUNCHER_OVERVIEW_SHARING_DROP_IMAGE_TO_TARGET(772),\n\n        @UiEvent(doc = \"User drops URL to the More button\")\n        LAUNCHER_OVERVIEW_SHARING_DROP_URL_TO_MORE(773),\n\n        @UiEvent(doc = \"User drops an image to the More button\")\n        LAUNCHER_OVERVIEW_SHARING_DROP_IMAGE_TO_MORE(774),\n\n        @UiEvent(doc = \"User taps a share target to share URL\")\n        LAUNCHER_OVERVIEW_SHARING_TAP_TARGET_TO_SHARE_URL(775),\n\n        @UiEvent(doc = \"User taps a share target to share an image\")\n        LAUNCHER_OVERVIEW_SHARING_TAP_TARGET_TO_SHARE_IMAGE(776),\n\n        @UiEvent(doc = \"User taps the More button to share URL\")\n        LAUNCHER_OVERVIEW_SHARING_TAP_MORE_TO_SHARE_URL(777),\n\n        @UiEvent(doc = \"User taps the More button to share an image\")\n        LAUNCHER_OVERVIEW_SHARING_TAP_MORE_TO_SHARE_IMAGE(778),\n\n        @UiEvent(doc = \"User started resizing a widget on their home screen.\")\n        LAUNCHER_WIDGET_RESIZE_STARTED(820),\n\n        @UiEvent(doc = \"User finished resizing a widget on their home screen.\")\n        LAUNCHER_WIDGET_RESIZE_COMPLETED(824),\n\n        @UiEvent(doc = \"User reconfigured a widget on their home screen.\")\n        LAUNCHER_WIDGET_RECONFIGURED(821),\n\n        @UiEvent(doc = \"User enabled themed icons option in wallpaper & style settings.\")\n        LAUNCHER_THEMED_ICON_ENABLED(836),\n\n        @UiEvent(doc = \"User disabled themed icons option in wallpaper & style settings.\")\n        LAUNCHER_THEMED_ICON_DISABLED(837),\n\n        @UiEvent(doc = \"User tapped on 'Turn on work apps' button in all apps window.\")\n        LAUNCHER_TURN_ON_WORK_APPS_TAP(838),\n\n        @UiEvent(doc = \"User tapped on 'Turn off work apps' button in all apps window.\")\n        LAUNCHER_TURN_OFF_WORK_APPS_TAP(839),\n\n        @UiEvent(doc = \"Launcher item drop failed since there was not enough room on the screen.\")\n        LAUNCHER_ITEM_DROP_FAILED_INSUFFICIENT_SPACE(872),\n\n        @UiEvent(doc = \"User long pressed on the taskbar background to hide the taskbar\")\n        LAUNCHER_TASKBAR_LONGPRESS_HIDE(896),\n\n        @UiEvent(doc = \"User long pressed on the taskbar gesture handle to show the taskbar\")\n        LAUNCHER_TASKBAR_LONGPRESS_SHOW(897),\n\n        @UiEvent(doc = \"User clicks on the search icon on header to launch search in app.\")\n        LAUNCHER_ALLAPPS_SEARCHINAPP_LAUNCH(913),\n\n        @UiEvent(doc = \"User is shown the back gesture navigation tutorial step.\")\n        LAUNCHER_GESTURE_TUTORIAL_BACK_STEP_SHOWN(959),\n\n        @UiEvent(doc = \"User is shown the home gesture navigation tutorial step.\")\n        LAUNCHER_GESTURE_TUTORIAL_HOME_STEP_SHOWN(960),\n\n        @UiEvent(doc = \"User is shown the overview gesture navigation tutorial step.\")\n        LAUNCHER_GESTURE_TUTORIAL_OVERVIEW_STEP_SHOWN(961),\n\n        @UiEvent(doc = \"User completed the back gesture navigation tutorial step.\")\n        LAUNCHER_GESTURE_TUTORIAL_BACK_STEP_COMPLETED(962),\n\n        @UiEvent(doc = \"User completed the home gesture navigation tutorial step.\")\n        LAUNCHER_GESTURE_TUTORIAL_HOME_STEP_COMPLETED(963),\n\n        @UiEvent(doc = \"User completed the overview gesture navigation tutorial step.\")\n        LAUNCHER_GESTURE_TUTORIAL_OVERVIEW_STEP_COMPLETED(964),\n\n        @UiEvent(doc = \"User skips the gesture navigation tutorial.\")\n        LAUNCHER_GESTURE_TUTORIAL_SKIPPED(965),\n\n        @UiEvent(doc = \"User scrolled on one of the all apps surfaces such as A-Z list, search \"\n                + \"result page etc.\")\n        LAUNCHER_ALLAPPS_SCROLLED(985),\n\n        @UiEvent(doc = \"User scrolled up on the all apps personal A-Z list.\")\n        LAUNCHER_ALLAPPS_PERSONAL_SCROLLED_UP(1287),\n\n        @UiEvent(doc = \"User scrolled down on the all apps personal A-Z list.\")\n        LAUNCHER_ALLAPPS_PERSONAL_SCROLLED_DOWN(1288),\n\n        @UiEvent(doc = \"User scrolled on one of the all apps surfaces such as A-Z list, search \"\n                + \"result page etc and we don't know the direction since user came back to \"\n                + \"original position from which they scrolled.\")\n        LAUNCHER_ALLAPPS_SCROLLED_UNKNOWN_DIRECTION(1231),\n\n        @UiEvent(doc = \"User tapped taskbar home button\")\n        LAUNCHER_TASKBAR_HOME_BUTTON_TAP(1003),\n\n        @UiEvent(doc = \"User tapped taskbar back button\")\n        LAUNCHER_TASKBAR_BACK_BUTTON_TAP(1004),\n\n        @UiEvent(doc = \"User tapped taskbar overview/recents button\")\n        LAUNCHER_TASKBAR_OVERVIEW_BUTTON_TAP(1005),\n\n        @UiEvent(doc = \"User tapped taskbar IME switcher button\")\n        LAUNCHER_TASKBAR_IME_SWITCHER_BUTTON_TAP(1006),\n\n        @UiEvent(doc = \"User tapped taskbar a11y button\")\n        LAUNCHER_TASKBAR_A11Y_BUTTON_TAP(1007),\n\n        @UiEvent(doc = \"User tapped taskbar home button\")\n        LAUNCHER_TASKBAR_HOME_BUTTON_LONGPRESS(1008),\n\n        @UiEvent(doc = \"User tapped taskbar back button\")\n        LAUNCHER_TASKBAR_BACK_BUTTON_LONGPRESS(1009),\n\n        @UiEvent(doc = \"User tapped taskbar overview/recents button\")\n        LAUNCHER_TASKBAR_OVERVIEW_BUTTON_LONGPRESS(1010),\n\n        @UiEvent(doc = \"User tapped taskbar a11y button\")\n        LAUNCHER_TASKBAR_A11Y_BUTTON_LONGPRESS(1011),\n\n        @UiEvent(doc = \"Show an 'Undo' snackbar when users dismiss a predicted hotseat item\")\n        LAUNCHER_DISMISS_PREDICTION_UNDO(1035),\n\n        @UiEvent(doc = \"User clicked on IME quicksearch button.\")\n        LAUNCHER_ALLAPPS_QUICK_SEARCH_WITH_IME(1047),\n\n        @UiEvent(doc = \"User tapped taskbar All Apps button.\")\n        LAUNCHER_TASKBAR_ALLAPPS_BUTTON_TAP(1057),\n\n        @UiEvent(doc = \"User tapped on Share app system shortcut.\")\n        LAUNCHER_SYSTEM_SHORTCUT_APP_SHARE_TAP(1075),\n\n        @UiEvent(doc = \"User has invoked split to right half from an app icon menu\")\n        LAUNCHER_APP_ICON_MENU_SPLIT_RIGHT_BOTTOM(1199),\n\n        @UiEvent(doc = \"User has invoked split to left half from an app icon menu\")\n        LAUNCHER_APP_ICON_MENU_SPLIT_LEFT_TOP(1200),\n\n        @UiEvent(doc = \"Number of apps in A-Z list (personal and work profile)\")\n        LAUNCHER_ALLAPPS_COUNT(1225),\n\n        @UiEvent(doc = \"User has invoked split to right half with a keyboard shortcut.\")\n        LAUNCHER_KEYBOARD_SHORTCUT_SPLIT_RIGHT_BOTTOM(1232),\n\n        @UiEvent(doc = \"User has invoked split to left half with a keyboard shortcut.\")\n        LAUNCHER_KEYBOARD_SHORTCUT_SPLIT_LEFT_TOP(1233),\n\n        @UiEvent(doc = \"User has collapsed the work FAB button by scrolling down in the all apps\"\n                + \" work A-Z list.\")\n        LAUNCHER_WORK_FAB_BUTTON_COLLAPSE(1276),\n\n        @UiEvent(doc = \"User has collapsed the work FAB button by scrolling up in the all apps\"\n                + \" work A-Z list.\")\n        LAUNCHER_WORK_FAB_BUTTON_EXTEND(1277),\n\n        @UiEvent(doc = \"User scrolled down on the search result page.\")\n        LAUNCHER_ALLAPPS_SEARCH_SCROLLED_DOWN(1285),\n\n        @UiEvent(doc = \"User scrolled up on the search result page.\")\n        LAUNCHER_ALLAPPS_SEARCH_SCROLLED_UP(1286),\n\n        @UiEvent(doc = \"User or automatic timeout has hidden transient taskbar.\")\n        LAUNCHER_TRANSIENT_TASKBAR_HIDE(1330),\n\n        @UiEvent(doc = \"User has swiped upwards from the gesture handle to show transient taskbar.\")\n        LAUNCHER_TRANSIENT_TASKBAR_SHOW(1331),\n        ;\n\n        // ADD MORE\n\n        private final int mId;\n\n        LauncherEvent(int id) {\n            mId = id;\n        }\n\n        public int getId() {\n            return mId;\n        }\n    }\n\n    /**\n     * Launcher specific ranking related events.\n     */\n    public enum LauncherRankingEvent implements EventEnum {\n\n        UNKNOWN(0);\n        // ADD MORE\n\n        private final int mId;\n\n        LauncherRankingEvent(int id) {\n            mId = id;\n        }\n\n        public int getId() {\n            return mId;\n        }\n    }\n\n    /**\n     * Helps to construct and log launcher event.\n     */\n    public interface StatsLogger {\n\n        /**\n         * Sets log fields from provided {@link ItemInfo}.\n         */\n        default StatsLogger withItemInfo(ItemInfo itemInfo) {\n            return this;\n        }\n\n\n        /**\n         * Sets {@link InstanceId} of log message.\n         */\n        default StatsLogger withInstanceId(InstanceId instanceId) {\n            return this;\n        }\n\n        /**\n         * Sets rank field of log message.\n         */\n        default StatsLogger withRank(int rank) {\n            return this;\n        }\n\n        /**\n         * Sets source launcher state field of log message.\n         */\n        default StatsLogger withSrcState(int srcState) {\n            return this;\n        }\n\n        /**\n         * Sets destination launcher state field of log message.\n         */\n        default StatsLogger withDstState(int dstState) {\n            return this;\n        }\n\n        /**\n         * Sets FromState field of log message.\n         */\n        default StatsLogger withFromState(FromState fromState) {\n            return this;\n        }\n\n        /**\n         * Sets ToState field of log message.\n         */\n        default StatsLogger withToState(ToState toState) {\n            return this;\n        }\n\n        /**\n         * Sets editText field of log message.\n         */\n        default StatsLogger withEditText(String editText) {\n            return this;\n        }\n\n        /**\n         * Sets the final value for container related fields of log message.\n         *\n         * By default container related fields are derived from {@link ItemInfo}, this method would\n         * override those values.\n         */\n        default StatsLogger withContainerInfo(ContainerInfo containerInfo) {\n            return this;\n        }\n\n        /**\n         * Sets logging fields from provided {@link SliceItem}.\n         */\n        default StatsLogger withSliceItem(SliceItem sliceItem) {\n            return this;\n        }\n\n        /**\n         * Sets logging fields from provided {@link LauncherAtom.Slice}.\n         */\n        default StatsLogger withSlice(LauncherAtom.Slice slice) {\n            return this;\n        }\n\n        /**\n         * Sets cardinality of log message.\n         */\n        default StatsLogger withCardinality(int cardinality) {\n            return this;\n        }\n\n        /**\n         * Builds the final message and logs it as {@link EventEnum}.\n         */\n        default void log(EventEnum event) {\n        }\n\n        /**\n         * Builds the final message and logs it to two different atoms, one for\n         * event tracking and the other for jank tracking.\n         */\n        default void sendToInteractionJankMonitor(EventEnum event, View v) {\n        }\n    }\n\n    /**\n     * Helps to construct and log latency event.\n     */\n    public interface StatsLatencyLogger {\n\n        enum LatencyType {\n            UNKNOWN(0),\n            COLD(1),\n            HOT(2),\n            TIMEOUT(3),\n            FAIL(4),\n            COLD_USERWAITING(5),\n            ATOMIC(6),\n            CONTROLLED(7),\n            CACHED(8);\n            private final int mId;\n\n            LatencyType(int id) {\n                this.mId = id;\n            }\n\n            public int getId() {\n                return mId;\n            }\n        }\n\n        /**\n         * Sets {@link InstanceId} of log message.\n         */\n        default StatsLatencyLogger withInstanceId(InstanceId instanceId) {\n            return this;\n        }\n\n\n        /**\n         * Sets latency of the event.\n         */\n        default StatsLatencyLogger withLatency(long latencyInMillis) {\n            return this;\n        }\n\n        /**\n         * Sets {@link LatencyType} of log message.\n         */\n        default StatsLatencyLogger withType(LatencyType type) {\n            return this;\n        }\n\n        /**\n         * Sets query length of the event.\n         */\n        default StatsLatencyLogger withQueryLength(int queryLength) {\n            return this;\n        }\n\n        /**\n         * Sets sub event type.\n         */\n        default StatsLatencyLogger withSubEventType(int type) {\n            return this;\n        }\n\n        /**\n         * Sets packageId of log message.\n         */\n        default StatsLatencyLogger withPackageId(int packageId) {\n            return this;\n        }\n\n        /**\n         * Builds the final message and logs it as {@link EventEnum}.\n         */\n        default void log(EventEnum event) {\n        }\n    }\n\n    /**\n     * Helps to construct and log impression event.\n     */\n    public interface StatsImpressionLogger {\n\n        enum State {\n            UNKNOWN(0),\n            ALLAPPS(1),\n            SEARCHBOX_WIDGET(2);\n            private final int mLauncherState;\n\n            State(int id) {\n                this.mLauncherState = id;\n            }\n\n            public int getLauncherState() {\n                return mLauncherState;\n            }\n        }\n\n        /**\n         * Sets {@link InstanceId} of log message.\n         */\n        default StatsImpressionLogger withInstanceId(InstanceId instanceId) {\n            return this;\n        }\n\n        /**\n         * Sets {@link State} of impression event.\n         */\n        default StatsImpressionLogger withState(State state) {\n            return this;\n        }\n\n        /**\n         * Sets query length of the event.\n         */\n        default StatsImpressionLogger withQueryLength(int queryLength) {\n            return this;\n        }\n\n        /**\n         * Sets list of {@link com.android.app.search.ResultType} for the impression event.\n         */\n        default StatsImpressionLogger withResultType(IntArray resultType) {\n            return this;\n        }\n\n        /**\n         * Sets list of count for each of {@link com.android.app.search.ResultType} for the\n         * impression event.\n         */\n        default StatsImpressionLogger withResultCount(IntArray resultCount) {\n            return this;\n        }\n\n        /**\n         * Sets list of boolean for each of {@link com.android.app.search.ResultType} that indicates\n         * if this result is above keyboard or not for the impression event.\n         */\n        default StatsImpressionLogger withAboveKeyboard(List<Boolean> aboveKeyboard) {\n            return this;\n        }\n\n        /**\n         * Builds the final message and logs it as {@link EventEnum}.\n         */\n        default void log(EventEnum event) {\n        }\n    }\n\n    /**\n     * Returns new logger object.\n     */\n    public StatsLogger logger() {\n        StatsLogger logger = createLogger();\n        if (mInstanceId != null) {\n            logger.withInstanceId(mInstanceId);\n        }\n        return logger;\n    }\n\n    /**\n     * Returns new latency logger object.\n     */\n    public StatsLatencyLogger latencyLogger() {\n        StatsLatencyLogger logger = createLatencyLogger();\n        if (mInstanceId != null) {\n            logger.withInstanceId(mInstanceId);\n        }\n        return logger;\n    }\n\n    /**\n     * Returns new impression logger object.\n     */\n    public StatsImpressionLogger impressionLogger() {\n        StatsImpressionLogger logger = createImpressionLogger();\n        if (mInstanceId != null) {\n            logger.withInstanceId(mInstanceId);\n        }\n        return logger;\n    }\n\n    /**\n     * Returns a singleton KeyboardStateManager.\n     */\n    public KeyboardStateManager keyboardStateManager() {\n        if (mKeyboardStateManager == null) {\n            mKeyboardStateManager = new KeyboardStateManager();\n        }\n        return mKeyboardStateManager;\n    }\n\n    protected StatsLogger createLogger() {\n        return new StatsLogger() {\n        };\n    }\n\n    protected StatsLatencyLogger createLatencyLogger() {\n        return new StatsLatencyLogger() {\n        };\n    }\n\n    protected StatsImpressionLogger createImpressionLogger() {\n        return new StatsImpressionLogger() {\n        };\n    }\n\n    /**\n     * Sets InstanceId to every new {@link StatsLogger} object returned by {@link #logger()} when\n     * not-null.\n     */\n    public StatsLogManager withDefaultInstanceId(@Nullable InstanceId instanceId) {\n        this.mInstanceId = instanceId;\n        return this;\n    }\n\n    /**\n     * Creates a new instance of {@link StatsLogManager} based on provided context.\n     */\n    public static StatsLogManager newInstance(Context context) {\n        StatsLogManager manager = Overrides.getObject(StatsLogManager.class,\n                context.getApplicationContext(), R.string.stats_log_manager_class);\n        manager.mActivityContext = ActivityContext.lookupContextNoThrow(context);\n        return manager;\n    }\n}]> but was:<...kStep.\n * </pre>\n */[]>",
                        "type": "org.junit.ComparisonFailure"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.chrisney.enigma.UnitTests",
                "name": "encryption",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.chrisney.enigma.UnitTests",
                "name": "testImportParser",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.chrisney.enigma.UnitTests",
                "name": "testInsertArray",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.chrisney.enigma.UnitTests",
                "name": "testArrayContains",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.chrisney.enigma.UnitTests",
                "name": "testRandomNumber",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.chrisney.enigma.UnitTests",
                "name": "testEnigmatization",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.chrisney.enigma.UnitTests",
                "name": "testTextIsEmptyChar",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[abd9b072-54b6-4be5-85d9-c959df2188a3/build] \ud83d\ude80  Start image=crawlergpt:latest\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/christopherney-Enigma] user=0 workdir=\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build] \u2b50 Run Main actions/checkout@v1\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \u2705  Success - Main actions/checkout@v1\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build] \u2b50 Run Main Set up JDK 1.8\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/5643e667-5133-4b28-9753-ada79582b4e0/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::isExplicit: \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::explicit? false\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::match not found\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::Downloading /tmp/c17b3ff2-f23a-40ad-871c-07b1b53d04c6\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::download complete\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | [command]/usr/bin/tar --version\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | tar (GNU tar) 1.30\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | This is free software: you are free to change and redistribute it.\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | There is NO WARRANTY, to the extent permitted by law.\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | Written by John Gilmore and Jay Fenlason.\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1998430111 -f /tmp/c17b3ff2-f23a-40ad-871c-07b1b53d04c6\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1998430111/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::Caching tool jdk 8.0.372 x64\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1998430111/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/8.0.372/x64\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::finished caching tool\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | writing /home/runneradmin/.m2/settings.xml\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \u2705  Success - Main Set up JDK 1.8\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.372/x64\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \u2699  ::set-env:: JAVA_HOME_8_0_372_X64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \u2699  ::set-env:: JAVA_HOME_8.0.372_x64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/8.0.372/x64\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \u2699  ::set-output:: version=8.0.372\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/8.0.372/x64/bin\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build] \u2b50 Run Main Build with Gradle\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | Downloading https://services.gradle.org/distributions/gradle-5.4.1-all.zip\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | ..............................................................................................................................\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | Welcome to Gradle 5.4.1!\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | Here are the highlights of this release:\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   |  - Run builds with JDK12\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   |  - New API for Incremental Tasks\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   |  - Updates to native projects, including Swift 5 support\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | For more details see https://docs.gradle.org/5.4.1/release-notes.html\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :compileJava\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | Note: /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/christopherney-Enigma/src/main/java/com/chrisney/enigma/utils/Utils.java uses unchecked or unsafe operations.\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | Note: Recompile with -Xlint:unchecked for details.\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :compileGroovy\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :pluginDescriptors\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :processResources\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :classes\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :jar\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :groovydoc\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | Trying to override old definition of task fileScanner\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :publishPluginGroovyDocsJar\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :publishPluginJar\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :javadoc\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :publishPluginJavaDocsJar\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :assemble\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :pluginUnderTestMetadata\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :compileTestJava\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :compileTestGroovy NO-SOURCE\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :processTestResources\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :testClasses\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :test\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | com.chrisney.enigma.UnitTests > testJavaParser FAILED\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   |     org.junit.ComparisonFailure at UnitTests.java:135\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | 8 tests completed, 1 failed\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | FAILURE: Build failed with an exception.\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | * What went wrong:\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | Execution failed for task ':test'.\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > There were failing tests. See the report at: file:///tmp/3d783ea4-1661-11ee-8a50-bb14de238602/christopherney-Enigma/build/reports/tests/test/index.html\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | * Try:\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | * Get more help at https://help.gradle.org\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | BUILD FAILED in 2m 19s\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | \n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | > Task :test FAILED\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   | 14 actionable tasks: 14 executed\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \u274c  Failure - Main Build with Gradle\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build] exitcode '1': failure\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build] \u2b50 Run Post Set up JDK 1.8\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build]   \u2705  Success - Post Set up JDK 1.8\n[abd9b072-54b6-4be5-85d9-c959df2188a3/build] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/christopherney-Enigma/.github/workflows/gradle-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 222.31167697906494
    }
}