{
    "repository": "andifalk/authorizationserver",
    "stars": 126,
    "language": "java",
    "size": 2269,
    "clone_url": "https://github.com/andifalk/authorizationserver.git",
    "timestamp": "2023-06-29T14:28:31.765362Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "com.example.authorizationserver.oauth.client.api.RegisteredClientApiControllerIntegrationTest",
                "name": "updateClient()",
                "time": 0.196,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.client.api.RegisteredClientApiControllerIntegrationTest",
                "name": "deleteClient()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.client.api.RegisteredClientApiControllerIntegrationTest",
                "name": "registerClient()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.client.api.RegisteredClientApiControllerIntegrationTest",
                "name": "findAllClients()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.client.api.RegisteredClientApiControllerIntegrationTest",
                "name": "findSingleClient()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.token.jwt.JsonWebTokenServiceTest",
                "name": "createAnonymousToken()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.token.jwt.JsonWebTokenServiceTest",
                "name": "createPersonalizedToken()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.token.jwt.JsonWebTokenServiceTest",
                "name": "createPersonalizedTokenWithAllScopes()",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.RevocationEndpointIntegrationTest",
                "name": "revocationForAnonymousOpaqueToken()",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.RevocationEndpointIntegrationTest",
                "name": "revocationForMissingToken()",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.RevocationEndpointIntegrationTest",
                "name": "revocationForInvalidAuthentication()",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.RevocationEndpointIntegrationTest",
                "name": "revocationForAnonymousOpaqueTokenWithoutAuth()",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.RevocationEndpointIntegrationTest",
                "name": "revocationForPersonalIdToken()",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.RevocationEndpointIntegrationTest",
                "name": "revocationForPersonalJwtToken()",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.RevocationEndpointIntegrationTest",
                "name": "revocationForInvalidBasicAuthHeader()",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.RevocationEndpointIntegrationTest",
                "name": "revocationForPersonalOpaqueToken()",
                "time": 0.111,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.RevocationEndpointIntegrationTest",
                "name": "revocationForInvalidToken()",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.RevocationEndpointIntegrationTest",
                "name": "revocationForExpiredToken()",
                "time": 0.112,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.RevocationEndpointIntegrationTest",
                "name": "revocationForAnonymousJwtToken()",
                "time": 0.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.IntrospectionEndpointIntegrationTest",
                "name": "introspectionWithInvalidAuthentication()",
                "time": 0.909,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.IntrospectionEndpointIntegrationTest",
                "name": "introspectionWithPersonalJwtToken()",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.IntrospectionEndpointIntegrationTest",
                "name": "introspectionWithPersonalOpaqueToken()",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.IntrospectionEndpointIntegrationTest",
                "name": "introspectionWithMissingToken()",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.IntrospectionEndpointIntegrationTest",
                "name": "introspectionWithAnonymousJwtToken()",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.IntrospectionEndpointIntegrationTest",
                "name": "introspectionWithInvalidToken()",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.IntrospectionEndpointIntegrationTest",
                "name": "introspectionWithAnonymousOpaqueToken()",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.IntrospectionEndpointIntegrationTest",
                "name": "introspectionWithExpiredToken()",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oidc.endpoint.DiscoveryEndpointIntegrationTest",
                "name": "discoveryEndpoint()",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.AuthorizationEndpointIntegrationTest",
                "name": "authorizationRequestWithMissingUserShouldRedirectToLogin()",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.AuthorizationEndpointIntegrationTest",
                "name": "authorizationRequestMissingClientId()",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.AuthorizationEndpointIntegrationTest",
                "name": "authorizationRequest()",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.AuthorizationEndpointIntegrationTest",
                "name": "authorizationRequestWithWrongRedirectUri()",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.AuthorizationEndpointIntegrationTest",
                "name": "authorizationRequestForPublicClientMissingCodeChallenge()",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.AuthorizationEndpointIntegrationTest",
                "name": "authorizationRequestEmptyClientId()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.AuthorizationEndpointIntegrationTest",
                "name": "authorizationRequestWithAnonymousShouldRedirectToLogin()",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.AuthorizationEndpointIntegrationTest",
                "name": "authorizationRequestWrongResponseType()",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.AuthorizationEndpointIntegrationTest",
                "name": "authorizationRequestWithWrongClientId()",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.AuthorizationEndpointIntegrationTest",
                "name": "authorizationRequestWithEmptyScope()",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.AuthorizationEndpointIntegrationTest",
                "name": "authorizationRequestForPublicClient()",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oidc.endpoint.UserInfoEndpointIntegrationTest",
                "name": "userInfoWithOpaqueToken()",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oidc.endpoint.UserInfoEndpointIntegrationTest",
                "name": "userInfoWithInvalidToken()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oidc.endpoint.UserInfoEndpointIntegrationTest",
                "name": "userInfoWithJwtToken()",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oidc.endpoint.UserInfoEndpointIntegrationTest",
                "name": "userInfoWithMissingToken()",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimGroupRestControllerIntegrationTest",
                "name": "removeMemberFromGroup()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimGroupRestControllerIntegrationTest",
                "name": "deleteGroup()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimGroupRestControllerIntegrationTest",
                "name": "updateGroup()",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimGroupRestControllerIntegrationTest",
                "name": "createGroup()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimGroupRestControllerIntegrationTest",
                "name": "getGroups()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimGroupRestControllerIntegrationTest",
                "name": "addMemberToGroup()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimGroupRestControllerIntegrationTest",
                "name": "getGroup()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.jwks.JwksEndpointIntegrationTest",
                "name": "JWKS endpoint is accessible and returns expected result",
                "time": 0.154,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimUserRestControllerIntegrationTest",
                "name": "authenticatedUser()",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimUserRestControllerIntegrationTest",
                "name": "updateUser()",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimUserRestControllerIntegrationTest",
                "name": "getUser()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimUserRestControllerIntegrationTest",
                "name": "createUser()",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimUserRestControllerIntegrationTest",
                "name": "deleteUser()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.scim.api.ScimUserRestControllerIntegrationTest",
                "name": "getUsers()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.TokenEndpointIntegrationTest",
                "name": "[1] grant=urn:ietf:params:oauth:grant-type:token-exchange",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.TokenEndpointIntegrationTest",
                "name": "[2] grant=invalid",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.TokenEndpointIntegrationTest",
                "name": "getTokenForAnonymousRefreshTokenGrantSuccess()",
                "time": 0.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.TokenEndpointIntegrationTest",
                "name": "getOAuthTokensForAuthorizationCodeSuccess()",
                "time": 0.152,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.TokenEndpointIntegrationTest",
                "name": "getTokenForPersonalizedRefreshTokenGrantSuccess()",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.TokenEndpointIntegrationTest",
                "name": "getOpenIdConnectTokensForAuthorizationCodeSuccess()",
                "time": 0.143,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.TokenEndpointIntegrationTest",
                "name": "getTokenForAuthorizationCodeWithPkceSuccess()",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.TokenEndpointIntegrationTest",
                "name": "getTokenForPasswordGrantSuccess()",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.oauth.endpoint.TokenEndpointIntegrationTest",
                "name": "getTokenForClientCredentialsSuccess()",
                "time": 0.108,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.example.authorizationserver.AuthorizationServerApplicationTests",
                "name": "Verify that the authorization server application starts",
                "time": 0.147,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[b55ef442-c7d1-4b7c-81a1-e94c27542736/build] \ud83d\ude80  Start image=crawlergpt:latest\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/andifalk-authorizationserver] user=0 workdir=\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build] \ud83e\uddea  Matrix: map[java:11]\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build] \u2b50 Run Main actions/checkout@v2\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2705  Success - Main actions/checkout@v2\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build] \u2b50 Run Main Set up JDK\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/4065a6d1-1e2e-4d3d-a0e0-6e811905bd53/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::isExplicit: \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::explicit? false\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::match not found\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::Downloading /tmp/f251ba26-008c-4342-be92-9e4430485344\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::download complete\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | [command]/usr/bin/tar --version\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | tar (GNU tar) 1.30\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | This is free software: you are free to change and redistribute it.\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | There is NO WARRANTY, to the extent permitted by law.\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | Written by John Gilmore and Jay Fenlason.\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1499896739 -f /tmp/f251ba26-008c-4342-be92-9e4430485344\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1499896739/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::Caching tool jdk 11.0.19 x64\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1499896739/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/11.0.19/x64\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::finished caching tool\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | writing /home/runneradmin/.m2/settings.xml\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2705  Success - Main Set up JDK\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2699  ::set-env:: JAVA_HOME_11.0.19_x64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/11.0.19/x64\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2699  ::set-env:: JAVA_HOME_11_0_19_X64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/11.0.19/x64\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2699  ::set-output:: version=11.0.19\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/11.0.19/x64/bin\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build] \u2b50 Run Main Grant execute permission for gradlew\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2705  Success - Main Grant execute permission for gradlew\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build] \u2b50 Run Main Build with Gradle\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | Downloading https://services.gradle.org/distributions/gradle-7.3.2-bin.zip\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | ..............................................................................................................\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | Welcome to Gradle 7.3.2!\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | Here are the highlights of this release:\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   |  - Easily declare new test suites in Java projects\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   |  - Support for Java 17\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   |  - Support for Scala 3\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | For more details see https://docs.gradle.org/7.3.2/release-notes.html\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :compileJava\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | warning: unknown enum constant When.MAYBE\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   |   reason: class file for javax.annotation.meta.When not found\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | warning: unknown enum constant When.MAYBE\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   |   reason: class file for javax.annotation.meta.When not found\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | warning: unknown enum constant When.MAYBE\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   |   reason: class file for javax.annotation.meta.When not found\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | 3 warnings\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :processResources\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :classes\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :bootJarMainClassName\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :bootJar\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :jar\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :assemble\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :compileTestJava\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :processTestResources\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :testClasses\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :test\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1mcom.example.authorizationserver.AuthorizationServerApplicationTests\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mVerify that the authorization server application starts\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1mcom.example.authorizationserver.jwks.JwksEndpointIntegrationTest\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mJWKS endpoint is accessible and returns expected result\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1mcom.example.authorizationserver.oauth.client.api.RegisteredClientApiControllerIntegrationTest\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mupdateClient()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mdeleteClient()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mregisterClient()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mfindAllClients()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mfindSingleClient()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1mcom.example.authorizationserver.oauth.endpoint.AuthorizationEndpointIntegrationTest\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mauthorizationRequestWithMissingUserShouldRedirectToLogin()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mauthorizationRequestMissingClientId()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mauthorizationRequest()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mauthorizationRequestWithWrongRedirectUri()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mauthorizationRequestForPublicClientMissingCodeChallenge()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mauthorizationRequestEmptyClientId()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mauthorizationRequestWithAnonymousShouldRedirectToLogin()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mauthorizationRequestWrongResponseType()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mauthorizationRequestWithWrongClientId()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mauthorizationRequestWithEmptyScope()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mauthorizationRequestForPublicClient()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1mcom.example.authorizationserver.oauth.endpoint.IntrospectionEndpointIntegrationTest\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mintrospectionWithInvalidAuthentication()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mintrospectionWithPersonalJwtToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mintrospectionWithPersonalOpaqueToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mintrospectionWithMissingToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mintrospectionWithAnonymousJwtToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mintrospectionWithInvalidToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mintrospectionWithAnonymousOpaqueToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mintrospectionWithExpiredToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1mcom.example.authorizationserver.oauth.endpoint.RevocationEndpointIntegrationTest\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mrevocationForAnonymousOpaqueToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mrevocationForMissingToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mrevocationForInvalidAuthentication()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mrevocationForAnonymousOpaqueTokenWithoutAuth()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mrevocationForPersonalIdToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mrevocationForPersonalJwtToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mrevocationForInvalidBasicAuthHeader()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mrevocationForPersonalOpaqueToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mrevocationForInvalidToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mrevocationForExpiredToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mrevocationForAnonymousJwtToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1mcom.example.authorizationserver.oauth.endpoint.TokenEndpointIntegrationTest\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22m[1] grant=urn:ietf:params:oauth:grant-type:token-exchange\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22m[2] grant=invalid\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mgetTokenForAnonymousRefreshTokenGrantSuccess()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mgetOAuthTokensForAuthorizationCodeSuccess()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mgetTokenForPersonalizedRefreshTokenGrantSuccess()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mgetOpenIdConnectTokensForAuthorizationCodeSuccess()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mgetTokenForAuthorizationCodeWithPkceSuccess()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mgetTokenForPasswordGrantSuccess()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mgetTokenForClientCredentialsSuccess()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1mcom.example.authorizationserver.oidc.endpoint.DiscoveryEndpointIntegrationTest\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mdiscoveryEndpoint()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1mcom.example.authorizationserver.oidc.endpoint.UserInfoEndpointIntegrationTest\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22muserInfoWithOpaqueToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22muserInfoWithInvalidToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22muserInfoWithJwtToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22muserInfoWithMissingToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1mcom.example.authorizationserver.scim.api.ScimGroupRestControllerIntegrationTest\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mremoveMemberFromGroup()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mdeleteGroup()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mupdateGroup()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mcreateGroup()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mgetGroups()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22maddMemberToGroup()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mgetGroup()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1mcom.example.authorizationserver.scim.api.ScimUserRestControllerIntegrationTest\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mauthenticatedUser()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mupdateUser()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mgetUser()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mcreateUser()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mdeleteUser()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mgetUsers()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1mcom.example.authorizationserver.token.jwt.JsonWebTokenServiceTest\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mcreateAnonymousToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mcreatePersonalizedToken()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1m  Test \u001b[22mcreatePersonalizedTokenWithAllScopes()\u001b[32m PASSED\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | 2023-06-29 14:31:36.072  INFO 1205 --- [ionShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | 2023-06-29 14:31:36.072  INFO 1205 --- [ionShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | 2023-06-29 14:31:36.090  INFO 1205 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-9 - Shutdown initiated...\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | 2023-06-29 14:31:36.092  INFO 1205 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-9 - Shutdown completed.\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \u001b[0K\u001b[1;32mSUCCESS: \u001b[39mExecuted 67 tests in 46.8s\u001b[m\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :check\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | > Task :build\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | \n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | BUILD SUCCESSFUL in 2m 7s\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   | 8 actionable tasks: 8 executed\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2705  Success - Main Build with Gradle\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build] \u2b50 Run Post Set up JDK\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build]   \u2705  Success - Post Set up JDK\n[b55ef442-c7d1-4b7c-81a1-e94c27542736/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/andifalk-authorizationserver/.github/workflows/gradle-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 214.75045561790466
    }
}