{
    "repository": "mc1arke/sonarqube-community-branch-plugin",
    "stars": 1716,
    "language": "java",
    "size": 1124,
    "clone_url": "https://github.com/mc1arke/sonarqube-community-branch-plugin.git",
    "timestamp": "2023-06-29T13:58:18.427278Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.GithubValidatorTest",
                "name": "testHappyPath()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.GithubValidatorTest",
                "name": "testInvalidConfigurationExceptionThrownIfCreateClientFails()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.GithubValidatorTest",
                "name": "testCorrectAlmReturnedForValidator()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.GithubValidatorTest",
                "name": "testInvalidConfigurationExceptionRethrownIfCreateClientThrowsInvalidConfigurationException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketExceptionTest",
                "name": "verifyMessageReturnedWhenErrorResponseContainsNoErrors",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.NodeTest",
                "name": "testCorrectChildrenReturned",
                "time": 0.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.NodeTest",
                "name": "testExceptionThrownOnInvalidChild",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.pullrequest.action.DeleteActionTest",
                "name": "shouldDefineEndpointWithAllParameters()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.pullrequest.action.DeleteActionTest",
                "name": "shouldNotPerformDeleteIfUserNotProjectAdmin()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.pullrequest.action.DeleteActionTest",
                "name": "shouldNotPerformDeleteIfUserNotLoggedIn()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.pullrequest.action.DeleteActionTest",
                "name": "shouldExecuteRequestWithValidParameters()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginTest",
                "name": "shouldAddExtensionsForServerSideLoad()",
                "time": 0.498,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginTest",
                "name": "shouldDefineClassesForScannerSide()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginTest",
                "name": "shouldNotAddAnyExtensionsForScannerSideLoad()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginTest",
                "name": "shouldDefineClassesForServerSide()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginTest",
                "name": "shouldDefineClassesForComputeEngineSide()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginTest",
                "name": "shouldReturnPluginNameForGetName()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.GitlabValidatorTest",
                "name": "testHappyPath()",
                "time": 0.135,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.GitlabValidatorTest",
                "name": "testInvalidConfigurationExceptionThrownIfCreateClientFails()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.GitlabValidatorTest",
                "name": "testCorrectAlmReturnedForValidator()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.GitlabValidatorTest",
                "name": "testInvalidConfigurationExceptionThrownIfRetrieveProjectFails()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.GitlabValidatorTest",
                "name": "testInvalidConfigurationExceptionRethrownIfCreateClientThrowsInvalidConfigurationException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketCloudClientUnitTest",
                "name": "testUploadAnnotationsWithEmptyAnnotations",
                "time": 1.585,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketCloudClientUnitTest",
                "name": "testUploadReport",
                "time": 0.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketCloudClientUnitTest",
                "name": "testCreateAnnotationForCloud",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketCloudClientUnitTest",
                "name": "testCreateDataLinkForCloud",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketCloudClientUnitTest",
                "name": "testDeleteReport",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketCloudClientUnitTest",
                "name": "testUploadLimit",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketCloudClientUnitTest",
                "name": "testCloudAlwaysSupportsCodeInsights",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketCloudClientUnitTest",
                "name": "testCreateCloudReport",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketCloudClientUnitTest",
                "name": "testUploadAnnotations",
                "time": 0.161,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketCloudClientUnitTest",
                "name": "testUploadReportFailsWithMessage",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ProviderTypeTest",
                "name": "errorOnInvalidConfig",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ProviderTypeTest",
                "name": "testClassReferenceTypeMatched",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ProviderTypeTest",
                "name": "testReflectiveTypeMatched",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.LinkTest",
                "name": "testIsValidChildInvalidChild",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.LinkTest",
                "name": "testIsValidChildValidChildText",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.LinkTest",
                "name": "correctParametersReturned",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginBootstrapTest",
                "name": "testFailureOnReflectiveOperationException",
                "time": 2.222,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginBootstrapTest",
                "name": "testDifferentHashCode",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginBootstrapTest",
                "name": "testNoArgsConstructor",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginBootstrapTest",
                "name": "testEqualsSameInstance",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginBootstrapTest",
                "name": "testDefineNotInvokedForNonScanner",
                "time": 0.124,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginBootstrapTest",
                "name": "testDefineInvokedOnSuccessLoad",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginBootstrapTest",
                "name": "testFailureOnIncorrectClassTypeReturned",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchPluginBootstrapTest",
                "name": "testNotEqualsUnrelatedClasses",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ElevatedClassLoaderFactoryTest",
                "name": "testExceptionOnInvalidLoader",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ElevatedClassLoaderFactoryTest",
                "name": "testFallthroughClassLoading",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.GithubActionsAutoConfigurerTest",
                "name": "shouldReturnOptionalEmptyIfGithubActionsWithNoGithubRefProperty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.GithubActionsAutoConfigurerTest",
                "name": "shouldReturnOptionalEmptyIfNotGithubActions()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.GithubActionsAutoConfigurerTest",
                "name": "shouldReturnPullRequestConfigurationBasedOnPrIdInEnvironmentParameters()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.GithubActionsAutoConfigurerTest",
                "name": "shouldReturnBranchConfigurationBasedOnNoPrIdInEnvironmentParameters()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.MonoRepoFeatureTest",
                "name": "shouldMatchNameRequiredByFrontEnd()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.MonoRepoFeatureTest",
                "name": "shouldSetFeatureAsEnabled()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.BranchConfigurationFactoryTest",
                "name": "shouldReturnBranchWithDefaultReferenceIfSpecifiedBranchDoesNotExist()",
                "time": 0.146,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.BranchConfigurationFactoryTest",
                "name": "shouldReturnBranchWithSelfReferenceIfSpecifiedBranchDoesExist()",
                "time": 0.183,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.BranchConfigurationFactoryTest",
                "name": "shouldReturnBranchWithNoTargetIfNoProjectBranchesExist()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.BranchConfigurationFactoryTest",
                "name": "shouldThrowExceptionIfPullRequestTargetsOtherPullRequestWithoutATarget()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.BranchConfigurationFactoryTest",
                "name": "shouldReturnPullRequestWithNoTargetIfNoProjectBranchesExist()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.BranchConfigurationFactoryTest",
                "name": "shouldReturnPullRequestWithTargetOfTargetAsReferenceIfTargetBranchExists()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.BitbucketPipelinesAutoConfigurerTest",
                "name": "shouldReturnOptionalEmptyIfNotCi()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.BitbucketPipelinesAutoConfigurerTest",
                "name": "shouldReturnOptionalEmptyIfCiWithNoBranchProperty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.BitbucketPipelinesAutoConfigurerTest",
                "name": "shouldReturnPullRequestConfigurationBasedOnPrIdInEnvironmentParameters()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.BitbucketPipelinesAutoConfigurerTest",
                "name": "shouldReturnBranchConfigurationBasedOnNoPrIdInEnvironmentParameters()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testUploadReportFails",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testUploadAnnotationsWithEmptyAnnotations",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testSupportsCodeInsightsIsTrueWhenVersionEqual",
                "time": 0.241,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testSupportsCodeInsightsIsTrueIfVersionIsHigher",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testUploadReport",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testGetServerPropertiesError",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testCreateDataLinkForServer",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testUploadLimit",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testGetServerProperties",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testSupportsCodeInsightsIsFalse",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testDeleteAnnotations",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testCreateCloudReport",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testCreateAnnotationForServer",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testSupportsCodeInsightsIsFalseWhenException",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testUploadAnnotations",
                "time": 0.139,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.BitbucketServerClientUnitTest",
                "name": "testUploadReportFailsWithMessage",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v3.RestApplicationAuthenticationProviderTest",
                "name": "testTokenRetrievedHappyPathV3Path",
                "time": 0.975,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v3.RestApplicationAuthenticationProviderTest",
                "name": "testTokenRetrievedHappyPathApiPath",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v3.RestApplicationAuthenticationProviderTest",
                "name": "testAppInstallationsPagination",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v3.RestApplicationAuthenticationProviderTest",
                "name": "testExceptionOnNoMatchingToken",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v3.RestApplicationAuthenticationProviderTest",
                "name": "testTokenRetrievedHappyPathApiPathTrailingSlash",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v3.RestApplicationAuthenticationProviderTest",
                "name": "testTokenRetrievedHappyPathV3PathTrailingSlash",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v3.RestApplicationAuthenticationProviderTest",
                "name": "testTokenRetrievedHappyPath",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v3.RestApplicationAuthenticationProviderTest",
                "name": "testTokenRetrievedPaginatedHappyPath",
                "time": 0.188,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.github.GithubPullRequestDecoratorTest",
                "name": "verifyCorrectNameReturned()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.github.GithubPullRequestDecoratorTest",
                "name": "verifyCorrectArgumentsAndReturnValuesUsed()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.github.GithubPullRequestDecoratorTest",
                "name": "verifyClientExceptionPropagated()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.DefaultElevatedClassLoaderFactoryProviderTest",
                "name": "validFactoryReturnedOnNoPropertiesSet",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ClassReferenceElevatedClassLoaderFactoryTest",
                "name": "testExceptionOnNoSuchClass",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ClassReferenceElevatedClassLoaderFactoryTest",
                "name": "testClassloaderReturnedOnHappyPath",
                "time": 0.233,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ClassReferenceElevatedClassLoaderFactoryTest",
                "name": "testLoadClass",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.azuredevops.AzureDevOpsPullRequestDecoratorTest",
                "name": "decorateQualityGateStatusClosedIssue",
                "time": 4.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.azuredevops.AzureDevOpsPullRequestDecoratorTest",
                "name": "testName",
                "time": 0.186,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.azuredevops.AzureDevOpsPullRequestDecoratorTest",
                "name": "decorateQualityGateStatusNewIssue",
                "time": 0.158,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.azuredevops.AzureDevOpsPullRequestDecoratorTest",
                "name": "testDecorateQualityGateProjectIDException",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.azuredevops.AzureDevOpsPullRequestDecoratorTest",
                "name": "testDecorateQualityGateRepoNameException",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.azuredevops.AzureDevOpsPullRequestDecoratorTest",
                "name": "testDecorateQualityGatePRBranchException",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.azuredevops.AzureDevOpsPullRequestDecoratorTest",
                "name": "shouldRemoveUserInfoFromRepositoryUrlForLinking",
                "time": 0.359,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.azuredevops.AzureDevOpsPullRequestDecoratorTest",
                "name": "testDecorateQualityGateRepoSlugException",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.MarkdownFormatterFactoryTest",
                "name": "testListFormatter()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.MarkdownFormatterFactoryTest",
                "name": "testListItemFormatter()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.MarkdownFormatterFactoryTest",
                "name": "testHeadingFormatter()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.MarkdownFormatterFactoryTest",
                "name": "testDocumentFormatter()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.MarkdownFormatterFactoryTest",
                "name": "testTextFormatter()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.MarkdownFormatterFactoryTest",
                "name": "testParagraphFormatter()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.MarkdownFormatterFactoryTest",
                "name": "testImageFormatter()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.MarkdownFormatterFactoryTest",
                "name": "testLinkFormatter()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.MarkdownFormatterFactoryTest",
                "name": "testListFormatterInvalidType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.MarkdownFormatterFactoryTest",
                "name": "testContentTextFormatterEscapedHtml()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.ImageTest",
                "name": "checkInvalidAddChild",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.ImageTest",
                "name": "correctParametersReturned",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest",
                "name": "Missing Header, null",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest",
                "name": "Empty Header, ",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest",
                "name": "Missing rel Content, <http://url>; rel",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest",
                "name": "Invalid rel Content, <http://url>; abc=\"xyz\"",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest",
                "name": "Incorrect Header, dummy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest",
                "name": "Missing URL Prefix, http://other>; rel=\"next\"",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest",
                "name": "Missing URL Postfix, <http://other; rel=\"next\"",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest",
                "name": "Missing URL Wrapper, http://other; rel=\"next\"",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest",
                "name": "findNextLinkReturnsCorrectUrlOnMatchNoSpeechMarksAroundRel()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest",
                "name": "findNextLinkReturnsCorrectUrlOnMatchWithOtherRelEntries()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest",
                "name": "findNextLinkReturnsCorrectUrlOnMatch()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.report.AnalysisIssueSummaryTest",
                "name": "shouldCreateCorrectOutputDocument()",
                "time": 0.157,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.CommunityBranchFeatureExtensionTest",
                "name": "shouldReturnNameThatFrontEndLooksFor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.CommunityBranchFeatureExtensionTest",
                "name": "shouldReturnEnabledForFeature()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.SetAzureBindingActionTest",
                "name": "shouldDefineActionWithRequiredParameters()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.SetAzureBindingActionTest",
                "name": "shouldHandleRequestWithValidParameters()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.AzureDevopsAutoConfigurerTest",
                "name": "shouldReturnConfigurationBasedOnAllEnvironmentParameters()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.AzureDevopsAutoConfigurerTest",
                "name": "shouldReturnOptionalEmptyIfNotTfBuild()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.AzureDevopsAutoConfigurerTest",
                "name": "shouldReturnOptionalEmptyIfTfBuildWithNoPullRequestId()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.CirrusCiAutoConfigurerTest",
                "name": "shouldReturnOptionalEmptyIfNotCirrusCi()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.CirrusCiAutoConfigurerTest",
                "name": "shouldReturnOptionalEmptyIfCirrusCiWithNoBranchProperty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.CirrusCiAutoConfigurerTest",
                "name": "shouldReturnPullRequestConfigurationBasedOnPrIdInEnvironmentParameters()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.CirrusCiAutoConfigurerTest",
                "name": "shouldReturnBranchConfigurationBasedOnNoPrIdInEnvironmentParameters()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ReflectiveElevatedClassLoaderFactoryTest",
                "name": "testLoadClassInvalidApiClassloader",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ReflectiveElevatedClassLoaderFactoryTest",
                "name": "testLoadClassInvalidClassRealmKey",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ReflectiveElevatedClassLoaderFactoryTest",
                "name": "testLoadClassNoParentRef",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ReflectiveElevatedClassLoaderFactoryTest",
                "name": "testLoadClassInvalidClassloader",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.classloader.ReflectiveElevatedClassLoaderFactoryTest",
                "name": "testLoadClass",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.DeleteBindingActionTest",
                "name": "shouldHandleEndpointWithValidRequest()",
                "time": 0.448,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.DeleteBindingActionTest",
                "name": "shouldDefineEndpointWithParameters()",
                "time": 0.434,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.HttpClientBuilderFactoryTest",
                "name": "verifyNotSameInstanceReturnedByFactory()",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.ValidateBindingActionTest",
                "name": "testHandleProjectRequestThrowsInvalidConfigurationExceptionWhenRuntimeExceptionThrownByValidator()",
                "time": 0.172,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.ValidateBindingActionTest",
                "name": "testConfigureActionNoOperation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.ValidateBindingActionTest",
                "name": "testHandleProjectRequestThrowsExceptionWhenNoValidatorExistsForAlm()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.ValidateBindingActionTest",
                "name": "testHandleProjectRequestSuccessWithNoFurtherOperationsWhenNoAlmConfigurationExistsForProject()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.ValidateBindingActionTest",
                "name": "testHandleProjectRequestHappyPath()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.ValidateBindingActionTest",
                "name": "testHandleProjectRequestThrowsExceptionWhenAlmForProjectDoesNotExist()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.SetGitlabBindingActionTest",
                "name": "shouldDefineActionWithRequiredParameters()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.SetGitlabBindingActionTest",
                "name": "shouldHandleRequestWithValidParameters()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.bitbucket.BitbucketPullRequestDecoratorTest",
                "name": "100, 1000, 2",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.bitbucket.BitbucketPullRequestDecoratorTest",
                "name": "1000, 1000, 1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.bitbucket.BitbucketPullRequestDecoratorTest",
                "name": "100, 1000, 10",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.bitbucket.BitbucketPullRequestDecoratorTest",
                "name": "testValidAnalysis()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.bitbucket.BitbucketPullRequestDecoratorTest",
                "name": "testNullPercentagesReplacedWithZeroValues()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.pullrequest.action.ListActionTest",
                "name": "shouldNotExecuteRequestIfUserDoesNotHaveAnyPermissions()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.pullrequest.action.ListActionTest",
                "name": "shouldDefineEndpointWithProjectParameter()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.pullrequest.action.ListActionTest",
                "name": "shouldExecuteRequestWithValidParameter()",
                "time": 0.437,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.gitlab.GitlabRestClientTest",
                "name": "checkErrorThrownOnNonSuccessResponseStatus()",
                "time": 0.19,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.gitlab.GitlabRestClientTest",
                "name": "checkCorrectEncodingUsedOnMergeRequestDiscussion()",
                "time": 0.172,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.ScannerPullRequestPropertySensorTest",
                "name": "testPropertySensorWithGitlabEnvValues",
                "time": 0.201,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.ScannerPullRequestPropertySensorTest",
                "name": "testPropertySensorWithGitlabCIEnvValues",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchTest",
                "name": "testGetPulRequestKey()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchTest",
                "name": "testGenerateKeyMainBranchNonNullFileOfPathHolder()",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchTest",
                "name": "testGetPulRequestKeyNonPullRequest()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchTest",
                "name": "testGenerateKeyMainBranchNullFileOfPath()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchTest",
                "name": "testGenerateKeyMainBranchNonNullFileOfPathContent()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityRepositoryBranchesLoaderTest",
                "name": "testMessageExceptionOnIOException",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityRepositoryBranchesLoaderTest",
                "name": "testEmptyBranchesOnEmptyServerResponse",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityRepositoryBranchesLoaderTest",
                "name": "testErrorOnNon404HttpResponse",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityRepositoryBranchesLoaderTest",
                "name": "testAllBranchesFromNonEmptyServerResponse",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityRepositoryBranchesLoaderTest",
                "name": "testEmptyListOn404HttpResponse",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v4.DefaultGraphqlProviderTest",
                "name": "newInstancesShouldBeReturnedOnRepeatCalls",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.azuredevops.AzureDevopsRestClientTest",
                "name": "checkAddCommentToThreadSubmitsCorrectContent()",
                "time": 0.607,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.azuredevops.AzureDevopsRestClientTest",
                "name": "checkSubmitPullRequestStatusSubmitsCorrectContent()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.azuredevops.AzureDevopsRestClientTest",
                "name": "checkRetrievePullRequestReturnsCorrectContent()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.azuredevops.AzureDevopsRestClientTest",
                "name": "checkErrorThrownOnNonSuccessResponseStatus()",
                "time": 0.155,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.JenkinsAutoConfigurerTest",
                "name": "shouldReturnOptionalEmptyIfNotJenkins()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.JenkinsAutoConfigurerTest",
                "name": "shouldReturnPullRequestConfigurationBasedOnPrIdInEnvironmentParameters()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.JenkinsAutoConfigurerTest",
                "name": "shouldReturnBranchConfigurationBasedOnNoPrIdInEnvironmentParameters()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v4.CreateCheckRunTest",
                "name": "deserialiseReturnsSerialiseInput",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.AnalysisDetailsTest",
                "name": "shouldOnlyReturnQualityGateConditionsInErrorState()",
                "time": 0.599,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.AnalysisDetailsTest",
                "name": "shouldOnlyReturnNonClosedFileIssuesWithScmInfo()",
                "time": 0.291,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.AnalysisDetailsTest",
                "name": "shouldGetIdFromAnalysis()",
                "time": 0.226,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.AnalysisDetailsTest",
                "name": "shouldReturnCommitSha()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.AnalysisDetailsTest",
                "name": "shouldReturnPullRequestId()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.AnalysisDetailsTest",
                "name": "shouldFilterOnQualityGateConditionName()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.AnalysisDetailsTest",
                "name": "shouldGetDateFromAnalysis()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.AnalysisDetailsTest",
                "name": "shouldReturnStatusFromQualityGate()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.AnalysisDetailsTest",
                "name": "shouldGetProjectKeyFromUnderlyingProject()",
                "time": 0.182,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.AnalysisDetailsTest",
                "name": "shouldRetrievePropertyFromScannerProperties()",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.AnalysisDetailsTest",
                "name": "shouldGetProjectNameFromUnderlyingProject()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.SetBitBucketCloudBindingActionTest",
                "name": "shouldDefineActionWithValidParameters()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.SetBitBucketCloudBindingActionTest",
                "name": "shouldHandleRequestWithValidParameters()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v4.GraphqlGithubClientTest",
                "name": "verifyCheckRunSubmitsCorrectAnnotations()",
                "time": 0.645,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v4.GraphqlGithubClientTest",
                "name": "checkExcessIssuesCorrectlyReported()",
                "time": 0.298,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v4.GraphqlGithubClientTest",
                "name": "createCheckRunExceptionOnErrorResponse()",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v3.DefaultUrlConnectionProviderTest",
                "name": "testValidInputStreamReturned",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityBranchConfigurationLoaderTest",
                "name": "shouldReturnDefaultBranchIfAutoConfigurerNoResultAndNoParametersSpecified()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityBranchConfigurationLoaderTest",
                "name": "shouldThrowErrorIfBothBranchAndPullRequestParametersPresent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityBranchConfigurationLoaderTest",
                "name": "shouldThrowErrorIfPullRequestAnalysisWithoutPullRequestBranch()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityBranchConfigurationLoaderTest",
                "name": "shouldCreatePullConfigurationIfAnyPullRequestPropertiesSet()",
                "time": 0.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityBranchConfigurationLoaderTest",
                "name": "shouldCreateBranchConfigurationIfAnyBranchPropertiesSet()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityBranchConfigurationLoaderTest",
                "name": "shouldThrowErrorIfPullRequestAnalysisWithoutPullRequestKey()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityBranchConfigurationLoaderTest",
                "name": "shouldReturnResultFromAutoConfigurerIfPresentAndNoParametersSpecified()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.DocumentTest",
                "name": "checkValidChild",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.DocumentTest",
                "name": "checkInvalidChild",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchAgentTest",
                "name": "shouldRedefineTargetClassesForCeLaunch()",
                "time": 0.401,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchAgentTest",
                "name": "shouldRedefineSetActionClassForWebLaunch()",
                "time": 0.69,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchAgentTest",
                "name": "shouldThrowErrorIfAgentArgsNotValid()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchAgentTest",
                "name": "shouldSkipNonTargetClasForWebLaunch()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchAgentTest",
                "name": "shouldSkipNonTargetClassForCeLunch()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchAgentTest",
                "name": "shouldRedefineMultipleAlmFeatureClassForWebLaunch()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.CommunityBranchAgentTest",
                "name": "shouldRedefinesUnsetActionClassForWebLaunch()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PullRequestPostAnalysisTaskTest",
                "name": "testFinishedNonPullRequest()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PullRequestPostAnalysisTaskTest",
                "name": "testFinishedNoBranchName()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PullRequestPostAnalysisTaskTest",
                "name": "testFinishedAnalysisDecorationRequest()",
                "time": 0.759,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PullRequestPostAnalysisTaskTest",
                "name": "testFinishedNoAnalysis()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PullRequestPostAnalysisTaskTest",
                "name": "testFinishedAnalysisDecorationRequestPullRequestLinkSaved()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PullRequestPostAnalysisTaskTest",
                "name": "testFinishedAnalysisWithNoQualityGate()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PullRequestPostAnalysisTaskTest",
                "name": "testFinishedNoProviderMatchingName()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PullRequestPostAnalysisTaskTest",
                "name": "testCorrectDescriptionReturnedForTask()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PullRequestPostAnalysisTaskTest",
                "name": "testFinishedAnalysisWithNoRevision()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PullRequestPostAnalysisTaskTest",
                "name": "testFinishedAnalysisDecorationRequestPullRequestLinkNotSavedIfBranchDtoMissing()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PullRequestPostAnalysisTaskTest",
                "name": "testFinishedNoProviderSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.SetBitBucketBindingActionTest",
                "name": "shouldHandleRequestWithRequiredParameters()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.SetBitBucketBindingActionTest",
                "name": "shouldDefineActionWithRequiredParameters()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.pullrequest.PullRequestWsTest",
                "name": "shouldCallDefineOnEachAction()",
                "time": 0.53,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.GitlabCiAutoConfigurerTest",
                "name": "shouldReturnOptionalEmptyIfNotGitlabCi()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.GitlabCiAutoConfigurerTest",
                "name": "shouldReturnPullRequestConfigurationBasedOnPrIdInEnvironmentParameters()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.GitlabCiAutoConfigurerTest",
                "name": "shouldReturnBranchConfigurationBasedOnNoPrIdInEnvironmentParameters()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.v4.UpdateCheckRunTest",
                "name": "deserialiseReturnsSerialiseInput",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.SetGithubBindingActionTest",
                "name": "shouldHandleRequestWithRequiredParmaeters()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.SetGithubBindingActionTest",
                "name": "shouldDefineActionWithRequiredParameters()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.DefaultGithubClientFactoryTest",
                "name": "testHappyPath()",
                "time": 0.163,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.DefaultGithubClientFactoryTest",
                "name": "testExceptionThrownIfAlmRepoMissing()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.DefaultGithubClientFactoryTest",
                "name": "testExceptionThrownIfAuthenticationProviderThrowsException()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.DefaultGithubClientFactoryTest",
                "name": "testExceptionThrownIfUrlMissing()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.DefaultGithubClientFactoryTest",
                "name": "testExceptionThrownIfPrivateKeyMissing()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.github.DefaultGithubClientFactoryTest",
                "name": "testExceptionThrownIfAppIdMissing()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.AzureDevopsValidatorTest",
                "name": "testHappyPath()",
                "time": 0.168,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.AzureDevopsValidatorTest",
                "name": "testInvalidConfigurationExceptionThrownIfCreateClientFails()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.AzureDevopsValidatorTest",
                "name": "testCorrectAlmReturnedForValidator()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.AzureDevopsValidatorTest",
                "name": "testInvalidConfigurationExceptionThrownIfRetrieveProjectFails()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.AzureDevopsValidatorTest",
                "name": "testExceptionOnMissingRepo()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.AzureDevopsValidatorTest",
                "name": "testExceptionOnMissingSlug()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.AzureDevopsValidatorTest",
                "name": "testInvalidConfigurationExceptionRethrownIfCreateClientThrowsInvalidConfigurationException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchLoaderDelegateTest",
                "name": "testBranchNamePullRequestNoSuchTarget",
                "time": 1.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchLoaderDelegateTest",
                "name": "testBranchNameMatchingBranch",
                "time": 0.162,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchLoaderDelegateTest",
                "name": "testBranchNamePullRequest",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchLoaderDelegateTest",
                "name": "testNoBranchDetailsNoExistingBranchThrowsException",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchLoaderDelegateTest",
                "name": "testBranchNameNoMatchingBranch",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchLoaderDelegateTest",
                "name": "testBranchNameMatchingBranchWithTargetBranchMissingTargetBranch",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchLoaderDelegateTest",
                "name": "testNoBranchDetailsExistingBranchMatch",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityBranchLoaderDelegateTest",
                "name": "testBranchNameMatchingBranchWithTargetBranch",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.TextTest",
                "name": "testGetContent",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.TextTest",
                "name": "testInvalidChild",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.SetBindingActionTest",
                "name": "shouldHandleRequestWithRequiredParameters()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.binding.action.SetBindingActionTest",
                "name": "shouldDefineActionWithRequiredParameters()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldNotCloseDiscussionWithMultipleResolvableNotesFromSonarqubeUserButNoId",
                "time": 1.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldThrowErrorWhenGitlabUserRetrievalFails",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldThrowErrorIfSubmittingNewIssueToGitlabFails",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldThrowErrorWhenPullRequestKeyNotNumeric",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldThrowErrorWhenGitlabMergeRequestDiscussionRetrievalFails",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldThrowErrorIfUnableToCleanUpDiscussionOnGitlab",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldThrowErrorWhenSubmitAnalysisToGitlabFails",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldNotStartNewDiscussionForIssueWithExistingCommentFromCommitInMergeRequest",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldNotCreateCommentsForIssuesWithNoLineNumbers",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldSubmitFailedPipelineStatusAndUnresolvedSummaryCommentOnFailedAnalysis",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldCloseDiscussionWithResolvableNoteFromSonarqubeUserAndOnlySystemNoteFromOtherUser",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldCommentAboutCloseOfDiscussionWithMultipleResolvableNotesFromSonarqubeUserAndAnotherUserWithIssuedId",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldStartNewDiscussionForNewIssueFromCommitInMergeRequest",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldNotCloseDiscussionWithSingleNonResolvableNoteFromSonarqubeUserButNoIssueIdInBody",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldReturnWebUrlFromScannerPropertyIfSet",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldThrowErrorWhenSubmitPipelineStatusToGitlabFails",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldNotCommentOrAttemptCloseOfDiscussionWithMultipleResolvableNotesFromSonarqubeUserAndACloseMessageWithIssueId",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldNotCommentOrAttemptCloseOfDiscussionWithMultipleResolvableNotesFromSonarqubeWithOtherProjectId",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldReturnCorrectDecoratorType",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldSubmitSuccessfulPipelineStatusAndResolvedSummaryCommentOnSuccessAnalysis",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldThrowErrorWhenGitlabMergeRequestCommitsRetrievalFails",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldNotAttemptCloseOfDiscussionWithMultipleResolvableNotesFromSonarqubeUserAndAnotherUserWithNoId",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldNotCommentOrAttemptCloseOfDiscussionWithMultipleResolvableNotesFromSonarqubeUserAndACloseMessageWithNoId",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldThrowErrorWhenGitlabMergeRequestRetrievalFails",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldReturnWebUrlFromMergeRequestIfScannerPropertyNotSet",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorTest",
                "name": "shouldCloseDiscussionWithSingleResolvableNoteFromSonarqubeUserButNoIssueIdInBody",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.ListTest",
                "name": "testIsValidChildInvalidChild",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.ListTest",
                "name": "testIsValidChildText",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.ListItemTest",
                "name": "testIsValidChildInvalidChild",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.ListItemTest",
                "name": "testIsValidChildLink",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.ListItemTest",
                "name": "testIsValidChildText",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.ListItemTest",
                "name": "testIsValidChildImage",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.ParagraphTest",
                "name": "testIsValidChildInvalidChild",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.ParagraphTest",
                "name": "testIsValidChildValidChildLink",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.ParagraphTest",
                "name": "testIsValidChildValidChildText",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.ParagraphTest",
                "name": "testIsValidChildValidChildImage",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PostAnalysisIssueVisitorTest",
                "name": "shouldReturnNoScmInfoForFileComponentWithNoInfo",
                "time": 0.405,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PostAnalysisIssueVisitorTest",
                "name": "testDifferentLightIssues",
                "time": 0.429,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PostAnalysisIssueVisitorTest",
                "name": "testEqualLightIssues",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PostAnalysisIssueVisitorTest",
                "name": "checkAllIssuesCollected",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PostAnalysisIssueVisitorTest",
                "name": "testLightIssueMapping",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PostAnalysisIssueVisitorTest",
                "name": "shouldReturnScmInfoForFileComponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.PostAnalysisIssueVisitorTest",
                "name": "shouldReturnNoScmInfoForNonFileComponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.ws.AlmTypeMapperTest",
                "name": "testToAlmWs",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.DefaultBitbucketClientFactoryUnitTest",
                "name": "testCreateClientIsCloudIfCloudConfig",
                "time": 1.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.almclient.bitbucket.DefaultBitbucketClientFactoryUnitTest",
                "name": "testCreateClientIfNotCloudConfig",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.CommunityReportAnalysisComponentProviderTest",
                "name": "testGetComponents",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorIntegrationTest",
                "name": "decorateQualityGateStatusOk",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.gitlab.GitlabMergeRequestDecoratorIntegrationTest",
                "name": "decorateQualityGateStatusError",
                "time": 0.14,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.report.ReportGeneratorTest",
                "name": "[1] SECURITY_HOTSPOT, security_hotspots?id=project-key&pullRequest=pull-request-id&hotspots=issue-key",
                "time": 0.707,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.report.ReportGeneratorTest",
                "name": "[2] BUG, project/issues?id=project-key&pullRequest=pull-request-id&issues=issue-key&open=issue-key",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.report.ReportGeneratorTest",
                "name": "[1] 12, 0.svg?sanitize=true, 21, 20plus.svg?sanitize=true",
                "time": 0.2,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.report.ReportGeneratorTest",
                "name": "[2] 98, 90.svg?sanitize=true, 1, 3.svg?sanitize=true",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.report.ReportGeneratorTest",
                "name": "[3] null, NoCoverageInfo.svg?sanitize=true, null, NoDuplicationInfo.svg?sanitize=true",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.CommunityBranchParamsValidatorTest",
                "name": "testNoMessagesOnValidate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.CommunityBranchSupportDelegateTest",
                "name": "shouldThrowExceptionOnCreateComponentKeyMissingBranchTypeAndPullParameters()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.CommunityBranchSupportDelegateTest",
                "name": "[1] branchName, null, BRANCH, [], false",
                "time": 0.61,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.CommunityBranchSupportDelegateTest",
                "name": "[2] null, pullRequestKey, PULL_REQUEST, [], false",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.CommunityBranchSupportDelegateTest",
                "name": "[3] complex-name, null, BRANCH, [abc, def, comp.*], true",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.CommunityBranchSupportDelegateTest",
                "name": "shouldReturnValidComponentKeyForBranchParameters()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.CommunityBranchSupportDelegateTest",
                "name": "shouldThrowExceptionIfBranchAndComponentKeysMismatch()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.CommunityBranchSupportDelegateTest",
                "name": "shouldReturnValidComponentKeyForPullRequestParameters()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.CommunityBranchSupportDelegateTest",
                "name": "shouldThrowExceptoinOnCreateComponentKeyInvalidBranchTypeParameter()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.report.AnalysisSummaryTest",
                "name": "testCreateAnalysisSummary()",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.HeadingTest",
                "name": "checkValidAddChildImage",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.HeadingTest",
                "name": "checkInvalidAddChild",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.HeadingTest",
                "name": "correctParametersReturned",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.HeadingTest",
                "name": "checkValidAddChildLink",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.ce.pullrequest.markup.HeadingTest",
                "name": "checkValidAddChildText",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.BitbucketValidatorTest",
                "name": "testInvalidConfigurationExceptionThrownIfRetrieveRepositoryFails()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.BitbucketValidatorTest",
                "name": "testInvalidConfigurationExceptionThrownIfCodeInsightsIsFalse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.BitbucketValidatorTest",
                "name": "testHappyPath()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.BitbucketValidatorTest",
                "name": "testInvalidConfigurationExceptionThrownIfCreateClientFails()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.BitbucketValidatorTest",
                "name": "testInvalidConfigurationExceptionRethrownIfCreateClientThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.BitbucketValidatorTest",
                "name": "testInvalidConfigurationExceptionThrownIfCodeInsightsCheckFails()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.server.pullrequest.validator.BitbucketValidatorTest",
                "name": "testCorrectAlmReturnedForValidator()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.CodeMagicAutoConfigurerTest",
                "name": "shouldReturnOptionalEmptyIfNotCi()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.CodeMagicAutoConfigurerTest",
                "name": "shouldReturnPullRequestConfigurationBasedOnPrIdInEnvironmentParameters()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.CodeMagicAutoConfigurerTest",
                "name": "shouldReturnBranchConfigurationBasedOnNoPrIdInEnvironmentParameters()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "com.github.mc1arke.sonarqube.plugin.scanner.autoconfiguration.CodeMagicAutoConfigurerTest",
                "name": "shouldReturnOptionalEmptyIfCiWithNoFciBranchProperty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep] \ud83d\ude80  Start image=crawlergpt:latest\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin] user=0 workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep] \u2b50 Run Main Checkout\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep]   \u2705  Success - Main Checkout\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep] \u2b50 Run Main Init\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/init] user= workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep]   \u2699  ::set-output:: version=1.15.0-SNAPSHOT\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep]   \u2699  ::set-output:: release=false\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep]   \u2705  Success - Main Init\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/prep] \ud83c\udfc1  Job succeeded\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ] \ud83d\ude80  Start image=crawlergpt:latest\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot] \ud83d\ude80  Start image=crawlergpt:latest\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin] user=0 workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin] user=0 workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v3\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v3\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ] \u2b50 Run Main Checkout\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2705  Success - Main Checkout\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ] \u2b50 Run Main Set up Java\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/c53e43a7-0971-40d7-bc6f-1edc7e88dbe6/act/actions-setup-java@v3/ dst=/var/run/act/actions/actions-setup-java@v3/\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v3/] user=0 workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/setup/index.js] user= workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2753  ::group::Installed distributions\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Trying to resolve the latest version from remote\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::Gathering available versions from 'https://api.azul.com/zulu/download/community/v1.0/bundles/?os=linux&ext=tar.gz&bundle_type=jdk&javafx=false&arch=x86&hw_bitness=64&release_status=ga'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Resolved latest version as 11.0.19+7\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Trying to download...\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Downloading Java 11.0.19+7 (Zulu) from https://cdn.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz ...\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::Downloading https://cdn.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::Destination /tmp/9431119a-e704-4d5e-90f4-f6efc85c372f\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot] \ud83e\uddea  Matrix: map[java:11]\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot] \u2b50 Run Main Checkout\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2705  Success - Main Checkout\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot] \u2b50 Run Main Set up Java 11\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker cp src=/tmp/act-cache/c53e43a7-0971-40d7-bc6f-1edc7e88dbe6/act/actions-setup-java@v3/ dst=/var/run/act/actions/actions-setup-java@v3/\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v3/] user=0 workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/setup/index.js] user= workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2753  ::group::Installed distributions\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Trying to resolve the latest version from remote\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::Gathering available versions from 'https://api.azul.com/zulu/download/community/v1.0/bundles/?os=linux&ext=tar.gz&bundle_type=jdk&javafx=false&arch=x86&hw_bitness=64&release_status=ga'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Resolved latest version as 11.0.19+7\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Trying to download...\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Downloading Java 11.0.19+7 (Zulu) from https://cdn.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz ...\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::Downloading https://cdn.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::Destination /tmp/ea692183-eb67-4a54-a7cf-52faf6376687\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::download complete\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Extracting Java archive...\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::Checking tar --version\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/88914172-b14b-4c8b-8248-1459457b9396 -f /tmp/9431119a-e704-4d5e-90f4-f6efc85c372f\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::Caching tool Java_Zulu_jdk 11.0.19-7 x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::source dir: /tmp/88914172-b14b-4c8b-8248-1459457b9396/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::download complete\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Extracting Java archive...\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::Checking tar --version\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/beb1f205-00c3-4482-9be2-981e39938625 -f /tmp/ea692183-eb67-4a54-a7cf-52faf6376687\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::finished caching tool\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Java 11.0.19+7 was downloaded\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Setting Java 11.0.19+7 as the default\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Creating toolchains.xml for JDK version 11 from zulu\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Writing to /home/runneradmin/.m2/toolchains.xml\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Java configuration:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   |   Distribution: zulu\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   |   Version: 11.0.19+7\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   |   Path: /opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2753  ::endgroup::\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v3/.github/java.json\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Creating settings.xml with server-id: github\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Writing to /home/runneradmin/.m2/settings.xml\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2705  Success - Main Set up Java\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2699  ::set-env:: JAVA_HOME_11_X64=/opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2699  ::set-output:: version=11.0.19+7\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2699  ::set-output:: distribution=Zulu\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64/bin\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ] \u2b50 Run Main Cache deps\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/c53e43a7-0971-40d7-bc6f-1edc7e88dbe6/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::Caching tool Java_Zulu_jdk 11.0.19-7 x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::source dir: /tmp/beb1f205-00c3-4482-9be2-981e39938625/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::finished caching tool\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Java 11.0.19+7 was downloaded\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Setting Java 11.0.19+7 as the default\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Creating toolchains.xml for JDK version 11 from zulu\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Writing to /home/runneradmin/.m2/toolchains.xml\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Java configuration:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   Distribution: zulu\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   Version: 11.0.19+7\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   Path: /opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2753  ::endgroup::\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2753 add-matcher /run/act/actions/actions-setup-java@v3/.github/java.json\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Creating settings.xml with server-id: github\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Writing to /home/runneradmin/.m2/settings.xml\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2705  Success - Main Set up Java 11\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2699  ::set-env:: JAVA_HOME_11_X64=/opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2699  ::set-output:: version=11.0.19+7\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2699  ::set-output:: distribution=Zulu\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64/bin\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot] \u2b50 Run Main Cache deps\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker cp src=/tmp/act-cache/c53e43a7-0971-40d7-bc6f-1edc7e88dbe6/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::Resolved Keys:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::[\"Linux-gradle-1df0046275c77bdc6069d001b697f404f8b2d43c7ee40a675782f3706468cff1\",\"Linux-gradle-\"]\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::1.5.0\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38701/_apis/artifactcache/cache?keys=Linux-gradle-1df0046275c77bdc6069d001b697f404f8b2d43c7ee40a675782f3706468cff1%252CLinux-gradle-&version=c09c45a3e217e22c4a0d11ca722575f7f378f70b48a778289c5d7a2ac33a328c\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Cache not found for input keys: Linux-gradle-1df0046275c77bdc6069d001b697f404f8b2d43c7ee40a675782f3706468cff1, Linux-gradle-\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::Resolved Keys:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::[\"Linux-gradle-1df0046275c77bdc6069d001b697f404f8b2d43c7ee40a675782f3706468cff1\",\"Linux-gradle-\"]\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2705  Success - Main Cache deps\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::1.5.0\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38701/_apis/artifactcache/cache?keys=Linux-gradle-1df0046275c77bdc6069d001b697f404f8b2d43c7ee40a675782f3706468cff1%252CLinux-gradle-&version=c09c45a3e217e22c4a0d11ca722575f7f378f70b48a778289c5d7a2ac33a328c\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | Cache not found for input keys: Linux-gradle-1df0046275c77bdc6069d001b697f404f8b2d43c7ee40a675782f3706468cff1, Linux-gradle-\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2705  Success - Main Cache deps\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot] \u2b50 Run Main Build\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ] \u2b50 Run Post Cache deps\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/save/index.js] user= workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::1.5.0\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.gradle/caches'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::Cache Paths:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udcac  ::debug::[]\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   | [warning]Path Validation Error: Path(s) specified in the action for caching do(es) not exist, hence no cache is being saved.\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2705  Success - Post Cache deps\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Downloading https://services.gradle.org/distributions/gradle-7.3.3-all.zip\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ] \u2b50 Run Post Set up Java\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/cleanup/index.js] user= workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ]   \u2705  Success - Post Set up Java\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/sonar   ] \ud83c\udfc1  Job succeeded\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ...............10%...............20%...............30%...............40%...............50%...............60%................70%...............80%...............90%...............100%\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Welcome to Gradle 7.3.3!\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Here are the highlights of this release:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |  - Easily declare new test suites in Java projects\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |  - Support for Java 17\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |  - Support for Scala 3\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | For more details see https://docs.gradle.org/7.3.3/release-notes.html\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Configure project :\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Extracting SonarQube libraries (this may take a while)...\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :clean UP-TO-DATE\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :compileJava\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/main/java/com/github/mc1arke/sonarqube/plugin/scanner/CommunityBranchConfigurationLoader.java:97: warning: [deprecation] BRANCH_TARGET in ScannerProperties has been deprecated\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         if (null != localSettings.get(ScannerProperties.BRANCH_TARGET)) { //NOSONAR - purposefully checking for a deprecated parameter\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                        ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/main/java/com/github/mc1arke/sonarqube/plugin/scanner/CommunityBranchConfigurationLoader.java:98: warning: [deprecation] BRANCH_TARGET in ScannerProperties has been deprecated\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |             String warning = String.format(\"Property '%s' is no longer supported\", ScannerProperties.BRANCH_TARGET); //NOSONAR - reporting use of deprecated parameter\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                                     ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/main/java/com/github/mc1arke/sonarqube/plugin/almclient/azuredevops/DefaultAzureDevopsClientFactory.java:47: warning: [deprecation] configure(MapperFeature,boolean) in ObjectMapper has been deprecated\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                 .configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true)\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                 ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | 3 warnings\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :processResources\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :classes\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :jar SKIPPED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :shadowJar\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :assemble\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :compileTestJava\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/ce/CommunityBranchLoaderDelegateTest.java:57: warning: [deprecation] none() in ExpectedException has been deprecated\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     private final ExpectedException expectedException = ExpectedException.none();\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                          ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/ce/pullrequest/bitbucket/BitbucketPullRequestDecoratorTest.java:82: warning: [unchecked] unchecked method invocation: method forClass in class ArgumentCaptor is applied to given types\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         ArgumentCaptor<List<ReportData>> reportDataArgumentCaptor = ArgumentCaptor.forClass(List.class);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                            ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<S>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found: Class<List>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where S,U are type-variables:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     S extends U declared in method <U,S>forClass(Class<S>)\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     U extends Object declared in method <U,S>forClass(Class<S>)\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/ce/pullrequest/bitbucket/BitbucketPullRequestDecoratorTest.java:82: warning: [unchecked] unchecked conversion\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         ArgumentCaptor<List<ReportData>> reportDataArgumentCaptor = ArgumentCaptor.forClass(List.class);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                            ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: ArgumentCaptor<List<ReportData>>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    ArgumentCaptor\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/ce/pullrequest/bitbucket/BitbucketPullRequestDecoratorTest.java:109: warning: [unchecked] unchecked method invocation: method forClass in class ArgumentCaptor is applied to given types\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         ArgumentCaptor<List<ReportData>> reportDataArgumentCaptor = ArgumentCaptor.forClass(List.class);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                            ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<S>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found: Class<List>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where S,U are type-variables:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     S extends U declared in method <U,S>forClass(Class<S>)\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     U extends Object declared in method <U,S>forClass(Class<S>)\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/ce/pullrequest/bitbucket/BitbucketPullRequestDecoratorTest.java:109: warning: [unchecked] unchecked conversion\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         ArgumentCaptor<List<ReportData>> reportDataArgumentCaptor = ArgumentCaptor.forClass(List.class);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                            ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: ArgumentCaptor<List<ReportData>>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    ArgumentCaptor\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/ce/pullrequest/report/AnalysisSummaryTest.java:69: warning: [unchecked] unchecked conversion\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         Formatter<Document> formatter = mock(Formatter.class);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                             ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Formatter<Document>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Formatter\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/ce/pullrequest/report/AnalysisIssueSummaryTest.java:55: warning: [unchecked] unchecked conversion\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         Formatter<Document> documentFormatter = mock(Formatter.class);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                     ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Formatter<Document>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Formatter\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/ce/pullrequest/AnalysisDetailsTest.java:177: warning: [deprecation] WARN in EvaluationStatus has been deprecated\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         when(condition4.getStatus()).thenReturn(QualityGate.EvaluationStatus.WARN);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                             ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/ce/pullrequest/AnalysisDetailsTest.java:207: warning: [unchecked] unchecked conversion\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         Map<String, String> scannerProperties = mock(Map.class);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                     ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Map<String,String>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Map\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/CommunityBranchAgentTest.java:74: warning: [unchecked] unchecked cast\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |             Class<SonarQubeFeature> redefined = (Class<SonarQubeFeature>) classLoader.loadClass(MultipleAlmFeature.class.getName(), result);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                                ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<SonarQubeFeature>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Class<CAP#1>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where CAP#1 is a fresh type-variable:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     CAP#1 extends Object from capture of ?\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/CommunityBranchAgentTest.java:196: warning: [unchecked] unchecked cast\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |             Class<EditionProvider> redefined = (Class<EditionProvider>) classLoader.loadClass(PlatformEditionProvider.class.getName(), result);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                              ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<EditionProvider>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Class<CAP#1>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where CAP#1 is a fresh type-variable:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     CAP#1 extends Object from capture of ?\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/CommunityBranchAgentTest.java:208: warning: [unchecked] unchecked cast\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |             Class<MultipleAlmFeature> redefined = (Class<MultipleAlmFeature>) classLoader.loadClass(MultipleAlmFeature.class.getName(), result);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                                    ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<MultipleAlmFeature>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Class<CAP#1>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where CAP#1 is a fresh type-variable:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     CAP#1 extends Object from capture of ?\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/scanner/CommunityRepositoryBranchesLoaderTest.java:54: warning: [deprecation] none() in ExpectedException has been deprecated\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     private final ExpectedException expectedException = ExpectedException.none();\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                          ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/scanner/ScannerPullRequestPropertySensorTest.java:23: warning: [deprecation] none() in ExpectedException has been deprecated\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     private final ExpectedException expectedException = ExpectedException.none();\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                          ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/almclient/github/v4/GraphqlGithubClientTest.java:113: warning: [unchecked] unchecked cast\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                 InputObject<Object> inputObject = (InputObject<Object>) i2.callRealMethod();\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                          ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: InputObject<Object>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Object\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/almclient/github/v4/GraphqlGithubClientTest.java:398: warning: [unchecked] unchecked method invocation: method forClass in class ArgumentCaptor is applied to given types\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         ArgumentCaptor<List<InputObject>> annotationsArgumentCaptor = ArgumentCaptor.forClass(List.class);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                              ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<S>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found: Class<List>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where S,U are type-variables:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     S extends U declared in method <U,S>forClass(Class<S>)\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     U extends Object declared in method <U,S>forClass(Class<S>)\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/almclient/github/v4/GraphqlGithubClientTest.java:398: warning: [unchecked] unchecked conversion\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         ArgumentCaptor<List<InputObject>> annotationsArgumentCaptor = ArgumentCaptor.forClass(List.class);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                              ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: ArgumentCaptor<List<InputObject>>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    ArgumentCaptor\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/almclient/github/v4/GraphqlGithubClientTest.java:399: warning: [unchecked] unchecked call to put(String,T) as a member of the raw type Builder\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         verify(builders.get(100), times(3)).put(eq(\"annotations\"), annotationsArgumentCaptor.capture());\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where T is a type-variable:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     T extends Object declared in class Builder\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/classloader/ReflectiveElevatedClassLoaderFactoryTest.java:46: warning: [deprecation] none() in ExpectedException has been deprecated\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     private final ExpectedException expectedException = ExpectedException.none();\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                          ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/classloader/ReflectiveElevatedClassLoaderFactoryTest.java:73: warning: [unchecked] unchecked cast\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                 (Class<? extends Plugin>) classLoader.loadClass(TARGET_PLUGIN_CLASS);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<? extends Plugin>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Class<CAP#1>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where CAP#1 is a fresh type-variable:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     CAP#1 extends Object from capture of ?\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/classloader/ReflectiveElevatedClassLoaderFactoryTest.java:103: warning: [unchecked] unchecked cast\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                 (Class<? extends Plugin>) classLoader.loadClass(TARGET_PLUGIN_CLASS);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<? extends Plugin>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Class<CAP#1>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where CAP#1 is a fresh type-variable:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     CAP#1 extends Object from capture of ?\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/classloader/ReflectiveElevatedClassLoaderFactoryTest.java:130: warning: [unchecked] unchecked cast\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                 (Class<? extends Plugin>) classLoader.loadClass(TARGET_PLUGIN_CLASS);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<? extends Plugin>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Class<CAP#1>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where CAP#1 is a fresh type-variable:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     CAP#1 extends Object from capture of ?\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/classloader/ReflectiveElevatedClassLoaderFactoryTest.java:157: warning: [unchecked] unchecked cast\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                 (Class<? extends Plugin>) classLoader.loadClass(TARGET_PLUGIN_CLASS);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<? extends Plugin>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Class<CAP#1>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where CAP#1 is a fresh type-variable:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     CAP#1 extends Object from capture of ?\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/classloader/ReflectiveElevatedClassLoaderFactoryTest.java:183: warning: [unchecked] unchecked cast\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                 (Class<? extends Plugin>) classLoader.loadClass(TARGET_PLUGIN_CLASS);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<? extends Plugin>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Class<CAP#1>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where CAP#1 is a fresh type-variable:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     CAP#1 extends Object from capture of ?\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/classloader/ProviderTypeTest.java:16: warning: [deprecation] none() in ExpectedException has been deprecated\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     private final ExpectedException expectedException = ExpectedException.none();\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                          ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/classloader/ClassReferenceElevatedClassLoaderFactoryTest.java:51: warning: [deprecation] none() in ExpectedException has been deprecated\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     private final ExpectedException expectedException = ExpectedException.none();\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                          ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/classloader/ClassReferenceElevatedClassLoaderFactoryTest.java:73: warning: [unchecked] unchecked cast\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         testCase.createClassLoader((Class<? extends Plugin>) mockClassLoader.loadClass(TARGET_PLUGIN_CLASS));\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                       ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<? extends Plugin>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Class<CAP#1>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where CAP#1 is a fresh type-variable:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     CAP#1 extends Object from capture of ?\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/classloader/ClassReferenceElevatedClassLoaderFactoryTest.java:98: warning: [unchecked] unchecked cast\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |         Class<? extends Plugin> loadedClass = (Class<? extends Plugin>) classLoader.loadClass(TARGET_PLUGIN_CLASS);\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                                              ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   required: Class<? extends Plugin>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   found:    Class<CAP#1>\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |   where CAP#1 is a fresh type-variable:\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     CAP#1 extends Object from capture of ?\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/classloader/ElevatedClassLoaderFactoryTest.java:17: warning: [deprecation] none() in ExpectedException has been deprecated\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     private final ExpectedException expectedException = ExpectedException.none();\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                          ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/src/test/java/com/github/mc1arke/sonarqube/plugin/CommunityBranchPluginBootstrapTest.java:51: warning: [deprecation] none() in ExpectedException has been deprecated\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |     private final ExpectedException expectedException = ExpectedException.none();\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   |                                                                          ^\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | 30 warnings\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :processTestResources\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :testClasses\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :test\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginBootstrapTest > testFailureOnReflectiveOperationException PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginBootstrapTest > testDifferentHashCode PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginBootstrapTest > testNoArgsConstructor PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginBootstrapTest > testEqualsSameInstance PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginBootstrapTest > testDefineNotInvokedForNonScanner PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginBootstrapTest > testDefineInvokedOnSuccessLoad PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginBootstrapTest > testFailureOnIncorrectClassTypeReturned PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginBootstrapTest > testNotEqualsUnrelatedClasses PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketCloudClientUnitTest > testUploadAnnotationsWithEmptyAnnotations PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketCloudClientUnitTest > testUploadReport PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketCloudClientUnitTest > testCreateAnnotationForCloud PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketCloudClientUnitTest > testCreateDataLinkForCloud PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketCloudClientUnitTest > testDeleteReport PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketCloudClientUnitTest > testUploadLimit PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketCloudClientUnitTest > testCloudAlwaysSupportsCodeInsights PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketCloudClientUnitTest > testCreateCloudReport PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketCloudClientUnitTest > testUploadAnnotations PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketCloudClientUnitTest > testUploadReportFailsWithMessage PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketExceptionTest > verifyMessageReturnedWhenErrorResponseContainsNoErrors PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testUploadReportFails PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testUploadAnnotationsWithEmptyAnnotations PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testSupportsCodeInsightsIsTrueWhenVersionEqual PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testSupportsCodeInsightsIsTrueIfVersionIsHigher PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testUploadReport PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testGetServerPropertiesError PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testCreateDataLinkForServer PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testUploadLimit PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testGetServerProperties PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testSupportsCodeInsightsIsFalse PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testDeleteAnnotations PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testCreateCloudReport PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testCreateAnnotationForServer PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testSupportsCodeInsightsIsFalseWhenException PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testUploadAnnotations PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketServerClientUnitTest > testUploadReportFailsWithMessage PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultBitbucketClientFactoryUnitTest > testCreateClientIsCloudIfCloudConfig PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultBitbucketClientFactoryUnitTest > testCreateClientIfNotCloudConfig PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultUrlConnectionProviderTest > testValidInputStreamReturned PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | RestApplicationAuthenticationProviderTest > testTokenRetrievedHappyPathV3Path PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | RestApplicationAuthenticationProviderTest > testTokenRetrievedHappyPathApiPath PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | RestApplicationAuthenticationProviderTest > testAppInstallationsPagination PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | RestApplicationAuthenticationProviderTest > testExceptionOnNoMatchingToken PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | RestApplicationAuthenticationProviderTest > testTokenRetrievedHappyPathApiPathTrailingSlash PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | RestApplicationAuthenticationProviderTest > testTokenRetrievedHappyPathV3PathTrailingSlash PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | RestApplicationAuthenticationProviderTest > testTokenRetrievedHappyPath PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | RestApplicationAuthenticationProviderTest > testTokenRetrievedPaginatedHappyPath PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CreateCheckRunTest > deserialiseReturnsSerialiseInput PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultGraphqlProviderTest > newInstancesShouldBeReturnedOnRepeatCalls PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | UpdateCheckRunTest > deserialiseReturnsSerialiseInput PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchLoaderDelegateTest > testBranchNamePullRequestNoSuchTarget PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchLoaderDelegateTest > testBranchNameMatchingBranch PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchLoaderDelegateTest > testBranchNamePullRequest PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchLoaderDelegateTest > testNoBranchDetailsNoExistingBranchThrowsException PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchLoaderDelegateTest > testBranchNameNoMatchingBranch PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchLoaderDelegateTest > testBranchNameMatchingBranchWithTargetBranchMissingTargetBranch PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchLoaderDelegateTest > testNoBranchDetailsExistingBranchMatch PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchLoaderDelegateTest > testBranchNameMatchingBranchWithTargetBranch PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityReportAnalysisComponentProviderTest > testGetComponents PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PostAnalysisIssueVisitorTest > shouldReturnNoScmInfoForFileComponentWithNoInfo PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PostAnalysisIssueVisitorTest > testDifferentLightIssues PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PostAnalysisIssueVisitorTest > testEqualLightIssues PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PostAnalysisIssueVisitorTest > checkAllIssuesCollected PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PostAnalysisIssueVisitorTest > testLightIssueMapping PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PostAnalysisIssueVisitorTest > shouldReturnScmInfoForFileComponent PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PostAnalysisIssueVisitorTest > shouldReturnNoScmInfoForNonFileComponent PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevOpsPullRequestDecoratorTest > decorateQualityGateStatusClosedIssue PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevOpsPullRequestDecoratorTest > testName PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevOpsPullRequestDecoratorTest > decorateQualityGateStatusNewIssue PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevOpsPullRequestDecoratorTest > testDecorateQualityGateProjectIDException PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevOpsPullRequestDecoratorTest > testDecorateQualityGateRepoNameException PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevOpsPullRequestDecoratorTest > testDecorateQualityGatePRBranchException PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevOpsPullRequestDecoratorTest > shouldRemoveUserInfoFromRepositoryUrlForLinking PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevOpsPullRequestDecoratorTest > testDecorateQualityGateRepoSlugException PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorIntegrationTest > decorateQualityGateStatusOk PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorIntegrationTest > decorateQualityGateStatusError PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldNotCloseDiscussionWithMultipleResolvableNotesFromSonarqubeUserButNoId PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldThrowErrorWhenGitlabUserRetrievalFails PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldThrowErrorIfSubmittingNewIssueToGitlabFails PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldThrowErrorWhenPullRequestKeyNotNumeric PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldThrowErrorWhenGitlabMergeRequestDiscussionRetrievalFails PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldThrowErrorIfUnableToCleanUpDiscussionOnGitlab PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldThrowErrorWhenSubmitAnalysisToGitlabFails PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldNotStartNewDiscussionForIssueWithExistingCommentFromCommitInMergeRequest PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldNotCreateCommentsForIssuesWithNoLineNumbers PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldSubmitFailedPipelineStatusAndUnresolvedSummaryCommentOnFailedAnalysis PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldCloseDiscussionWithResolvableNoteFromSonarqubeUserAndOnlySystemNoteFromOtherUser PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldCommentAboutCloseOfDiscussionWithMultipleResolvableNotesFromSonarqubeUserAndAnotherUserWithIssuedId PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldStartNewDiscussionForNewIssueFromCommitInMergeRequest PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldNotCloseDiscussionWithSingleNonResolvableNoteFromSonarqubeUserButNoIssueIdInBody PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldReturnWebUrlFromScannerPropertyIfSet PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldThrowErrorWhenSubmitPipelineStatusToGitlabFails PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldNotCommentOrAttemptCloseOfDiscussionWithMultipleResolvableNotesFromSonarqubeUserAndACloseMessageWithIssueId PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldNotCommentOrAttemptCloseOfDiscussionWithMultipleResolvableNotesFromSonarqubeWithOtherProjectId PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldReturnCorrectDecoratorType PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldSubmitSuccessfulPipelineStatusAndResolvedSummaryCommentOnSuccessAnalysis PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldThrowErrorWhenGitlabMergeRequestCommitsRetrievalFails PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldNotAttemptCloseOfDiscussionWithMultipleResolvableNotesFromSonarqubeUserAndAnotherUserWithNoId PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldNotCommentOrAttemptCloseOfDiscussionWithMultipleResolvableNotesFromSonarqubeUserAndACloseMessageWithNoId PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldThrowErrorWhenGitlabMergeRequestRetrievalFails PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldReturnWebUrlFromMergeRequestIfScannerPropertyNotSet PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabMergeRequestDecoratorTest > shouldCloseDiscussionWithSingleResolvableNoteFromSonarqubeUserButNoIssueIdInBody PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DocumentTest > checkValidChild PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DocumentTest > checkInvalidChild PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | HeadingTest > checkValidAddChildImage PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | HeadingTest > checkInvalidAddChild PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | HeadingTest > correctParametersReturned PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | HeadingTest > checkValidAddChildLink PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | HeadingTest > checkValidAddChildText PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ImageTest > checkInvalidAddChild PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ImageTest > correctParametersReturned PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | LinkTest > testIsValidChildInvalidChild PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | LinkTest > testIsValidChildValidChildText PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | LinkTest > correctParametersReturned PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ListItemTest > testIsValidChildInvalidChild PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ListItemTest > testIsValidChildLink PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ListItemTest > testIsValidChildText PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ListItemTest > testIsValidChildImage PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ListTest > testIsValidChildInvalidChild PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ListTest > testIsValidChildText PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | NodeTest > testCorrectChildrenReturned PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | NodeTest > testExceptionThrownOnInvalidChild PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ParagraphTest > testIsValidChildInvalidChild PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ParagraphTest > testIsValidChildValidChildLink PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ParagraphTest > testIsValidChildValidChildText PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ParagraphTest > testIsValidChildValidChildImage PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | TextTest > testGetContent PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | TextTest > testInvalidChild PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ClassReferenceElevatedClassLoaderFactoryTest > testExceptionOnNoSuchClass PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ClassReferenceElevatedClassLoaderFactoryTest > testClassloaderReturnedOnHappyPath PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ClassReferenceElevatedClassLoaderFactoryTest > testLoadClass PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultElevatedClassLoaderFactoryProviderTest > validFactoryReturnedOnNoPropertiesSet PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ElevatedClassLoaderFactoryTest > testExceptionOnInvalidLoader PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ElevatedClassLoaderFactoryTest > testFallthroughClassLoading PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ProviderTypeTest > errorOnInvalidConfig PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ProviderTypeTest > testClassReferenceTypeMatched PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ProviderTypeTest > testReflectiveTypeMatched PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ReflectiveElevatedClassLoaderFactoryTest > testLoadClassInvalidApiClassloader PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ReflectiveElevatedClassLoaderFactoryTest > testLoadClassInvalidClassRealmKey PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ReflectiveElevatedClassLoaderFactoryTest > testLoadClassNoParentRef PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ReflectiveElevatedClassLoaderFactoryTest > testLoadClassInvalidClassloader PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ReflectiveElevatedClassLoaderFactoryTest > testLoadClass PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchParamsValidatorTest > testNoMessagesOnValidate PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityRepositoryBranchesLoaderTest > testMessageExceptionOnIOException PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityRepositoryBranchesLoaderTest > testEmptyBranchesOnEmptyServerResponse PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityRepositoryBranchesLoaderTest > testErrorOnNon404HttpResponse PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityRepositoryBranchesLoaderTest > testAllBranchesFromNonEmptyServerResponse PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityRepositoryBranchesLoaderTest > testEmptyListOn404HttpResponse PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ScannerPullRequestPropertySensorTest > testPropertySensorWithGitlabEnvValues PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ScannerPullRequestPropertySensorTest > testPropertySensorWithGitlabCIEnvValues PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AlmTypeMapperTest > testToAlmWs PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchAgentTest > shouldRedefineTargetClassesForCeLaunch() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchAgentTest > shouldRedefineSetActionClassForWebLaunch() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchAgentTest > shouldThrowErrorIfAgentArgsNotValid() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchAgentTest > shouldSkipNonTargetClasForWebLaunch() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchAgentTest > shouldSkipNonTargetClassForCeLunch() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchAgentTest > shouldRedefineMultipleAlmFeatureClassForWebLaunch() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchAgentTest > shouldRedefinesUnsetActionClassForWebLaunch() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginTest > shouldAddExtensionsForServerSideLoad() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginTest > shouldDefineClassesForScannerSide() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginTest > shouldNotAddAnyExtensionsForScannerSideLoad() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginTest > shouldDefineClassesForServerSide() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginTest > shouldDefineClassesForComputeEngineSide() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchPluginTest > shouldReturnPluginNameForGetName() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultLinkHeaderReaderTest > findNextLinkEmpty(String, String) > com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest.findNextLinkEmpty(String, String)[1] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultLinkHeaderReaderTest > findNextLinkEmpty(String, String) > com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest.findNextLinkEmpty(String, String)[2] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultLinkHeaderReaderTest > findNextLinkEmpty(String, String) > com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest.findNextLinkEmpty(String, String)[3] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultLinkHeaderReaderTest > findNextLinkEmpty(String, String) > com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest.findNextLinkEmpty(String, String)[4] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultLinkHeaderReaderTest > findNextLinkEmpty(String, String) > com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest.findNextLinkEmpty(String, String)[5] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultLinkHeaderReaderTest > findNextLinkEmpty(String, String) > com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest.findNextLinkEmpty(String, String)[6] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultLinkHeaderReaderTest > findNextLinkEmpty(String, String) > com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest.findNextLinkEmpty(String, String)[7] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultLinkHeaderReaderTest > findNextLinkEmpty(String, String) > com.github.mc1arke.sonarqube.plugin.almclient.DefaultLinkHeaderReaderTest.findNextLinkEmpty(String, String)[8] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultLinkHeaderReaderTest > findNextLinkReturnsCorrectUrlOnMatchNoSpeechMarksAroundRel() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultLinkHeaderReaderTest > findNextLinkReturnsCorrectUrlOnMatchWithOtherRelEntries() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultLinkHeaderReaderTest > findNextLinkReturnsCorrectUrlOnMatch() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsRestClientTest > checkAddCommentToThreadSubmitsCorrectContent() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsRestClientTest > checkSubmitPullRequestStatusSubmitsCorrectContent() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsRestClientTest > checkRetrievePullRequestReturnsCorrectContent() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsRestClientTest > checkErrorThrownOnNonSuccessResponseStatus() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | HttpClientBuilderFactoryTest > verifyNotSameInstanceReturnedByFactory() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultGithubClientFactoryTest > testHappyPath() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultGithubClientFactoryTest > testExceptionThrownIfAlmRepoMissing() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultGithubClientFactoryTest > testExceptionThrownIfAuthenticationProviderThrowsException() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultGithubClientFactoryTest > testExceptionThrownIfUrlMissing() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultGithubClientFactoryTest > testExceptionThrownIfPrivateKeyMissing() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DefaultGithubClientFactoryTest > testExceptionThrownIfAppIdMissing() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GraphqlGithubClientTest > verifyCheckRunSubmitsCorrectAnnotations() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GraphqlGithubClientTest > checkExcessIssuesCorrectlyReported() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GraphqlGithubClientTest > createCheckRunExceptionOnErrorResponse() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabRestClientTest > checkErrorThrownOnNonSuccessResponseStatus() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabRestClientTest > checkCorrectEncodingUsedOnMergeRequestDiscussion() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchTest > testGetPulRequestKey() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchTest > testGenerateKeyMainBranchNonNullFileOfPathHolder() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchTest > testGetPulRequestKeyNonPullRequest() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchTest > testGenerateKeyMainBranchNullFileOfPath() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchTest > testGenerateKeyMainBranchNonNullFileOfPathContent() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisDetailsTest > shouldOnlyReturnQualityGateConditionsInErrorState() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisDetailsTest > shouldOnlyReturnNonClosedFileIssuesWithScmInfo() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisDetailsTest > shouldGetIdFromAnalysis() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisDetailsTest > shouldReturnCommitSha() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisDetailsTest > shouldReturnPullRequestId() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisDetailsTest > shouldFilterOnQualityGateConditionName() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisDetailsTest > shouldGetDateFromAnalysis() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisDetailsTest > shouldReturnStatusFromQualityGate() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisDetailsTest > shouldGetProjectKeyFromUnderlyingProject() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisDetailsTest > shouldRetrievePropertyFromScannerProperties() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisDetailsTest > shouldGetProjectNameFromUnderlyingProject() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PullRequestPostAnalysisTaskTest > testFinishedNonPullRequest() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PullRequestPostAnalysisTaskTest > testFinishedNoBranchName() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PullRequestPostAnalysisTaskTest > testFinishedAnalysisDecorationRequest() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PullRequestPostAnalysisTaskTest > testFinishedNoAnalysis() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PullRequestPostAnalysisTaskTest > testFinishedAnalysisDecorationRequestPullRequestLinkSaved() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PullRequestPostAnalysisTaskTest > testFinishedAnalysisWithNoQualityGate() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PullRequestPostAnalysisTaskTest > testFinishedNoProviderMatchingName() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PullRequestPostAnalysisTaskTest > testCorrectDescriptionReturnedForTask() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PullRequestPostAnalysisTaskTest > testFinishedAnalysisWithNoRevision() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PullRequestPostAnalysisTaskTest > testFinishedAnalysisDecorationRequestPullRequestLinkNotSavedIfBranchDtoMissing() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PullRequestPostAnalysisTaskTest > testFinishedNoProviderSet() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketPullRequestDecoratorTest > testExceedsMaximumNumberOfAnnotations(int, int, int) > com.github.mc1arke.sonarqube.plugin.ce.pullrequest.bitbucket.BitbucketPullRequestDecoratorTest.testExceedsMaximumNumberOfAnnotations(int, int, int)[1] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketPullRequestDecoratorTest > testExceedsMaximumNumberOfAnnotations(int, int, int) > com.github.mc1arke.sonarqube.plugin.ce.pullrequest.bitbucket.BitbucketPullRequestDecoratorTest.testExceedsMaximumNumberOfAnnotations(int, int, int)[2] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketPullRequestDecoratorTest > testExceedsMaximumNumberOfAnnotations(int, int, int) > com.github.mc1arke.sonarqube.plugin.ce.pullrequest.bitbucket.BitbucketPullRequestDecoratorTest.testExceedsMaximumNumberOfAnnotations(int, int, int)[3] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketPullRequestDecoratorTest > testValidAnalysis() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketPullRequestDecoratorTest > testNullPercentagesReplacedWithZeroValues() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GithubPullRequestDecoratorTest > verifyCorrectNameReturned() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GithubPullRequestDecoratorTest > verifyCorrectArgumentsAndReturnValuesUsed() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GithubPullRequestDecoratorTest > verifyClientExceptionPropagated() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | MarkdownFormatterFactoryTest > testListFormatter() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | MarkdownFormatterFactoryTest > testListItemFormatter() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | MarkdownFormatterFactoryTest > testHeadingFormatter() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | MarkdownFormatterFactoryTest > testDocumentFormatter() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | MarkdownFormatterFactoryTest > testTextFormatter() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | MarkdownFormatterFactoryTest > testParagraphFormatter() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | MarkdownFormatterFactoryTest > testImageFormatter() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | MarkdownFormatterFactoryTest > testLinkFormatter() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | MarkdownFormatterFactoryTest > testListFormatterInvalidType() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | MarkdownFormatterFactoryTest > testContentTextFormatterEscapedHtml() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisIssueSummaryTest > shouldCreateCorrectOutputDocument() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AnalysisSummaryTest > testCreateAnalysisSummary() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ReportGeneratorTest > shouldProduceCorrectAnalysisIssueSummary(RuleType, String) > com.github.mc1arke.sonarqube.plugin.ce.pullrequest.report.ReportGeneratorTest.shouldProduceCorrectAnalysisIssueSummary(RuleType, String)[1] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ReportGeneratorTest > shouldProduceCorrectAnalysisIssueSummary(RuleType, String) > com.github.mc1arke.sonarqube.plugin.ce.pullrequest.report.ReportGeneratorTest.shouldProduceCorrectAnalysisIssueSummary(RuleType, String)[2] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ReportGeneratorTest > shouldProduceCorrectAnalysisSummary(String, String, String, String) > com.github.mc1arke.sonarqube.plugin.ce.pullrequest.report.ReportGeneratorTest.shouldProduceCorrectAnalysisSummary(String, String, String, String)[1] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ReportGeneratorTest > shouldProduceCorrectAnalysisSummary(String, String, String, String) > com.github.mc1arke.sonarqube.plugin.ce.pullrequest.report.ReportGeneratorTest.shouldProduceCorrectAnalysisSummary(String, String, String, String)[2] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ReportGeneratorTest > shouldProduceCorrectAnalysisSummary(String, String, String, String) > com.github.mc1arke.sonarqube.plugin.ce.pullrequest.report.ReportGeneratorTest.shouldProduceCorrectAnalysisSummary(String, String, String, String)[3] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BranchConfigurationFactoryTest > shouldReturnBranchWithDefaultReferenceIfSpecifiedBranchDoesNotExist() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BranchConfigurationFactoryTest > shouldReturnBranchWithSelfReferenceIfSpecifiedBranchDoesExist() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BranchConfigurationFactoryTest > shouldReturnBranchWithNoTargetIfNoProjectBranchesExist() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BranchConfigurationFactoryTest > shouldThrowExceptionIfPullRequestTargetsOtherPullRequestWithoutATarget() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BranchConfigurationFactoryTest > shouldReturnPullRequestWithNoTargetIfNoProjectBranchesExist() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BranchConfigurationFactoryTest > shouldReturnPullRequestWithTargetOfTargetAsReferenceIfTargetBranchExists() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchConfigurationLoaderTest > shouldReturnDefaultBranchIfAutoConfigurerNoResultAndNoParametersSpecified() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchConfigurationLoaderTest > shouldThrowErrorIfBothBranchAndPullRequestParametersPresent() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchConfigurationLoaderTest > shouldThrowErrorIfPullRequestAnalysisWithoutPullRequestBranch() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchConfigurationLoaderTest > shouldCreatePullConfigurationIfAnyPullRequestPropertiesSet() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchConfigurationLoaderTest > shouldCreateBranchConfigurationIfAnyBranchPropertiesSet() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchConfigurationLoaderTest > shouldThrowErrorIfPullRequestAnalysisWithoutPullRequestKey() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchConfigurationLoaderTest > shouldReturnResultFromAutoConfigurerIfPresentAndNoParametersSpecified() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsAutoConfigurerTest > shouldReturnConfigurationBasedOnAllEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsAutoConfigurerTest > shouldReturnOptionalEmptyIfNotTfBuild() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsAutoConfigurerTest > shouldReturnOptionalEmptyIfTfBuildWithNoPullRequestId() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketPipelinesAutoConfigurerTest > shouldReturnOptionalEmptyIfNotCi() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketPipelinesAutoConfigurerTest > shouldReturnOptionalEmptyIfCiWithNoBranchProperty() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketPipelinesAutoConfigurerTest > shouldReturnPullRequestConfigurationBasedOnPrIdInEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketPipelinesAutoConfigurerTest > shouldReturnBranchConfigurationBasedOnNoPrIdInEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CirrusCiAutoConfigurerTest > shouldReturnOptionalEmptyIfNotCirrusCi() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CirrusCiAutoConfigurerTest > shouldReturnOptionalEmptyIfCirrusCiWithNoBranchProperty() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CirrusCiAutoConfigurerTest > shouldReturnPullRequestConfigurationBasedOnPrIdInEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CirrusCiAutoConfigurerTest > shouldReturnBranchConfigurationBasedOnNoPrIdInEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CodeMagicAutoConfigurerTest > shouldReturnOptionalEmptyIfNotCi() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CodeMagicAutoConfigurerTest > shouldReturnPullRequestConfigurationBasedOnPrIdInEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CodeMagicAutoConfigurerTest > shouldReturnBranchConfigurationBasedOnNoPrIdInEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CodeMagicAutoConfigurerTest > shouldReturnOptionalEmptyIfCiWithNoFciBranchProperty() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GithubActionsAutoConfigurerTest > shouldReturnOptionalEmptyIfGithubActionsWithNoGithubRefProperty() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GithubActionsAutoConfigurerTest > shouldReturnOptionalEmptyIfNotGithubActions() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GithubActionsAutoConfigurerTest > shouldReturnPullRequestConfigurationBasedOnPrIdInEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GithubActionsAutoConfigurerTest > shouldReturnBranchConfigurationBasedOnNoPrIdInEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabCiAutoConfigurerTest > shouldReturnOptionalEmptyIfNotGitlabCi() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabCiAutoConfigurerTest > shouldReturnPullRequestConfigurationBasedOnPrIdInEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabCiAutoConfigurerTest > shouldReturnBranchConfigurationBasedOnNoPrIdInEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | JenkinsAutoConfigurerTest > shouldReturnOptionalEmptyIfNotJenkins() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | JenkinsAutoConfigurerTest > shouldReturnPullRequestConfigurationBasedOnPrIdInEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | JenkinsAutoConfigurerTest > shouldReturnBranchConfigurationBasedOnNoPrIdInEnvironmentParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchFeatureExtensionTest > shouldReturnNameThatFrontEndLooksFor() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchFeatureExtensionTest > shouldReturnEnabledForFeature() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchSupportDelegateTest > shouldThrowExceptionOnCreateComponentKeyMissingBranchTypeAndPullParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchSupportDelegateTest > shouldCreateComponentAndBranchDtoIfValidationPasses(String, String, BranchType, String[], boolean) > com.github.mc1arke.sonarqube.plugin.server.CommunityBranchSupportDelegateTest.shouldCreateComponentAndBranchDtoIfValidationPasses(String, String, BranchType, String[], boolean)[1] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchSupportDelegateTest > shouldCreateComponentAndBranchDtoIfValidationPasses(String, String, BranchType, String[], boolean) > com.github.mc1arke.sonarqube.plugin.server.CommunityBranchSupportDelegateTest.shouldCreateComponentAndBranchDtoIfValidationPasses(String, String, BranchType, String[], boolean)[2] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchSupportDelegateTest > shouldCreateComponentAndBranchDtoIfValidationPasses(String, String, BranchType, String[], boolean) > com.github.mc1arke.sonarqube.plugin.server.CommunityBranchSupportDelegateTest.shouldCreateComponentAndBranchDtoIfValidationPasses(String, String, BranchType, String[], boolean)[3] PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchSupportDelegateTest > shouldReturnValidComponentKeyForBranchParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchSupportDelegateTest > shouldThrowExceptionIfBranchAndComponentKeysMismatch() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchSupportDelegateTest > shouldReturnValidComponentKeyForPullRequestParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | CommunityBranchSupportDelegateTest > shouldThrowExceptoinOnCreateComponentKeyInvalidBranchTypeParameter() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | MonoRepoFeatureTest > shouldMatchNameRequiredByFrontEnd() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | MonoRepoFeatureTest > shouldSetFeatureAsEnabled() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsValidatorTest > testHappyPath() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsValidatorTest > testInvalidConfigurationExceptionThrownIfCreateClientFails() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsValidatorTest > testCorrectAlmReturnedForValidator() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsValidatorTest > testInvalidConfigurationExceptionThrownIfRetrieveProjectFails() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsValidatorTest > testExceptionOnMissingRepo() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsValidatorTest > testExceptionOnMissingSlug() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | AzureDevopsValidatorTest > testInvalidConfigurationExceptionRethrownIfCreateClientThrowsInvalidConfigurationException() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketValidatorTest > testInvalidConfigurationExceptionThrownIfRetrieveRepositoryFails() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketValidatorTest > testInvalidConfigurationExceptionThrownIfCodeInsightsIsFalse() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketValidatorTest > testHappyPath() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketValidatorTest > testInvalidConfigurationExceptionThrownIfCreateClientFails() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketValidatorTest > testInvalidConfigurationExceptionRethrownIfCreateClientThrows() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketValidatorTest > testInvalidConfigurationExceptionThrownIfCodeInsightsCheckFails() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BitbucketValidatorTest > testCorrectAlmReturnedForValidator() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GithubValidatorTest > testHappyPath() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GithubValidatorTest > testInvalidConfigurationExceptionThrownIfCreateClientFails() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GithubValidatorTest > testCorrectAlmReturnedForValidator() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GithubValidatorTest > testInvalidConfigurationExceptionRethrownIfCreateClientThrowsInvalidConfigurationException() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabValidatorTest > testHappyPath() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabValidatorTest > testInvalidConfigurationExceptionThrownIfCreateClientFails() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabValidatorTest > testCorrectAlmReturnedForValidator() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabValidatorTest > testInvalidConfigurationExceptionThrownIfRetrieveProjectFails() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | GitlabValidatorTest > testInvalidConfigurationExceptionRethrownIfCreateClientThrowsInvalidConfigurationException() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DeleteBindingActionTest > shouldHandleEndpointWithValidRequest() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DeleteBindingActionTest > shouldDefineEndpointWithParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | SetAzureBindingActionTest > shouldDefineActionWithRequiredParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | SetAzureBindingActionTest > shouldHandleRequestWithValidParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | SetBindingActionTest > shouldHandleRequestWithRequiredParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | SetBindingActionTest > shouldDefineActionWithRequiredParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | SetBitBucketBindingActionTest > shouldHandleRequestWithRequiredParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | SetBitBucketBindingActionTest > shouldDefineActionWithRequiredParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | SetBitBucketCloudBindingActionTest > shouldDefineActionWithValidParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | SetBitBucketCloudBindingActionTest > shouldHandleRequestWithValidParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | SetGithubBindingActionTest > shouldHandleRequestWithRequiredParmaeters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | SetGithubBindingActionTest > shouldDefineActionWithRequiredParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | SetGitlabBindingActionTest > shouldDefineActionWithRequiredParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | SetGitlabBindingActionTest > shouldHandleRequestWithValidParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ValidateBindingActionTest > testHandleProjectRequestThrowsInvalidConfigurationExceptionWhenRuntimeExceptionThrownByValidator() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ValidateBindingActionTest > testConfigureActionNoOperation() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ValidateBindingActionTest > testHandleProjectRequestThrowsExceptionWhenNoValidatorExistsForAlm() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ValidateBindingActionTest > testHandleProjectRequestSuccessWithNoFurtherOperationsWhenNoAlmConfigurationExistsForProject() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ValidateBindingActionTest > testHandleProjectRequestHappyPath() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ValidateBindingActionTest > testHandleProjectRequestThrowsExceptionWhenAlmForProjectDoesNotExist() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | PullRequestWsTest > shouldCallDefineOnEachAction() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DeleteActionTest > shouldDefineEndpointWithAllParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DeleteActionTest > shouldNotPerformDeleteIfUserNotProjectAdmin() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DeleteActionTest > shouldNotPerformDeleteIfUserNotLoggedIn() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | DeleteActionTest > shouldExecuteRequestWithValidParameters() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ListActionTest > shouldNotExecuteRequestIfUserDoesNotHaveAnyPermissions() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ListActionTest > shouldDefineEndpointWithProjectParameter() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | ListActionTest > shouldExecuteRequestWithValidParameter() PASSED\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :jacocoTestReport\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :check\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | > Task :build\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | \n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | BUILD SUCCESSFUL in 2m 15s\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | 8 actionable tasks: 7 executed, 1 up-to-date\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2705  Success - Main Build\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot] \u2b50 Run Main Archive artifact\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker cp src=/tmp/act-cache/c53e43a7-0971-40d7-bc6f-1edc7e88dbe6/act/actions-upload-artifact@v3/ dst=/var/run/act/actions/actions-upload-artifact@v3/\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-upload-artifact@v3/] user=0 workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-upload-artifact@v3/dist/index.js] user= workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::Search path '/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/build/libs'\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::File:/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/build/libs/sonarqube-community-branch-plugin-1.15.0-SNAPSHOT.jar was found using the provided searchPath\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | With the provided path, there will be 1 file uploaded\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udcac  ::debug::Root artifact directory is /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/build/libs\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Starting artifact upload\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   | Artifact name is valid!\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2757  ::error::Unable to get ACTIONS_RUNTIME_TOKEN env variable\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u274c  Failure - Main Archive artifact\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot] exitcode '1': failure\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot] \u2b50 Run Post Set up Java 11\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/cleanup/index.js] user= workdir=\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot]   \u2705  Success - Post Set up Java 11\n[13efbf3e-51f0-4d44-9058-4623b7b2e8db/snapshot] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'snapshot' failed\n",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mc1arke-sonarqube-community-branch-plugin/.github/workflows/build-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 305.5801784992218
    }
}