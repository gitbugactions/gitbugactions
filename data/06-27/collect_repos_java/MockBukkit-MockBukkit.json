{
    "repository": "MockBukkit/MockBukkit",
    "stars": 437,
    "language": "java",
    "size": 7373,
    "clone_url": "https://github.com/MockBukkit/MockBukkit.git",
    "timestamp": "2023-06-29T13:17:49.443126Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "gradle",
        "unknown"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CodMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CodMockTest",
                "name": "testGetBaseBucketItem()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SmallFireballMockTest",
                "name": "testGetType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.GrindstoneInventoryMockTest",
                "name": "testGetSnapshot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.CartographyInventoryMockTest",
                "name": "testGetSnapshot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireballMockTest",
                "name": "testSetDirectionNullThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireballMockTest",
                "name": "testSetIsIncendiary()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireballMockTest",
                "name": "testIsIncendiaryDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireballMockTest",
                "name": "testGetDirectionDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireballMockTest",
                "name": "testGetYieldDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireballMockTest",
                "name": "testSetDirection()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireballMockTest",
                "name": "testSetYield()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "setRegion_NullMaterial_ThrowsException()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "setBlock_NullMaterialData_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "test_neg_min_height()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "test_set_and_get()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "test_set_out_of_bounds()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "setBlock_NullMaterial_ThrowsException()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "setBlock_MaterialWithBlockDataMockSubclass()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "test_get_out_of_bounds()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "setRegion_MaterialWithBlockDataMockSubclass()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "test_pos_min_height()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "setBlock_MaterialDataWithBlockDataMockSubclass()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "setRegion_NullMaterialData_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "setRegion_MaterialDataWithBlockDataMockSubclass()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockChunkDataTest",
                "name": "getBiome()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "getFood_LevelDefault20()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "getGameMode_Default_Survival()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "assertGameMode_CorrectGameMode_DoesNotAssert()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "openInventory_OpenInventoryEvent_Cancelled()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "openInventory_OpenInventoryEvent_Fired()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "testSaturation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "setGameMode_GameModeChanged_GameModeSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "openInventory_NothingSet_InventoryViewSet()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "closeInventory_ClosesInventory()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "getExpToLevel_CorrectExp()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "assertGameMode_WrongGameMode_Asserts()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "getFood_LevelChange()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "closeInventory_CloseInventoryEvent_Fired()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "setGameMode_GameModeNotChanged_DoesntCallsEvent()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "openInventory_AlreadyOpened_ClosesPrevious()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "getOpenInventory_InventorySet_InventorySet()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "getOpenInventory_NoneOpened_Null()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "closeInventory_NoneInventory_CraftingView()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "setGameMode_GameModeChanged_CallsEvent()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HumanEntityMockTest",
                "name": "isSleeping()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.TagParserTest",
                "name": "testNullability()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.TagParserTest",
                "name": "testInvalidJson()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.TagParserTest",
                "name": "testInvalidJSONObjects()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.TagParserTest",
                "name": "testKeyed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.TagParserTest",
                "name": "testInvalidMaterial()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.TagParserTest",
                "name": "testInvalidMaterials()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.TagParserTest",
                "name": "testMissingArray()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.TagParserTest",
                "name": "testInvalidMinecraftTags()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "setMaxSpawnDelay_GreaterThanMin()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "setCreatureTypeByName_ValidName_SetsType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "constructor_Copy_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "setMinSpawnDelay_GreaterThanMax_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "isActivated_NotPlaced_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "setMaxSpawnDelay_LessThanZero_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "isActivated_NoPlayers_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "setSpawnedItem_SetsEntityType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "isActivated_PlayerOutsideRange_False()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "setMinSpawnDelay_LessThanMax()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "isActivated_PlayerInRange_True()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "setCreatureTypeByName_InvalidName_DoesNothing()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "resetTimer_NotPlaced_ThrowsException()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "setMinSpawnDelay_EqualToMax()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "setMaxSpawnDelay_LassThanMin_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CreatureSpawnerMockTest",
                "name": "resetTimer_MinDelayLessThanMax_SetsRandomDelay()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.LlamaInventoryMockTest",
                "name": "setDecor_SetsItemInSlot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.LlamaInventoryMockTest",
                "name": "setDecor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.LlamaInventoryMockTest",
                "name": "getSize_Default_2()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BlockDataKeyTest",
                "name": "testConstructorIsPrivate()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBanListTest",
                "name": "isBanned_NotBanned_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBanListTest",
                "name": "getBanEntry_NotBannedPerson_Null()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBanListTest",
                "name": "isBanned_Banned_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBanListTest",
                "name": "isBanned_PardonedPerson_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBanListTest",
                "name": "getBanEntries_OnePersonBanned_SetOfOnePerson()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBanListTest",
                "name": "getBanEntry_BannedPerson_AllValuesCorrect()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GuardianMockTest",
                "name": "testSetLaserWithNullTargetThrows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GuardianMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GuardianMockTest",
                "name": "testHasLaserDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GuardianMockTest",
                "name": "testIsElderDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GuardianMockTest",
                "name": "testSetElder()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GuardianMockTest",
                "name": "testSetLaser()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ElderGuardianMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ElderGuardianMockTest",
                "name": "testIsElder()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testAssertAgressiveAttack()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testAssertAttackedThrowsWithNoAttack()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testIsChargingAttackDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testShouldBurnInDayDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testRangedAttack()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testAssertAttackThrowsWithWrongCharge()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testSetShouldBurnInDay()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testSetChargingAttack()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testAssertAgressiveAttackThrowsWhenNotAgressive()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testRangedAttackThrowsWithNullEntity()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testSetSkeletonTypeThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testAssertAttackThrowsWithInvalidCharge()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractSkeletonMockTest",
                "name": "testRangedAttackThrowsWithInvalidCharge()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SpawnerMinecartMockTest",
                "name": "testGetMinecartMaterial()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SpawnerMinecartMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardManagerMockTest",
                "name": "getNewScoreboard_MultipleCalls_ReturnsDifferentInstances()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardManagerMockTest",
                "name": "getMainScoreboard_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardManagerMockTest",
                "name": "getMainScoreboard_MultipleCalls_ReturnsSame()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardManagerMockTest",
                "name": "getNewScoreboard_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CommandBlockMockTest",
                "name": "getName_Null_ReturnsEmpty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CommandBlockMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CommandBlockMockTest",
                "name": "name_NotNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CommandBlockMockTest",
                "name": "setCommand_Null_ReturnsEmpty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CommandBlockMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CommandBlockMockTest",
                "name": "name_Null_ReturnsEmpty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CommandBlockMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CommandBlockMockTest",
                "name": "setName_NotNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CommandBlockMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CommandBlockMockTest",
                "name": "setCommand_NotNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CommandBlockMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CommandBlockMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LargeFireballMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryViewMockTest",
                "name": "constructorParameterised_ValuesSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryViewMockTest",
                "name": "constructorEmpty_AllNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryViewMockTest",
                "name": "getTopInventory_TopInventorySet_SameReturned()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryViewMockTest",
                "name": "getBottomInventory_BottomInventorySet_SameReturned()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryViewMockTest",
                "name": "getType_TypeSet_SameReturned()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryViewMockTest",
                "name": "getPlayer_PlayerSet_SameReturned()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryViewMockTest",
                "name": "getOriginalTitle()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryViewMockTest",
                "name": "getType_NoneSet_Chest()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryViewMockTest",
                "name": "setTitle()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.WallSignMockTest",
                "name": "blockDataMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.WallSignMockTest",
                "name": "setFacing_Valid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.WallSignMockTest",
                "name": "getFacing_notNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.WallSignMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.WallSignMockTest",
                "name": "setFacing_Invalid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.WallSignMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.WallSignMockTest",
                "name": "getAsString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.WallSignMockTest",
                "name": "getFaces()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.WallSignMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.WallSignMockTest",
                "name": "getFacing_Immutable()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.WallSignMockTest",
                "name": "setWaterLogged()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlastFurnaceMockTest",
                "name": "constructor_Block()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlastFurnaceMockTest",
                "name": "constructor_Block_NotBlastFurnace_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlastFurnaceMockTest",
                "name": "constructor_Material_NotBlastFurnace_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlastFurnaceMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlastFurnaceMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlastFurnaceMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitExtensionTest",
                "name": "test_EnsureMocking_DoesNotThrowException()",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitExtensionTest",
                "name": "test_FieldServerMock_IsInjected()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitExtensionTest",
                "name": "test_ConstructorParameterServerMock_IsInjected()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitExtensionTest",
                "name": "test_IsMocked_ReturnsTrue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitExtensionTest",
                "name": "test_AlreadyMocking_TriesToMockAgain_ThrowsException()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitExtensionTest",
                "name": "test_MethodParameterServerMock_IsInjected(ServerMock)",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitExtensionTest",
                "name": "test_GetMock_ReturnsMock()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitExtensionTest",
                "name": "test_GetOrCreateMock_ReturnsMock()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.LecternMockTest",
                "name": "constructor_Block()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.LecternMockTest",
                "name": "testSetPageValid()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.LecternMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.LecternMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.LecternMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.LecternMockTest",
                "name": "testSetPageInvalid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.LecternMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.LecternMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getChunkAt_DifferentLocations_DifferentChunks()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawn_Item_ThrowsException()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testSetGameRuleValueNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setTime_DayTimeValue()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setDifficulty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "worldPlayEffect_NullData()",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testCallSpawnEventOnDisallowedMonster()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEmptyChunkSnapshot_CorrectCoords()",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getName_NameSet_NameExactly()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setThundering_ResetsClearWeatherDuration()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawn_CorrectLocation()",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setBiome_CustomFails()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getSpawnLocation_Default_JustAboveDirt()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawn_ArmorStand_CorrectEvent()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "onCreated_TimeSetToBeZero()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testGetGameRuleValueNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEntities_NoEntities_EmptyList()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testSetGameRuleValue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testGetAllowAnimalsDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testSendPluginMessage()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testSetGameRuleValueIntegerNonParseable()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testIsGameRuleNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testDropItemNaturally()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEntities_OnePlayerInDifferentWorld_EmptyList()",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getBlockAt_AnyBlock_LocationSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getLivingEntities()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "onCreated_WeatherDurationSetToZero()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawn_NullLocation_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setWeatherDuration_AnyPositiveValue_WeatherDurationSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawn_NullClass_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setTime_FullTimeShouldBeAdjustedWithDayTime()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testSetSpawnFlags()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setTime_Event_Triggered()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "isChunkLoaded_IsFalseForUnloadedChunk()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "isChunkloaded_IsTrueForLoadedChunk()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setThunderDuration_SetsDuration()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEntitiesByClass()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "isClearWeather_Thundering_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setWeatherDuration_SetsDuration()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getBiomeLegacy()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setStorm_SetsStorming()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawn_Zombie_CorrectEvent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setStorm_SameState_DoesntCallEvent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getLivingEntities_EmptyList()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEmptyChunkSnapshot_AllBiomesPlains()",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "onCreated_Weather()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawnMonster_Peaceful()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawn_Firework_CorrectEvent()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawnFriendly_Peaceful()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEntitiesByClasses_Generic()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "isClearWeather_Storming_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawn_AddedToEntities()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEntitiesByClasses()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "worldPlayEffect()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getBlockState_ChangeBlock()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testDropItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setBlock_ChangeBlock()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testGetGameRuleNonExistent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setThunderDuration_AnyPositiveValue_ShouldBeThundering()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testGetGameRuleValue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setStorm_ChangeState_CallsEvent()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testGetAllowMonstersDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testSetGameRuleValueInteger()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setStorm_True_Storming()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEmptyChunkSnapshot_EitherBiome_ReturnsBiome()",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setStorm_ResetsClearWeatherDuration()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setTime_FullTimeValue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testDropItemConsumer()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getDefaultBiome()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testCallSpawnEventOnDisallowedAnimal()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testIsGameRule()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEmptyChunkSnapshot_NoBiome_Error()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getChunkAt_SameLocations_EqualsChunks()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setThundering_SameState_DoesntCallEvent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawn_Player_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEntities_OnePlayerInWorld_ListContainsOnlyPlayer()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[1] WITHER_SKULL, class be.seeseemelk.mockbukkit.entity.WitherSkullMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[2] DRAGON_FIREBALL, class be.seeseemelk.mockbukkit.entity.DragonFireballMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[3] FIREBALL, class be.seeseemelk.mockbukkit.entity.FireballMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[4] SMALL_FIREBALL, class be.seeseemelk.mockbukkit.entity.SmallFireballMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[5] ELDER_GUARDIAN, class be.seeseemelk.mockbukkit.entity.ElderGuardianMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[6] GUARDIAN, class be.seeseemelk.mockbukkit.entity.GuardianMock",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[7] POLAR_BEAR, class be.seeseemelk.mockbukkit.entity.PolarBearMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[8] PIG, class be.seeseemelk.mockbukkit.entity.PigMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[9] EGG, class be.seeseemelk.mockbukkit.entity.EggMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[10] WOLF, class be.seeseemelk.mockbukkit.entity.WolfMock",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[11] CREEPER, class be.seeseemelk.mockbukkit.entity.CreeperMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[12] GOAT, class be.seeseemelk.mockbukkit.entity.GoatMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[13] BEE, class be.seeseemelk.mockbukkit.entity.BeeMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[14] PUFFERFISH, class be.seeseemelk.mockbukkit.entity.PufferFishMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[15] TROPICAL_FISH, class be.seeseemelk.mockbukkit.entity.TropicalFishMock",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[16] SALMON, class be.seeseemelk.mockbukkit.entity.SalmonMock",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[17] COD, class be.seeseemelk.mockbukkit.entity.CodMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[18] TADPOLE, class be.seeseemelk.mockbukkit.entity.TadpoleMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[19] MUSHROOM_COW, class be.seeseemelk.mockbukkit.entity.MushroomCowMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[20] GHAST, class be.seeseemelk.mockbukkit.entity.GhastMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[21] FOX, class be.seeseemelk.mockbukkit.entity.FoxMock",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[22] FROG, class be.seeseemelk.mockbukkit.entity.FrogMock",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[23] CAT, class be.seeseemelk.mockbukkit.entity.CatMock",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[24] BAT, class be.seeseemelk.mockbukkit.entity.BatMock",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[25] AXOLOTL, class be.seeseemelk.mockbukkit.entity.AxolotlMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[26] GIANT, class be.seeseemelk.mockbukkit.entity.GiantMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[27] CAVE_SPIDER, class be.seeseemelk.mockbukkit.entity.CaveSpiderMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[28] WITHER_SKELETON, class be.seeseemelk.mockbukkit.entity.WitherSkeletonMock",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[29] SPIDER, class be.seeseemelk.mockbukkit.entity.SpiderMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[30] STRAY, class be.seeseemelk.mockbukkit.entity.StrayMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[31] BLAZE, class be.seeseemelk.mockbukkit.entity.BlazeMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[32] CHICKEN, class be.seeseemelk.mockbukkit.entity.ChickenMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[33] SKELETON, class be.seeseemelk.mockbukkit.entity.SkeletonMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[34] COW, class be.seeseemelk.mockbukkit.entity.CowMock",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[35] ZOMBIE_HORSE, class be.seeseemelk.mockbukkit.entity.ZombieHorseMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[36] SKELETON_HORSE, class be.seeseemelk.mockbukkit.entity.SkeletonHorseMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[37] MULE, class be.seeseemelk.mockbukkit.entity.MuleMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[38] DONKEY, class be.seeseemelk.mockbukkit.entity.DonkeyMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[39] LLAMA, class be.seeseemelk.mockbukkit.entity.LlamaMock",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[40] WARDEN, class be.seeseemelk.mockbukkit.entity.WardenMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[41] ENDERMAN, class be.seeseemelk.mockbukkit.entity.EndermanMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[42] ALLAY, class be.seeseemelk.mockbukkit.entity.AllayMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[43] SHEEP, class be.seeseemelk.mockbukkit.entity.SheepMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[44] HORSE, class be.seeseemelk.mockbukkit.entity.HorseMock",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[45] ARMOR_STAND, class be.seeseemelk.mockbukkit.entity.ArmorStandMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[46] ZOMBIE, class be.seeseemelk.mockbukkit.entity.ZombieMock",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[47] FIREWORK, class be.seeseemelk.mockbukkit.entity.FireworkMock",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[48] EXPERIENCE_ORB, class be.seeseemelk.mockbukkit.entity.ExperienceOrbMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[49] MINECART_FURNACE, class be.seeseemelk.mockbukkit.entity.PoweredMinecartMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[50] CAMEL, class be.seeseemelk.mockbukkit.entity.CamelMock",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[51] MINECART_COMMAND, class be.seeseemelk.mockbukkit.entity.CommandMinecartMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[52] MINECART_TNT, class be.seeseemelk.mockbukkit.entity.ExplosiveMinecartMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[53] MINECART_HOPPER, class be.seeseemelk.mockbukkit.entity.HopperMinecartMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[54] MINECART_MOB_SPAWNER, class be.seeseemelk.mockbukkit.entity.SpawnerMinecartMock",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[55] MINECART, class be.seeseemelk.mockbukkit.entity.RideableMinecartMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "[56] MINECART_CHEST, class be.seeseemelk.mockbukkit.entity.StorageMinecartMock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testIsGameRuleNonExistent()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "onCreated_WeatherDurations_Zero()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setBiome()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setThundering_ChangeState_CallsEvent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "onCreated_ThunderDurationSetToZero()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEmptyChunkSnapshot_AllBlocksAir()",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setThundering_SetsThundering()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getBlockAt_StandardWorld_DefaultBlocks()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "onCreated_NotStorming()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setStorm_ResetsWeatherDuration()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setGameRule_CorrectValue_GameRuleSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getWorldBorder_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEmptyChunkSnapshot_CorrectName()",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getEmptyChunkSnapshot_CorrectTime()",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getLoadedChunks_EmptyWorldHasNoLoadedChunks()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setThundering_True_ThunderDurationShouldBePositive()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testGetGameRules()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "drop_Item_CorrectEvent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setSpawnLocation_SomeNewLocation_LocationChanged()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawnZombieTest()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "worldPlayEffect_IncorrectData()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "getBlockAt_BlockChanged_BlockChanged()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "spawn_NullReason_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "onCreated_EnvironmentSetToBeNormal()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "isClearWeather_ClearWeather()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "testSetGameRuleValueNonExistent()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldMockTest",
                "name": "setThundering_ResetsThunderingDuration()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkShriekerMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkShriekerMockTest",
                "name": "setLastVibrationFrequency()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkShriekerMockTest",
                "name": "constructor_Clone_CopiesAllValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkShriekerMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkShriekerMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkShriekerMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkShriekerMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkShriekerMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TropicalFishMockTest",
                "name": "testGetBodyColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TropicalFishMockTest",
                "name": "testSetBodyColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TropicalFishMockTest",
                "name": "testGetPattern()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TropicalFishMockTest",
                "name": "testGetType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TropicalFishMockTest",
                "name": "testGetBaseBucketItem()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TropicalFishMockTest",
                "name": "testGetPatternColor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TropicalFishMockTest",
                "name": "testSetPattern()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TropicalFishMockTest",
                "name": "testSetPatternColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GhastMockTest",
                "name": "testSetCharging()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GhastMockTest",
                "name": "testSetExplosionPowerInvalidToBig()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GhastMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GhastMockTest",
                "name": "testGetExplosionPowerDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GhastMockTest",
                "name": "testSetExplosionPower()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GhastMockTest",
                "name": "testSetExplosionPowerInvalidToSmall()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GhastMockTest",
                "name": "testIsChargingDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CowMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MobMockTest",
                "name": "testSetTarget()",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MobMockTest",
                "name": "testGetTargetDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.ScheduledTaskTest",
                "name": "run_Cancelled_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.ScheduledTaskTest",
                "name": "run_NotCancelled_Executed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.ScheduledTaskTest",
                "name": "cancel()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.ScheduledTaskTest",
                "name": "isSync()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.ScheduledTaskTest",
                "name": "getTaskId_GetsTaskId()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.ScheduledTaskTest",
                "name": "getScheduledTick_GetsScheduledTick()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.ScheduledTaskTest",
                "name": "getRunnable_GetsRunnable()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.ScheduledTaskTest",
                "name": "setScheduledTick_OtherTick_TickSetExactly()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.plugin.java.JavaPluginUtilsTest",
                "name": "testConstructorIsPrivate()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "isOpDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "serialize_CorrectValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "isBanned()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "isOnline_IsOnline_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "getPlayer_NotOnline_Null()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "getPlayer_IsOnline_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "getName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "setOp()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "setWhitelisted()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "setOpFalse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "getUniqueId()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "isOnline_NotOnline_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.OfflinePlayerMockTest",
                "name": "serialize_IsImmutable()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "blockDataMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "setWaterlogged()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "setShape_Valid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "getFaces_HasCorrectValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "setFacing_Valid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "setHalf_NullInput_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "setHalf_Valid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "setFacing_NullInput_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "setFacing_Invalid_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "setShape_NullInput_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.StairsMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AnvilInventoryMockTest",
                "name": "testGetMaxRepairCostDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AnvilInventoryMockTest",
                "name": "testRepairCostAmountSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AnvilInventoryMockTest",
                "name": "testSetRepairCost()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AnvilInventoryMockTest",
                "name": "testRepairCostAmountSetNegative()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AnvilInventoryMockTest",
                "name": "testSetRenameText()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AnvilInventoryMockTest",
                "name": "testSetMaxRepairCost()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AnvilInventoryMockTest",
                "name": "testGetRepairCostDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AnvilInventoryMockTest",
                "name": "testSetRepairCostNegative()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AnvilInventoryMockTest",
                "name": "testSetMaxRepairCostNegative()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AnvilInventoryMockTest",
                "name": "testGetRenameTextNotSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AnvilInventoryMockTest",
                "name": "testRepairCostAmountDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ObjectiveMockTest",
                "name": "testGetDisplayNameComponent()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ObjectiveMockTest",
                "name": "constructor_PropertiesSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ObjectiveMockTest",
                "name": "getScore_String_ReturnsNotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ObjectiveMockTest",
                "name": "getScore_Player_ReturnsNotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ObjectiveMockTest",
                "name": "setDisplayName_AnyString_DisplayNameSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ObjectiveMockTest",
                "name": "getScore_SameString_ReturnsSame()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ObjectiveMockTest",
                "name": "getScore_SamePlayer_ReturnsSame()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ObjectiveMockTest",
                "name": "testSetDisplayNameComponent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ObjectiveMockTest",
                "name": "unregister_ObjectiveWasRegistered_ObjectiveIsRemoved()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EndermanMockTest",
                "name": "testHasBeenStaredAtDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EndermanMockTest",
                "name": "testIsScreamingDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EndermanMockTest",
                "name": "testGetEntityState()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EndermanMockTest",
                "name": "testRandomTeleport()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EndermanMockTest",
                "name": "testBlockDataNotSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EndermanMockTest",
                "name": "testMaterialDataSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EndermanMockTest",
                "name": "testIsScreaming()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EndermanMockTest",
                "name": "testHasBeenStaredAt()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EndermanMockTest",
                "name": "testRandomTeleportToEntity()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EndermanMockTest",
                "name": "testMaterialDataNotSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EndermanMockTest",
                "name": "testBlockDataSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.StonecutterInventoryTest",
                "name": "testGetSnapshot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.UnsafeValuesTest",
                "name": "checkSupported_unsupportedVersion()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.UnsafeValuesTest",
                "name": "checkSupported_supportedVersion()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.UnsafeValuesTest",
                "name": "minimumApiVersion_GreaterThanCurrentVersion()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.UnsafeValuesTest",
                "name": "checkSupported_currentServerVersion()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.UnsafeValuesTest",
                "name": "checkSupported_noSpecifiedVersion()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "teleport_UseCurrentWorldInsteadOfNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getCollidableExemptions()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "entityDamage_By_Player()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "entityIdIncrements()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "isPermissionSet_String_IsntSet_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "teleport_Passenger()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getWorld_LocationSet_GetsWorldSameAsInLocation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "sendMessage_Default_nextMessageReturnsMessages()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testSetGlowing()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testGetFallDistanceDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "zombieSetBaby()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "teleport_Dead()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "entityDamage_preventedByInvulnerable()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "eject_WhenRemoved()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getWidthImplemented()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "assertTeleported_Teleported_DoesNotAssert()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "addPassenger_CancelMountEvent()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testSetGravity()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getName_Default_CorrectName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "addPassenger_Self()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "sendMessage_StoredAsComponent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "addPassenger_DifferentWorld()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "hasPermission_String_SetTrue_True()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testIsCustomNameVisibleDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "equals_DifferentUUID_Different()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "isPermissionSet_String_IsSet_True()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getPassengers_Transitive_ReturnsAll()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "equals_SameUUID_Equal()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "entityDamage_creativeDamagesInvulnerable()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "assertLocation_WrongLocation_Asserts()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "lastDamageCause()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testHasGravityDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "equals_Null_Different()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "setGliding()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testSetFallDistance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "setCollidable()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "removePassenger_CancelDismountEvent()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "clearTeleport_AfterTeleportation_TeleportStatusReset()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "addPassenger()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testIsVisualFireDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getPassenger()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "remove()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getNearbyEntitiesNotNearby()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "hasPermission_Permission_SetFalse_True()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "entityDamage_Event_Triggered()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "arrowCooldown()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "addAttachment_False_DoesntHave()",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "zombieAgeLock()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "isPermissionSet_Permission_IsSet_True()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "arrowsInBody()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "isPermissionSet_Permission_IsntSet_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "addAttachment_RemovedAfterTicks()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testIsGlowingDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getUniqueId_UUIDPassedOn_GetsSameUuid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "addAttachment_True_Has()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "removePassenger_NotSelf()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "teleport_LocationIsCloned()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "addPassenger_Stack()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "teleport_Entity_LocationSetToEntity()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "hasPermission_Permission_NotSet_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testGetMaxFireTicks()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "addPassenger_PreventCircularRiding()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testCustomNameDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testSetCustomNameNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "teleport_Vehicle()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "setVelocity()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "zombieGetAge()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "removeAttachment_RemovesAttachment()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "swimming()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getEntityId()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "zombieCanBreed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testGetCustomName()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getNearbyEntitiesNotSelf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "assertNotTeleported_NotTeleported_DoesNotAssert()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "hasTeleport_Teleportation_CorrectStatus()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "eject()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "setAi()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "teleport_CancelEvent()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getCustomName_Default_CorrectName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testSetOpThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "absorptionAmount()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "hasPermission_String_SetFalse_True()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testSetCustomNameVisible()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "assertNotTeleported_Teleported_Asserts()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "teleport_ChangeDestinationInEvent()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "assertTeleported_NotTeleported_Asserts()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testIsOpReturnsFalse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "teleport_Removed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testGetLocationWithNullLocation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testIsDeadDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testSetCustomName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getCustomName_setCustomName()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getLocation_IntoLocation_LocationCopied()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "removePassenger()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "playEffect()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getLocation_TwoInvocations_TwoClones()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "assertNotTeleported_AfterAssertTeleported_DoesNotAssert()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "setFireTicks()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testSetSilent()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "hasPermission_String_NotSet_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "metadataTest()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "hasPermission_Permission_SetTrue_True()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "setAi_NonMob()",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "setAware()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testIsDead()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "registerAttribute()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "setInvulnerable()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "arrowsInBody_NegativeValue_Fails()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "equals_DifferentObject_Different()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "zombieSetAdult()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "assertLocation_CorrectLocation_DoesNotAssert()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getUniqueId_Default_RandomUuid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "teleport_LocationAndCause_LocationSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testSpigot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "getNearbyEntities()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testGetCustomNameDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "teleport_RaiseEvent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testCustomName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testSetVisualFire()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EntityMockTest",
                "name": "testIsSilentDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testGetFaceplantedDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetLeaping()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testGetFirstTrustedPlayerDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testGetSecondTrustedPlayerDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetFoxTypeNullThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testIsDefendingDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetCrouching()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetSecondTrustedPlayerNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetSleeping()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetSitting()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testIsSleepingDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testIsSittingDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetFirstTrustedPlayer()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetInterested()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetFaceplanted()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetDefending()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetSecondTrustedPlayer()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testIsLeapingDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testGetFoxTypeDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testIsCrouchingDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetFoxType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testSetFirstTrustedPlayerNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FoxMockTest",
                "name": "testGetInterestedDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BarrelMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BarrelMockTest",
                "name": "testClose()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BarrelMockTest",
                "name": "testOpen()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BarrelMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BarrelMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BarrelMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BarrelMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BarrelMockTest",
                "name": "testIsOpenDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BarrelMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PoweredMinecartMockTest",
                "name": "testGetMinecartMaterial()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PoweredMinecartMockTest",
                "name": "setFuel_Negative()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PoweredMinecartMockTest",
                "name": "getFuel()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PoweredMinecartMockTest",
                "name": "defaultValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PoweredMinecartMockTest",
                "name": "getTypeTest()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PoweredMinecartMockTest",
                "name": "getPushX()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PoweredMinecartMockTest",
                "name": "getPushZ()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.attribute.AttributesMockTest",
                "name": "testConstructorIsPrivate()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "disablePlugin_Unloaded_PluginDisableEvent_NotFired()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "getPermission_PermissionAdded_NotNull()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "assertListenerRan_With_Order()",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "unsubscribeToDefaultPerms()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "assertEventFired_PredicateFalse_Asserts()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "clearPlugins_LoadedPlugins_AllPluginsRemove()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "assertEventFired_EventWasNotFired_Asserts()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "disablePlugin_DisablesPluginChannels()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "[1] Name(with)[other]<chars>!",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "disablePlugins_LoadedPlugins_AllDisabled()",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "getCommands_Default_PluginCommand()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "test_customClassLoader()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "callEvent_UnregisteredPlayerInteractEvent_NoneCalled()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "getPlugin_UnknownName_Nothing()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "subscribeToDefaultPerms()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "disablePlugin_LoadedPlugin_PluginDisabled()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "getDefaultPermission_OpPermissionAskedButNotAdded_DoesNotContainPermission()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "removePermission_String()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "disablePlugin_PluginDisableEvent_IsFired()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "assertEventFired_PredicateTrue_DoesNotAssert()",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "getPermission_NoPermission_Null()",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "eventThrowsException_RuntimeException_RethrowsSame()",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "disablePlugin_ServicesUnregistered()",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "disablePlugin_TasksCanceled()",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "getPlugin_PluginName_Plugin()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "assertEventFired_EventWasFired_DoesNotAssert()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "test_AutomaticListener_DeRegistration()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "test_ManualListener_Registration()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "callEvent_RegisteredPlayerInteractEvent_OneCalled()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "getDefaultPermission_OpPermissionAddedAndAsked_ContainsPermission()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.plugin.PluginManagerMockTest",
                "name": "eventThrowsException_NotRuntimeException_ThrowsEventHandlerException()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.StorageMinecartMockTest",
                "name": "testGetMinecartMaterial()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.StorageMinecartMockTest",
                "name": "testGetInventory()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.StorageMinecartMockTest",
                "name": "testGetType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.StorageMinecartMockTest",
                "name": "testGetEntity()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MinecartMockTest",
                "name": "removePassenger_CancelVehicleEvent()",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MinecartMockTest",
                "name": "addPassenger()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MinecartMockTest",
                "name": "setDerailedVelocityMod_ClonesValue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MinecartMockTest",
                "name": "setDisplayBlockData()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MinecartMockTest",
                "name": "setDisplayBlock()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MinecartMockTest",
                "name": "setDisplayBlockData_Null_SetsToAir()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MinecartMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MinecartMockTest",
                "name": "setFlyingVelocityMod_ClonesValue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MinecartMockTest",
                "name": "addPassenger_CancelVehicleEvent()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MinecartMockTest",
                "name": "setDisplayBlock_Null_SetsToAir()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.bukkit.command.PluginCommandUtilsTest",
                "name": "testConstructorIsPrivate()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MuleMockTest",
                "name": "testVariant()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishMockTest",
                "name": "testGetPickupSound()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishMockTest",
                "name": "testIsFromBucketDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishMockTest",
                "name": "testSetFromBucket()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetShutdownMessage()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testIsEnforcingSecureProfiles()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetGenerateStructures()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetMaxChainedNeighborUpdates()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetAllowEnd()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testIsShouldSendingChatPreviewsDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testGetMaxChainedNeighborUpdatesDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testLevelTypeGetKey()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testIsGenerateStructuresDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testGetMaxWorldSizeDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testGetSimulationDistanceDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testIsAllowNetherDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testIsAllowEndDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetShouldSendingChatPreviews()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testGetViewDistanceDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testIsHideOnlinePlayersDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetSimulationDistance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetEnforcingSecureProfiles()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetLevelType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetHideOnlinePlayers()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testIsHardcoreDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testViewDistance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetUpdateFolder()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testGetLevelTypeDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testIsAllowFlight()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetAllowFlight()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testGetOnlineModeDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetHardCore()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetAllowNether()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testGetShutdownMessageDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testGetUpdateFolderDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetOnlineMode()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.configuration.GlobalServerConfigurationTest",
                "name": "testSetMaxWorldSize()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testBubbleColumnIsLiquid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "constructor_MaterialWithBlockDataMockSubclass_CorrectBlockDataType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testGetFace_Valid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "getChunk_LocalBlock_Matches()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testLavaIsLiquid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "assertType_CorrectType_DoesNotFail()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testStoneIsNotEmpty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "getLocation_CustomLocation_ApplyToProvided()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testSetBlockData()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "constructorWithLocation_NullMaterial_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "setType_SetToMaterialWithBlockDataMockSubclass()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "setType_NullParameter_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testWaterIsLiquid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "getLocation_CustomLocation_LocationSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testGetRelativeCoordinates()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testStoneIsNotLiquid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testGetFace_Invalid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "constructor_NullMaterial_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testBreakNaturally()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "getChunk_LocalBlock_NegativeY()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testGetRelativeBlockFace()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "getLocation_Default_Null()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "assertType_IncorrectType_Fails()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "setBiome()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testGetRelativeBlockFaceAndDistance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "setType_Stone_Set()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "getType_Default_Air()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testAirIsLiquid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "testGetBlockData()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "getWorld_AnyWorld_WorldReturned()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "getBiome()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.BlockMockTest",
                "name": "getXYZ_FromLocation_XYZReturned()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "equals_SameInstance_ReturnsTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "addChargedProjectile_AddsProjectile()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "addChargedProjectile_NullItem_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "addChargedProjectile_AcceptsAllArrows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "setChargedProjectiles_Null_ClearsList()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "clone_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "setChargedProjectiles_NullItem_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "equals_DifferentInstance_SameValues_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "equals_DifferentInstance_DifferentValues_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "constructor_Clone_CopiesValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "setChargedProjectiles_AcceptsAllArrows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "addChargedProjectile_DoesntOverwrite()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "hasChargedProjectiles_NoProjectiles_ReturnsFalse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "setChargedProjectiles_SetsList()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "addChargedProjectile_NotArrow_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "getChargedProjectiles_NoProjectiles_EmptyList()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "getChargedProjectiles_Projectiles_ClonedList()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "setChargedProjectiles_RemovesOld()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "setChargedProjectiles_NotArrow_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CrossbowMetaMockTest",
                "name": "hasChargedProjectiles_Projectiles_ReturnsTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testSetRollingOverrideNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testGetRollingOverrideDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testSetHiveNullDoesntThrow()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testIsRollingDefault()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testSetFlowerNullDoesntThrow()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testGetAngerDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testHasStungDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testGetCannotEnterHiveTicksDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testSetCannotEnterHiveTicks()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testHasNectarDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testSetFlowerDifferentWorld()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testSetHiveDifferentWorld()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testSetFlower()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testGetHiveDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testSetHasStung()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testIsRolling()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testSetRollingOverride()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testSetHive()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testGetFlowerDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testSetAnger()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BeeMockTest",
                "name": "testSetHasNectar()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.RegistryTest",
                "name": "[1] BLOCKS",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.RegistryTest",
                "name": "[2] ITEMS",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.RegistryTest",
                "name": "[1] BLOCKS",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.RegistryTest",
                "name": "[2] ITEMS",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.RegistryTest",
                "name": "[1] BLOCKS",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.RegistryTest",
                "name": "[2] ITEMS",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DispenserMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DispenserMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DispenserMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DispenserMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DispenserMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DispenserMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.LoomInventoryMockTest",
                "name": "testGetSnapshot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkMetaMockTest",
                "name": "testAddEffectsArray()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkMetaMockTest",
                "name": "testPowerTooHigh()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkMetaMockTest",
                "name": "testClone()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkMetaMockTest",
                "name": "testPower()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkMetaMockTest",
                "name": "testAddSingleEffect()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkMetaMockTest",
                "name": "testClearEffects()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkMetaMockTest",
                "name": "testRemoveEffect()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkMetaMockTest",
                "name": "testPowerTooLow()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkMetaMockTest",
                "name": "testEffectDefaultNone()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkMetaMockTest",
                "name": "testAddEffectsIterable()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testSetFrictionState()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testSwingOffHand()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testIsInvisibleDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testPotionEffects()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testGetKillerDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testIsJumpingDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testSwingMainHand()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testSetFrictionStateNullDoesThrow()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "clearPotionEffects()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testSetInvisible()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testGetLeashHolderWhenNotLeashed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testSetLeashHolder()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testSetLeashHolderNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testSetJumping()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testSetKiller()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testGetFrictionStateDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testMultiplePotionEffects()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testInstantEffect()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LivingEntityMockTest",
                "name": "testSetKillerNullDoesNotThrow()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "isLocked_Constructor_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "setScale_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "render_Contextual_DifferentPlayer_DoesntReusesCanvas()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "isVirtual_NoRenderers_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "getWorld_Constructor_SameWorld()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "isVirtual_MockRenderer_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "setWorld_SetsWorld()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "render_Contextual_SamePlayer_ReusesCanvas()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "isVirtual_NotMockRenderer_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "getId()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "getRenderers_ReturnsClone()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "removeRenderer_DoesntExist_ReturnsFalse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "addRenderer_Duplicate_DoesntAdd()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "getRenderers_Constructor_Empty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "render_CallsRenderMethod()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "removeRenderer_Exists_Removes_ReturnsTrue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "isScale_Constructor_Normal()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "getWorld_Constructor_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "render_NonContextual_DifferentPlayer_ReusesCanvas()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "addRenderer_AddsRenderer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapViewMockTest",
                "name": "setLocked_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PigMockTest",
                "name": "testSetCurrentBoostTicksGreaterThanBoostTicksThrows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PigMockTest",
                "name": "testGetBoostTicksDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PigMockTest",
                "name": "testGetCurrentBoostTicksDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PigMockTest",
                "name": "testSetCurrentBoostTicksWithNoSaddle()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PigMockTest",
                "name": "testSetCurrentBoostTicksNegativeThrows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PigMockTest",
                "name": "testSetBoosTicksNegativeThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PigMockTest",
                "name": "testSetBoostTicks()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PigMockTest",
                "name": "testHasSaddleDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PigMockTest",
                "name": "testSetSaddle()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PigMockTest",
                "name": "testGetSteerMaterial()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PigMockTest",
                "name": "testSetCurrentBoostTicks()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HorseMockTest",
                "name": "testInventory()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HorseMockTest",
                "name": "testColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HorseMockTest",
                "name": "testStyle()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HorseMockTest",
                "name": "testTamed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HorseMockTest",
                "name": "testIsCarryingChest()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HorseMockTest",
                "name": "testGetVariant()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HorseMockTest",
                "name": "testSetCarryingChest_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.help.HelpMapMockTest",
                "name": "helpmap_factory_registration()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.help.HelpMapMockTest",
                "name": "testGetHelpTopics()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.help.HelpMapMockTest",
                "name": "helpmap_factory_registration_incorrect_type()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.help.HelpMapMockTest",
                "name": "testClear()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.help.HelpMapMockTest",
                "name": "testAssertRegistered()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.help.HelpMapMockTest",
                "name": "helpmap_lookup()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.help.HelpMapMockTest",
                "name": "testAddDefaultTopic()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WolfMockTest",
                "name": "testIsAngryDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WolfMockTest",
                "name": "testIsWetDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WolfMockTest",
                "name": "testIsInterestedDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WolfMockTest",
                "name": "testSetCollarColor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WolfMockTest",
                "name": "testGetCollarColorDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WolfMockTest",
                "name": "testGetType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WolfMockTest",
                "name": "testSetInterested()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WolfMockTest",
                "name": "testGetTailAngle()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WolfMockTest",
                "name": "testSetWet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WolfMockTest",
                "name": "testSetAngry()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.WorkbenchInventoryMockTest",
                "name": "testGetResultDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.WorkbenchInventoryMockTest",
                "name": "testSetMatrix_SetsItems()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.WorkbenchInventoryMockTest",
                "name": "testSetMatrix()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.WorkbenchInventoryMockTest",
                "name": "testGetResult()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.WorkbenchInventoryMockTest",
                "name": "testGetMatrixDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExplosiveMinecartMockTest",
                "name": "testExplode()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExplosiveMinecartMockTest",
                "name": "testSetFuseTicks()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExplosiveMinecartMockTest",
                "name": "testGetMinecartMaterial()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExplosiveMinecartMockTest",
                "name": "testExplodePowerTooSmall()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExplosiveMinecartMockTest",
                "name": "testGetType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExplosiveMinecartMockTest",
                "name": "testExplodePower()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExplosiveMinecartMockTest",
                "name": "testExplodePowerTooBig()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExplosiveMinecartMockTest",
                "name": "testGetFuseTicksDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExplosiveMinecartMockTest",
                "name": "testIgnite()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExplosiveMinecartMockTest",
                "name": "testIsIgnited()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "[1] HAND",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "[2] OFF_HAND",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "[3] FEET",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "[4] LEGS",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "[5] CHEST",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "[6] HEAD",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setContent_ResultFromGetContent_Works()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setExtraContents_Null_Exception()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setArmorContents_Null_Exception()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setArmorContents_TooLarge_Exception()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setItemInHand_SomeItem_ItemSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "getArmorContents_Default_Length4()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setHeldItemSlot_TooHigh_Exception()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setExtraContents_TooLarge_Exception()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "getExtraContents_Default_Length1()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setBoots_ArmorItem_ArmorItemSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setItem_InExtraInventory_ItemInExtraContents()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setItemInMainHand_SomeItem_ItemSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "getArmorContents_ContentsChanged_ItemsChanged()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setHeldItemSlot_WithinRange_Works()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setItem_InArmorInventory_ItemInArmorContents()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "getHolder_HolderSet_GetsHolder()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setLeggings_ArmorItem_ArmorItemSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setHeldItemSlot_SecondSlot_ChangesSlot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setItem_InInventory_ItemInContents()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setItemInOffHand_NewItem_ItemSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setChestplate_ArmorItem_ArmorItemSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setExtraContents_NewItem_OffHandSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setHelmet_ArmorItem_ArmorItemSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setArmorContents_NewArray_ArmorSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "setHeldItemSlot_TooLow_Exception()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryMockTest",
                "name": "getSize_Default_41()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FrogMockTest",
                "name": "testSetVariant()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FrogMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FrogMockTest",
                "name": "testSetTongueTarget()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FrogMockTest",
                "name": "testGetTongueTargetDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FrogMockTest",
                "name": "testGetVariantDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.RideableMinecartMockTest",
                "name": "testGetMinecartMaterial()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.RideableMinecartMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WitherSkullMockTest",
                "name": "testSetCharged()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WitherSkullMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WitherSkullMockTest",
                "name": "testGetChargedDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EnderChestMockTest",
                "name": "constructor_Block()",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EnderChestMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EnderChestMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EnderChestMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EnderChestMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EnderChestMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExperienceOrbMockTest",
                "name": "testSetExperience()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExperienceOrbMockTest",
                "name": "testSecondConstructor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExperienceOrbMockTest",
                "name": "testEntitySpawning()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ExperienceOrbMockTest",
                "name": "testEntityType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BellMockTest",
                "name": "constructor_Block()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BellMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BellMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BellMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BellMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BellMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.PlayerInventoryViewTest",
                "name": "constructor_SetsProperties()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CachedServerIconMockTest",
                "name": "constructor_WithData_SetsData()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CachedServerIconMockTest",
                "name": "constructor_NotNull_SetsData()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PolarBearMockTest",
                "name": "testSetStanding()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PolarBearMockTest",
                "name": "testIsStandingDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PolarBearMockTest",
                "name": "testGetType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PolarBearMockTest",
                "name": "testCanBreed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "clearProperties()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "correctValues_Constructor_Clone()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "equals()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "equals_DifferentProfiles_DontEqual()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "correctValues_Constructor_PlayerMock()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "[1] a4a7d8f6-c2df-4a0a-b12d-f0181dc85f61, Test, !?",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "[2] null, Test, !?",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "[3] a4a7d8f6-c2df-4a0a-b12d-f0181dc85f61, null, !?",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "[4] a4a7d8f6-c2df-4a0a-b12d-f0181dc85f61, Test, null",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "setProperties()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "correctValues_Constructor_UuidName()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "setProperty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "removeProperty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "hasProperty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "setName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.profile.PlayerProfileMockTest",
                "name": "setUuid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.util.AdventureConvertsTest",
                "name": "[1] MASTER, MASTER",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.util.AdventureConvertsTest",
                "name": "[2] MUSIC, MUSIC",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.util.AdventureConvertsTest",
                "name": "[3] RECORD, RECORDS",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.util.AdventureConvertsTest",
                "name": "[4] WEATHER, WEATHER",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.util.AdventureConvertsTest",
                "name": "[5] BLOCK, BLOCKS",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.util.AdventureConvertsTest",
                "name": "[6] HOSTILE, HOSTILE",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.util.AdventureConvertsTest",
                "name": "[7] NEUTRAL, NEUTRAL",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.util.AdventureConvertsTest",
                "name": "[8] PLAYER, PLAYERS",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.util.AdventureConvertsTest",
                "name": "[9] AMBIENT, AMBIENT",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.util.AdventureConvertsTest",
                "name": "[10] VOICE, VOICE",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.util.AdventureConvertsTest",
                "name": "testConstructorIsPrivate()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testIsBreedItemNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testIsBreedItemItemStack()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testSetVariant()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testGetPickupSound()",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testIsBreedItemItemStackFalse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testIsBreedItemNullWithMaterial()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testSetVariantThrowsWithNullVariant()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testIsFromBucketDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testSetFromBucket()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testIsBreedItemMaterialFalse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testSetPlayingDead()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testIsPlayingDeadDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testGetBaseBucketItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testGetVariantDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AxolotlMockTest",
                "name": "testIsBreedItemMaterial()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ComparatorMockTest",
                "name": "constructor_Block()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ComparatorMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ComparatorMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ComparatorMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ComparatorMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ComparatorMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SizedFireballMockTest",
                "name": "testSetDisplayItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SizedFireballMockTest",
                "name": "testSetDisplayItem_Null()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SizedFireballMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SizedFireballMockTest",
                "name": "testGetDisplayItem()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "constructor_Block()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "testNullPointerUndyed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "testClose()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "testOpen()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[1] WHITE",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[2] ORANGE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[3] MAGENTA",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[4] LIGHT_BLUE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[5] YELLOW",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[6] LIME",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[7] PINK",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[8] GRAY",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[9] LIGHT_GRAY",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[10] CYAN",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[11] PURPLE",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[12] BLUE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[13] BROWN",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[14] GREEN",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[15] RED",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "[16] BLACK",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "testIsOpen()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ShulkerBoxMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.EnchantedBookMetaMockTest",
                "name": "testEnchantmentLevelWithEnchantment()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.EnchantedBookMetaMockTest",
                "name": "testAddEnchantmentButFail()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.EnchantedBookMetaMockTest",
                "name": "testStoredEnchantsDefaultFalse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.EnchantedBookMetaMockTest",
                "name": "testGetStoredEnchantments()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.EnchantedBookMetaMockTest",
                "name": "testRemoveStoredEnchantment()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.EnchantedBookMetaMockTest",
                "name": "testAddConflictingEnchantments()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.EnchantedBookMetaMockTest",
                "name": "testStoredEnchantsWithEnchantment()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.EnchantedBookMetaMockTest",
                "name": "testAlreadyExistingEnchantment()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.EnchantedBookMetaMockTest",
                "name": "testEquals()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.EnchantedBookMetaMockTest",
                "name": "testAddEnchantmentUnsafely()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.persistence.PersistentDataTest",
                "name": "testGetOrDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.persistence.PersistentDataTest",
                "name": "testAdapterContext()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.persistence.PersistentDataTest",
                "name": "testImplementationMocks()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.persistence.PersistentDataTest",
                "name": "testAddInteger()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.persistence.PersistentDataTest",
                "name": "testGetkeys()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.persistence.PersistentDataTest",
                "name": "testAddString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.persistence.PersistentDataTest",
                "name": "testRemoveInteger()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.persistence.PersistentDataTest",
                "name": "testEquals()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.persistence.PersistentDataTest",
                "name": "testHasKey()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.persistence.PersistentDataTest",
                "name": "testDefaultMethods()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.persistence.PersistentDataTest",
                "name": "testConstructor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.KeyedBossBarMockTest",
                "name": "testKeyedBossBar()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.KeyedBossBarMockTest",
                "name": "testGetKey()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.KeyedBossBarMockTest",
                "name": "testNullKey()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "disconnect_SetsLastSeen()",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "setLastSeen_PlayerOnline()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "matchPlayer_NoMatch()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "addPlayer_SetsLastLogin()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "hasPlayedBefore_NeverOnline_False()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "disconnect_KeptInOffline()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "addOfflinePlayer()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "hasPlayedBefore_FirstJoin_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "setLastLogin()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "getPlayerExact_PartialMatch_Null()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "addPlayer_SetsFirstPlayed()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "getOfflinePlayers()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "disconnect_RemovesFromOnline()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "hasPlayedBefore_SecondJoin_True()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "isSomeoneOnline_NoOneOnline_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "addPlayer_AddsToLists()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "setLastSeen()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "hasPlayedBefore_SecondJoin_Offline_True()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "setLastSeen_NegativeNumber_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "setFirstPlayed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "setFirstPlayed_NegativeNumber_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "getOperators()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "getOnlinePlayers()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "matchPlayer_PartialMatch()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "isSomeoneOnline_OneOnline_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockPlayerListTest",
                "name": "getPlayerExact_ExactMatch()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "load_MyPlugin()",
                "time": 0.696,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "load_TestPluginWithExtraIncorrectParameter_ExceptionThrown()",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "setServerInstanceToNull()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "unload_PluginLoaded_PluginDisabled()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "ensureMocking_Mocking_DoesNothing()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "load_PluginWithConfigFile_ConfigFileParsed()",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "isMocked_ServerMocked_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "loadSimple_SecondTextPlugin_PluginLoaded()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "loadWith_SecondTextPluginAndResourceFileAsString_PluginLoaded()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "mock_ServerSafeMocked()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "isMocked_ServerUnloaded_False()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "mock_CustomServerMocked()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "load_TestPluginWithExtraParameter_ExtraParameterPassedOn()",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "mock_ServerMocked()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "ensureMocking_NotMocking_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "load_CanLoadPluginFromExternalSource_PluginLoaded()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "createMockPlugin_CreatesMockPlugin()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "isMocked_ServerNotMocked_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBukkitTest",
                "name": "paperApiFullVersion_IsReplaced()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractProjectileMockTest",
                "name": "testDoesBounceDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractProjectileMockTest",
                "name": "testSetBounce()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "getBiome_DoesntIncludeBiome_ThrowsException()",
                "time": 0.66,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "getFullTime()",
                "time": 0.21,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "contains_BlockExists_True()",
                "time": 0.192,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "isSectionEmpty()",
                "time": 0.222,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "getX()",
                "time": 0.131,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "getZ()",
                "time": 0.124,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "getBlockData_PreservesData()",
                "time": 0.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "getBiome_EitherBiome_ReturnsBiomes()",
                "time": 0.228,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "getBlockData()",
                "time": 0.152,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "getBlockType()",
                "time": 0.171,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "contains_BlockDoesntExist_False()",
                "time": 0.161,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "getWorldName()",
                "time": 0.155,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "getBiome_NoBiomes_ThrowsException()",
                "time": 0.201,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "containsAllBlocks()",
                "time": 0.186,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkSnapshotMockTest",
                "name": "getBiome()",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.DispenserInventoryMockTest",
                "name": "testGetSnapshot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SpiderMockTest",
                "name": "testGetType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.ItemFactoryMockTest",
                "name": "equals_CompatibleMetas_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.ItemFactoryMockTest",
                "name": "asMetaFor_DirtItemMetaOnDirtItemStack_ReturnsCloneOfMeta()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.ItemFactoryMockTest",
                "name": "equals_NullAndNull_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.ItemFactoryMockTest",
                "name": "equals_MetaAndNull_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.ItemFactoryMockTest",
                "name": "equals_NullAndMeta_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.ItemFactoryMockTest",
                "name": "isApplicable_StandardItemMetaOnDirtMaterial_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.ItemFactoryMockTest",
                "name": "isApplicable_StandardItemMetaOnDirtItemStack_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.ItemFactoryMockTest",
                "name": "testGetItemMetaCorrectClass()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.ItemFactoryMockTest",
                "name": "asMetaFor_DirtItemMetaOnDirtMaterial_ReturnsCloneOfMeta()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "equals_SameInstance_ReturnsTrue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "hasId_Constructor_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "hasId_True_HasId()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "clone_CopiesValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "setScaling_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "equals_DifferentInstance_SameValues_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "equals_DifferentInstance_DifferentValues_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "getId_CorrectValue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "getColor_Constructor_IsNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "setMapView_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "getMapView_Constructor_IsNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "isScaling_Constructor_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "cloneConstructor_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.MapMetaMockTest",
                "name": "setColor_Sets()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testIgniteWithCancelledEvent()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testIsPoweredDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testExplode()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testSetFuseTicks()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testSetMaxFuseTicksNegativeThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testSetExplosionRadiusNegativeThrows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testSetFuseTicksNegativeThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testSetFuseTicksGreaterThanMaxThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testIsIgnitedDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testGetMaxFuseTicksDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testSetExplosionRadius()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testIsIgnitedSameValue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testGetExplosionRadiusDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testGetFuseTicksDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testSetMaxFuseTicks()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testSetPoweredWithCancelledEvent()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testIgnite()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testIsIgnited()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CreeperMockTest",
                "name": "testSetPowered()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.HopperMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.HopperMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.HopperMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.HopperMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.HopperMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.HopperMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.HopperInventoryMockTest",
                "name": "testGetSnapshot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreMockTest",
                "name": "isSet_NotSet_ReturnsFalse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreMockTest",
                "name": "getScoreboard_ReturnsScoreboard()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreMockTest",
                "name": "getScore_ObjectiveRegisteredAndScoreSet_ReturnsNumber()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreMockTest",
                "name": "isSet_Set_ReturnsTrue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreMockTest",
                "name": "getPlayer_PlayerSet_ReturnsPlayer()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreMockTest",
                "name": "getObjective_ReturnsParentObjective()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreMockTest",
                "name": "getScore_ObjectiveRegisteredButNoScoreSet_ReturnsZero()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreMockTest",
                "name": "getEntry_ReturnsEntry()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreMockTest",
                "name": "getScore_ObjectiveUnregistered_ThrowsError()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreMockTest",
                "name": "testResetScore()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setSize_Event_AppliesDuration()",
                "time": 0.211,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setSize_Event_AppliesSize()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "testGetWorld()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setSize_OverTimeGoingDown_CompleteAtFullTime()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setSize_Instant_CallsEvent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setWarningDistance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setSize_Duration_CallsEvent()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setCenterLocation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "isInside_InsideLocation_True()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setSize_CanceledEvent_DoesntApply()",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setSize_OverTimeGoingUp_CompleteAtFullTime()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "constructor_NullWorld_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "isInside_InsideLocationWrongWorld_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "reset()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setCenter_CallsEvent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setSize_GreaterThanMax_ClampedAtMax()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setSize_LessThanOne_ClampedAtOne()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setSize_OverTime_HalfwayAtHalfTime()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setCenterXZ()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setWarningTime()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setDamageAmount()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setDamageBuffer()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "isInside_Null_ExceptionThrown()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setCenter_CanceledEvent_DoesntApply()",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "setSize()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.WorldBorderMockTest",
                "name": "isInside_OutsideLocation_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetVariant()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testGetOwnerUniqueIdDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetOwnerNull()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetOwnerUUID()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetEatingGrass()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testIsEatingGrassDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testIsRearingDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetRearing()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testIsEatingHayStackDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetDomesticationTooHigh()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetEatingHayStack()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetMaxDomesticationTooLow()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testGetDomesticationDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetEating()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testGetMaxDomesticationDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetMaxDomesticationInfluencingSetDomestication()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetDomesticationTooLow()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testGetOwnerDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetMaxDomestication()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testIsEatingDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetDomestication()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AbstractHorseMockTest",
                "name": "testSetOwner()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.CommandResultTest",
                "name": "assertResponse_WrongResponse_Asserts()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.CommandResultTest",
                "name": "assertNoResponse_NoMoreMessage_DoesNotAssert()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.CommandResultTest",
                "name": "assertFailed_Failed_DoesNotAssert()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.CommandResultTest",
                "name": "assertResponse_CorrectResponse_DoesNotAssert()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.CommandResultTest",
                "name": "assertFailed_Succeeded_Asserts()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.CommandResultTest",
                "name": "assertNoResponse_MoreMessage_Asserts()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.CommandResultTest",
                "name": "hasSucceeded_Failed_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.CommandResultTest",
                "name": "hasSucceeded_Succeeded_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.CommandResultTest",
                "name": "assertSucceed_Failed_Asserts()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.CommandResultTest",
                "name": "assertSucceed_Succeeded_DoesNotAssert()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.CommandResultTest",
                "name": "assertResponse_NoMessages_Asserts()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.CommandResultTest",
                "name": "assertResponse_WrongFormattedResponse_Asserts()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BlockDataMockTest",
                "name": "testGetWithNonExistentKey()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BlockDataMockTest",
                "name": "testMatchesNotEquals()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BlockDataMockTest",
                "name": "matches_DifferentMaterials_DoesntMatch()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BlockDataMockTest",
                "name": "testHashCode()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BlockDataMockTest",
                "name": "mock_NullInput_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BlockDataMockTest",
                "name": "getAsString_NoData()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BlockDataMockTest",
                "name": "matches_DoesMatch()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.LeatherArmorMetaMockTest",
                "name": "testClone()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.LeatherArmorMetaMockTest",
                "name": "testDefaultLeatherColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.LeatherArmorMetaMockTest",
                "name": "testResetColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.LeatherArmorMetaMockTest",
                "name": "testSetColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.adventure.LegacyComponentSerializerTest",
                "name": "deserialize_UseBungeeColorFormat()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SlabMockTest",
                "name": "blockDataMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SlabMockTest",
                "name": "setWaterlogged()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SlabMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SlabMockTest",
                "name": "setType_Null_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SlabMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SlabMockTest",
                "name": "getAsString()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SlabMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SlabMockTest",
                "name": "setType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "getObjectivesByCriteria_TwoDifferentObjectives_ReturnsOne_CriteriaObject()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "getObjective_ObjectiveInDisplaySlot_ReturnsObjective()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "getEntityTeam()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "resetScores()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "registerNewObjective_CheckForDuplicates()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "getEntries()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "getObjectivesByCriteria_TwoDifferentObjectives_ReturnsOne()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "registerObjective_DummyObjective_ObjectiveRegistered()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "clearSlot_NotUnregisterObjectives()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "getObjectives_TwoObjectives_ReturnsTwo()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "registerNewTeam_CheckForDuplicates()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "getObjective_EmptyDisplaySlot_ReturnsNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "getTeams()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.ScoreboardMockTest",
                "name": "getScoresFor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.AxolotlBucketMetaMockTest",
                "name": "equals_SameInstance_ReturnsTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.AxolotlBucketMetaMockTest",
                "name": "hasVariant()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.AxolotlBucketMetaMockTest",
                "name": "clone_CopiesValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.AxolotlBucketMetaMockTest",
                "name": "setVariant()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.AxolotlBucketMetaMockTest",
                "name": "equals_DifferentInstance_SameValues_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.AxolotlBucketMetaMockTest",
                "name": "equals_DifferentInstance_DifferentValues_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.AxolotlBucketMetaMockTest",
                "name": "setVariant_NullVariant_DefaultToLucy()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.AxolotlBucketMetaMockTest",
                "name": "constructor_Clone_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.AxolotlBucketMetaMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.DropperInventoryMockTest",
                "name": "testGetSnapshot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testIsBreedingItemDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testSetBreedCause()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testGetSpawnCategory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testIsBreedingItemWithWrongItem()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testToString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testIsLoveModeDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testIsBreedingItemWithMaterial()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testIsBreedingItemWithWrongMaterial()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testSetLoveModeTicks()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testNullBreedCauseDoesNotThrow()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testSetLoveModeTicksNegative()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testIsLoveMode()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testIsBreedingItemWithNullMaterialThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "assertIsBreedingItemThrowsWithNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testGetBreedCauseDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AnimalsMockTest",
                "name": "testGetLoveModeTicks()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AbstractHorseInventoryMockTest",
                "name": "setSaddle_SetsSaddle()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.AbstractHorseInventoryMockTest",
                "name": "setSaddle_SetsItemInSlot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testChestplateDropChance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testOffHand()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testLeggings()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testBootsDropChance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testGetItemInHandDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testBoots()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testClear()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testHelmetDropChance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testSetArmorContentsNullThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testGetArmorContentsDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "[1] HAND",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "[2] OFF_HAND",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "[3] FEET",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "[4] LEGS",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "[5] CHEST",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "[6] HEAD",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testMainHandDropChance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testLeggingsDropChance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testSetItemInHand()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testOffHandDropChance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testChestplate()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testSetArmorContents()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testMainHand()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testGetHolder()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "testHelmet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EntityEquipmentMockTest",
                "name": "setDropChance_NonMob()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CatMockTest",
                "name": "testSetIsLyingDown()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CatMockTest",
                "name": "testGetCatTypeDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CatMockTest",
                "name": "testSetCatType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CatMockTest",
                "name": "testSetCollarColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CatMockTest",
                "name": "testGetCollarColorDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CatMockTest",
                "name": "testSetCatTypeNullThrows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CatMockTest",
                "name": "testSetIsHeadUp()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CatMockTest",
                "name": "testGetIsHeadUpDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CatMockTest",
                "name": "testGetIsLyingDownDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CatMockTest",
                "name": "testSetCollarColorNullThrows()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BrewingStandMockTest",
                "name": "constructor_Block_NotBrewingStand_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BrewingStandMockTest",
                "name": "setFuelLevel()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BrewingStandMockTest",
                "name": "constructor_Block()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BrewingStandMockTest",
                "name": "constructor_Material_NotBrewingStand_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BrewingStandMockTest",
                "name": "testGetSnapShotInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BrewingStandMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BrewingStandMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BrewingStandMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BrewingStandMockTest",
                "name": "setBrewingTime()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.FurnaceInventoryMockTest",
                "name": "testSetSmelting_SetsItemInSlot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.FurnaceInventoryMockTest",
                "name": "testGetFuel()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.FurnaceInventoryMockTest",
                "name": "testSetResult_SetsItemInSlot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.FurnaceInventoryMockTest",
                "name": "testGetSmelting()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.FurnaceInventoryMockTest",
                "name": "testGetHolder()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.FurnaceInventoryMockTest",
                "name": "testSetFuel_SetsItemInSlot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.FurnaceInventoryMockTest",
                "name": "testGetResult()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.FurnaceInventoryMockTest",
                "name": "testIsFuel()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SuspiciousStewMetaMockTest",
                "name": "testClone()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SuspiciousStewMetaMockTest",
                "name": "testClearEffects()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SuspiciousStewMetaMockTest",
                "name": "testRemoveEffect()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SuspiciousStewMetaMockTest",
                "name": "testAddEffect()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SuspiciousStewMetaMockTest",
                "name": "testEquals()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SuspiciousStewMetaMockTest",
                "name": "testEffectsDefaultEmpty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SuspiciousStewMetaMockTest",
                "name": "testOverrideEffect()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.CampfireMockTest",
                "name": "blockDataMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.CampfireMockTest",
                "name": "setWaterlogged()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.CampfireMockTest",
                "name": "setSignalFire()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.CampfireMockTest",
                "name": "setFacing_Null_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.CampfireMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.CampfireMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.CampfireMockTest",
                "name": "getAsString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.CampfireMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.CampfireMockTest",
                "name": "setList()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "setOwner_Null_ReturnsFalse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "setOwner_NameTooLong_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "setPlayerProfile()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "setOwner_ProperSize_DoesntThrowException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "getOwningPlayer_UuidOnly()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "getSkullType()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "getOwningPlayer_NameOnly()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "constructor_Clone_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "setOwnerProfile_Null_SetsToNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "getOwningPlayer_NoOwner_ReturnsNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "setOwningPlayer_Null_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "setPlayerProfile_Null_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "setSkullType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "getOwnerProfile_NoOwner_ReturnsNull()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "setOwnerProfile()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "setOwner()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "setOwningPlayer()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SkullMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getBukkitVersion_CorrectPattern()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateEnderChestInventory()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateLoomInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getOfflinePlayerByUnknownId_returnsOfflinePlayerWithGivenId()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testAddPlayerWithWhitelistEnabled()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateFurnaceInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getRecipesFor_ManyRecipes_OnlyCorrectRecipes()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetViewDistance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "loadServerIcon_WrongHeight_ThrowsException()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetShutdownMessage()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getRecipesFor_IgnoresAmount()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "broadcastMessage_TwoPlayers_BothReceivedMessage()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getOfflinePlayers_CorrectArraySize()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testHasWhiteListDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "addRecipe_AddsRecipe_ReturnsTrue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getPlayerExact_CasingMatches_PlayerFound()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "loadServerIcon_CorrectData()",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "loadServerIcon_CorrectSize()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testIsEnforcingSecureProfiles()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateHopperInventory()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testMotdDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetSpawnRadius()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetGenerateStructures()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetMaxChainedNeighborUpdates()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "createInventory_ChestInventoryWithoutSize_CreatesInventoryWithThreeLines()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getPlayer_PlayerNameIncorrect_PlayerNotFound()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getPlayers_Negative_ArrayIndexOutOfBoundsException()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetMaxPlayers()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "loadServerIcon_NullImage_ThrowsException()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSendPluginMessage()",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testAddPlayerWithWhitelistEnabledAndNotWhitelisted()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getPlayerExact_PlayerNameIncorrect_PlayerNotFound()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "createMap_CallsMapInitEvent()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getEntities_TwoEntitiesRegistered_SetContainsEntities()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetAllowEnd()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testMotd()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "loadServerIcon_NullFile_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getCommandTabComplete_ReturnsExpectedResults()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetDefaultGameMode()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testWarningState()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetPlayerUniqueID_OfflineMode()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "[1] player, player",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "[2] player, PLAYER",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "[3] player_other, player",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getMinecraftVersion_NotNull()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateSmithingInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateEnchantingInventory()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testIsShouldSendingChatPreviewsDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetMaxChainedNeighborUpdatesDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateStonecutterInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetBannedPlayersDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getScoreboardManager_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateBlockData()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testIsGenerateStructuresDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testShutdownMessage()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "addPlayer_Calls_PlayerLoginEvent()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getPlayerExact_CasingDoesNotMatch_PlayerFound()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "addPlayer_TwoPlayers_SizeIsTwo()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetPlayerList()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateWorkbenchInventory()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testBroadCastMessageWithComponent()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testReloadWhiteListWithEnforcedWhiteList()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetMaxWorldSizeDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getPermissionMessage_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetSimulationDistanceDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getPlayer_PlayerNameCasingIncorrect_PlayerFound()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testDefaultPotionEffects()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateDispenserInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "matchPlayer_NoMatchingPlayers_EmptyList()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateDropperInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getPlayers_LargerThanNumberOfPlayers_ArrayIndexOutOfBoundsException()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getPluginCommand_Unknown_Null()",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateShulkerBoxInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testReloadWhiteList()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetWhiteListEnforced()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "executeCommand_CommandAsStringAndTrueReturnValue_Succeeds()",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateLecternInventory()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateUncreateableInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetBannedPlayers()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testIsAllowNetherDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getMap_ValidId_ReturnsMap()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "addPlayers_None_TwoUniquePlayers()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "clearRecipes_SomeRecipes_AllRecipesRemoved()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getDataFolder_CleanEnvironment_CreatesTemporaryDataDirectory()",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "createWorld_WorldCreator()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testIsAllowEndDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetShouldSendingChatPreviews()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetViewDistanceDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getName_NotNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testIsHideOnlinePlayersDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getVersion_CorrectPattern()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testReloadWithListWithoutWhitelistEnabled()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "createProfile_UuidOnly()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "permissionMessage_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetDefaultGamemodeDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testIsWhiteListEnforcedDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateAnvilInventory()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "executeCommand_PlayerAndTrueReturnValue_Succeeds()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreatePlayerInventory()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetSimulationDistance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "createProfile_NameOnly()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "createProfile_NameUuid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "tstReloadWhiteListWithNotEnforcedWhiteList()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetEnforcingSecureProfiles()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getOperators_OneOperator()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "loadServerIcon_WrongWidth_ThrowsException()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateBrewerInventory()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "performCommand_PerformsCommand()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetWorldTypeDefault()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getMinecraftVersion_CorrectPattern()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "executeCommand_ConsoleAndFalseReturnValue_Fails()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetLevelType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "createMap_IdIncrements()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetWhiteList()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetHideOnlinePlayers()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testIsHardcoreDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getVersion_NotNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "addSimpleWorld_Name_WorldWithNameAdded()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testOfflinePlayerJoin()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetUpdateFolder()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getBukkitVersion_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getEntities_NoEntities_EmptySet()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetEntity()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getConsoleSender_NotNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getScheduler_Default_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testIsAllowFlight()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testPlayerListDisconnectPlayer()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "addPlayer_Calls_PlayerJoinEvent()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "addPlayer_Calls_AsyncPreLoginEvent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetAllowFlight()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetOnlineModeDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "createInventory_WithSize_CreatesInventory()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetHardCore()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetAllowNether()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getPlayers_AllSame()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetShutdownMessageDefault()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreatePlayerWithNonPlayerHolderThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getItemFactory_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateBeaconInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetMotd()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateGrindstoneInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetMotdDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateBarrelInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "matchPlayer_SomeMatchingPlayers_ListHasPlayer()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "[1] testcommand",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "[2] tc",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "[3] othercommand",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testCreateCartographyInventory()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testReloadWhiteListWithNotEnforcedWhiteListAndPlayerIsWhitelisted()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetUpdateFolderDefault()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetOnlineMode()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "getPlayer_UUIDAndPlayerExists_PlayerFound()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "setPlayers_Two_TwoUniquePlayers()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "class_NumberOfPlayers_Zero()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testSetMaxWorldSize()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ServerMockTest",
                "name": "testGetPlayerUniqueID()",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testAssertAgressiveAttack()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testSetStrengthOutOfRange()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testSetStrength()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testRangedAttackNullEntity()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testGetInventory()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testAssertAttackWithNotAgressiveEntity()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testRangedAttack()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testSetAggressive()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testGetStrengthDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testAssertAttackWithNotAttackedEntity()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testGetVariant()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testRangedAttackOutOfRange()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testGetColorDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testAssertAttackWithWrongCharge()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LlamaMockTest",
                "name": "testSetColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "getMainThreadExecutor_NullPlugin_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "runTask_Consumer()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "getMainThreadExecutor_RunsOnMainThread()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "repeatingTask_DoesntHang()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "runTaskTimer_ZeroDelay_DoesntExecuteTaskImmediately()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "runTaskLater_DoesntHang()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "cancellingAllTaskByPlugin()",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "longRunningTask_Throws_RunTimeException()",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "cancellingAsyncTaskDecreasesNumberOfQueuedAsyncTasks()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "waitAsyncEventsFinished()",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "runTaskLater()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "runTaskTimer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "getCurrentTick()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "runTaskLater_Consumer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "runTaskTimer_SelfCancelling()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "longScheduledRunningTask_Throws_RunTimeException()",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "runTaskTimer_ZeroDelay_DoesntExecuteTaskImmediately_Consumer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "getMainThreadExecutor_NullCommand_ThrowsException()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "shutdown_waitsForAsyncEvents()",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "runTask()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "runTaskTimerAsynchronously_TaskExecutedOnSeperateThread()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "runTaskAsynchronously_TaskExecutedOnSeperateThread()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMockTest",
                "name": "runTaskTimer_Consumer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.AbstractFurnaceMockTest",
                "name": "constructor_Block_NotFurnace_ThrowsException()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.AbstractFurnaceMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.AbstractFurnaceMockTest",
                "name": "constructor_Copy_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.AbstractFurnaceMockTest",
                "name": "setCookSpeedMultiplier_GreaterThanTwoHundred_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.AbstractFurnaceMockTest",
                "name": "setCookTimeTotal()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.AbstractFurnaceMockTest",
                "name": "setCookSpeedMultiplier_LessThanZero_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.AbstractFurnaceMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.AbstractFurnaceMockTest",
                "name": "constructor_Material_NotFurnace_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.AbstractFurnaceMockTest",
                "name": "setCookSpeedMultiplier_Valid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.AbstractFurnaceMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.AbstractFurnaceMockTest",
                "name": "setBurnTime()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.AbstractFurnaceMockTest",
                "name": "setCookTime()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "testDefaultMaxLureAngle()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "applyLure()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setMaxLureAngle()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setMinLureTime()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setMaxWaitTime_Valid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "testDefaultMinLureAngle()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setLureAngle()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setMinLureAngle()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setRainInfluenced()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setBiteChance_Raining()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setMaxLureTime()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "testToString()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setBiteChance_SetsChance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "updateState()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setSkyInfluenced()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "testDefaultMinLureTime()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "getType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "testDefaultMaxLureTime()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setMinWaitTime_Valid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "spawnCategory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "pullEntity_ValidShooter()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setLureTime()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setBiteChance_LessThanZero_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setHookedEntity()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setBiteChance_GreaterThanOne_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setMinWaitTime_Invalid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "setMaxWaitTime_Invalid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FishHookMockTest",
                "name": "pullEntity_InvalidShooter()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BeaconInventoryMockTest",
                "name": "testSetItem_SetsSlot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BeaconInventoryMockTest",
                "name": "testSetItemDefaultNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BeaconInventoryMockTest",
                "name": "testSetItemNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BeaconInventoryMockTest",
                "name": "testSetItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BeaconInventoryMockTest",
                "name": "testGetSnapshot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HopperMinecartMockTest",
                "name": "testGetPickupCooldownThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HopperMinecartMockTest",
                "name": "testGetMinecartMaterial()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HopperMinecartMockTest",
                "name": "testGetInventory()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HopperMinecartMockTest",
                "name": "testIsEnabledDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HopperMinecartMockTest",
                "name": "testSetPickupCooldownThrows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HopperMinecartMockTest",
                "name": "testGetEntityType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HopperMinecartMockTest",
                "name": "testSetEnabled()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.HopperMinecartMockTest",
                "name": "testGetEntity()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ChestedHorseMockTest",
                "name": "testIsCarryingChestDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ChestedHorseMockTest",
                "name": "testIsCarryingChest()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ChestedHorseMockTest",
                "name": "testSetCarryingChestOnAlreadyTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "shear_Cow_CorrectPersistence()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "shear_Cow_CorrectCustomName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "testSetVariant()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "shear_Cow_NoCustomName_CorrectCustomNameVisible()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "shear_Cow_CorrectHealth()",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "shear_Cow_CorrectLocation()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "shear_SoundPlayed()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "shear_EntityTransformEvent_Cancelled()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "readyToBeSheared_Dead_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "readyToBeSheared()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "shear_Cow_CustomName_CorrectCustomNameVisible()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "testSetVariantNullThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "shear_CallsEntityTransformEvent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "shear_Cow_CorrectInvulnerability()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "readyToBeSheared_Baby_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "testGetVariantDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "shear_SpawnsCow()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "[1] RED",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.MushroomCowMockTest",
                "name": "[2] BROWN",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.services.ServicesManagerTest",
                "name": "test_register_should_register()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.services.ServicesManagerTest",
                "name": "test_get_known_services()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.services.ServicesManagerTest",
                "name": "test_unregister()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.services.ServicesManagerTest",
                "name": "test_unregister_service_provider()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.services.ServicesManagerTest",
                "name": "test_get_registration_registered_object()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.services.ServicesManagerTest",
                "name": "test_register_multiple_service()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.services.ServicesManagerTest",
                "name": "test_get_registrations()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.services.ServicesManagerTest",
                "name": "test_is_provided_for()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.services.ServicesManagerTest",
                "name": "test_load_registered_object()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.services.ServicesManagerTest",
                "name": "test_get_registration_not_registered_object()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.services.ServicesManagerTest",
                "name": "test_load_not_registered_object()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BrewerInventoryMockTest",
                "name": "testSetFuelWithNullFuel()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BrewerInventoryMockTest",
                "name": "testSetFuel_SetsSlot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BrewerInventoryMockTest",
                "name": "testSetIngredientWithNullIngredient()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BrewerInventoryMockTest",
                "name": "testSetIngredientWithValidIngredient()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BrewerInventoryMockTest",
                "name": "testSetFuelWithValidFuel()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BrewerInventoryMockTest",
                "name": "testSetIngredient_SetsSlot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BrewerInventoryMockTest",
                "name": "testGetSnapShotWithSetFuelAndIngredient()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BrewerInventoryMockTest",
                "name": "testGetIngredientWithNoIngredientSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BrewerInventoryMockTest",
                "name": "testGetFuelWithNoFuelSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BrewerInventoryMockTest",
                "name": "testGetSnapshot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBanList_MockBanEntryListTest",
                "name": "constructor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBanList_MockBanEntryListTest",
                "name": "setSource_OtherSource_SourceSetExactly()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBanList_MockBanEntryListTest",
                "name": "setReason_LaterDate_DateSetExactly()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBanList_MockBanEntryListTest",
                "name": "setCreationDate_OtherDate_DateSetExactly()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.MockBanList_MockBanEntryListTest",
                "name": "setExpirationDate_OtherDate_DateSetExactly()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EnchantingTableMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EnchantingTableMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EnchantingTableMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EnchantingTableMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EnchantingTableMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EnchantingTableMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setStructureName_Null_ThrowsException()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setUsageMode()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setRelativePosition_Null_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setAuthor_Entity()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setIntegrity_TooLarge()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setIntegrity_TooSmall()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setMetadata_NotInDataMode_DoesntSet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setRelativePosition()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setStructureSize_Null_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setRotation_Null_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setAuthor_Entity_Null_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setAuthor_Null_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "constructor_Clone_CopiesValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setIgnoreEntities()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setAuthor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setMetadata_Null_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setMirror()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setUsageMode_Null_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setShowAir()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setStructureName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setStructureSize()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setStructureSize_Z_TooLarge()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setStructureSize_Z_TooSmall()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setBoundingBoxVisible()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setRelativePosition_Z_TooLarge()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setRelativePosition_Z_TooSmall()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setStructureSize_Y_TooLarge()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setStructureSize_Y_TooSmall()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setMirror_Null_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setMetadata()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setRelativePosition_Y_TooLarge()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setRelativePosition_Y_TooSmall()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setStructureSize_X_TooLarge()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setStructureSize_X_TooSmall()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setRelativePosition_X_TooLarge()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setRelativePosition_X_TooSmall()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setRotation()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setSeed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.StructureMockTest",
                "name": "setIntegrity()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BatMockTest",
                "name": "testTargetLocation()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BatMockTest",
                "name": "testIsAwakeDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BatMockTest",
                "name": "testSetTargetLocationNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BatMockTest",
                "name": "testTargetLocationDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BatMockTest",
                "name": "testEntityType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BatMockTest",
                "name": "testSetAwake()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.StrayMockTest",
                "name": "testGetSkeletonType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockFactoryTest",
                "name": "createRandomPlayer_createsRandomPlayer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockFactoryTest",
                "name": "createRandomPlayer_TwoInvocations_DifferentPlayers()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkTest",
                "name": "equals_DifferentChunk_False()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkTest",
                "name": "getZ_AnyValue_Exact_Value()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkTest",
                "name": "isLoaded_AfterUnload_False()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkTest",
                "name": "getChunkKey()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Skipped",
                        "message": null,
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkTest",
                "name": "getX_AnyValue_ExactValue()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkTest",
                "name": "equals_SameChunk_True()",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkTest",
                "name": "isLoaded_JustCreated_True()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkTest",
                "name": "isLoaded_AfterLoad_True()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkTest",
                "name": "equals_Null_False()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkTest",
                "name": "equals_DifferentClass_False()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.ChunkTest",
                "name": "getWorld_AnyChunkFromWorld_ExactWorldReference()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EndGatewayMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EndGatewayMockTest",
                "name": "getExitLocation_ReturnsClone()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EndGatewayMockTest",
                "name": "setExitLocation_DifferentWorld_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EndGatewayMockTest",
                "name": "constructor_Clone_CopiesValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EndGatewayMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EndGatewayMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EndGatewayMockTest",
                "name": "setExitLocation()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EndGatewayMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EndGatewayMockTest",
                "name": "setExitLocation_Null_SetsToNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EndGatewayMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.EndGatewayMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DropperMockTest",
                "name": "constructor_Block()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DropperMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DropperMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DropperMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DropperMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DropperMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[1] ACACIA_BUTTON",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[2] SPRUCE_BUTTON",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[3] CRIMSON_BUTTON",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[4] STONE_BUTTON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[5] BIRCH_BUTTON",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[6] JUNGLE_BUTTON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[7] OAK_BUTTON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[8] DARK_OAK_BUTTON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[9] WARPED_BUTTON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[10] LEVER",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[11] POLISHED_BLACKSTONE_BUTTON",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "setPowered()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "setFacing_notNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "setFacing_Valid()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[1] ACACIA_BUTTON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[2] SPRUCE_BUTTON",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[3] CRIMSON_BUTTON",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[4] STONE_BUTTON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[5] BIRCH_BUTTON",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[6] JUNGLE_BUTTON",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[7] OAK_BUTTON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[8] DARK_OAK_BUTTON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[9] WARPED_BUTTON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[10] LEVER",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[11] POLISHED_BLACKSTONE_BUTTON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "setFacing_Invalid()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "getAsString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[1] FLOOR",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[2] WALL",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[3] CEILING",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "setAttachedFace_notNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "getFaces()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "getFacing_Immutable()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[1] FLOOR",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[2] WALL",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.SwitchMockTest",
                "name": "[3] CEILING",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DaylightDetectorMockTest",
                "name": "constructor_Block()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DaylightDetectorMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DaylightDetectorMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DaylightDetectorMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DaylightDetectorMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.DaylightDetectorMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EnchantingInventoryMockTest",
                "name": "setSecondary_SetsItemInSlot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EnchantingInventoryMockTest",
                "name": "setItem_SetsItemInSlot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EnchantingInventoryMockTest",
                "name": "setSecondary()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.EnchantingInventoryMockTest",
                "name": "setItem()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "isPermissionSet_String_IsntSet_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "assertSaid_CorrectMessage_DoesNotAssert()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "getName_IsConsole()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "getMessage_SomeString_SameString()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "sendMessage_StoredAsComponent()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "sendMessage_NoMessage_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "hasPermission_String_SetTrue_True()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "isPermissionSet_String_IsSet_True()",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "assertSaid_NoMessages_Asserts()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "hasPermission_Permission_SetFalse_True()",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "assertNoMore_MoreMessages_Asserts()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "assertSaid_WrongMessage_Asserts()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "addAttachment_False_DoesntHave()",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "isPermissionSet_Permission_IsSet_True()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "isPermissionSet_Permission_IsntSet_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "addAttachment_RemovedAfterTicks()",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "addAttachment_True_Has()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "hasPermission_Permission_NotSet_True()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "removeAttachment_RemovesAttachment()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "spigot_sendMessage_SingleComponent_Null_ThrowsException()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "hasPermission_String_SetFalse_True()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "getMessage_NoMessages_Null()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "spigot_sendMessage_MultipleComponents()",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "sendMessageVararg_SomeStrings_StringsInRightOrder()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "spigot_sendMessage_SingleComponent()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "assertSetOp_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "hasPermission_String_NotSet_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "assertNoMore_NoMessages_DoesNotAssert()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "hasPermission_Permission_SetTrue_True()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "spigot_sendMessage_MultipleComponents_Null_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.command.ConsoleCommandSenderMockTest",
                "name": "assertIsOp()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "equals_SameInstance_ReturnsTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "setBaseColor_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "removePattern_RemovesCorrectPattern()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "clone_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "equals_DifferentInstance_SameValues_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "equals_DifferentInstance_DifferentValues_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "setPattern_SetsCorrectPattern()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "constructor_Clone_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "setPatterns_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "setPatterns_ClonesList()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "numberOfPatterns_CorrectNumber()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "addPattern_AddsPattern()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BannerMetaMockTest",
                "name": "getPattern_ReturnsCorrectPattern()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "equals_SameInstance_ReturnsTrue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "hasItems_Constructor_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "clone_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "addItems()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "equals_DifferentInstance_SameValues_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "equals_DifferentInstance_DifferentValues_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "getItems_Constructor_EmptyList()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "getItems_ReturnsItems()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "setItems_AirItem_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "setItems_NullItem_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "addItems_AirItem_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "setItems()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "hasItems_hasItem_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "cloneConstructor_CopiesValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.BundleMetaMockTest",
                "name": "addItems_NullItem_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.ShulkerBoxInventoryMockTest",
                "name": "testGetSnapshot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.SmithingInventoryMockTest",
                "name": "testGetResultDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.SmithingInventoryMockTest",
                "name": "testSetResult_SetsItemInSlot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.SmithingInventoryMockTest",
                "name": "testSetResult()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "showWinScreen_DoesntThrow()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setLevel_SomeValue_LevelSetExactly()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testFly_DisabledWhenNotAllowed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSendEquipmentChange()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerListFooterSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getUniqueId_Default_CorrectUuid()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getEquipment_SetDropChance()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[1] CREATIVE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[2] ADVENTURE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[3] SPECTATOR",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setMaxHealth_Decreased_HealthAndMaxHealthSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testTeleport_DontCloseCraftingInventory()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSendHealthUpdate()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSendBlockChange()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getName_Default_CorrectName()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSendBlockDamage()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[1] CUSTOM_HEAD, UI_BUTTON_CLICK",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[2] PIGLIN, BLOCK_NOTE_BLOCK_IMITATE_PIGLIN",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[3] WITHER_SKELETON, BLOCK_NOTE_BLOCK_IMITATE_WITHER_SKELETON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[4] DRAGON, BLOCK_NOTE_BLOCK_IMITATE_ENDER_DRAGON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[5] CREEPER, BLOCK_NOTE_BLOCK_IMITATE_CREEPER",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[6] SKELETON, BLOCK_NOTE_BLOCK_IMITATE_SKELETON",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[7] ZOMBIE, BLOCK_NOTE_BLOCK_IMITATE_ZOMBIE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[8] XYLOPHONE, BLOCK_NOTE_BLOCK_XYLOPHONE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[9] BANJO, BLOCK_NOTE_BLOCK_BANJO",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[10] BASS_DRUM, BLOCK_NOTE_BLOCK_BASEDRUM",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[11] BASS_GUITAR, BLOCK_NOTE_BLOCK_BASS",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[12] BELL, BLOCK_NOTE_BLOCK_BELL",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[13] BIT, BLOCK_NOTE_BLOCK_BIT",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[14] CHIME, BLOCK_NOTE_BLOCK_CHIME",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[15] COW_BELL, BLOCK_NOTE_BLOCK_COW_BELL",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[16] DIDGERIDOO, BLOCK_NOTE_BLOCK_DIDGERIDOO",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[17] FLUTE, BLOCK_NOTE_BLOCK_FLUTE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[18] GUITAR, BLOCK_NOTE_BLOCK_GUITAR",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[19] IRON_XYLOPHONE, BLOCK_NOTE_BLOCK_IRON_XYLOPHONE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[20] PLING, BLOCK_NOTE_BLOCK_PLING",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[21] SNARE_DRUM, BLOCK_NOTE_BLOCK_SNARE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "[22] STICKS, BLOCK_NOTE_BLOCK_HAT",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "giveExp_NoExpChange_NoEventFired()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "damage_LessThanHealth_DamageTaken()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "simulateBlockDamage_NotInstaBreak_NotBroken()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getPlayer_SneakingDefault()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getEquipment_DropChance()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerInventoryClick_Dispatched()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testBedSpawnLocation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testCompassDefaultTargetSpawnLocation()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setExpCooldown_CallsEvent()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerListFooterDefault()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testAssertInventoryViewWithPredicateFails()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testKeepInventoryFalse()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setLastPlayed_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testBedSpawnLocationForce()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testAssertInventoryViewWithStringAndType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testReconnectWithWhiteListEnabled()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testFly()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getDisplayName_Default_SameAsPlayerUsername()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerListHeaderSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setHealthScale_Negative_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setWalkSpeed()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerTeleport_NotCanceled_PlayerTeleported()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setHealthScaled()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlaySound()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testAssertInventoryViewDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getTotalExperience_Default_EqualsZero()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "giveExpLevel_Negative_ClampedAtZero()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerTeleport_WithoutCause_EventFired()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerPlayEffect()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "resetMaxHealth_MaxHealthChanged_ResetsBackTo20()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setExp_GreaterThanOne_ExceptionThrown()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "simulateBlockBreak_Survival_BlockBroken()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setMaxHealth_Increased_MaxHealthSet()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "hasPlayedBefore_AddedToServer_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSendSignChange_Invalid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerListHeaderDefault()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSimulatePlayerMove_WithTeleportation()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "sendMap_RendersMap()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSimulateConsumeItem()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "simulateBlockBreak_Adventure_BlockNotBroken()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setTotalExperience_NegativeValue_ClampedAtZero()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testAssertInventoryViewWithPredicate()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testIsWhiteListed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getHealth_Default_EqualsToGetMaxHealth()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSendEquipmentChange_Map()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setExp_SomeValue_LevelSetExactly()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "simulateBlockBreak_CreativeAndDamageCancelled_BlockBroken()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSetWhiteListed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testAssertSoundHeard_Adventure()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSetMaximumAir()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getLevel_Default_EqualsZero()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "simulateBlockDamage_Survival_BlockDamaged()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setHealth_NegativeValue_ClampedAtZero()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testGetEntityStateDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testGetEntityStateSwimming()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "simulateBlockBreak_Spectator_BlockNotBroken()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "hasPlayedBefore_NotAddedToServer_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "giveExp_SomeExp_IncreaseLevel()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "isHealthScaled()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSimulatePlayerMove()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerHide_OldAndNewPluginWorksSimultaneously()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerHide_OldImplementation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getAddress_Constructor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerTeleport_ChangedWorldEvent()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testAssertInventoryViewFailsWithWrongType()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testReconnectWithWhiteListEnabledAndPlayerWhiteListed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testDisconnect()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlaySoundStringWithoutCategory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setHealh_TooHighValue_ClampedAtMaxHealth()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setWalkSpeed_TooHigh_ThrowsException()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSetRemainingAir()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getPreviousGameMode()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "damage_MoreThanHealth_ClampedAtZeroAndDeathEvent()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getDisplayName_NameSet_NameSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setHealthScale()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "giveExp_SomeExp_DecreaseLevel()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSendSignChange_Valid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testIsBanned()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSimulateBlockPlaceValid()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSendActionBar()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerHide_InitialState()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "assertSaid_Spigot_CorrectMessage_DoesNotAssert()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testGetEntityStateSneaking()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "chat_AnyMessage_AsyncEventFired()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setHealthScale_NaN_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testGetEntityType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testKickWithNullMessage()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testTeleport_ChangeDestinationInEvent()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerHide_HideCommandIssuedMultipleTimesNew()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerHide_HideCommandIssuedMultipleTimesOld()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testIllegalArgumentForSpawning()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSimulatePlayerMove_EventCancelled()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "assertSaid_Spigot_WrongMessage_Asserts()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "simulateBlockBreak_InstaBreak_BreakEventOnlyFiredOnce()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getAddress_NullWhenNotOnline()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSimulateConsumeItemWithInvalidItem()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "giveExp_SomeLevelChange_LevelEventFired()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerTeleport_WithCause_EventFired()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSetCompassTarget()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlaySoundWithEntity()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerListNameDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSpawnParticle_Correct_DataType()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerListNameSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSerialization()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerHide_NewImplementation()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testEnderChest()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerQuitEventGetFired()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlaySoundWithEntityWithoutCategory()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getExp_Default_EqualsZero()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getInventory_Default_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSendTitle()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setExp_LessThanZero_ExceptionThrown()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSendHealthUpdate_Params()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testFly_NotAllowed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testRespawnEventFired()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setWalkSpeed_TooLow_ThrowsException()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerLastDeathLocation_Set()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlaySound_Adventure()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getInventory_Twice_SameInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "performCommand_PerformsCommand()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerHide_EachOtherTest()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "breakBlock_Survival_BlockBroken()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getPlayer_SneakingChange()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setHealth_SomeValue_HealthSetExactly()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setExpCooldown_Negative_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getPlayerListName_Default_SameAsPlayerUsername()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "breakBlock_Creative_Sword_BlockNotBroken()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSetOpFalse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlaySoundWithLocationSoundVolumePitch()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getPlayer_SneakingEyeHeight()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testAssertItemConsumedWithNotConsumedItem()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testDisplayName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getPlayerListName_NameSet_NameSet()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "simulateBlockBreak_SurvivalAndDamageCancelled_BlockNotBroken()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerTeleport_Canceled_PlayerNotTeleported()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSetOpTrue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSprintEventFired()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerPlayEffect_NullData()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testKeepInventoryTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSneakEventFired()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getInventory_getEquipment_SameInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "damage_ExactlyHealth_ZeroAndDeathEvent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getPlayer_EyeLocationDiffers()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getWalkSpeed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testKickWithOfflinePlayer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSimulateBlockPlaceInvalid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "simulateBlockBreak_CreativeAndBreakCancelled_BlockNotBroken()",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testGetEntityStateFlying()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testBedSpawnLocationRespawn()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlaySoundLocation_Adventure()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testReconnect()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testReconnectWithoutJoiningBefore()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSprint()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "simulateBlockBreak_Creative_BlockBroken()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getHealthScale()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSpawnParticle_Incorrect_DataType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlaySoundString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlaySoundSelfEmitter_Adventure()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testTeleport_CloseInventory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "giveExp_SomeExp_DecreaseMultipleLevels()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "simulateBlockBreak_BreakCancelled_BlockNotBroken()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setAddress()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testFlightEventFired()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "dispatchPlayer_PlayerJoinEventFired()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setExpCooldown()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testIsBannedDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testReconnectWithPlayerOnline()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testDisconnectWithPlayerOffline()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getMaxHealth_Default_20()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayNote_OldMethod()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testAssertItemConsumedWithNullItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSendMultiBlockChange()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "getAttribute_HealthAttribute_IsMaximumHealth()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSendBlockUpdateInvalid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setScoreboard()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testSimulateConsumeItemWithNullItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerSendExperienceChange()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "giveExp_SomeExp_IncreaseMultipleLevels()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "simulateBlockDamage_InstaBreak_Broken()",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "testPlayerPlayEffect_IncorrectData()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PlayerMockTest",
                "name": "setTotalExperience_SomeValue_TotalExpSetExactly()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SpawnEggMetaMockTest",
                "name": "setSpawnedType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SpawnEggMetaMockTest",
                "name": "getSpawnedType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testAddingPlayerNull()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testFlags()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testHide()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testShow()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testSetNameNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testBarStyle()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testRemovingNullPlayer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testBarPlayers()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testSetProgress()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testIsVisible()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testSetProgressOverOne()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testBossBarNotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testSetProgressNegative()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testSetName()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.boss.BossBarMockTest",
                "name": "testSetColor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ChickenMockTest",
                "name": "testIsBreedItemNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ChickenMockTest",
                "name": "testIsBreedItemItemStack()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ChickenMockTest",
                "name": "testIsBreedItemItemStackFalse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ChickenMockTest",
                "name": "testIsBreedItemNullWithMaterial()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ChickenMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ChickenMockTest",
                "name": "testIsBreedItemMaterialFalse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ChickenMockTest",
                "name": "testIsBreedItemMaterial()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.RepeatingTaskTest",
                "name": "getPeriod_SomePeriod_ExactPeriod()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.RepeatingTaskTest",
                "name": "getScheduledTick_AfterUpdateScheduledTick_Changed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scheduler.RepeatingTaskTest",
                "name": "getScheduledTick_Start_IsEqualToDelay()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "setFlower_DifferentWorld_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "updateSedated_NoCampfireBelow_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "constructor_Block_NotBeehive_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "constructor_Clone_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "setFlower_Null()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "setFlower()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "setSedated()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "setMaxEntities_LessThanZero_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "setMaxEntities()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "updateSedated_CampfireBelow_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeehiveMockTest",
                "name": "constructor_Material_NotBeehive_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AllayMockTest",
                "name": "testAssertCurrentItemWithWrongItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AllayMockTest",
                "name": "testItemPickUpWrongItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AllayMockTest",
                "name": "testItemRetrieval()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AllayMockTest",
                "name": "testItemPickUpToMany()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AllayMockTest",
                "name": "testCurrentItem()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AllayMockTest",
                "name": "testAssertInventoryContainsWithWrongItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AllayMockTest",
                "name": "testItemPickUp()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ItemEntityMockTest",
                "name": "testSetFrictionState()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ItemEntityMockTest",
                "name": "testPickupDelay()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ItemEntityMockTest",
                "name": "testSetItemStackNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ItemEntityMockTest",
                "name": "testIllegalArgumentForSpawning()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ItemEntityMockTest",
                "name": "testSetItemStack()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ItemEntityMockTest",
                "name": "testGetFrictionStateDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ItemEntityMockTest",
                "name": "testMaximumPickupDelay()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ItemEntityMockTest",
                "name": "testSetFrictionStateNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ItemEntityMockTest",
                "name": "testEntityType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "constructor_Block()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "stopPlaying_Playing_StopsPlaying()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "setRecord_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "eject_NotPlaced_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "setPlaying_Record_StartsPlaying()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "constructor_Clone_CopiesValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "eject_Record_ReturnsTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "setPlaying_Null_DoesntStartPlaying()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "setRecord_Null_DoesntStartPlaying()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "eject_Record_DropsItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "setRecord_Null_SetsToAir()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "stopPlaying_NotPlaying_NothingHappens()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "eject_NoRecord_ReturnsFalse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "setPlaying_Sets()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JukeboxMockTest",
                "name": "setPlaying_Null_SetsToAir()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CompassMetaMockTest",
                "name": "equals_SameInstance_ReturnsTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CompassMetaMockTest",
                "name": "clone_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CompassMetaMockTest",
                "name": "hasLodestone()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CompassMetaMockTest",
                "name": "isLodestoneTracked()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CompassMetaMockTest",
                "name": "equals_DifferentInstance_SameValues_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CompassMetaMockTest",
                "name": "equals_DifferentInstance_DifferentValues_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CompassMetaMockTest",
                "name": "setLodestone_NullWorld_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CompassMetaMockTest",
                "name": "constructor_Clone_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CompassMetaMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.CompassMetaMockTest",
                "name": "setLodestone()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CommandMinecartMockTest",
                "name": "testSetCommand()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CommandMinecartMockTest",
                "name": "testGetMinecartMaterial()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CommandMinecartMockTest",
                "name": "testGetSuccessCountDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CommandMinecartMockTest",
                "name": "testSetCommandNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CommandMinecartMockTest",
                "name": "tesTGetCommandDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CommandMinecartMockTest",
                "name": "testSuccessCountResetWhenChangingCommand()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CommandMinecartMockTest",
                "name": "testGetSuccessCount()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SkullMetaMockTest",
                "name": "testDefaultNoOwner()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SkullMetaMockTest",
                "name": "testClone()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SkullMetaMockTest",
                "name": "testSetOwningPlayer()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.SkullMetaMockTest",
                "name": "testSetOwner()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkSensorMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkSensorMockTest",
                "name": "setLastVibrationFrequency()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkSensorMockTest",
                "name": "setLastVibrationFrequency_GreaterThan15_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkSensorMockTest",
                "name": "setListenerRange_LessThan0_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkSensorMockTest",
                "name": "setLastVibrationFrequency_LessThan0_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkSensorMockTest",
                "name": "constructor_Clone_CopiesAllValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkSensorMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkSensorMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkSensorMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkSensorMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkSensorMockTest",
                "name": "setListenerRange()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkSensorMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ArmorStandMetaMockTest",
                "name": "equals_SameInstance_ReturnsTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ArmorStandMetaMockTest",
                "name": "clone_CopiesValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ArmorStandMetaMockTest",
                "name": "constructor_ClonesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ArmorStandMetaMockTest",
                "name": "setInvisible_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ArmorStandMetaMockTest",
                "name": "equals_DifferentInstance_SameValues_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ArmorStandMetaMockTest",
                "name": "equals_DifferentInstance_DifferentValues_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ArmorStandMetaMockTest",
                "name": "setNoBasePlate_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ArmorStandMetaMockTest",
                "name": "setShowArms_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ArmorStandMetaMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ArmorStandMetaMockTest",
                "name": "setSmall_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ArmorStandMetaMockTest",
                "name": "setMarker_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonMockTest",
                "name": "testGetConversionTimeConvertingFalseThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonMockTest",
                "name": "testGetSkeletonType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonMockTest",
                "name": "testInPowderedSnowTimeDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonMockTest",
                "name": "tesSetConversionTimeNegative()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonMockTest",
                "name": "testInPowderedSnowTimeNegativeValueThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonMockTest",
                "name": "testGetEntityType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonMockTest",
                "name": "testSetConverting()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonMockTest",
                "name": "testGetConversionTimeDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonMockTest",
                "name": "testIsConvertingDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonMockTest",
                "name": "testSetInPowderedSnowTime()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonMockTest",
                "name": "testSetConversionTime()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "blockDataMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "getFaces_HasCorrectValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "setPowered_Valid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "setFacing_Valid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "setHalf_NullInput_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "setHalf_Valid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "setFacing_NullInput_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "setWaterlogged_Valid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "setOpen_Valid()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "setFacing_Invalid_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.TrapDoorMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "getEntitiesInRange_OutOfRange_Empty()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "setPrimaryEffect_Sets()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "setPrimaryEffect_CorrectDuration()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "customName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "isLocked_NullLock_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "resetEffectRange()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "isLocked_EmptyLock_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "setCustomName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "getSecondaryEffect_CorrectTier_NoPrimaryEffect()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "setPrimaryEffect_CorrectAmplifier_Full_OnlyPrimary()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "setTier_Sets()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "setPrimaryEffect_CorrectAmplifier_NotFull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "setEffectRange()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "setPrimaryEffect_CorrectAmplifier_Full_Both_Same()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "isLocked_Lock_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "[1] 1, 1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "[2] 2, 2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "[3] 3, 3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "[4] 4, 4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "[5] 5, 4",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "getLock()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "getEntitiesInRange_NoEntities_Empty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "constructor_Block_NotBeacon_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "setTier_TooLow_Clamped()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "getEntitiesInRange_InRange_NotEmpty()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "getSecondaryEffect_TooLowTier_HasDifferentPrimaryEffect()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "constructor_Material_NotBeacon_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "setPrimaryEffect_CorrectAmplifier_Full_Both_Different()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "setTier_TooHigh_Clamped()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "updateTier_Tier0()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "getEffectRange_Default()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "getSecondaryEffect_CorrectTier_HasDifferentPrimaryEffect()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BeaconMockTest",
                "name": "blockStateMock_CreateMock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataTest",
                "name": "subTypeValueTest()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataTest",
                "name": "stateValueTest()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataTest",
                "name": "invalidKeyTest()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataTest",
                "name": "defaultValueTest()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataTest",
                "name": "invalidStateTest()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.DragonFireballMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "setBaseColor_Sets()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "constructor_Block()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "removePattern_RemovesCorrectPattern()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "setPattern_SetsCorrectPattern()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "constructor_Clone_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "setPatterns_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "setPatterns_ClonesList()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "blockStateMock_MockState_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "constructor_Block_NotBanner_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "numberOfPatterns_CorrectNumber()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "testSetCustomName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "constructor_Material_NotBanner_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "addPattern_AddsPattern()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "getPattern_ReturnsCorrectPattern()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BannerMockTest",
                "name": "getSnapshot_CopiesValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testSetBreedWithAdult()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testToString()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testGetEntitySubType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testGetAgeLock()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testCanBreedFalse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testCanBreed()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testSetBreedFalseWithAdult()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testSetAdultWhenBaby()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testSetAgeLock()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testGetAgeDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testSetBaby()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testSetAge()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testSetAdult()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AgeableMockTest",
                "name": "testSetBreed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkCatalystMockTest",
                "name": "constructor_Block()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkCatalystMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkCatalystMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkCatalystMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkCatalystMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SculkCatalystMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "setCookTimeTotal_GreaterThanThree_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "startStopCooking_StopsCooking()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "constructor_Copy_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "constructor_Material_NotCampfire_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "setItem_SetsItem()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "setCookTime_LessThanZero_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "setCookTimeTotal_LessThanZero_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "[1] 0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "startCooking_GreaterThanThree_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "[1] 0",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "setCookTime_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "constructor_Block_NotCampfire_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "setCookTime_GreaterThanThree_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "setCookTimeTotal_Sets()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "stopCooking_GreaterThanThree_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "stopCooking_LessThanZero_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.CampfireMockTest",
                "name": "startCooking_LessThanZero_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CoordinateTest",
                "name": "hashCode_DifferentObjectWithDifferentCoordinates_DifferentHash()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CoordinateTest",
                "name": "equals_DifferentObjectWithSameCoordinates_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CoordinateTest",
                "name": "toChunkCoordinate()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CoordinateTest",
                "name": "equals_Same_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CoordinateTest",
                "name": "equals_DifferentObjectWithDifferentCoordinates_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CoordinateTest",
                "name": "hashCode_SameObject_SameHash()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CoordinateTest",
                "name": "constructor_NoParameters_AllZeroes()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CoordinateTest",
                "name": "construct_Parameters_ValuesSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CoordinateTest",
                "name": "equals_Null_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CoordinateTest",
                "name": "toLocalCoordinate()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.CoordinateTest",
                "name": "hashCode_DifferentObjectWithSameCoordinates_SameHash()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EggMockTest",
                "name": "testSetItemNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EggMockTest",
                "name": "testGetItemDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EggMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.EggMockTest",
                "name": "testSetItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SalmonMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SalmonMockTest",
                "name": "testGetBaseBucketItem()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CaveSpiderMockTest",
                "name": "testGetType()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.LecternInventoryMockTest",
                "name": "testGetHolder()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.LecternInventoryMockTest",
                "name": "testGetSnapshot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.AsyncCatcherTest",
                "name": "catchOp_MainThread_Succeeds()",
                "time": 0.598,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.AsyncCatcherTest",
                "name": "catchOp_NotMainThread_ThrowsException()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.KnowledgeBookMetaMockTest",
                "name": "testTooManyRecipes()",
                "time": 0.112,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.KnowledgeBookMetaMockTest",
                "name": "testAddNullRecipeAndFail()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.KnowledgeBookMetaMockTest",
                "name": "testSetRecipes()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.KnowledgeBookMetaMockTest",
                "name": "testRecipesDefaultFalse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.KnowledgeBookMetaMockTest",
                "name": "testAddRecipe()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.KnowledgeBookMetaMockTest",
                "name": "testEquals()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.KnowledgeBookMetaMockTest",
                "name": "testGetRecipes()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireworkMockTest",
                "name": "testShotAtAngle()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireworkMockTest",
                "name": "testSetFireworkMetaNotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireworkMockTest",
                "name": "testSecondConstructor()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireworkMockTest",
                "name": "testSetFireworkMeta()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireworkMockTest",
                "name": "testEntitySpawning()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.FireworkMockTest",
                "name": "testEntityType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.attribute.AttributeInstanceMockTest",
                "name": "removeModifier_ModifierRemoved()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.attribute.AttributeInstanceMockTest",
                "name": "getModifiers_Constructor_EmptyList()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.attribute.AttributeInstanceMockTest",
                "name": "removeModifier_CorrectModifierRemoved()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.attribute.AttributeInstanceMockTest",
                "name": "getValues_Constructor_ExactValue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.attribute.AttributeInstanceMockTest",
                "name": "addModifier_ModifierAdded()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.attribute.AttributeInstanceMockTest",
                "name": "setValue_Constructor_ValueSetExactly()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.attribute.AttributeInstanceMockTest",
                "name": "getAttribute_Constructor_CorrectAttribute()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.DefaultTagsTest",
                "name": "testSaplings()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.DefaultTagsTest",
                "name": "testIce()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.DefaultTagsTest",
                "name": "testBoats()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.tags.DefaultTagsTest",
                "name": "testLogs()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_PersistentDataOneEmpty_False()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "new_CopyConstructor_Copied()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "setAttributeModifiers_RemovesAndAddsEntries()",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "hasDisplayName_Default_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "getLore_LoreChangedAfterSet_LoreNotChanged()",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_DamageOneWithout_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "removeAttribute_SpecificModifier_NullAttribute_ThrowsException()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "testDamageCorrectlySet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "addAttributeModifier_NullModifier_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_CustomModelDataSame_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "testSerialization()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "setLocalizedName_NewName_NameSetExactly()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "clone_WithDisplayName_ClonedExactly()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_OneWithLoreOneWithout_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_PersistentDataDifferent_False()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "testBukkitSerialization()",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "getAttributeModifiers_Slot()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_CustomModelDataDifferent_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "hasAttributeModifiers_Constructor_Empty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "setUnbreakable_False_ItemIsBreakable()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_UnbreakableSame_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "setUnbreakable_True_ItemIsUnbreakable()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_HideFlagsDifferent_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "hasLocalizedName_NoLocalizedName_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "removeAttribute_Slot_RemovesAllNoSlots()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "testHasNoLore_HasNoLore_Asserts()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "addEnchant_IgnoreLevel()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "getEnchants()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_EnchantsDifferent_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "testLore_CorrectLore_Returns()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "removeEnchant()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "getEnchantLevel()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "getAttributeModifiers_Constructor_Null()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_PersistentDataSame_True()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "addEnchant_AlreadyExist()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "getLore_LoreSet_ExactLines()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "removeAttribute_Attribute_NullThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "getAttributeModifiers_NullAttribute_ThrowException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_DifferentDisplayName_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "hasEnchants()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "hasEnchant()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_HideFlagsOneEmpty_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_UnbreakableDifferent_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "addAttributeModifier_NullAttribute_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "testCustomModelData()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_DamageSame_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "removeEnchant_NotExisting()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "setDisplayName_NewName_NameSetExactly()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "removeAttribute_SpecificModifier_Removes()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_SameWithDisplayName_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_EnchantsSame_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "setAttributeModifiers_AddsEntries()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "removeAttribute_Slot_RemovesCorrectSlot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "hasLore_NoLore_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "testNoDamage()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_SameLore_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_CustomModelDataOneWithout_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_SameWithoutDisplayName_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "testHasNoLore_HasNoLore_Returns()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_DamageDifferent_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "addAttributeModifier_Duplicate_ThrowsException()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "testRepairCost()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "removeAttribute_SpecificModifier_NullModifier_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "testRepairCostSetCorrectly()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "setAttributeModifiers_NullMap()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "hasLore_HasLore_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_DifferentSizedLore_False()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_Null_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_EnchantsDifferentLevel_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "removeAttribute_Attribute()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "testDeserialization()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "testLore_InorrectLore_Asserts()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "setDisplayName_Null_NameRemoves()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "addAttributeModifier_AddsOne()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_OneWithDisplayNameOneWithout_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_EnchantsOneEmpty_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.ItemMetaMockTest",
                "name": "equals_HideFlagsSame_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CamelMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CamelMockTest",
                "name": "testSetSitting()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CamelMockTest",
                "name": "testIsSittingDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CamelMockTest",
                "name": "testGetVariant()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CamelMockTest",
                "name": "testIsDashing()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.CamelMockTest",
                "name": "testIsDashingDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "testGetLines()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "testLineTooHigh()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "setGlowing()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "testGetLineComponent()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "testGetLineComponentNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "setColor_Null_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "testLineNegative()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "setColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "testSetLineComponent()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "testSetLine()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "testLineNotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SignMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonHorseMockTest",
                "name": "testSetTrapTime()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonHorseMockTest",
                "name": "testGetTrappedDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonHorseMockTest",
                "name": "testIsTrapDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonHorseMockTest",
                "name": "testVariant()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonHorseMockTest",
                "name": "testSetTrapped()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonHorseMockTest",
                "name": "testSetTrap()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SkeletonHorseMockTest",
                "name": "testGetTrapTimeDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.statistic.StatisticsTest",
                "name": "testGet()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.statistic.StatisticsTest",
                "name": "testNegativeDecrement()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.statistic.StatisticsTest",
                "name": "testTyped()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.statistic.StatisticsTest",
                "name": "testType()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.statistic.StatisticsTest",
                "name": "testIncrement()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.statistic.StatisticsTest",
                "name": "testNegativeSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.statistic.StatisticsTest",
                "name": "testNegativeIncrement()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.statistic.StatisticsTest",
                "name": "testDecrement()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.statistic.StatisticsTest",
                "name": "testDefaults()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testRemoveDisabledSlots()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetItemNullSetsAir()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testBodyPose()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetHelmetDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetItemHand()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetChestPlate()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetItemNulLThrows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testAddDisabledSlots()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetItemOffHand()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetLeggingsDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetItemInHandDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetItemMainHand()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetLeggings()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSmall()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testBasePlate()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetDisabledSlotsNullThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testArms()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetItemBoots()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetDisabledSlotsDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetItemHelmet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetChestPlate()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testRightArm()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testRightLeg()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetItemNulLThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetItemLeggings()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testHeadPose()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testLeftArm()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testLeftLeg()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetItemHelmet()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetItemInHand()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetDisabledSlots()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testIsSlotDisabled()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testVisible()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetItemChestplate()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetItemOffHand()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testIsSlotDisabledNullThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetItemBoots()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetItemLeggings()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testEntitySpawning()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetHelmet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testHasEquipment()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetItemChestplate()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testRemoveDisabledSlotsNullThrows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testAddDisabledSlotsNullThrows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testMarker()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testGetBootsDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testEntityType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ArmorStandMockTest",
                "name": "testSetBoots()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BedMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BedMockTest",
                "name": "blockStateMock_mockState_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BedMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BedMockTest",
                "name": "getColor_ReturnCorrectColor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BedMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BedMockTest",
                "name": "setColor_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BedMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BedMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlockStateMockTest",
                "name": "testUpdateForce()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlockStateMockTest",
                "name": "getBlockNotPlacedException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlockStateMockTest",
                "name": "getBlockNotPlaced()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlockStateMockTest",
                "name": "testUpdateForceChangesType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlockStateMockTest",
                "name": "testUpdateWrongType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlockStateMockTest",
                "name": "testPlaced()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.BlockStateMockTest",
                "name": "testUpdateNotPlacedReturnsTrue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkEffectMetaMockTest",
                "name": "testClone()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkEffectMetaMockTest",
                "name": "testEffectDefaultNone()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.FireworkEffectMetaMockTest",
                "name": "testSetEffect()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.DonkeyMockTest",
                "name": "testVariant()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TadpoleMockTest",
                "name": "testGetPickupSound()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TadpoleMockTest",
                "name": "testSetAgeToBig()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TadpoleMockTest",
                "name": "testSetAgeToBigWithPreviousValue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TadpoleMockTest",
                "name": "testGetBaseBucketItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TadpoleMockTest",
                "name": "testGetAge()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.TadpoleMockTest",
                "name": "testSetAge()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[1] DROPPED_ITEM",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[2] EXPERIENCE_ORB",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[3] AREA_EFFECT_CLOUD",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[4] ELDER_GUARDIAN",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[5] WITHER_SKELETON",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[6] STRAY",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[7] EGG",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[8] LEASH_HITCH",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[9] PAINTING",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[10] ARROW",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[11] SNOWBALL",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[12] FIREBALL",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[13] SMALL_FIREBALL",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[14] ENDER_PEARL",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[15] ENDER_SIGNAL",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[16] SPLASH_POTION",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[17] THROWN_EXP_BOTTLE",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[18] ITEM_FRAME",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[19] WITHER_SKULL",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[20] PRIMED_TNT",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[21] FALLING_BLOCK",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[22] FIREWORK",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[23] HUSK",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[24] SPECTRAL_ARROW",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[25] SHULKER_BULLET",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[26] DRAGON_FIREBALL",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[27] ZOMBIE_VILLAGER",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[28] SKELETON_HORSE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[29] ZOMBIE_HORSE",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[30] ARMOR_STAND",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[31] DONKEY",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[32] MULE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[33] EVOKER_FANGS",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[34] EVOKER",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[35] VEX",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[36] VINDICATOR",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[37] ILLUSIONER",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[38] MINECART_COMMAND",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[39] BOAT",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[40] MINECART",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[41] MINECART_CHEST",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[42] MINECART_FURNACE",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[43] MINECART_TNT",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[44] MINECART_HOPPER",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[45] MINECART_MOB_SPAWNER",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[46] CREEPER",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[47] SKELETON",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[48] SPIDER",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[49] GIANT",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[50] ZOMBIE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[51] SLIME",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[52] GHAST",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[53] ZOMBIFIED_PIGLIN",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[54] ENDERMAN",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[55] CAVE_SPIDER",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[56] SILVERFISH",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[57] BLAZE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[58] MAGMA_CUBE",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[59] ENDER_DRAGON",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[60] WITHER",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[61] BAT",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[62] WITCH",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[63] ENDERMITE",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[64] GUARDIAN",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[65] SHULKER",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[66] PIG",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[67] SHEEP",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[68] COW",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[69] CHICKEN",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[70] SQUID",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[71] WOLF",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[72] MUSHROOM_COW",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[73] SNOWMAN",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[74] OCELOT",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[75] IRON_GOLEM",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[76] HORSE",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[77] RABBIT",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[78] POLAR_BEAR",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[79] LLAMA",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[80] LLAMA_SPIT",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[81] PARROT",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[82] VILLAGER",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[83] ENDER_CRYSTAL",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[84] TURTLE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[85] PHANTOM",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[86] TRIDENT",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[87] COD",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[88] SALMON",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[89] PUFFERFISH",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[90] TROPICAL_FISH",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[91] DROWNED",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[92] DOLPHIN",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[93] CAT",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[94] PANDA",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[95] PILLAGER",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[96] RAVAGER",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[97] TRADER_LLAMA",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[98] WANDERING_TRADER",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[99] FOX",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[100] BEE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[101] HOGLIN",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[102] PIGLIN",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[103] STRIDER",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[104] ZOGLIN",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[105] PIGLIN_BRUTE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[106] AXOLOTL",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[107] GLOW_ITEM_FRAME",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[108] GLOW_SQUID",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[109] GOAT",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[110] MARKER",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[111] ALLAY",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[112] CHEST_BOAT",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[113] FROG",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[114] TADPOLE",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[115] WARDEN",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[116] CAMEL",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[117] BLOCK_DISPLAY",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[118] INTERACTION",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[119] ITEM_DISPLAY",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[120] SNIFFER",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[121] TEXT_DISPLAY",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[122] FISHING_HOOK",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[123] LIGHTNING",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[124] PLAYER",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.data.EntityDataRegistryTest",
                "name": "[125] UNKNOWN",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PufferFishMockTest",
                "name": "testSetPuffState()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PufferFishMockTest",
                "name": "testSetPuffStateToBig()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PufferFishMockTest",
                "name": "testGetEntityState()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PufferFishMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PufferFishMockTest",
                "name": "testGetBaseBucketItem()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PufferFishMockTest",
                "name": "testGetPuffStateDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.PufferFishMockTest",
                "name": "testSetPuffStateToSmall()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.ZombieHorseMockTest",
                "name": "testVariant()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "assertTrueForAll_ChecksIfNullOnEmptyInventory_DoesNotAssert()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "assertTrueForSome_OneItemMeetsCondition_DoesNotAssert()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "assertTrueForAll_ChecksIfNullOnNonEmptyInventory_Asserts()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "closeInventoryRemoveViewer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testContainsItemStack()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testFirst_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "constructor_SetsSizeTooSmall()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "assertContainsAny_ContainsThem_DoesNotAssert()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "removeItem_ShouldOnlyRemoveTheCorrectAmount()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testClose()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testContainsMaterial()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "constructor_SetsSizeTwoParamConstructor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "addItem_EmptyInventoryAddsOneStack_OneStackUsed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testFirstEmpty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testContainsAtLeast()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testAddMultipleViewersListWithNullEntries()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testContainsMaterialFalse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testAddMultipleViewersVarargsWithNullEntries()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testClearSlot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testContainsItemStackFalse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testClearInventory()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testOpenInventoryAddViewers()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "iterator_SeveralItems_IteratorsOverItems()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "assertContainsAtLeast_ContainsMore_DoesNotAssert()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "setContents_OneItemAndOneNull_SetAndRestCleared()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "assertContainsAtLeast_DoesNotContainEnough_Asserts()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testRemoveViewer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "assertTrueForSome_NoItemsMeetCondition_Asserts()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testRemove_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "constructor_SetsSizeTooBig()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "addItem_MultipleItems_ItemsAddedCorrectly()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testAll_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "assertContainsAny_DoesNotContainThem_Asserts()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "assertContainsAtLeast_ContainsExactly_DoesNotAssert()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testRemove_ItemStack()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testFirst_ItemStack()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testContentsAndStorageContentsEqual()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testContainsItemStackAmount()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testAddViewer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "assertTrueForNonNulls_NumberOfExecutionsOnInventoryOneItem_EqualToOne()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "addItem_setMaxStackSize_PartiallyFilled_AddsOneStack_HalfAdded()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "addItem_setMaxStackSize_EmptyInventoryAddsOneStack_OneStackUsed()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "removeItem_WhenInExcessive()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testContainsAtLeastExtra()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testContainsAtLeastFalse()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testAddMultipleViewersList()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "setContents_ArrayWithNulls_NullsIgnores()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testContainsMaterialAmount()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "constructor_SetsSize()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "constructor_SetsType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "addItem_FullInventoryAddsOneStack_NothingAdded()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testNullViewerThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testGetViewersDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testAddMultipleViewersVarargs()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "getItem_Default_AllNull()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "removeItem_ShouldOnlyRemoveSimilarItems()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "getMaxStackSize_ReturnsExpected()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "constructor_SetsSizeTooNotDivisibleByNine()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "addItem_PartiallyFilled_AddsOneStack_HalfAdded()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.InventoryMockTest",
                "name": "testAll_ItemStack()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.metadata.MetadataTableTest",
                "name": "removeMetadata_MultipleSet_OneRemoved()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.metadata.MetadataTableTest",
                "name": "removeMetadata_NoneSet_NothingHappens()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.metadata.MetadataTableTest",
                "name": "getMetadata_MultipleMetaDataSetByMultiplePlugins_TwoMetadataValuesFound()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.metadata.MetadataTableTest",
                "name": "setMetadata_MetadataSet()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.metadata.MetadataTableTest",
                "name": "getMetadata_NoneSet_EmptyList()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.PotionMetaMockTest",
                "name": "testPotionData()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.PotionMetaMockTest",
                "name": "testClone()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.PotionMetaMockTest",
                "name": "testColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.PotionMetaMockTest",
                "name": "testClearEffects()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.PotionMetaMockTest",
                "name": "testRemoveEffect()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.PotionMetaMockTest",
                "name": "testAddEffect()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.PotionMetaMockTest",
                "name": "testEquals()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.PotionMetaMockTest",
                "name": "testEffectsDefaultEmpty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.PotionMetaMockTest",
                "name": "testOverrideEffect()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ConduitMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ConduitMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ConduitMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ConduitMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ConduitMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ConduitMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.AmbientMockTest",
                "name": "testToString()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WitherSkeletonMockTest",
                "name": "testGetSkeletonType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BedMockTest",
                "name": "blockDataMock_Mock_CorrectType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BedMockTest",
                "name": "setFacing_Valid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BedMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BedMockTest",
                "name": "setFacing_Invalid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BedMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BedMockTest",
                "name": "getAsString()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BedMockTest",
                "name": "getFaces()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BedMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BedMockTest",
                "name": "getFacing_Immutable()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.BedMockTest",
                "name": "testSetOccupied()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SmokerMockTest",
                "name": "constructor_Block()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SmokerMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SmokerMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SmokerMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SmokerMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.SmokerMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.AmethystClusterMockTest",
                "name": "blockDataMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.AmethystClusterMockTest",
                "name": "getFacing_ImmutableSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.AmethystClusterMockTest",
                "name": "setFacing_Valid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.AmethystClusterMockTest",
                "name": "constructor_Material()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.AmethystClusterMockTest",
                "name": "setFacing_Invalid()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.AmethystClusterMockTest",
                "name": "constructor_DefaultValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.AmethystClusterMockTest",
                "name": "getAsString()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.AmethystClusterMockTest",
                "name": "getFaces()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.data.AmethystClusterMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.potion.MockPotionEffectTypeTest",
                "name": "getAttributeModifierAmount_NegativeAmplifier_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.potion.MockPotionEffectTypeTest",
                "name": "getAttributeModifierAmount_NonExistentAttribute_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.potion.MockPotionEffectTypeTest",
                "name": "getEffectAttributes_Immutable()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.potion.MockPotionEffectTypeTest",
                "name": "testEquals_DifferentId()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.potion.MockPotionEffectTypeTest",
                "name": "addAttributeModifier_Adds()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.potion.MockPotionEffectTypeTest",
                "name": "testEquals_DifferentType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.potion.MockPotionEffectTypeTest",
                "name": "testHashcode()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.potion.MockPotionEffectTypeTest",
                "name": "testEquals()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.potion.MockPotionEffectTypeTest",
                "name": "getAttributeModifierAmount()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.potion.MockPotionEffectTypeTest",
                "name": "testGetDurationModifier()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.potion.MockPotionEffectTypeTest",
                "name": "constructorValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "allowFriendlyFire()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "unregister_FirstUnregister_Works()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "removeEntity()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "removePlayer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "getNameTagVisibility()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "getEntries()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "hasPlayer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "removeEntry()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "getName()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "getSize()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "hasEntry()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "setOption()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "getPlayers()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "removeEntities()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "unregister_UnregisteredTwice_ThrowsException()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "getPrefix()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "getColor_IsFormat()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "getSuffix()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "canSeeFriendlyInvisibles()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "getDisplayName()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "getScoreboard()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "nullComponents()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.scoreboard.TeamMockTest",
                "name": "getColor_IsColor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GoatMockTest",
                "name": "testSetScreaming()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GoatMockTest",
                "name": "testRam()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GoatMockTest",
                "name": "testSetLeftHorn()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GoatMockTest",
                "name": "testIsScreamingDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GoatMockTest",
                "name": "testHasLeftHornDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GoatMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GoatMockTest",
                "name": "testRamNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GoatMockTest",
                "name": "testSetRightHorn()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GoatMockTest",
                "name": "testAssertEntityRammedWithNotRammedEntity()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GoatMockTest",
                "name": "testHasRightHornDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.BarrelInventoryMockTest",
                "name": "testGetSnapshot()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ChestMockTest",
                "name": "constructor_Block()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ChestMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ChestMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ChestMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ChestMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.ChestMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.EnchantmentTests",
                "name": "testEnchantmentsRegisterTwiceDoesNotThrow()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.EnchantmentTests",
                "name": "testEnchantmentValuesContainsEnchantment()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapCanvasMockTest",
                "name": "getMapView_Constructor_NotNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapCanvasMockTest",
                "name": "drawText()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapCanvasMockTest",
                "name": "getMapView_Constructor_Null()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapCanvasMockTest",
                "name": "drawImage()",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapCanvasMockTest",
                "name": "getPixel_Constructor_NegativeOne()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.map.MapCanvasMockTest",
                "name": "setPixel_SetsPixel()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.ChestInventoryMockTest",
                "name": "testGetSnapshot()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testSetHasPlayerLootedLootedFalse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testGetLastFilled()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testGetLastLooted()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testIsRefillEnabledDefault()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testGetNextRefill()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testHasPlayerLootedDefault()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testHasPlayerLooted()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testHasPendingRefill()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testSetHasPlayerLootedTwiceSameValue()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testSetRefillEnabled()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testGetLastLootedMapNull()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testHasBeenFilledDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.LootableMinecartMockTest",
                "name": "testSetHasBeenFilled()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.generator.BiomeProviderMockTest",
                "name": "getBiomes()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.generator.BiomeProviderMockTest",
                "name": "getBiome()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.BlazeMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JigsawMockTest",
                "name": "constructor_Block()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JigsawMockTest",
                "name": "constructor_Material()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JigsawMockTest",
                "name": "blockStateMock_Mock_CorrectType()",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JigsawMockTest",
                "name": "constructor_Block_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JigsawMockTest",
                "name": "getSnapshot_DifferentInstance()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.block.state.JigsawMockTest",
                "name": "constructor_Material_WrongType_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SheepMockTest",
                "name": "shear_DropsAtLeastOneItem()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SheepMockTest",
                "name": "testGetSheared()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SheepMockTest",
                "name": "testGetColor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SheepMockTest",
                "name": "readyToBeSheared_Sheared_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SheepMockTest",
                "name": "shear_SoundPlayed()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SheepMockTest",
                "name": "readyToBeSheared_Dead_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SheepMockTest",
                "name": "testSetSheared()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SheepMockTest",
                "name": "readyToBeSheared()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SheepMockTest",
                "name": "shear_SetsSheared()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SheepMockTest",
                "name": "readyToBeSheared_Baby_False()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.SheepMockTest",
                "name": "testSetColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.HorseInventoryMockTest",
                "name": "setArmor_SetsItemInSlot()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.HorseInventoryMockTest",
                "name": "setArmor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.HorseInventoryMockTest",
                "name": "getSize_Default_2()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "equals_DifferentObjects_SameValues_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "clone_CopiesValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "equals_DifferentObjects_DifferentValues_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "checkVars_CorrectDefaults()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "setPattern_SetsPattern()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "getBodyColor_NullVariant_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "setPatternColor_SetsPatternColor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "setBodyColor_SetsBodyColor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "getPatternColor_NullVariant_ThrowsException()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "hasVariant_AnyValueSet_True()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "equals_SameInstance_True()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "hasVariant_Constructor_False()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "getPattern_NullVariant_ThrowsException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.inventory.meta.TropicalFishBucketMetaMockTest",
                "name": "cloneConstructor_CopiesValues()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WardenMockTest",
                "name": "testSetAngerBiggerThan150Throws()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WardenMockTest",
                "name": "testIncreaseAngerThrowsWithUnknownEntityAndToBigValue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WardenMockTest",
                "name": "testIncreaseAngerThrowsWithKnownEntityAndToBigAddedValue()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WardenMockTest",
                "name": "testGetAngerDefault()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WardenMockTest",
                "name": "testIncreaseAngerWithKnownEntity()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WardenMockTest",
                "name": "testSetAngerNullEntityThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WardenMockTest",
                "name": "testIncreaseAngerWithUnknownPlayer()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WardenMockTest",
                "name": "testGetAngerNullEntityThrows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WardenMockTest",
                "name": "testIncreaseAngerThrowsNullEntity()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.WardenMockTest",
                "name": "testSetAnger()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "be.seeseemelk.mockbukkit.entity.GiantMockTest",
                "name": "testGetType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build] \ud83d\ude80  Start image=crawlergpt:latest\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit] user=0 workdir=\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2601  git clone 'https://github.com/gradle/wrapper-validation-action' # ref=v1\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v3\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2601  git clone 'https://github.com/DamianReeves/write-file-action' # ref=v1.2\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build] \u2b50 Run Main actions/checkout@v3\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2705  Success - Main actions/checkout@v3\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build] \u2b50 Run Main Validate gradle wrapper\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/b0612b67-be07-4005-8410-b209fd30341a/act/gradle-wrapper-validation-action@v1/ dst=/var/run/act/actions/gradle-wrapper-validation-action@v1/\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/gradle-wrapper-validation-action@v1/] user=0 workdir=\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/gradle-wrapper-validation-action@v1/dist/index.js] user= workdir=\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \u2713 Found known Gradle Wrapper JAR files:\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |   c5a643cf80162e665cc228f7b16f343fef868e47d3a4836f62e18b7e17ac018a extra/TestPlugin/gradle/wrapper/gradle-wrapper.jar\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |   ed2c26eba7cfb93cc2b7785d05e534f07b5b48b5e7fc941921cd098628abca58 gradle/wrapper/gradle-wrapper.jar\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2705  Success - Main Validate gradle wrapper\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build] \u2b50 Run Main Set up JDK 17\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/b0612b67-be07-4005-8410-b209fd30341a/act/actions-setup-java@v3/ dst=/var/run/act/actions/actions-setup-java@v3/\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v3/] user=0 workdir=\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/setup/index.js] user= workdir=\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2753  ::group::Installed distributions\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Trying to resolve the latest version from remote\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Resolved latest version as 17.0.7+7\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Trying to download...\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Downloading Java 17.0.7+7 (Temurin-Hotspot) from https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.7%2B7/OpenJDK17U-jdk_x64_linux_hotspot_17.0.7_7.tar.gz ...\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Downloading https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.7%252B7/OpenJDK17U-jdk_x64_linux_hotspot_17.0.7_7.tar.gz\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Destination /tmp/ccf5b662-5307-4d44-9486-a8a633b65a21\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::download complete\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Extracting Java archive...\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Checking tar --version\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/bf162cf6-fdac-41e4-a4bc-159ecdd80161 -f /tmp/ccf5b662-5307-4d44-9486-a8a633b65a21\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Caching tool Java_Temurin-Hotspot_jdk 17.0.7-7 x64\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::source dir: /tmp/bf162cf6-fdac-41e4-a4bc-159ecdd80161/jdk-17.0.7+7\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.7-7/x64\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::finished caching tool\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Java 17.0.7+7 was downloaded\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Setting Java 17.0.7+7 as the default\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Creating toolchains.xml for JDK version 17 from temurin\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Writing to /home/runneradmin/.m2/toolchains.xml\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Java configuration:\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |   Distribution: temurin\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |   Version: 17.0.7+7\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |   Path: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.7-7/x64\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2753  ::endgroup::\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v3/.github/java.json\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Creating settings.xml with server-id: github\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Writing to /home/runneradmin/.m2/settings.xml\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2705  Success - Main Set up JDK 17\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.7-7/x64\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2699  ::set-env:: JAVA_HOME_17_X64=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.7-7/x64\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2699  ::set-output:: distribution=Temurin-Hotspot\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.7-7/x64\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2699  ::set-output:: version=17.0.7+7\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.7-7/x64/bin\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build] \u2b50 Run Main Restore caches\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/b0612b67-be07-4005-8410-b209fd30341a/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Resolved Keys:\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::[\"Linux-gradle-1bfe7544dfd76b4af66cfad424461e5c3c5558ad9e12ca3f923ec4883bc8463b\",\"Linux-gradle-1bfe7544dfd76b4af66cfad424461e5c3c5558ad9e12ca3f923ec4883bc8463b\",\"Linux-gradle-\"]\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::1.5.0\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:36795/_apis/artifactcache/cache?keys=Linux-gradle-1bfe7544dfd76b4af66cfad424461e5c3c5558ad9e12ca3f923ec4883bc8463b%252CLinux-gradle-1bfe7544dfd76b4af66cfad424461e5c3c5558ad9e12ca3f923ec4883bc8463b%252CLinux-gradle-&version=569019faed09f5f63af8a1ab2f5e0433d94f66e572509c03e0e3df35d24400c7\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Cache not found for input keys: Linux-gradle-1bfe7544dfd76b4af66cfad424461e5c3c5558ad9e12ca3f923ec4883bc8463b, Linux-gradle-1bfe7544dfd76b4af66cfad424461e5c3c5558ad9e12ca3f923ec4883bc8463b, Linux-gradle-\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2705  Success - Main Restore caches\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build] \u2b50 Run Main Grant execute permission for gradlew\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2705  Success - Main Grant execute permission for gradlew\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build] \u2b50 Run Main Build with Gradle\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Downloading https://services.gradle.org/distributions/gradle-8.1.1-all.zip\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | ................10%................20%................30%................40%................50%................60%................70%................80%................90%................100%\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Welcome to Gradle 8.1.1!\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Here are the highlights of this release:\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |  - Stable configuration cache\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |  - Experimental Kotlin DSL assignment syntax\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |  - Building with Java 20\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | For more details see https://docs.gradle.org/8.1.1/release-notes.html\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :blossomSourceReplacementJava\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :compileJava\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/ServerMock.java:1769: warning: [removal] createVanillaChunkData(World,int,int) in Server has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull ChunkData createVanillaChunkData(@NotNull World world, int x, int z)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                          ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/ServerMock.java:1191: warning: [removal] getDataPackManager() in Server has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull DataPackManager getDataPackManager()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/ServerMock.java:1191: warning: [removal] DataPackManager in org.bukkit.packs has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull DataPackManager getDataPackManager()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/ServerMock.java:2215: warning: [removal] legacyComponentSerializer() in MockUnsafeValues has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\treturn unsafe.legacyComponentSerializer().serialize(NO_PERMISSION);\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t             ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/MockUnsafeValues.java:241: warning: [removal] isSupportedApiVersion(String) in UnsafeValues has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic boolean isSupportedApiVersion(String apiVersion)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t               ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/MockUnsafeValues.java:86: warning: [removal] legacyComponentSerializer() in UnsafeValues has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull LegacyComponentSerializer legacyComponentSerializer()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                          ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/MockUnsafeValues.java:79: warning: [removal] colorDownsamplingGsonComponentSerializer() in UnsafeValues has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull GsonComponentSerializer colorDownsamplingGsonComponentSerializer()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/MockUnsafeValues.java:72: warning: [removal] gsonComponentSerializer() in UnsafeValues has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull GsonComponentSerializer gsonComponentSerializer()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/MockUnsafeValues.java:65: warning: [removal] plainTextSerializer() in UnsafeValues has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull PlainTextComponentSerializer plainTextSerializer()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                             ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/MockUnsafeValues.java:58: warning: [removal] plainComponentSerializer() in UnsafeValues has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull PlainComponentSerializer plainComponentSerializer()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                         ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/plugin/PluginManagerMock.java:652: warning: [removal] registerInterface(Class<? extends PluginLoader>) in PluginManager has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic void registerInterface(@NotNull Class<? extends PluginLoader> loader) throws IllegalArgumentException\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t            ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/plugin/PluginManagerMock.java:652: warning: [removal] PluginLoader in org.bukkit.plugin has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic void registerInterface(@NotNull Class<? extends PluginLoader> loader) throws IllegalArgumentException\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                                       ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/plugin/PluginManagerMock.java:754: warning: [removal] getPluginLoader() in Plugin has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tfor (Map.Entry<Class<? extends Event>, Set<RegisteredListener>> entry : plugin.getPluginLoader().createRegisteredListeners(listener, plugin).entrySet())\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t                                                                              ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/plugin/PluginManagerMock.java:786: warning: [removal] getPluginLoader() in Plugin has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t\t\tfor (Map.Entry<Class<? extends Event>, Set<RegisteredListener>> entry : plugin.getPluginLoader().createRegisteredListeners(l, plugin).entrySet())\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t\t\t                                                                              ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/plugin/PluginManagerMock.java:868: warning: [removal] getPluginLoader() in Plugin has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tplugin.getPluginLoader().disablePlugin(plugin);\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t      ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/LivingEntityMock.java:342: warning: [removal] getTargetEntityInfo(int,boolean) in LivingEntity has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable TargetEntityInfo getTargetEntityInfo(int maxDistance, boolean ignoreBlocks)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                  ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/LivingEntityMock.java:328: warning: [removal] getTargetBlockInfo(int,FluidMode) in LivingEntity has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable TargetBlockInfo getTargetBlockInfo(int maxDistance, TargetBlockInfo.@NotNull FluidMode fluidMode)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                 ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/LivingEntityMock.java:321: warning: [removal] getTargetBlockFace(int,FluidMode) in LivingEntity has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable BlockFace getTargetBlockFace(int maxDistance, TargetBlockInfo.@NotNull FluidMode fluidMode)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                           ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/LivingEntityMock.java:314: warning: [removal] getTargetBlock(int,FluidMode) in LivingEntity has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable Block getTargetBlock(int maxDistance, TargetBlockInfo.@NotNull FluidMode fluidMode)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                       ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/LivingEntityMock.java:314: warning: [removal] TargetBlockInfo in com.destroystokyo.paper.block has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable Block getTargetBlock(int maxDistance, TargetBlockInfo.@NotNull FluidMode fluidMode)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                                       ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/LivingEntityMock.java:314: warning: [removal] FluidMode in TargetBlockInfo has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable Block getTargetBlock(int maxDistance, TargetBlockInfo.@NotNull FluidMode fluidMode)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                                                      ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/LivingEntityMock.java:321: warning: [removal] TargetBlockInfo in com.destroystokyo.paper.block has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable BlockFace getTargetBlockFace(int maxDistance, TargetBlockInfo.@NotNull FluidMode fluidMode)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                                               ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/LivingEntityMock.java:321: warning: [removal] FluidMode in TargetBlockInfo has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable BlockFace getTargetBlockFace(int maxDistance, TargetBlockInfo.@NotNull FluidMode fluidMode)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                                                              ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/LivingEntityMock.java:328: warning: [removal] TargetBlockInfo in com.destroystokyo.paper.block has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable TargetBlockInfo getTargetBlockInfo(int maxDistance, TargetBlockInfo.@NotNull FluidMode fluidMode)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                 ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/LivingEntityMock.java:328: warning: [removal] TargetBlockInfo in com.destroystokyo.paper.block has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable TargetBlockInfo getTargetBlockInfo(int maxDistance, TargetBlockInfo.@NotNull FluidMode fluidMode)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                                                     ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/LivingEntityMock.java:328: warning: [removal] FluidMode in TargetBlockInfo has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable TargetBlockInfo getTargetBlockInfo(int maxDistance, TargetBlockInfo.@NotNull FluidMode fluidMode)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                                                                    ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/LivingEntityMock.java:342: warning: [removal] TargetEntityInfo in com.destroystokyo.paper.entity has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable TargetEntityInfo getTargetEntityInfo(int maxDistance, boolean ignoreBlocks)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                 ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/WorldMock.java:2401: warning: [removal] doesRespawnAnchorWork() in World has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic boolean doesRespawnAnchorWork()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t               ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/WorldMock.java:2393: warning: [removal] doesBedWork() in World has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic boolean doesBedWork()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t               ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/WorldMock.java:2385: warning: [removal] hasBedrockCeiling() in World has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic boolean hasBedrockCeiling()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t               ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/WorldMock.java:2377: warning: [removal] hasSkylight() in World has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic boolean hasSkylight()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t               ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/WorldMock.java:2362: warning: [removal] isUltrawarm() in World has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic boolean isUltrawarm()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t               ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/WorldMock.java:682: warning: [removal] getHighestBlockYAt(int,int,HeightmapType) in World has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic int getHighestBlockYAt(int x, int z, @NotNull HeightmapType heightmap) throws UnsupportedOperationException\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t           ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/WorldMock.java:682: warning: [removal] HeightmapType in com.destroystokyo.paper has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic int getHighestBlockYAt(int x, int z, @NotNull HeightmapType heightmap) throws UnsupportedOperationException\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                                     ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/profile/PlayerProfileMock.java:100: warning: [removal] setId(UUID) in PlayerProfile has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @Nullable UUID setId(@Nullable UUID uuid)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                      ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/profile/PlayerProfileMock.java:86: warning: [removal] setName(String) in PlayerProfile has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull String setName(@Nullable String name)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                       ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/block/BlockMock.java:442: warning: [removal] getTranslationKey() in Block has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull String getTranslationKey()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                       ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/block/BlockMock.java:427: warning: [removal] getSoundGroup() in Block has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull BlockSoundGroup getSoundGroup()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/block/BlockMock.java:442: warning: [removal] getTranslationKey() in Translatable has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull String getTranslationKey()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                       ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/block/BlockMock.java:427: warning: [removal] BlockSoundGroup in com.destroystokyo.paper.block has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic @NotNull BlockSoundGroup getSoundGroup()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/MockPlugin.java:31: warning: [removal] JavaPluginLoader in org.bukkit.plugin.java has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tprotected MockPlugin(@NotNull JavaPluginLoader loader, @NotNull PluginDescriptionFile description, @NotNull File dataFolder, @NotNull File file)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                              ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/MockPlugin.java:33: warning: [removal] JavaPlugin(JavaPluginLoader,PluginDescriptionFile,File,File) in JavaPlugin has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tsuper(loader, description, dataFolder, file);\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/plugin/MockBukkitPluginLoader.java:23: warning: [removal] PluginLoader in org.bukkit.plugin has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class MockBukkitPluginLoader implements PluginLoader\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |                                                ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/plugin/MockBukkitPluginLoader.java:53: warning: [removal] JavaPluginLoader in org.bukkit.plugin.java has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\treturn new JavaPluginLoader(plugin.getServer()).createRegisteredListeners(listener, plugin);\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t           ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/inventory/meta/SpawnEggMetaMock.java:42: warning: [removal] setSpawnedType(EntityType) in SpawnEggMeta has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic void setSpawnedType(EntityType type)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t            ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/inventory/meta/SpawnEggMetaMock.java:36: warning: [removal] getSpawnedType() in SpawnEggMeta has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic EntityType getSpawnedType()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                  ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/AbstractProjectileMock.java:38: warning: [removal] setBounce(boolean) in Projectile has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic void setBounce(boolean doesBounce)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t            ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/AbstractProjectileMock.java:31: warning: [removal] doesBounce() in Projectile has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic boolean doesBounce()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t               ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/ProjectileMock.java:19: warning: [removal] setBounce(boolean) in Projectile has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public abstract class ProjectileMock extends AbstractProjectileMock implements Projectile\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |                 ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/ProjectileMock.java:19: warning: [removal] doesBounce() in Projectile has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public abstract class ProjectileMock extends AbstractProjectileMock implements Projectile\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |                 ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/FireworkMock.java:112: warning: [removal] getMaxLife() in Firework has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic int getMaxLife()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t           ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/FireworkMock.java:104: warning: [removal] setMaxLife(int) in Firework has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic boolean setMaxLife(int ticks)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t               ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/FireworkMock.java:96: warning: [removal] getLife() in Firework has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic int getLife()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t           ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/FireworkMock.java:88: warning: [removal] setLife(int) in Firework has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic boolean setLife(int ticks)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t               ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/HopperMinecartMock.java:59: warning: [removal] setPickupCooldown(int) in HopperMinecart has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic void setPickupCooldown(int cooldown)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t            ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/entity/HopperMinecartMock.java:52: warning: [removal] getPickupCooldown() in HopperMinecart has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic int getPickupCooldown()\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t           ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/build/sources/java/be/seeseemelk/mockbukkit/block/state/BedMock.java:80: warning: [removal] setColor(DyeColor) in Bed has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic void setColor(DyeColor color)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t            ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Note: Some input files use or override a deprecated API.\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Note: Recompile with -Xlint:deprecation for details.\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | 57 warnings\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :processResources\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :classes\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :jar\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :javadoc\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/AbstractSkeletonMock.java:116: warning: no @param for entity\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic void assertAgressiveAttack(LivingEntity entity, float charge)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t            ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/AbstractSkeletonMock.java:116: warning: no @param for charge\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic void assertAgressiveAttack(LivingEntity entity, float charge)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t            ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/util/AdventureConverters.java:6: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class AdventureConverters\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/util/AdventureConverters.java:14: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic static SoundCategory soundSourceToCategory(Sound.Source source)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                            ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/CamelMock.java:11: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class CamelMock extends AbstractHorseMock implements Camel\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/CommandMinecartMock.java:14: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class CommandMinecartMock extends MinecartMock implements CommandMinecart\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/data/EntityData.java:11: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class EntityData\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/data/EntityData.java:15: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic static final String HEIGHT = \"height\";\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                           ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/data/EntityData.java:14: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic static final String WIDTH = \"width\";\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                           ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/data/EntityDataRegistry.java:15: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class EntityDataRegistry\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/EntityMock.java:80: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tprotected final @NotNull ServerMock server;\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                    ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/ExplosiveMinecartMock.java:14: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class ExplosiveMinecartMock extends MinecartMock implements ExplosiveMinecart\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/HopperMinecartMock.java:21: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class HopperMinecartMock extends LootableMinecart implements HopperMinecart\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/LootableMinecart.java:17: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public abstract class LootableMinecart extends MinecartMock implements LootableInventory\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |                 ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/LootableMinecart.java:42: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic void setRefillEnabled(boolean refillEnabled)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t            ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/plugin/MockBukkitConfiguredPluginClassLoader.java:24: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class MockBukkitConfiguredPluginClassLoader extends ClassLoader implements ConfiguredPluginClassLoader\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/plugin/MockBukkitConfiguredPluginClassLoader.java:34: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic MockBukkitConfiguredPluginClassLoader(\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t       ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/plugin/MockBukkitConfiguredPluginClassLoader.java:96: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic Class<? extends JavaPlugin> loadProxyClass(Class<? extends JavaPlugin> target)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                   ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/plugin/MockBukkitConfiguredPluginClassLoader.java:47: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic void setJarFile(JarFile jarFile)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t            ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/plugin/MockBukkitPluginClassLoaderGroup.java:11: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class MockBukkitPluginClassLoaderGroup implements PluginClassLoaderGroup\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/plugin/MockBukkitPluginLoader.java:23: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class MockBukkitPluginLoader implements PluginLoader\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/PermissionManagerMock.java:12: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class PermissionManagerMock implements PermissionManager\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/RideableMinecartMock.java:11: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class RideableMinecartMock extends MinecartMock implements RideableMinecart\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/SpawnerMinecartMock.java:11: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class SpawnerMinecartMock extends MinecartMock implements SpawnerMinecart\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/main/java/be/seeseemelk/mockbukkit/entity/StorageMinecartMock.java:13: warning: no comment\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | public class StorageMinecartMock extends LootableMinecart implements StorageMinecart\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   |        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | 25 warnings\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :javadocJar\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :sourcesJar\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :assemble\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :jacocoTestReport SKIPPED\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :check\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :build\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:compileJava\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:processResources\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:classes\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:jar\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:assemble\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:check\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:build\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | BUILD SUCCESSFUL in 1m 46s\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | 10 actionable tasks: 10 executed\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2705  Success - Main Build with Gradle\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build] \u2b50 Run Main Run unit tests\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :blossomSourceReplacementJava UP-TO-DATE\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :compileJava UP-TO-DATE\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :processResources UP-TO-DATE\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :classes UP-TO-DATE\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :compileTestJava\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/EmptyPlugin.java:21: warning: [removal] JavaPluginLoader in org.bukkit.plugin.java has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tpublic EmptyPlugin(@NotNull JavaPluginLoader loader, @NotNull PluginDescriptionFile description, @NotNull File dataFolder, @NotNull File file)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                            ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/EmptyPlugin.java:23: warning: [removal] JavaPlugin(JavaPluginLoader,PluginDescriptionFile,File,File) in JavaPlugin has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tsuper(loader, description, dataFolder, file);\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/SecondTestPlugin.java:19: warning: [removal] JavaPluginLoader in org.bukkit.plugin.java has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \tprotected SecondTestPlugin(@NotNull JavaPluginLoader loader, @NotNull PluginDescriptionFile description, @NotNull File dataFolder, @NotNull File file)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t                                    ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/SecondTestPlugin.java:21: warning: [removal] JavaPlugin(JavaPluginLoader,PluginDescriptionFile,File,File) in JavaPlugin has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tsuper(loader, description, dataFolder, file);\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/ServerMockTest.java:1088: warning: [removal] shouldSendChatPreviews() in ServerMock has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tassertFalse(server.shouldSendChatPreviews());\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t                  ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/ServerMockTest.java:1094: warning: [removal] setShouldSendChatPreviews(boolean) in ServerMock has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tserver.setShouldSendChatPreviews(true);\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t      ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/ServerMockTest.java:1095: warning: [removal] shouldSendChatPreviews() in ServerMock has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tassertTrue(server.shouldSendChatPreviews());\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t                 ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/entity/HopperMinecartMockTest.java:83: warning: [removal] getPickupCooldown() in HopperMinecart has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t\t\t() -> minecart.getPickupCooldown());\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t\t\t              ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/entity/HopperMinecartMockTest.java:92: warning: [removal] setPickupCooldown(int) in HopperMinecart has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t\t\t() -> minecart.setPickupCooldown(1));\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t\t\t              ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/entity/AbstractSkeletonMockTest.java:126: warning: [removal] assertAgressiveAttack(LivingEntity,float) in AbstractSkeletonMock has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tskeleton.assertAgressiveAttack(player, 0.5f);\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t        ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/entity/AbstractSkeletonMockTest.java:134: warning: [removal] assertAgressiveAttack(LivingEntity,float) in AbstractSkeletonMock has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tassertThrows(AssertionFailedError.class, () -> skeleton.assertAgressiveAttack(player, 0.5f));\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t                                                       ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/entity/PlayerMockTest.java:2003: warning: [removal] setLastPlayed(long) in PlayerMock has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tassertThrows(UnsupportedOperationException.class, () -> player.setLastPlayed(0));\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t                                                              ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/entity/AbstractProjectileMockTest.java:34: warning: [removal] doesBounce() in AbstractProjectileMock has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tassertThrows(UnsupportedOperationException.class, () -> abstractProjectile.doesBounce());\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t                                                                          ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/src/test/java/be/seeseemelk/mockbukkit/entity/AbstractProjectileMockTest.java:40: warning: [removal] setBounce(boolean) in AbstractProjectileMock has been deprecated and marked for removal\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\tassertThrows(UnsupportedOperationException.class, () -> abstractProjectile.setBounce(true));\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \t\t                                                                          ^\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Note: Some input files use or override a deprecated API.\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Note: Recompile with -Xlint:deprecation for details.\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | 14 warnings\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :processTestResources\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :testClasses\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:compileJava UP-TO-DATE\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:processResources UP-TO-DATE\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:classes UP-TO-DATE\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:jar UP-TO-DATE\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :test\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:compileTestJava NO-SOURCE\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:processTestResources NO-SOURCE\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:testClasses UP-TO-DATE\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | > Task :extra:TestPlugin:test NO-SOURCE\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | \n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | BUILD SUCCESSFUL in 20s\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | 9 actionable tasks: 3 executed, 6 up-to-date\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2705  Success - Main Run unit tests\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build] \u2b50 Run Post Restore caches\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/save/index.js] user= workdir=\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::1.5.0\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.gradle/caches'\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.gradle/wrapper'\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.gradle/caches\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.gradle/wrapper\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Cache Paths:\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.gradle/caches\",\"../../../home/runneradmin/.gradle/wrapper\"]\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Archive Path: /tmp/fb68ab67-957f-43e3-be91-2423e3b9d2c7/cache.tzst\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit --files-from manifest.txt --use-compress-program zstdmt\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::File Size: 230272835\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Reserving Cache\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:36795/_apis/artifactcache/caches\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Saving Cache (ID: 1)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Upload cache\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:36795/_apis/artifactcache/caches/1\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Upload concurrency: 4\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Upload chunk size: 33554432\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Awaiting all uploads\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 0 with content range: bytes 0-33554431/*\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 33554432 with content range: bytes 33554432-67108863/*\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 67108864 with content range: bytes 67108864-100663295/*\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 100663296 with content range: bytes 100663296-134217727/*\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 134217728 with content range: bytes 134217728-167772159/*\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 167772160 with content range: bytes 167772160-201326591/*\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Uploading chunk of size 28946243 bytes at offset 201326592 with content range: bytes 201326592-230272834/*\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Commiting cache\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Cache Size: ~220 MB (230272835 B)\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:36795/_apis/artifactcache/caches/1\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Cache saved successfully\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   | Cache saved with key: Linux-gradle-1bfe7544dfd76b4af66cfad424461e5c3c5558ad9e12ca3f923ec4883bc8463b\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2705  Success - Post Restore caches\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build] \u2b50 Run Post Set up JDK 17\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/cleanup/index.js] user= workdir=\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build]   \u2705  Success - Post Set up JDK 17\n[5bf686ce-31bc-4fb3-b11e-a46ee75c154c/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/MockBukkit-MockBukkit/.github/workflows/publish-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 294.1614496707916
    }
}