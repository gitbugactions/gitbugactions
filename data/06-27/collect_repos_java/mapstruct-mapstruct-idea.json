{
    "repository": "mapstruct/mapstruct-idea",
    "stars": 112,
    "language": "java",
    "size": 666,
    "clone_url": "https://github.com/mapstruct/mapstruct-idea.git",
    "timestamp": "2023-06-29T13:02:25.707523Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "org.mapstruct.intellij.MapperCompletionContributorTest",
                "name": "testCompletionNoQuotes",
                "time": 20.953,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapperCompletionContributorTest",
                "name": "testCompletionInsideQuotesStartsWithC",
                "time": 0.667,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapperCompletionContributorTest",
                "name": "testCompletionInsideQuotes",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapperCompletionContributorTest",
                "name": "testCompletionNoQuotesStartsWithS",
                "time": 0.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionTest",
                "name": "testUnmappedTargetProperties",
                "time": 4.369,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.rename.RenameHandlerJdk17Test",
                "name": "testRenameRecordSourceParameter",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.rename.RenameHandlerJdk17Test",
                "name": "testRenameRecordTargetParameter",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.completion.MappingQualifiedByNameCompletionTestCase",
                "name": "testMappingQualifiedByNameLocalAndExternalNamedReference",
                "time": 0.583,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.completion.MappingQualifiedByNameCompletionTestCase",
                "name": "testMappingQualifiedByNameLocalNamedReference",
                "time": 0.766,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.completion.MappingQualifiedByNameCompletionTestCase",
                "name": "testMappingQualifiedByNameInsideMapperConfigCompletion",
                "time": 0.486,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.bugs._38.Issue38Test",
                "name": "testUnmappedSourceWithPublicStaticProperty",
                "time": 0.211,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.bugs._38.Issue38Test",
                "name": "testUnmappedTargetWithPublicStaticProperty",
                "time": 0.216,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructUsagesHighlighterTest",
                "name": "testSourceRangeHighlighter",
                "time": 0.638,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructUsagesHighlighterTest",
                "name": "testBuilderTargetRangeHighlighter",
                "time": 0.393,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructUsagesHighlighterTest",
                "name": "testTargetRangeHighlighter",
                "time": 0.515,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructUsagesHighlighterTest",
                "name": "testFluentTargetRangeHighlighter",
                "time": 0.684,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapperConfigCompletionContributorTest",
                "name": "testCompletionNoQuotes",
                "time": 0.602,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapperConfigCompletionContributorTest",
                "name": "testCompletionInsideQuotesStartsWithC",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapperConfigCompletionContributorTest",
                "name": "testCompletionInsideQuotes",
                "time": 0.307,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapperConfigCompletionContributorTest",
                "name": "testCompletionNoQuotesStartsWithS",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesWithBeanMappingIgnoreByDefaultInspectionTest",
                "name": "testUnmappedTargetPropertiesWithBeanMappingIgnoreByDefault",
                "time": 0.489,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testMethodIsNotValueMapping",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testSourceValueMappingWithExisting",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testTargetValueMappingVariants",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testTargetValueMappingReturnTypeIsNotEnum",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testSourceValueMappingResolveToEnum",
                "time": 0.192,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testMethodIsNotValueMapping2",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testSourceValueMappingsAllValuesAlreadyMapped",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testSourceValueMappingsWithExisting",
                "time": 0.349,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testSourceValueMappingReferenceIsEmpty",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testSourceValueMappingAllValuesAlreadyMapped",
                "time": 0.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testSourceValueMappingVariants",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testTargetValueMappingReferenceIsEmpty",
                "time": 0.197,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testSourceValueMappingReferenceIsNotEnumField",
                "time": 0.193,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testTargetValueMappingNoReturnType",
                "time": 0.344,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testSourceValueMappingSourceParameterIsNotEnum",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testTargetValueMappingReferenceIsNotEnumField",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.ValueMappingCompletionTestCase",
                "name": "testTargetValueMappingResolveToEnum",
                "time": 0.178,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedIgnoreAllTargetPropertiesInspectionTest",
                "name": "testUnmappedIgnoreAllTargetProperties",
                "time": 0.457,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.bugs._33.Issue33Test",
                "name": "testUnmappedTargetPropertyBooleanWithIsPrefix",
                "time": 0.223,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedFluentTargetPropertiesInspectionTest",
                "name": "testUnmappedFluentTargetProperties",
                "time": 1.627,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.InheritConfigurationInspectionTest",
                "name": "testInheritConfigurationInSameClassMapper",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.InheritConfigurationInspectionTest",
                "name": "testInheritConfigurationByNameMapper",
                "time": 0.833,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.InheritConfigurationInspectionTest",
                "name": "testInheritConfigurationInSameClassOfUpdateMethodMapper",
                "time": 0.497,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.InheritConfigurationInspectionTest",
                "name": "testInheritConfigurationByInheritanceMapper",
                "time": 0.429,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.InheritConfigurationInspectionTest",
                "name": "testInheritConfigurationBySuperMapperMapper",
                "time": 0.87,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.InheritConfigurationInspectionTest",
                "name": "testInheritConfigurationInSameClassWithContextMapper",
                "time": 0.594,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.InheritConfigurationInspectionTest",
                "name": "testInheritConfigurationByMapperConfigMapper",
                "time": 0.533,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.WrongUsageOfMappersFactoryInspectionTest",
                "name": "testWrongUsageOfMappersFactory",
                "time": 1.73,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesSubObjectMappingTest",
                "name": "testUnmappedTargetPropertiesSubObjectMapping",
                "time": 0.342,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.MissingMapperOrMapperConfigAnnotationInspectionTest",
                "name": "testMissingMapperOrMapperConfig",
                "time": 0.766,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.MissingMapperOrMapperConfigAnnotationInspectionTest",
                "name": "testMissingMapperOrConfigIntent",
                "time": 0.724,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.MissingMapperOrMapperConfigAnnotationInspectionTest",
                "name": "testMissingMapperOrMapperConfigDecorator",
                "time": 0.585,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesWithBuilderInspectionTest",
                "name": "testUnmappedTargetPropertiesWithBuilder",
                "time": 0.82,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.completion.BeanMappingIgnoreUnmappedSourcePropertiesCompletionTestCase",
                "name": "testCarMapperReferenceSourcePropertyInSingle",
                "time": 0.439,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.completion.BeanMappingIgnoreUnmappedSourcePropertiesCompletionTestCase",
                "name": "testBeanMappingIgnoreSourcePropertiesSingleCarMapper",
                "time": 0.743,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.completion.BeanMappingIgnoreUnmappedSourcePropertiesCompletionTestCase",
                "name": "testCarMapperReferenceSourcePropertyInMulti",
                "time": 0.631,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.completion.BeanMappingIgnoreUnmappedSourcePropertiesCompletionTestCase",
                "name": "testBeanMappingIgnoreSourcePropertiesMultiCarMapper",
                "time": 0.7,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionCaretAfterQuickfixTest",
                "name": "testAddUnmappedTargetProperties",
                "time": 0.596,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionCaretAfterQuickfixTest",
                "name": "testIgnoreUnmappedTargetProperties",
                "time": 0.918,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionCaretAfterQuickfixTest",
                "name": "testIgnoreAllUnmappedTargetProperties",
                "time": 0.589,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesJdk8InspectionTest",
                "name": "testUnmappedTargetPropertiesJdk8",
                "time": 1.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesWithMetaAnnotationInspectionTest",
                "name": "testUnmappedTargetPropertiesWithMetaAnnotationAndMapping",
                "time": 0.428,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesWithMetaAnnotationInspectionTest",
                "name": "testUnmappedTargetPropertiesWithMetaAnnotationChained",
                "time": 0.357,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesWithMetaAnnotationInspectionTest",
                "name": "testUnmappedTargetPropertiesWithMetaAnnotation",
                "time": 0.437,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.rename.RenameHandlerTest",
                "name": "testRenameMethodTargetParameter",
                "time": 0.203,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.rename.RenameHandlerTest",
                "name": "testRenameSourceParameter",
                "time": 0.693,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.rename.RenameHandlerTest",
                "name": "testRenameFluentTargetParameter",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.rename.RenameHandlerTest",
                "name": "testRenameTargetParameter",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.rename.RenameHandlerTest",
                "name": "testRenamePublicTargetParameter",
                "time": 0.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.rename.RenameHandlerTest",
                "name": "testRenameMethodSourceParameter",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.bugs._42.UnmappedTargetPropertyForEnumWithStaticMethodTest",
                "name": "testUnmappedTargetPropertyForEnumWithStaticMethod",
                "time": 2.727,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedSecondLevelAutoCompleteTargetProperty",
                "time": 0.797,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferenceProtectedSourceProperty",
                "time": 0.729,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testReferenceCarMapperNoTargetClass",
                "time": 0.694,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedSecondLevelAutoCompleteSourceProperty",
                "time": 0.67,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperSimpleSingleSourceCar",
                "time": 0.961,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testSourcePropertyIsList",
                "time": 0.641,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedSecondLevelSourcePropertyIsIterable",
                "time": 0.853,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMapperWithBuilderAndMapperDisabledBuilder",
                "time": 0.836,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReturnTargetCarDtoKotlin",
                "time": 5.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReturnTargetFluentCarDto",
                "time": 1.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReturnTargetCarDtoPublic",
                "time": 0.96,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testTargetPropertyIsMap",
                "time": 0.636,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMapperWithBuilderAndMapperDisabledBuilderAndBeanMappingEnable",
                "time": 0.71,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferencePublicStaticFieldTargetProperty",
                "time": 0.611,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperUpdateSourceCar2",
                "time": 1.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testUnknownNestedTargetProperty",
                "time": 0.668,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedFirstLevelAutoCompleteTargetProperty",
                "time": 0.827,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferencePublicStaticFieldSourceProperty",
                "time": 0.656,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testVariantsMapperTargetClassNoMethods",
                "time": 0.608,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testPersonMapperReturnTargetFluentPersonDto",
                "time": 0.709,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testUnknownNestedSourceProperty",
                "time": 0.539,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedFirstLevelAutoCompleteSourceProperty",
                "time": 0.814,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMapperWithBuilderAndMapperConfigDisabledBuilderAndMapperEnable",
                "time": 0.616,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testVariantsMapperSourceClassNoMethods",
                "time": 0.625,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReturnTargetCarDtoWithMultipleConstructorsAndAnnotatedWithDefault",
                "time": 0.727,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperUpdateSourceCar",
                "time": 0.975,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperUpdateTargetFluentCarDto",
                "time": 0.876,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferenceTargetPropertyInCarDto",
                "time": 0.48,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedFirstLevelReferenceTargetProperty",
                "time": 0.626,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testSourcePropertyIsArray",
                "time": 0.542,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperUpdateTargetCarDtoPublic",
                "time": 0.754,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMultipleSourceParametersUpdateMapping",
                "time": 0.591,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedFirstLevelReferenceSourceProperty",
                "time": 0.505,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperSimpleSingleSourceCarPublic",
                "time": 0.779,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testFluentCarMapperReferenceEmptyTargetProperty",
                "time": 0.437,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testTargetPropertyIsIterable",
                "time": 0.662,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testReferenceCarMapperNoSourceClass",
                "time": 0.446,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testVariantsCarMapperNoTargetClass",
                "time": 0.482,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferenceTargetPropertyInCarDtoWithBuilder",
                "time": 0.447,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferencePublicTargetProperty",
                "time": 0.464,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMapperWithBuilderAndBeanMappingDisabledBuilder",
                "time": 0.557,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferencePublicSourceProperty",
                "time": 0.524,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testFluentGenericTargetMapper",
                "time": 0.677,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReturnTargetCarDto",
                "time": 0.879,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperUpdateTargetCarDto2",
                "time": 1.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReturnTargetCarDtoWithBuilder",
                "time": 1.121,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferenceBooleanSourceCar",
                "time": 0.489,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperUpdateTargetCarDto",
                "time": 0.837,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testTargetPropertyAutoCompleteAfterTargetParameter",
                "time": 0.898,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReturnTargetCarDtoWithConstructorAndEmptyConstructor",
                "time": 0.86,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedSecondLevelTargetPropertyIsIterable",
                "time": 0.761,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedSecondLevelReferenceTargetProperty",
                "time": 0.615,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferenceUnknownTargetProperty",
                "time": 0.724,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedSecondLevelAutoCompleteTargetPublicProperty",
                "time": 0.606,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMapperWithBuilderAndMapperConfigDisabledBuilder",
                "time": 0.57,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMapperWithBuilderWithSingleConstructor",
                "time": 0.618,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMapperWithGenericBuilder",
                "time": 0.572,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedSecondLevelReferenceSourceProperty",
                "time": 0.472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMapperWithBuilderWithMultipleConstructors",
                "time": 0.516,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testTargetPropertyIsArray",
                "time": 0.612,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testSourcePropertyIsMap",
                "time": 0.525,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMapperWithBuilderAndMapperDisabledBuilderAndBeanMappingOther",
                "time": 0.603,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedSecondLevelAutoCompleteBuilderTargetProperty",
                "time": 0.689,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferenceUnknownSourceProperty",
                "time": 0.566,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testFluentCarMapperReferenceUnknownTargetProperty",
                "time": 0.463,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMultipleSourceParametersSourceIsNotParameter",
                "time": 0.464,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedSecondLevelAutoCompleteSourcePublicProperty",
                "time": 0.555,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferenceEmptyTargetProperty",
                "time": 0.382,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReturnTargetCarDtoWithConstructor",
                "time": 0.969,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferenceSourcePropertyInCarDto",
                "time": 0.472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMappingNotOnMethodForSource",
                "time": 0.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testSourcePropertyAutoCompleteAfterSourceParameter",
                "time": 0.868,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testMappingNotOnMethodForTarget",
                "time": 0.473,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testOverriddenSource",
                "time": 0.617,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testOverriddenTarget",
                "time": 0.488,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferenceEmptySourceProperty",
                "time": 0.435,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperUpdateTargetCarDtoWithBuilder",
                "time": 0.881,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferenceTargetPropertyInCarDtoWithConstructor",
                "time": 0.436,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testTargetPropertyReferencesTargetParameter",
                "time": 0.547,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReferenceProtectedTargetProperty",
                "time": 0.59,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testCarMapperReturnTargetCarDtoWithConstructorAndSetters",
                "time": 0.65,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testNestedSecondLevelAutoCompleteConstructorTargetProperty",
                "time": 0.479,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testSourcePropertyReferencesSourceParameter",
                "time": 0.539,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionTestCase",
                "name": "testVariantsCarMapperNoSourceClass",
                "time": 0.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedRecordTargetPropertiesInspectionTest",
                "name": "testUnmappedRecordTargetProperties",
                "time": 1.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.bugs._110.MethodeWithNoParametersTest",
                "name": "testExpressionCompletion",
                "time": 0.232,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.bugs._110.MethodeWithNoParametersTest",
                "name": "testDefaultExpressionCompletion",
                "time": 0.254,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.bugs._110.MethodeWithNoParametersTest",
                "name": "testTargetCompletion",
                "time": 0.475,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionSourceBeforeTargetTest",
                "name": "testUnmappedTargetPropertiesSourceBeforeTarget",
                "time": 0.928,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionJdk17TestCase",
                "name": "testCarMapperReturnTargetCarDtoRecord",
                "time": 4.428,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionJdk17TestCase",
                "name": "testCarMapperSimpleSingleSourceCarRecord",
                "time": 1.235,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionJdk17TestCase",
                "name": "testNestedSecondLevelAutoCompleteRecordTargetProperty",
                "time": 0.777,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionJdk17TestCase",
                "name": "testTargetPropertyReferencesRecordComponent",
                "time": 0.776,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionJdk17TestCase",
                "name": "testNestedSecondLevelAutoCompleteRecordSourceProperty",
                "time": 0.776,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructCompletionJdk17TestCase",
                "name": "testSourcePropertyReferencesRecordComponent",
                "time": 0.789,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.bugs._78.CodeCompletionForGenericBuilderTest",
                "name": "testCodeCompletionForGenericBuilder",
                "time": 0.348,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedCurrentTargetPropertiesInspectionTest",
                "name": "testUnmappedCurrentTargetProperties",
                "time": 2.913,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.MapStructDefaultAnnotationParamSupportTest",
                "name": "testIgnoreRedundantDefaultParameterValueInMapping",
                "time": 0.522,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithMultiSourceParameters",
                "time": 0.429,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithTargetUsingStaticString",
                "time": 0.509,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithGenericSourceParameters",
                "time": 0.308,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithNoTargetDefinedMapper",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithMapperToDtoWithoutAccessors",
                "time": 0.655,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithTargetDefinedMapper",
                "time": 0.507,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithClassMapper",
                "time": 0.425,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithMapperWithCustomImports",
                "time": 0.215,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithTargetDefinedMapperInMappings",
                "time": 0.432,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithMapperWithImports",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithoutJavaExpression",
                "time": 0.183,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithSourceParameterWithAnnotations",
                "time": 0.2,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithMapperWithoutImports",
                "time": 0.489,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithGenericMapper",
                "time": 0.23,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithGenericMethod",
                "time": 0.232,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.expression.JavaExpressionInjectionTest",
                "name": "testExpressionWithSourceParameterWithMultipleGenerics",
                "time": 0.227,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedConstructorTargetPropertiesInspectionTest",
                "name": "testUnmappedConstructorTargetProperties",
                "time": 1.631,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testRenameSourceReferenceMethod",
                "time": 1.224,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testRenameBuilderTargetReferenceMethod",
                "time": 0.525,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testFindUsagesFluentTargetReferenceMethod",
                "time": 0.651,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testFindUsagesSourceReferenceMethod",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testRenameTargetReferenceMethod",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testRenameTargetParameterReference",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testFindUsagesForOnlySetMethodOnTarget",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testIssue10Mapper",
                "time": 0.201,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testRenameFluentTargetReferenceMethod",
                "time": 0.464,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testRenamePublicTargetReferenceMethod",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testFindUsagesForOnlyGetMethodOnSource",
                "time": 0.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testRenameSourceParameterReference",
                "time": 0.262,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testFindUsagesTargetReferenceMethod",
                "time": 0.192,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.MapstructMethodUsagesSearcherTest",
                "name": "testFindUsagesBuilderTargetReferenceMethod",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionUnmappedTargetPolicyTest",
                "name": "testUnmappedTargetPropertiesReportPolicyBeanMappingBeforeClassConfig",
                "time": 0.495,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionUnmappedTargetPolicyTest",
                "name": "testUnmappedTargetPropertiesReportPolicyClassLevelBeforeConfigClassWarn",
                "time": 1.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionUnmappedTargetPolicyTest",
                "name": "testUnmappedTargetPropertiesReportPolicyClassLevelBeforeConfigClassError",
                "time": 0.541,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionUnmappedTargetPolicyTest",
                "name": "testUnmappedTargetPropertiesReportPolicyIgnoreClassAnnotation",
                "time": 0.44,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionUnmappedTargetPolicyTest",
                "name": "testUnmappedTargetPropertiesReportPolicyBeanMapping",
                "time": 0.463,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionUnmappedTargetPolicyTest",
                "name": "testUnmappedTargetPropertiesReportPolicyError",
                "time": 0.525,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionUnmappedTargetPolicyTest",
                "name": "testUnmappedTargetPropertiesReportPolicyStaticImport",
                "time": 0.715,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionUnmappedTargetPolicyTest",
                "name": "testUnmappedTargetPropertiesReportPolicyConfigClass",
                "time": 0.583,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionUnmappedTargetPolicyTest",
                "name": "testUnmappedTargetPropertiesReportPolicyIgnoreBeanMapping",
                "time": 0.53,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mapstruct.intellij.inspection.UnmappedTargetPropertiesInspectionUnmappedTargetPolicyTest",
                "name": "testUnmappedTargetPropertiesReportPolicyIgnoreConfigClass",
                "time": 0.459,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2] \ud83d\ude80  Start image=crawlergpt:latest\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mapstruct-mapstruct-idea] user=0 workdir=\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2] \ud83e\uddea  Matrix: map[version:map[idea:2021.2 jdk:11]]\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2] \u2b50 Run Main Checkout\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2705  Success - Main Checkout\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2] \u2b50 Run Main Set up JDK\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker cp src=/tmp/act-cache/83abdfe5-0e53-4915-ac24-93be5036177d/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::isExplicit: \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::explicit? false\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::evaluating 0 versions\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::match not found\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::Downloading /tmp/ae88ab2e-0678-41e7-aa34-5738a8bc7dd2\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::download complete\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | [command]/usr/bin/tar --version\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | tar (GNU tar) 1.30\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | This is free software: you are free to change and redistribute it.\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | There is NO WARRANTY, to the extent permitted by law.\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Written by John Gilmore and Jay Fenlason.\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1053441742 -f /tmp/ae88ab2e-0678-41e7-aa34-5738a8bc7dd2\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1053441742/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::Caching tool jdk 11.0.19 x64\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1053441742/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/11.0.19/x64\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::finished caching tool\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | writing /home/runneradmin/.m2/settings.xml\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2705  Success - Main Set up JDK\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2699  ::set-env:: JAVA_HOME_11.0.19_x64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/11.0.19/x64\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2699  ::set-env:: JAVA_HOME_11_0_19_X64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/11.0.19/x64\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2699  ::set-output:: version=11.0.19\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/11.0.19/x64/bin\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2] \u2b50 Run Main Test\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Downloading https://services.gradle.org/distributions/gradle-8.1.1-bin.zip\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | ...........10%............20%............30%............40%............50%............60%............70%............80%...........90%............100%\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Welcome to Gradle 8.1.1!\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Here are the highlights of this release:\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |  - Stable configuration cache\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |  - Experimental Kotlin DSL assignment syntax\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |  - Building with Java 20\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | For more details see https://docs.gradle.org/8.1.1/release-notes.html\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Configure project :\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-1.7/jre/lib/rt.jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-1.7/jre/lib/annotations.jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-1.7/src.zip\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-1.8/jre/lib/annotations.jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-1.8/jre/lib/rt.jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-11/jre/lib/annotations.jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-11/jre/lib/rt.jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :initializeIntelliJPlugin\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | [gradle-intellij-plugin :initializeIntelliJPlugin] Gradle IntelliJ Plugin is outdated: 1.13.3. Update `org.jetbrains.intellij` to: 1.14.2\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :patchPluginXml\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :verifyPluginConfiguration\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :compileJava\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Note: /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mapstruct-mapstruct-idea/src/main/java/org/mapstruct/intellij/util/MapstructUtil.java uses unchecked or unsafe operations.\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Note: Recompile with -Xlint:unchecked for details.\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :processResources\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :classes\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :setupInstrumentCode SKIPPED\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :instrumentCode SKIPPED\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :compileTestJava\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Note: Some input files use unchecked or unsafe operations.\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Note: Recompile with -Xlint:unchecked for details.\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :processTestResources NO-SOURCE\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :testClasses\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :instrumentTestCode SKIPPED\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :instrumentedJar SKIPPED\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :downloadMockJdk11 UP-TO-DATE\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :downloadMockJdk7 UP-TO-DATE\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :downloadMockJdk8 UP-TO-DATE\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :libs\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :prepareTestingSandbox\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :test\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :classpathIndexCleanup SKIPPED\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :prepareSandbox\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :buildSearchableOptions\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Starting searchable options index builder\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | 2023-06-29 13:10:42,533 [   3880]   WARN - l.NotificationGroupManagerImpl - Notification group CodeWithMe is already registered (group=com.intellij.notification.NotificationGroup@6c79807c). Plugin descriptor: PluginDescriptor(name=Code With Me, id=com.jetbrains.codeWithMe, descriptorPath=plugin.xml, path=~/.gradle/caches/modules-2/files-2.1/com.jetbrains.intellij.idea/ideaIC/2021.2/b0727ceddea2b62b16825db9308e14a470198e7f/ideaIC-2021.2/plugins/cwm-plugin, version=212.4746.92, package=null) \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | 2023-06-29 13:10:50,457 [  11804]   WARN - #com.intellij.ui.jcef.JBCefApp - JCEF is manually disabled in headless env via 'ide.browser.jcef.headless.enabled=false' \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | 2023-06-29 13:11:06,787 [  28134]   WARN - g.jetbrains.kotlin.idea.script - [KOTLIN_SCRIPTING] extension gradle.kts file type [UNKNOWN] is not registered as Kotlin \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | 2023-06-29 13:11:06,787 [  28134]   WARN - g.jetbrains.kotlin.idea.script - [KOTLIN_SCRIPTING] extension space.kts file type [UNKNOWN] is not registered as Kotlin \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | 2023-06-29 13:11:06,788 [  28135]   WARN - g.jetbrains.kotlin.idea.script - [KOTLIN_SCRIPTING] extension main.kts file type [UNKNOWN] is not registered as Kotlin \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | 2023-06-29 13:11:06,788 [  28135]   WARN - g.jetbrains.kotlin.idea.script - [KOTLIN_SCRIPTING] extensions [gradle.kts, space.kts, main.kts] is about to be registered as Kotlin \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Found 216 configurables\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Searchable options index builder completed\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :jarSearchableOptions\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :buildPlugin\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :assemble\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Unknown file extension: src/main/resources/META-INF/pluginIcon.svg\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :licenseMain UP-TO-DATE\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :licenseTestData UP-TO-DATE\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :licenseTest UP-TO-DATE\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :license UP-TO-DATE\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :checkstyleMain\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :checkstyleTest\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :check\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :build\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | BUILD SUCCESSFUL in 6m 16s\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | 19 actionable tasks: 16 executed, 3 up-to-date\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2705  Success - Main Test\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2] \u2b50 Run Main Generate coverage report\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Configure project :\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-1.7/jre/lib/annotations.jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-1.7/jre/lib/rt.jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-1.7/src.zip\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-1.8/jre/lib/annotations.jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-1.8/jre/lib/rt.jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-11/jre/lib/annotations.jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Download https://github.com/JetBrains/intellij-community/raw/master/java/mockJDK-11/jre/lib/rt.jar\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :initializeIntelliJPlugin\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | [gradle-intellij-plugin :initializeIntelliJPlugin] Gradle IntelliJ Plugin is outdated: 1.13.3. Update `org.jetbrains.intellij` to: 1.14.2\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :patchPluginXml UP-TO-DATE\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :verifyPluginConfiguration\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :compileJava UP-TO-DATE\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :processResources UP-TO-DATE\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :classes UP-TO-DATE\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :setupInstrumentCode SKIPPED\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :instrumentCode SKIPPED\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :classpathIndexCleanup SKIPPED\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | > Task :jacocoTestReport\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | BUILD SUCCESSFUL in 5s\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | 6 actionable tasks: 3 executed, 3 up-to-date\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2705  Success - Main Generate coverage report\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2] \u2b50 Run Main Upload coverage to Codecov\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker cp src=/tmp/act-cache/83abdfe5-0e53-4915-ac24-93be5036177d/act/codecov-codecov-action@v1/ dst=/var/run/act/actions/codecov-codecov-action@v1/\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v1/] user=0 workdir=\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v1/dist/index.js] user= workdir=\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | [command]/usr/bin/bash codecov.sh -n  -F  -Q github-action-v1.5.2 -Z\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |   _____          _\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |  / ____|        | |\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | | |     ___   __| | ___  ___ _____   __\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |  \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |                               Bash-1.0.3\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;36m==>\u001b[0m git version 2.33.0 found\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;36m==>\u001b[0m curl 7.68.0 (x86_64-pc-linux-gnu) libcurl/7.68.0 OpenSSL/1.1.1f zlib/1.2.11 brotli/1.0.7 libidn2/2.2.0 libpsl/0.21.0 (+libidn2/2.2.0) libssh/0.9.3/openssl/zlib nghttp2/1.40.0 librtmp/2.3\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Release-Date: 2020-01-08\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | Features: AsynchDNS brotli GSS-API HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;90m==>\u001b[0m GitHub Actions detected.\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |     Env vars used:\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |       -> GITHUB_ACTIONS:    true\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |       -> GITHUB_HEAD_REF:   \n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |       -> GITHUB_REF:        refs/heads/main\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |       -> GITHUB_REPOSITORY: mapstruct/mapstruct-idea\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |       -> GITHUB_RUN_ID:     1\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |       -> GITHUB_SHA:        227371fe6f699b5fc6f42e7c613bec8beb13ac6f\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |       -> GITHUB_WORKFLOW:   97899706-8cb9-4a0d-b816-c7935e4d75fe\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |     \u001b[0;90mproject root:\u001b[0m .\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |     \u001b[0;90mYaml found at:\u001b[0m .codecov.yml\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;90m==>\u001b[0m Running gcov in . \u001b[0;90m(disable via -X gcov)\u001b[0m\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;90m==>\u001b[0m Python coveragepy not found\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;90m==>\u001b[0m Searching for coverage reports in:\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |     \u001b[0;32m+\u001b[0m .\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |     \u001b[0;90m->\u001b[0m Found 1 reports\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;90m==>\u001b[0m Detecting git/mercurial file structure\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;90m==>\u001b[0m Reading reports\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |     \u001b[0;32m+\u001b[0m ./build/reports/jacoco/test/jacocoTestReport.xml \u001b[0;90mbytes=210853\u001b[0m\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;90m==>\u001b[0m Appending adjustments\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |     \u001b[0;36mhttps://docs.codecov.io/docs/fixing-reports\u001b[0m\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |     \u001b[0;32m+\u001b[0m Found adjustments\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;90m==>\u001b[0m Gzipping contents\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |         20K\t/tmp/codecov.YpQpuq.gz\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;90m==>\u001b[0m Uploading reports\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |     \u001b[0;90murl:\u001b[0m https://codecov.io\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |     \u001b[0;90mquery:\u001b[0m branch=main&commit=227371fe6f699b5fc6f42e7c613bec8beb13ac6f&build=1&build_url=http%3A%2F%2Fgithub.com%2Fmapstruct%2Fmapstruct-idea%2Factions%2Fruns%2F1&name=&tag=&slug=mapstruct%2Fmapstruct-idea&service=github-actions&flags=&pr=&job=97899706-8cb9-4a0d-b816-c7935e4d75fe&cmd_args=n,F,Q,Z\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;90m->\u001b[0m  Pinging Codecov\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | https://codecov.io/upload/v4?package=github-action-v1.5.2-1.0.3&token=secret&branch=main&commit=227371fe6f699b5fc6f42e7c613bec8beb13ac6f&build=1&build_url=http%3A%2F%2Fgithub.com%2Fmapstruct%2Fmapstruct-idea%2Factions%2Fruns%2F1&name=&tag=&slug=mapstruct%2Fmapstruct-idea&service=github-actions&flags=&pr=&job=97899706-8cb9-4a0d-b816-c7935e4d75fe&cmd_args=n,F,Q,Z\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;31m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | 404\u001b[0m\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \u001b[0;90m==>\u001b[0m Uploading to Codecov\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100 18726  100   171  100 18555    369  40075 --:--:-- --:--:-- --:--:-- 40357\r100 18726  100   171  100 18555    369  40075 --:--:-- --:--:-- --:--:-- 40357\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   |     \u001b[0;32m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\u001b[0m\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2757  ::error::Codecov failed with the following error: The process '/usr/bin/bash' failed with exit code 1\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u274c  Failure - Main Upload coverage to Codecov\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2] exitcode '1': failure\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2] \u2b50 Run Post Set up JDK\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2]   \u2705  Success - Post Set up JDK\n[97899706-8cb9-4a0d-b816-c7935e4d75fe/IDEA 2021.2] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'IDEA ${{ matrix.version.idea }}' failed\n",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mapstruct-mapstruct-idea/.github/workflows/main-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 564.7454588413239
    }
}