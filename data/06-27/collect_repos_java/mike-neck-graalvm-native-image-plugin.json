{
    "repository": "mike-neck/graalvm-native-image-plugin",
    "stars": 89,
    "language": "java",
    "size": 675,
    "clone_url": "https://github.com/mike-neck/graalvm-native-image-plugin.git",
    "timestamp": "2023-06-29T14:19:37.975950Z",
    "clone_success": true,
    "number_of_actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "gradle",
        "unknown",
        "unknown",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "org.mikeneck.graalvm.config.ConstructorUsageTest",
                "name": "compareTo()[1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ConstructorUsageTest",
                "name": "compareTo()[2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ConstructorUsageTest",
                "name": "compareTo()[3]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ConstructorUsageTest",
                "name": "compareTo()[4]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ConstructorUsageTest",
                "name": "compareTo()[5]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ConstructorUsageTest",
                "name": "equalsNotToBeTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ConstructorUsageTest",
                "name": "equalsToBeTrue()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ResourceConfigTest",
                "name": "canBeMerge()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.ResourceCollectionTest",
                "name": "expectedCaseWithSingleCandidate()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.ResourceCollectionTest",
                "name": "hasFailureInputForSingleCandidate()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.ResourceCollectionTest",
                "name": "expectedCaseEmptyInput()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.ResourceCollectionTest",
                "name": "expectedCaseWithSecondCandidate()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyUsageTest",
                "name": "comparingSingleToSingle()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyUsageTest",
                "name": "unmarshalEmpty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyUsageTest",
                "name": "comparingEmptyToHavingElements()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyUsageTest",
                "name": "marshalEmpty()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyUsageTest",
                "name": "unmarshalNonEmpty()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyUsageTest",
                "name": "compareEmptyToEmpty()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyUsageTest",
                "name": "comparingMultipleToMultiple()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyUsageTest",
                "name": "marshalNonEmpty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.ConfigFileProvidersTest",
                "name": "notExisting(Path)",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.ConfigFileProvidersTest",
                "name": "existingFile(Path)",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "loading(GraalVmVersion)[1]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "loading(GraalVmVersion)[2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "loading(GraalVmVersion)[3]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "loading(GraalVmVersion)[4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "loading(GraalVmVersion)[5]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "loading(GraalVmVersion)[6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "loading(GraalVmVersion)[7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "loading(GraalVmVersion)[8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "loading(GraalVmVersion)[9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "loading(GraalVmVersion)[10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "loading(GraalVmVersion)[11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "specificPropertiesFiles()[1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "specificPropertiesFiles()[2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmVersionTest",
                "name": "specificPropertiesFiles()[3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.MethodUsageTest",
                "name": "compareToLargeName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.MethodUsageTest",
                "name": "compareToSelf()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.MethodUsageTest",
                "name": "compareToSameNameWithSingleLargeParameterType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.MethodUsageTest",
                "name": "compareToSameNameWithSingleSmallParameterType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.MethodUsageTest",
                "name": "compareToSmallName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.MethodUsageTest",
                "name": "compareToSameNameWithLessParameterType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.MethodUsageTest",
                "name": "compareToSameNameWithManyParameterType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ResourceConfigTest$FirstDataModel",
                "name": "jsonWithContents()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ResourceConfigTest$FirstDataModel",
                "name": "mergeWithEmptyBecomesSelf()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ResourceConfigTest$FirstDataModel",
                "name": "mergeConfigWithSharedContents()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ResourceConfigTest$FirstDataModel",
                "name": "mergeWithSelfBecomesSelf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ResourceConfigTest$FirstDataModel",
                "name": "jsonWithoutContents()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ResourceConfigTest$FirstDataModel",
                "name": "merge()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.OutputDirectoryProviderTest",
                "name": "nullPath()",
                "time": 0.113,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.OutputDirectoryProviderTest",
                "name": "notExistingFile()",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.OutputDirectoryProviderTest",
                "name": "notExistingPath()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.OutputDirectoryProviderTest",
                "name": "existingFileFile()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.OutputDirectoryProviderTest",
                "name": "existingFilePath()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.OutputDirectoryProviderTest",
                "name": "existingDirectoryFile()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.OutputDirectoryProviderTest",
                "name": "existingDirectoryPath()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.OutputDirectoryProviderTest",
                "name": "nullDirectory()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.JniConfigTest",
                "name": "mergeWithOther()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.JniConfigTest",
                "name": "jsonWithContents()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.JniConfigTest",
                "name": "mergeWithOtherHavingSameClass()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.JniConfigTest",
                "name": "mergeWithAlreadyMerged()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.JniConfigTest",
                "name": "jsonWithoutContents()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsageTest",
                "name": "canBeMergeWith(CanBeMergeWithDatum)[1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsageTest",
                "name": "canBeMergeWith(CanBeMergeWithDatum)[2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsageTest",
                "name": "canBeMergeWith(CanBeMergeWithDatum)[3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsageTest",
                "name": "compareTo(FieldUsageCompareTo)[1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsageTest",
                "name": "compareTo(FieldUsageCompareTo)[2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsageTest",
                "name": "compareTo(FieldUsageCompareTo)[3]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsageTest",
                "name": "compareTo(FieldUsageCompareTo)[4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsageTest",
                "name": "compareTo(FieldUsageCompareTo)[5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsageTest",
                "name": "compareTo(FieldUsageCompareTo)[6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsageTest",
                "name": "compareTo(FieldUsageCompareTo)[7]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsageTest",
                "name": "compareTo(FieldUsageCompareTo)[8]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsageTest",
                "name": "compareTo(FieldUsageCompareTo)[9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmHomeTest",
                "name": "nativeImageOnNixLikeOs()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmHomeTest",
                "name": "invalidHome()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmHomeTest",
                "name": "javaExecutableOnNixLikeOs()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmHomeTest",
                "name": "javaExecutableOnWindows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalVmHomeTest",
                "name": "nativeImageOnWindows()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsagesTest",
                "name": "manyMergeable()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsagesTest",
                "name": "singleAndEmpty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsagesTest",
                "name": "mergeableSingle()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsagesTest",
                "name": "smallerItemsAndGreaterItems()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.FieldUsagesTest",
                "name": "singleAndSingle()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyConfigTest",
                "name": "jsonWithContents()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyConfigTest",
                "name": "case60()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyConfigTest",
                "name": "mergeWithEmptyBecomesSelf()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyConfigTest",
                "name": "mergeWithSelfBecomesSelf()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyConfigTest",
                "name": "jsonWithoutContents()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyConfigTest",
                "name": "mergeWithOthersSharding()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyConfigTest",
                "name": "mergeWithOthers()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ProxyConfigTest",
                "name": "emptyMergedWithEmptyBecomesEmpty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ResourceConfigTest$$20$3Test",
                "name": "mergeIncludes()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ResourceConfigTest$$20$3Test",
                "name": "jsonWithInclude1()",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ResourceConfigTest$$20$3Test",
                "name": "merge()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ResourceConfigTest$$20$3Test",
                "name": "mergeExcludes()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ResourceConfigTest$$20$3Test",
                "name": "jsonBothData()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.MappingCandidatesTest",
                "name": "foundFirst()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.MappingCandidatesTest",
                "name": "foundSecond()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.MappingCandidatesTest",
                "name": "allEmpty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalvmNativeImagePluginTest",
                "name": "generateNativeImageConfigTasksAreDisabled()",
                "time": 5.954,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.GraalvmNativeImagePluginTest",
                "name": "pluginRegistersNativeImageTask()",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.SerializationConfigTest",
                "name": "mergeWithEmpty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.SerializationConfigTest",
                "name": "singleNameOnlyJson(InputStream)",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.SerializationConfigTest",
                "name": "emptyJson()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.SerializationConfigTest",
                "name": "multipleNamedJson(InputStream)",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.SerializationConfigTest",
                "name": "multipleNamedJsonAndNameWithCustomCtorJson(InputStream)",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.SerializationConfigTest",
                "name": "mergeWithMultiple()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.SerializationConfigTest",
                "name": "singleNameWithCustomCtorJson(InputStream)",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.SerializationConfigTest",
                "name": "mergeWithSelf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.SerializationConfigTest",
                "name": "mergeWithSingleJson()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "parseErrorCase46()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeWithOther()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "jsonWithContents()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "case98()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeWithEmptyBecomesSelf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeWithOtherHavingSameClassUsingAnotherMethodsAndFields()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeWithOtherHavingSameClass()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeBoolean(Boolean, Boolean, Boolean)[1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeBoolean(Boolean, Boolean, Boolean)[2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeBoolean(Boolean, Boolean, Boolean)[3]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeBoolean(Boolean, Boolean, Boolean)[4]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeBoolean(Boolean, Boolean, Boolean)[5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeBoolean(Boolean, Boolean, Boolean)[6]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeBoolean(Boolean, Boolean, Boolean)[7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeBoolean(Boolean, Boolean, Boolean)[8]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeBoolean(Boolean, Boolean, Boolean)[9]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "jsonWithoutContents()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "case109()[1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "case109()[2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "case109()[3]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "case111()[1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "case111()[2]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeByEmptyWithOtherBecomesOther()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.ReflectConfigTest",
                "name": "mergeByEmptyWithEmptyBecomesEmpty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.SelectorMergeConfigFileWorkTest",
                "name": "expectedSucceedCase1()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.SelectorMergeConfigFileWorkTest",
                "name": "expectedSucceedCase2()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.SelectorMergeConfigFileWorkTest",
                "name": "expectedFailureCase1()[1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.SelectorMergeConfigFileWorkTest",
                "name": "expectedFailureCase1()[2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.SelectorMergeConfigFileWorkTest",
                "name": "expectedFailureCase2()[1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "org.mikeneck.graalvm.config.task.SelectorMergeConfigFileWorkTest",
                "name": "expectedFailureCase2()[2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests] \ud83d\ude80  Start image=crawlergpt:latest\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mike-neck-graalvm-native-image-plugin] user=0 workdir=\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1.4.3\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v1\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests] \u2b50 Run Main actions/checkout@v1\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2705  Success - Main actions/checkout@v1\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests] \u2b50 Run Main Set up Java\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/d60fad46-c343-414b-8869-1cc84b42a1f1/act/actions-setup-java@v1.4.3/ dst=/var/run/act/actions/actions-setup-java@v1.4.3/\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1.4.3/] user=0 workdir=\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1.4.3/dist/setup/index.js] user= workdir=\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::isExplicit: \n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::explicit? false\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::evaluating 0 versions\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::match not found\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::Downloading /tmp/5ccf3454-f6c0-4d01-8cf8-3f8265179ecf\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::download complete\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | [command]/usr/bin/tar --version\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | tar (GNU tar) 1.30\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | This is free software: you are free to change and redistribute it.\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | There is NO WARRANTY, to the extent permitted by law.\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | \n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | Written by John Gilmore and Jay Fenlason.\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_125316631 -f /tmp/5ccf3454-f6c0-4d01-8cf8-3f8265179ecf\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_125316631/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::Caching tool jdk 8.0.372 x64\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::source dir: /tmp/temp_125316631/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/8.0.372/x64\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::finished caching tool\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/8.0.372/x64\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2699  ::set-output:: version=8.0.372\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1.4.3/.github/java.json\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | writing /home/runneradmin/.m2/settings.xml\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2705  Success - Main Set up Java\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2699  ::set-env:: JAVA_HOME_8.0.372_x64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.372/x64\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2699  ::set-env:: JAVA_HOME_8_0_372_X64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/8.0.372/x64/bin\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests] \u2b50 Run Main Cache gradle\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/d60fad46-c343-414b-8869-1cc84b42a1f1/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::Resolved Keys:\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::[\"gradle-238fb9e04b7d340bf5e2db19f2c9efb9016758016d053b6aad70862498530427-004deb4541f66bbf41a19031a22c1e9b587524e3dd7ba718cdcd304280bb92d7\",\"gradle-\"]\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::Checking zstd --version\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38143/_apis/artifactcache/cache?keys=gradle-238fb9e04b7d340bf5e2db19f2c9efb9016758016d053b6aad70862498530427-004deb4541f66bbf41a19031a22c1e9b587524e3dd7ba718cdcd304280bb92d7%252Cgradle-&version=569019faed09f5f63af8a1ab2f5e0433d94f66e572509c03e0e3df35d24400c7\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | Cache not found for input keys: gradle-238fb9e04b7d340bf5e2db19f2c9efb9016758016d053b6aad70862498530427-004deb4541f66bbf41a19031a22c1e9b587524e3dd7ba718cdcd304280bb92d7, gradle-\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2705  Success - Main Cache gradle\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests] \u2b50 Run Main Run Tests with Gradle\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | Downloading https://services.gradle.org/distributions/gradle-6.2.1-all.zip\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | .............10%.............20%.............30%..............40%.............50%.............60%.............70%..............80%.............90%.............100%\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | \n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | Welcome to Gradle 6.2.1!\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | \n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | Here are the highlights of this release:\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   |  - Dependency checksum and signature verification\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   |  - Shareable read-only dependency cache\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   |  - Documentation links in deprecation messages\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | \n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | For more details see https://docs.gradle.org/6.2.1/release-notes.html\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | \n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :clean\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :spotlessJava\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :spotlessJavaCheck\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :spotlessCheck\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | \n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :compileKotlin\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | w: /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mike-neck-graalvm-native-image-plugin/src/main/kotlin/GraalVmNativeImagePlugin.kt: (38, 21): 'setMainClass(String!): Unit' is deprecated. Overrides deprecated member in 'org.mikeneck.graalvm.NativeImageConfig'. Deprecated in Java\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | Note: Some input files use or override a deprecated API.\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | Note: Recompile with -Xlint:deprecation for details.\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | \n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :compileJava\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | \n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :pluginDescriptors\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :processResources\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :classes\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :compileTestKotlin\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :compileTestJava\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :processTestResources\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :testClasses\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | > Task :test\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | \n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | BUILD SUCCESSFUL in 1m 37s\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   | 11 actionable tasks: 11 executed\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2705  Success - Main Run Tests with Gradle\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests] \u2b50 Run Main Store reports\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u274c  Failure - Main Store reports\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests] The runs.using key must be one of: [docker node12 node16 composite], got \n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests] \u2b50 Run Post Set up Java\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1.4.3/dist/cleanup/index.js] user= workdir=\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests]   \u2705  Success - Post Set up Java\n[b0156b82-f383-4a45-8d16-d5381352f6bb/Run Tests] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Run Tests' failed\n",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/mike-neck-graalvm-native-image-plugin/.github/workflows/gradle-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 296.37962222099304
    }
}