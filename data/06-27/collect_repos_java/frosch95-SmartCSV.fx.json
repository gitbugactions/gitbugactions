{
    "repository": "frosch95/SmartCSV.fx",
    "stars": 73,
    "language": "java",
    "size": 638,
    "clone_url": "https://github.com/frosch95/SmartCSV.fx.git",
    "timestamp": "2023-06-29T12:04:55.551916Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "ninja.javafx.smartcsv.files.FileStorageTest",
                "name": "save_ShouldWriteContentToWriter()",
                "time": 0.321,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.files.FileStorageTest",
                "name": "load_ShouldResetFileChangedProperty()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.files.FileStorageTest",
                "name": "load_ShouldReadContentFromReader()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.files.FileStorageTest",
                "name": "save_ShouldResetFileChangedProperty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.files.FileStorageTest",
                "name": "setFile_ShouldStoreFile()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.preferences.CharsetHelperTest",
                "name": "getCharsetName_known_charset()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.preferences.CharsetHelperTest",
                "name": "getCharsetName_null_charset()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.preferences.CharsetHelperTest",
                "name": "getCharsetName_unknown_charset()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.HeaderValidationTest",
                "name": "[1] { \"fields\": []}, [], true, null",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.HeaderValidationTest",
                "name": "[2] { \"fields\": [{\"name\" : \"a\" }]}, [a], true, null",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.HeaderValidationTest",
                "name": "[3] { \"fields\": [{\"name\" : \"a\" }]}, [b], false, [ValidationMessage{key='validation.message.header.match', parameters=[0, a, b]}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.HeaderValidationTest",
                "name": "[4] { \"fields\": [{\"name\" : \"a\" }]}, [a, b], false, [ValidationMessage{key='validation.message.header.length', parameters=[2, 1]}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.HeaderValidationTest",
                "name": "[5] { \"fields\": [{\"name\" : \"a\" },{\"name\" : \"b\" }]}, [b, a], false, [ValidationMessage{key='validation.message.header.match', parameters=[0, a, b]}, ValidationMessage{key='validation.message.header.match', parameters=[1, b, a]}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[1] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"constraints\": { \"required\":true}}]}, value, true, null",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[2] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"constraints\": { \"required\":true}}]}, , false, ValidationMessage{key='validation.message.not.empty', parameters=[]}",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[3] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"constraints\": { \"required\":true}}]}, null, false, ValidationMessage{key='validation.message.not.empty', parameters=[]}",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[4] {\"fields\": [ { \"name\": \"column\", \"type\" : \"integer\"}]}, 999, true, null",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[5] {\"fields\": [ { \"name\": \"column\", \"type\" : \"integer\"}]}, a, false, ValidationMessage{key='validation.message.integer', parameters=[]}",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[6] {\"fields\": [ { \"name\": \"column\", \"type\" : \"number\"}]}, 999, true, null",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[7] {\"fields\": [ { \"name\": \"column\", \"type\" : \"number\"}]}, 999.000, true, null",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[8] {\"fields\": [ { \"name\": \"column\", \"type\" : \"number\"}]}, a, false, ValidationMessage{key='validation.message.double', parameters=[]}",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[9] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"constraints\": { \"minLength\":2}}]}, 12, true, null",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[10] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"constraints\": { \"minLength\":2}}]}, 1, false, ValidationMessage{key='validation.message.min.length', parameters=[2]}",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[11] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"constraints\": { \"maxLength\":2}}]}, 12, true, null",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[12] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"constraints\": { \"maxLength\":2}}]}, 123, false, ValidationMessage{key='validation.message.max.length', parameters=[2]}",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[13] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"constraints\": { \"pattern\":\"[a-z]*\"}}]}, abc, true, null",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[14] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"constraints\": { \"pattern\":\"[a-z]*\"}}]}, abcA, false, ValidationMessage{key='validation.message.regexp', parameters=[[a-z]*]}",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[15] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"constraints\": { \"enum\":[a, b, c, d, e]}}]}, c, true, null",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[16] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"constraints\": { \"enum\":[a, b, c, d, e]}}]}, f, false, ValidationMessage{key='validation.message.value.of', parameters=[f, a, b, c, d, e]}",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[17] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\"}]}, some string, true, null",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[18] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"format\": \"email\"}]}, test@javafx.ninja, true, null",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[19] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"format\": \"email\"}]}, wrong email, false, ValidationMessage{key='validation.message.email', parameters=[]}",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[20] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"format\": \"uri\"}]}, http://www.javafx.ninja, true, null",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[21] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"format\": \"uri\"}]}, !$%&/(), false, ValidationMessage{key='validation.message.uri', parameters=[]}",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[22] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"format\": \"binary\"}]}, dGVzdA==, true, null",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[23] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"format\": \"binary\"}]}, no binary, false, ValidationMessage{key='validation.message.binary', parameters=[]}",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[24] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"format\": \"uuid\"}]}, 6ba7b810-9dad-11d1-80b4-00c04fd430c8, true, null",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[25] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"format\": \"uuid\"}]}, no uuid, false, ValidationMessage{key='validation.message.uuid', parameters=[]}",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[26] {\"fields\": [ { \"name\": \"column\", \"type\" : \"date\"}]}, 2015-11-27, true, null",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[27] {\"fields\": [ { \"name\": \"column\", \"type\" : \"date\"}]}, 27.11.2015, false, ValidationMessage{key='validation.message.date.format', parameters=[yyyy-MM-dd]}",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[28] {\"fields\": [ { \"name\": \"column\", \"type\" : \"date\", \"format\": \"yyyyMMdd\"}]}, 20151127, true, null",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[29] {\"fields\": [ { \"name\": \"column\", \"type\" : \"date\", \"format\": \"yyyyMMdd\"}]}, 27.11.2015, false, ValidationMessage{key='validation.message.date.format', parameters=[yyyyMMdd]}",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[30] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"groovy\": \"value.contains('a')? 'true' : 'no a inside'\"}]}, abcdef, true, null",
                "time": 0.679,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.validation.ValidatorTest",
                "name": "[31] {\"fields\": [ { \"name\": \"column\", \"type\" : \"string\", \"groovy\": \"value.contains('a')? 'true' : 'no a inside'\"}]}, bcdefg, false, ValidationMessage{key='no a inside', parameters=[]}",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.fx.table.model.CSVRowTest",
                "name": "adds_column_and_value_to_row()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.fx.table.model.CSVModelTest",
                "name": "adds_a_new_row_into_row_list()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.fx.table.model.CSVModelTest",
                "name": "new_row_has_last_index_of_list_as_rownumber()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "ninja.javafx.smartcsv.fx.table.model.CSVModelTest",
                "name": "fresh_model_has_empty_rows()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build] \ud83d\ude80  Start image=crawlergpt:latest\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/frosch95-SmartCSV.fx] user=0 workdir=\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build] \u2b50 Run Main actions/checkout@v2\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2705  Success - Main actions/checkout@v2\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build] \u2b50 Run Main Set up JDK 17\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/5211f3fa-4f06-4ede-852a-a808b84d930d/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::isExplicit: \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::explicit? false\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::match not found\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64.tar.gz\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::Downloading /tmp/8405d71f-ad6e-4fad-96ba-ab330685c38d\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::download complete\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | [command]/usr/bin/tar --version\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | tar (GNU tar) 1.30\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | This is free software: you are free to change and redistribute it.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | There is NO WARRANTY, to the extent permitted by law.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Written by John Gilmore and Jay Fenlason.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1990090514 -f /tmp/8405d71f-ad6e-4fad-96ba-ab330685c38d\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1990090514/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::Caching tool jdk 17.0.7 x64\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1990090514/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/17.0.7/x64\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::finished caching tool\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | writing /home/runneradmin/.m2/settings.xml\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2705  Success - Main Set up JDK 17\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2699  ::set-env:: JAVA_HOME_17.0.7_x64=/opt/hostedtoolcache/jdk/17.0.7/x64\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/17.0.7/x64\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2699  ::set-env:: JAVA_HOME_17_0_7_X64=/opt/hostedtoolcache/jdk/17.0.7/x64\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/17.0.7/x64\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2699  ::set-output:: version=17.0.7\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/17.0.7/x64/bin\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build] \u2b50 Run Main Grant execute permission for gradlew\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2705  Success - Main Grant execute permission for gradlew\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build] \u2b50 Run Main Build with Gradle\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Downloading https://services.gradle.org/distributions/gradle-7.2-bin.zip\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | .............................................................................................................\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Welcome to Gradle 7.2!\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Here are the highlights of this release:\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   |  - Toolchain support for Scala\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   |  - More cache hits when Java source files have platform-specific line endings\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   |  - More resilient remote HTTP build cache behavior\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | For more details see https://docs.gradle.org/7.2/release-notes.html\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Configure project :\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Project : => no module-info.java found\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Note: Some input files use unchecked or unsafe operations.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Note: Recompile with -Xlint:unchecked for details.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :compileJava\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :compileGroovy NO-SOURCE\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :processResources\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :classes\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :jar\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :startScripts\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :distTar\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :distZip\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :assemble\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :compileTestJava\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Note: Some input files use unchecked or unsafe operations.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Note: Recompile with -Xlint:unchecked for details.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :compileTestGroovy NO-SOURCE\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :processTestResources NO-SOURCE\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :testClasses\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :test\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :check\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :build\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | See https://docs.gradle.org/7.2/userguide/command_line_interface.html#sec:command_line_warnings\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | BUILD SUCCESSFUL in 45s\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | 8 actionable tasks: 8 executed\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2705  Success - Main Build with Gradle\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build] \u2b50 Run Main Test with Gradle\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Configure project :\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Project : => no module-info.java found\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :compileJava UP-TO-DATE\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :compileGroovy NO-SOURCE\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :processResources UP-TO-DATE\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :classes UP-TO-DATE\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :compileTestJava UP-TO-DATE\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :compileTestGroovy NO-SOURCE\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :processTestResources NO-SOURCE\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :testClasses UP-TO-DATE\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | > Task :test UP-TO-DATE\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | See https://docs.gradle.org/7.2/userguide/command_line_interface.html#sec:command_line_warnings\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | \n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | BUILD SUCCESSFUL in 2s\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   | 4 actionable tasks: 4 up-to-date\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2705  Success - Main Test with Gradle\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build] \u2b50 Run Post Set up JDK 17\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build]   \u2705  Success - Post Set up JDK 17\n[309e0bc1-2fa5-462b-b9df-0940e0bb1c58/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/frosch95-SmartCSV.fx/.github/workflows/build-and-test-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 148.78459191322327
    }
}