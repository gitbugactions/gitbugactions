{
    "repository": "tectonicus/tectonicus",
    "stars": 129,
    "language": "java",
    "size": 46409,
    "clone_url": "https://github.com/tectonicus/tectonicus.git",
    "timestamp": "2023-06-29T11:17:10.427834Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tectonicus.raw.PlayerTests",
                "name": "testLoadPlayerFromPlayerFile()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.MinecraftTests",
                "name": "testFindLevelDat()",
                "time": 0.432,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.MinecraftTests",
                "name": "testIsValidWorldDir()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.MinecraftTests",
                "name": "findServerPlayerFileFindsWhitelistJson()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.configuration.PlayerFilterTests",
                "name": "passesFilterWithFilterTypeAll()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.configuration.PlayerFilterTests",
                "name": "testCreatePlayerFilter()",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.configuration.PlayerFilterTests",
                "name": "passesFilterWithJsonWhitelist()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.configuration.PlayerFilterTests",
                "name": "passesFilterWithTxtWhitelist()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.configuration.PlayerFilterTests",
                "name": "createPlayerFilterWithDefaultWhitelist()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.raw.BlockPropertiesTest",
                "name": "insertInMapUnorderedReturnsTrue()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.raw.BlockPropertiesTest",
                "name": "propertiesContainsVariantString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.raw.BlockPropertiesTest",
                "name": "returnsCorrectToString()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.util.FileUtilsTests",
                "name": "testValidJsonReturnsTrue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.util.FileUtilsTests",
                "name": "testInvalidJsonReturnsFalse()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.cache.swap.HddTileListTests",
                "name": "singleIterate()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.cache.swap.HddTileListTests",
                "name": "createList()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.cache.swap.HddTileListTests",
                "name": "emptyIterate()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.cache.swap.HddTileListTests",
                "name": "iterate()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.blockTypes.BlockVariantTests",
                "name": "createMultipleStatesMap()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.blockTypes.BlockVariantTests",
                "name": "createSingleStateMap()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.blockTypes.BlockVariantTests",
                "name": "testDeserializeVariantMultipleModels()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": null,
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.blockTypes.BlockVariantTests",
                "name": "testDeserializeVariantSingleModel()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": null,
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.raw.BiomesOldTests",
                "name": "enumLookupInvalidId()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.raw.BiomesOldTests",
                "name": "getNameReturnsLowercaseName()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.raw.BiomesOldTests",
                "name": "enumLookupValidId()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.raw.LevelDatTests",
                "name": "createLevelDatFromOldLevel()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tectonicus.raw.LevelDatTests",
                "name": "createLevelDat()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[706a93e7-6a6f-4fed-8bf2-665a376054a1/build] \ud83d\ude80  Start image=crawlergpt:latest\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/tectonicus-tectonicus] user=0 workdir=\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build] \u2b50 Run Main actions/checkout@v2\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2705  Success - Main actions/checkout@v2\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build] \u2b50 Run Main Set up JDK 1.8\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/26a0c2ea-0e2e-4696-bb8f-71e65c0697bb/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::isExplicit: \n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::explicit? false\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::match not found\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::Downloading /tmp/55024c00-7b0e-43c3-91ad-36fc2d496c9c\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::download complete\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | [command]/usr/bin/tar --version\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | tar (GNU tar) 1.30\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | This is free software: you are free to change and redistribute it.\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | There is NO WARRANTY, to the extent permitted by law.\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | \n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | Written by John Gilmore and Jay Fenlason.\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1212214044 -f /tmp/55024c00-7b0e-43c3-91ad-36fc2d496c9c\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1212214044/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::Caching tool jdk 8.0.372 x64\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1212214044/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/8.0.372/x64\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::finished caching tool\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | writing /home/runneradmin/.m2/settings.xml\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2705  Success - Main Set up JDK 1.8\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2699  ::set-env:: JAVA_HOME_8.0.372_x64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.372/x64\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2699  ::set-env:: JAVA_HOME_8_0_372_X64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/8.0.372/x64\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2699  ::set-output:: version=8.0.372\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/8.0.372/x64/bin\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build] \u2b50 Run Main Grant execute permission for gradlew\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2705  Success - Main Grant execute permission for gradlew\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build] \u2b50 Run Main Build with Gradle\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | Downloading https://services.gradle.org/distributions/gradle-7.6-bin.zip\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | ...........10%............20%...........30%............40%............50%...........60%............70%............80%...........90%............100%\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | \n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | Welcome to Gradle 7.6!\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | \n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | Here are the highlights of this release:\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   |  - Added support for Java 19.\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   |  - Introduced `--rerun` flag for individual task rerun.\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   |  - Improved dependency block for test suites to be strongly typed.\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   |  - Added a pluggable system for Java toolchains provisioning.\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | \n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | For more details see https://docs.gradle.org/7.6/release-notes.html\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | \n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :compileJava\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :processResources\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :classes\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :compileTestJava\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :processTestResources\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :testClasses\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :shadowJar\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :startShadowScripts\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :shadowDistZip\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :assemble\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :test\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :check\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | > Task :build\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | \n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | BUILD SUCCESSFUL in 55s\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   | 8 actionable tasks: 8 executed\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2705  Success - Main Build with Gradle\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build] \u2b50 Run Post Set up JDK 1.8\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build]   \u2705  Success - Post Set up JDK 1.8\n[706a93e7-6a6f-4fed-8bf2-665a376054a1/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/tectonicus-tectonicus/.github/workflows/gradle-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 117.03281927108765
    }
}