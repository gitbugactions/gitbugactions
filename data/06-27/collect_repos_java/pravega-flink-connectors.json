{
    "repository": "pravega/flink-connectors",
    "stars": 93,
    "language": "java",
    "size": 1896,
    "clone_url": "https://github.com/pravega/flink-connectors.git",
    "timestamp": "2023-06-29T12:51:56.206840Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "io.pravega.connectors.flink.sink.PravegaTransactionStateTest",
                "name": "testInit()",
                "time": 0.282,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.EventTimeOrderingFunctionTest",
                "name": "testProcessingTime()",
                "time": 0.478,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.EventTimeOrderingFunctionTest",
                "name": "testLateElements()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.EventTimeOrderingFunctionTest",
                "name": "testOrdering()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.sink.PravegaTransactionStateSerializerTest",
                "name": "testTransactionStateSerDe()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testOpenClose()",
                "time": 0.984,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testTransactionalWriterCommitFailCase()",
                "time": 0.314,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testNonTransactionalWriterProcessElementErrorHandling()",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testTransactionalWriterNormalCase()",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testFlinkSerializer()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testSchemaRegistrySerialization()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testTransactionalWriterCommitWrongStatusCase()",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testTransactionalWriterClose()",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testNonTransactionalWriterClose()",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testNonTransactionalWriterFlush()",
                "time": 1.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testNonTransactionalWriterProcessElementWrite()",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testOpenSerializationSchema()",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testTransactionalWriterCommitWithUnknownId()",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testNonTransactionalWriterProcessElementAccounting()",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testTransactionalWriterOpen()",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testNonTransactionalWriterSnapshot()",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterTest",
                "name": "testConstructor()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.source.enumerator.FlinkPravegaSplitEnumeratorTest",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testSerializeAsSequenceReusingValues()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testNullability()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testCopy()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testSerializedCopyIndividually()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testSerializabilityAndEquals()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testSerializeAsSequenceNoReuse()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testSerializeIndividuallyReusingValues()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testCopyIntoNewElements()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testCopyIntoReusedElements()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testConfigSnapshotInstantiation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testSnapshotConfigurationAndReconfigure()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testSerializeIndividually()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testGetLength()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testSerializedCopyAsSequence()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaTransactionStateSerializerTest",
                "name": "testDuplicate()",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkSerializerWrapperTest",
                "name": "testNotFullyWrappingByteBuffer()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.formats.registry.PravegaRegistrySeDeITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.sink.PravegaSinkITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.source.reader.FlinkPravegaSplitReaderTest",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaOutputFormatTest",
                "name": "testBuilderForFailure1()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaOutputFormatTest",
                "name": "testBuilderForFailure2()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaOutputFormatTest",
                "name": "testSchemaRegistrySerialization()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaOutputFormatTest",
                "name": "testLifecycleMethods()",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaOutputFormatTest",
                "name": "testBuilderForSuccess()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaInputFormatITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.source.FlinkPravegaSourceITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaSchemaRegistryReaderTestITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaOutputFormatITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderSavepointITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.sink.PravegaSinkWriterITCase",
                "name": "initializationError",
                "time": 0.001,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testMissingSinkStream()",
                "time": 0.724,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testStreamingTableSourceProvider()",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testTableSinkProvider()",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testMissingSourceStream()",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testInvalidSinkSemantic()",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testStreamingTableSource()",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testTableSink()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testInvalidScanExecutionType()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testNegativeMaxCheckpointRequest()",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testBatchTableSourceProvider()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testStreamingTableSourceWithOptionalReaderGroupName()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testBatchTableSource()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testInvalidStartStreamCuts()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testStreamingTableSourceWithMetadata()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.dynamic.table.FlinkPravegaDynamicTableFactoryTest",
                "name": "testInvalidEndStreamCuts()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.serialization.PravegaSerializationTest",
                "name": "testSerialization()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.serialization.PravegaSerializationTest",
                "name": "testNotFullyWrappingByteBuffer()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.serialization.PravegaSerializationTest",
                "name": "testCollectorSerialization()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.serialization.PravegaSerializationTest",
                "name": "testSerializerFastPath()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.serialization.PravegaSerializationTest",
                "name": "testJsonSerializer()",
                "time": 0.988,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaWriterITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderRGStateITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.PravegaConfigTest",
                "name": "testStreamResolveWithoutDefaultScope()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.PravegaConfigTest",
                "name": "testParameterResolve()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.PravegaConfigTest",
                "name": "testStreamResolve()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.PravegaConfigTest",
                "name": "testGetClientConfig()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.PravegaConfigTest",
                "name": "testScopePriority()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.PravegaInputSplitTest",
                "name": "testEquals()",
                "time": 0.112,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.PravegaInputSplitTest",
                "name": "testNotEquals()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaInputFormatTest",
                "name": "testBuilderForMissingStream()",
                "time": 0.299,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaInputFormatTest",
                "name": "testBuilderForMissingDeSerializationSchema()",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaInputFormatTest",
                "name": "testLifecycleMethods()",
                "time": 0.408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaInputFormatTest",
                "name": "testSchemaRegistryDeserialization()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaInputFormatTest",
                "name": "testBuilderForSuccess()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.PravegaCatalogITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.source.reader.FlinkPravegaSourceReaderTest",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.ReaderCheckpointHookTest",
                "name": "testTriggerCheckpointTimeout()",
                "time": 0.467,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.ReaderCheckpointHookTest",
                "name": "testClose()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.ReaderCheckpointHookTest",
                "name": "testReset()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.ReaderCheckpointHookTest",
                "name": "testTriggerCheckpoint()",
                "time": 0.147,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.ReaderCheckpointHookTest",
                "name": "testRestore()",
                "time": 0.144,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.ReaderCheckpointHookTest",
                "name": "testConstructor()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.util.FlinkPravegaUtilsTest",
                "name": "testGetReaderName()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.formats.registry.PravegaRegistryFormatFactoryTest",
                "name": "testSeDeSchema()",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.sink.PravegaSinkBuilderTest",
                "name": "testValidBuilderWithWriterMode()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.sink.PravegaSinkBuilderTest",
                "name": "testThrowsExceptionWhenStreamIsNotSet()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.sink.PravegaSinkBuilderTest",
                "name": "testValidBuilder()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaSchemaRegistryWriterTestITCase",
                "name": "initializationError",
                "time": 0.0,
                "results": [
                    {
                        "result": "Failure",
                        "message": "java.lang.ExceptionInInitializerError",
                        "type": "java.lang.ExceptionInInitializerError"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderTest",
                "name": "testTruncated()",
                "time": 0.72,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderTest",
                "name": "testOpenDeserializationSchema()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderTest",
                "name": "testRunWithWatermark()",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderTest",
                "name": "testRun()",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderTest",
                "name": "testMissingGroupName()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderTest",
                "name": "testSchemaRegistryDeserialization()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderTest",
                "name": "testCancellation()",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderTest",
                "name": "testInitialize()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderTest",
                "name": "testGenerateUid()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderTest",
                "name": "testRgScope()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderTest",
                "name": "testRunWithMetadata()",
                "time": 1.365,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "io.pravega.connectors.flink.FlinkPravegaReaderTest",
                "name": "testBuilderProperties()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build] \ud83d\ude80  Start image=crawlergpt:latest\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/pravega-flink-connectors] user=0 workdir=\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build] \u2b50 Run Main actions/checkout@v2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2705  Success - Main actions/checkout@v2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build] \u2b50 Run Main Set up JDK 11\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker cp src=/tmp/act-cache/e0027250-5e4e-408e-9214-7dfb3d3efde4/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::isExplicit: \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::explicit? false\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::match not found\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::Downloading /tmp/40d8aa7c-17e6-4a15-8b61-ad8bfca5f605\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::download complete\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | [command]/usr/bin/tar --version\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | tar (GNU tar) 1.30\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | This is free software: you are free to change and redistribute it.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | There is NO WARRANTY, to the extent permitted by law.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Written by John Gilmore and Jay Fenlason.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_363084885 -f /tmp/40d8aa7c-17e6-4a15-8b61-ad8bfca5f605\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_363084885/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::Caching tool jdk 11.0.19 x64\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_363084885/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/11.0.19/x64\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::finished caching tool\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | writing /home/runneradmin/.m2/settings.xml\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2705  Success - Main Set up JDK 11\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/11.0.19/x64\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2699  ::set-env:: JAVA_HOME_11_0_19_X64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2699  ::set-env:: JAVA_HOME_11.0.19_x64=/opt/hostedtoolcache/jdk/11.0.19/x64\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/11.0.19/x64\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2699  ::set-output:: version=11.0.19\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/11.0.19/x64/bin\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build] \u2b50 Run Main Cache gradle modules\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker cp src=/tmp/act-cache/e0027250-5e4e-408e-9214-7dfb3d3efde4/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::Resolved Keys:\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::[\"Linux-gradle-c09e53d78eb3556801e303e1dc1a198852a461d959a906713034164863a118c9\"]\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::Checking zstd --version\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38429/_apis/artifactcache/cache?keys=Linux-gradle-c09e53d78eb3556801e303e1dc1a198852a461d959a906713034164863a118c9&version=608bd74f87b121c02343a082e5bb8d4f6031d304645214a62d26f818cdb0de6b\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Cache not found for input keys: Linux-gradle-c09e53d78eb3556801e303e1dc1a198852a461d959a906713034164863a118c9\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2705  Success - Main Cache gradle modules\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build] \u2b50 Run Main Cache build outputs\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker cp src=/tmp/act-cache/e0027250-5e4e-408e-9214-7dfb3d3efde4/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::Resolved Keys:\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::[\"1\"]\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::Checking zstd --version\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38429/_apis/artifactcache/cache?keys=1&version=2304255c5703887b03fb207455c4bdc19a932f3152ebb327739303e73ae6a37e\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Cache not found for input keys: 1\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2705  Success - Main Cache build outputs\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build] \u2b50 Run Main Grant execute permission for gradlew\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2705  Success - Main Grant execute permission for gradlew\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build] \u2b50 Run Main Build via Gradle\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Downloading https://services.gradle.org/distributions/gradle-7.0.2-bin.zip\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | ..........10%...........20%...........30%..........40%...........50%...........60%..........70%...........80%...........90%..........100%\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Welcome to Gradle 7.0.2!\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Here are the highlights of this release:\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |  - File system watching enabled by default\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |  - Support for running with and building Java 16 projects\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |  - Native support for Apple Silicon processors\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |  - Dependency catalog feature preview\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | For more details see https://docs.gradle.org/7.0.2/release-notes.html\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :clean UP-TO-DATE\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :compileJava\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/pravega-flink-connectors/src/main/java/io/pravega/connectors/flink/table/catalog/pravega/util/PravegaSchemaUtils.java:29: warning: [deprecation] TableSchema in org.apache.flink.table.api has been deprecated\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | import org.apache.flink.table.api.TableSchema;\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |                                  ^\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/pravega-flink-connectors/src/main/java/io/pravega/connectors/flink/table/catalog/pravega/PravegaCatalog.java:360: warning: [deprecation] getSchema() in CatalogBaseTable has been deprecated\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |                 table.getSchema(), serializationFormat);\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |                      ^\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/pravega-flink-connectors/src/main/java/io/pravega/connectors/flink/table/catalog/pravega/util/PravegaSchemaUtils.java:56: warning: [deprecation] fromLegacyInfoToDataType(TypeInformation<?>) in TypeConversions has been deprecated\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |                 dataType = TypeConversions.fromLegacyInfoToDataType(JsonRowSchemaConverter.convert(schemaString));\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |                                           ^\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/pravega-flink-connectors/src/main/java/io/pravega/connectors/flink/table/catalog/pravega/util/PravegaSchemaUtils.java:62: warning: [deprecation] fromLegacyInfoToDataType(TypeInformation<?>) in TypeConversions has been deprecated\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |                 dataType = TypeConversions.fromLegacyInfoToDataType(AvroSchemaConverter.convertToTypeInfo(schemaString));\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |                                           ^\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/pravega-flink-connectors/src/main/java/io/pravega/connectors/flink/table/catalog/pravega/util/PravegaSchemaUtils.java:72: warning: [deprecation] TableSchema in org.apache.flink.table.api has been deprecated\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     public static SchemaInfo tableSchemaToSchemaInfo(TableSchema tableSchema, SerializationFormat serializationFormat) {\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |                                                      ^\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Note: Some input files use unchecked or unsafe operations.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Note: Recompile with -Xlint:unchecked for details.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | 5 warnings\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :processResources\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :classes\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :jar\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :javadoc\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :javadocJar\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :sourcesJar\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :assemble\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :checkstyleMain\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Note: Some input files use or override a deprecated API.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Note: Recompile with -Xlint:deprecation for details.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Note: Some input files use unchecked or unsafe operations.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Note: Recompile with -Xlint:unchecked for details.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :compileTestJava\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :processTestResources\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :testClasses\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :checkstyleTest\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :test\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | PravegaCatalogITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at PravegaCatalogITCase.java:85\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :spotbugsMain\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :spotbugsTest\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :test\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaSchemaRegistryWriterTestITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaSchemaRegistryWriterTestITCase.java:86\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaSchemaRegistryReaderTestITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaSchemaRegistryReaderTestITCase.java:62\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaInputFormatITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaInputFormatITCase.java:46\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaOutputFormatITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaOutputFormatITCase.java:41\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaSplitReaderTest > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaSplitReaderTest.java:56\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaSourceReaderTest > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaSourceReaderTest.java:57\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaSplitEnumeratorTest > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaSplitEnumeratorTest.java:55\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaSourceITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaSourceITCase.java:48\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | WARNING: An illegal reflective access operation has occurred\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/home/runneradmin/.gradle/caches/modules-2/files-2.1/com.esotericsoftware.kryo/kryo/2.24.0/c6b206e80cfd97e66a1364003724491c757b92f/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object)\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | WARNING: All illegal access operations will be denied in a future release\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaWriterITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaWriterITCase.java:63\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaDynamicTableITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaDynamicTableITCase.java:70\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaReaderSavepointITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaReaderSavepointITCase.java:67\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | PravegaRegistrySeDeITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at PravegaRegistrySeDeITCase.java:118\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaReaderITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaReaderITCase.java:55\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | PravegaSinkITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at PravegaSinkITCase.java:50\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | PravegaSinkWriterITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at PravegaSinkWriterITCase.java:51\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FlinkPravegaReaderRGStateITCase > initializationError FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |     java.lang.ExceptionInInitializerError at NativeMethodAccessorImpl.java:-2\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   |         Caused by: java.lang.IllegalStateException at FlinkPravegaReaderRGStateITCase.java:68\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | 115 tests completed, 17 failed\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :test FAILED\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > Task :jacocoTestReport\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | FAILURE: Build failed with an exception.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | * What went wrong:\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Execution failed for task ':test'.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | > There were failing tests. See the report at: file:///tmp/3d783ea4-1661-11ee-8a50-bb14de238602/pravega-flink-connectors/build/reports/tests/test/index.html\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | * Try:\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | * Get more help at https://help.gradle.org\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | \n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | BUILD FAILED in 2m 38s\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   | 15 actionable tasks: 14 executed, 1 up-to-date\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u274c  Failure - Main Build via Gradle\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build] exitcode '1': failure\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build] \u2b50 Run Post Set up JDK 11\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build]   \u2705  Success - Post Set up JDK 11\n[88ca9fcb-1bf3-4ecb-8abd-ded0ac87c1c3/Build] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Build' failed\n",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/pravega-flink-connectors/.github/workflows/build-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 347.3719139099121
    }
}