{
    "repository": "cronn/reflection-util",
    "stars": 51,
    "language": "java",
    "size": 644,
    "clone_url": "https://github.com/cronn/reflection-util.git",
    "timestamp": "2023-06-29T13:14:59.231868Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "gradle"
    ],
    "actions_test_build_tools": [
        "gradle"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "de.cronn.reflection.util.immutable.collection.DeepImmutableSetTest",
                "name": "testCreateImmutableProxy()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.collection.DeepImmutableSetTest",
                "name": "testConstruction()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.AssertTest",
                "name": "testIsNull()",
                "time": 0.199,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.AssertTest",
                "name": "testIsTrue()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.AssertTest",
                "name": "testNotNull()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.AssertTest",
                "name": "testConstructor()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.collection.DeepImmutableCollectionTest",
                "name": "testCreateImmutableProxy()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.collection.DeepImmutableCollectionTest",
                "name": "testReadOnlyMethods()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.collection.DeepImmutableCollectionTest",
                "name": "testWriteMethodsAreRejected()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.RecordSupportTest",
                "name": "testArrayUtils_lastIndexOf()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.RecordSupportTest",
                "name": "testArrayUtils_indexOf()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxyOnClassWithFinalReadOnlyMethods()",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy_Collection()",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testDoNotProxyReturnValueInCloneMethod()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxyOnAtomicLong()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy_ReferencedEntityIsAlsoImmutable()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testIsImmutableProxy()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testSerializeDeepImmutableList()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy_MapWithList()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxyOnObject()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy_Collection_Stream()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testDate()",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testReadOnlyAnnotationsInInterface()",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testSerializeImmutableProxy()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxyIsEqualToOriginal()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy_Map()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy_ListWithList()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testConcurrentlyCreateProxy()",
                "time": 1.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxyOnImmutableProxy()",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxyOnImmutableValue()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy_fluentSetter()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy_TooSpecificReturnType()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy_Collection_Iterator()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxyOnFinalClass()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxyIsAView()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testSerializeDeepImmutableMap()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testSerializeDeepImmutableSet()",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxyOnMutableNumber()",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy_TestEntity()",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy_MapWithMap()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testImmutableProxy_MapWithSet()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testDoNotProxyReturnValueIfDisabledByReadOnlyAnnotation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "testUnwrap()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[1] boolean, true",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[2] class java.lang.Boolean, true",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[3] int, true",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[4] class java.lang.Integer, true",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[5] long, true",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[6] class java.lang.Long, true",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[7] byte, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[8] class java.lang.Byte, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[9] short, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[10] class java.lang.Short, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[11] float, true",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[12] class java.lang.Float, true",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[13] double, true",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[14] class java.lang.Double, true",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[15] char, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[16] class java.lang.Character, true",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[17] class java.math.BigDecimal, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[18] class java.time.Instant, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[19] class java.time.Duration, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[20] class java.time.ZonedDateTime, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[21] class java.lang.String, true",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[22] class java.util.UUID, true",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[23] class java.net.URI, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[24] interface java.nio.file.Path, true",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[25] class java.io.File, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[26] class java.util.concurrent.atomic.AtomicLong, false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[27] class java.util.ArrayList, false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.ImmutableProxyTest",
                "name": "[28] interface java.util.List, false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.MethodSignatureTest",
                "name": "testEquals()",
                "time": 0.22,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.collection.DeepImmutableListTest",
                "name": "testCreateImmutableProxy()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.collection.DeepImmutableListTest",
                "name": "testReadOnlyMethods()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.collection.DeepImmutableListTest",
                "name": "testConstruction()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.collection.DeepImmutableListTest",
                "name": "testWriteMethodsAreRejected()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetMethod_CallSiteSpecificLambda()",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetVoidMethod_CallSiteSpecificLambda()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetVoidMethodName()",
                "time": 0.747,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetVoidMethodName_AnonymousClass()",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testFindDeclaredMethodsByArgumentTypes()",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testHasMethodWithSameSignature_shouldNotMatchMethodSignature_whenReturnTypeIsDifferentThanHappyPath()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetVoidMethod_lambdaWithException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testCreateInstance_AccessibleFlagIsRestored()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testCreateNewInstanceLikeOfProxy()",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testCreateNewInstanceLikeProtectedConstructor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetVoidMethod_lambdaThatIsNoRealMethod()",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetAllDeclaredMethodSignatures()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testIsFromPackage()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testHaveSameSignature()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetRealClass()",
                "time": 0.187,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetVoidMethod()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testFindAnnotation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetAllDeclaredMethods()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testCreateNewInstanceLikeProtectedNoArgConstructor()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetMethodName()",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "[1] java.lang.Object, false",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "[2] java.lang.String, false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "[3] my.package.SomeClass, false",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "[4] my.package.SomeClass$$proxy, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "[5] my.package.SomeClass$ByteBuddy$abcdef, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "[6] my.package.SomeClass$HibernateProxy$abcdef, true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testHasMethodWithSameSignature_shouldNotMatchMethodSignature_whenParametersAreDifferentThanHappyPath()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetMethod()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testIsProxyClass()",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testHasMethodWithSameSignature_shouldNotMatchMethodSignature_whenNameIsDifferentThanHappyPath()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testCreateNewInstanceLike_Null()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testIsProxy()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testHasMethodWithSameSignature_happyPath_shouldMatchMethodSignature_whenReturnTypeAndNameAndParametersAreEqual()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testConstructor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetMethod_lambdaThatIsNoRealGetter()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.ClassUtilsTest",
                "name": "testGetMethod_lambdaWithException()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testCopyValue()",
                "time": 0.509,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testFindMethodByGetter_Annotation()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testWriteDirectly_FieldWithoutSetter()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetAnnotationOfProperty_AnnotationOnSetter()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_NoMethodInvocation()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorsWithAnnotation()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testRead_ExceptionInGetter()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testCopyNonDefaultValues_NoNonDefaults()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_HappyCase()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testReadProperty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorsOfFinalClass()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testCopyNonDefaultValues()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_DefaultMethod_Subclass()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorsOfTestEntityClass()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testReadDirectly_FieldWithoutGetter()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testRead_FieldWithoutGetter()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testWrite_setPropertiesAlsoFromBaseClass()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByTypedPropertyGetter()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetAnnotationOfProperty_AnnotationOnDefaultMethod()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testPropertyDescriptorWithAbstractClass()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_CallSiteSpecificLambda()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_DefaultMethod()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testPropertyHasDefaultValue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testWriteDirectly_WrongType()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testPropertyDescriptor_WithoutField()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testWrite_FieldWithoutSetter()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testReadDirectly_PropertyWithoutField()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testReadDirectly()",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testReadDirectly_AccessibilityAfterDirectReadIsRestored()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorsOfClassWithDefaultMethods()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testWriteDirectly_Null()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetDefaultValueObject()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_NoVisibleDefaultConstructor()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_ClassExtendingClassThatExtendsNonPublicBaseClass()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorsOfClassExtendingNonPublicBaseClass()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testConcurrentlyCreateProxyClasses()",
                "time": 1.204,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testPropertyDescriptorByNameOrThrow()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testCopyNonDefaultValuesWithExclusion()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorsOfDerivedClassInstance()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_FinalMethodCannotBeCaptured()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_ClassExtendingNonPublicBaseClass()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testPropertyDescriptor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testIsFullyAccessible()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyName()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_NonGetterMethod()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testWriteDirectly_PropertyWithoutField()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testHasSameValue()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testHasDifferentValue()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetMethod_getMethodWithoutProperty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testWriteDirectly_ProxyClass()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testProxyIsCached()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testIsWritable()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testWrite_setFieldWithPackageSetterAccess()",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testQualifiedPropertyName()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetAnnotationOfProperty()",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetAnnotationOfProperty_AnnotationOverwrittenOnGetter()",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testHasProperty()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testReadIfPropertyExists()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetMethod_getNumber()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_NonPublicMethodCannotBeCaptured()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetMethod_getParent()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByField()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testWritePropertyIfExists()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testIsDefaultValue()",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testPropertyDescriptor_ClassWithMethodCaptorField()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testHasAnnotationOfProperty()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_FinalClass()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testReadDirectly_Name()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_DefaultMethod_ClassWithInheritedDefaultMethods()",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testIsReadable()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testIsDeclaredInClass()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByPropertyGetter_DefaultMethod_SubInterface()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testConstructor()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testIsCollectionType()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testGetPropertyDescriptorByName_FinalClass()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.PropertyUtilsTest",
                "name": "testReadForced_FieldWithoutGetter()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.collection.DeepImmutableMapTest",
                "name": "testImmutableMap_ImmutableKey()",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.immutable.collection.DeepImmutableMapTest",
                "name": "testImmutableMap()",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.MethodCaptorTest",
                "name": "testCapture_HappyCase()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.MethodCaptorTest",
                "name": "testCapture_Twice()",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "de.cronn.reflection.util.MethodCaptorTest",
                "name": "testCapture_NothingCaptured()",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ] \ud83d\ude80  Start image=crawlergpt:latest\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage] \ud83d\ude80  Start image=crawlergpt:latest\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/cronn-reflection-util] user=0 workdir=\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/cronn-reflection-util] user=0 workdir=\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ] \ud83e\uddea  Matrix: map[java:8]\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ] \u2b50 Run Main actions/checkout@v2\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \u2705  Success - Main actions/checkout@v2\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ] \u2b50 Run Main Setup Java\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udc33  docker cp src=/tmp/act-cache/962201b2-7d19-4995-907d-ea717ba2c989/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::isExplicit: \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::explicit? false\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::evaluating 0 versions\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::match not found\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::Downloading /tmp/ad273852-c062-431f-a9ec-348f7be13d26\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::download complete\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | [command]/usr/bin/tar --version\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | tar (GNU tar) 1.30\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | This is free software: you are free to change and redistribute it.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | There is NO WARRANTY, to the extent permitted by law.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | Written by John Gilmore and Jay Fenlason.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_88071071 -f /tmp/ad273852-c062-431f-a9ec-348f7be13d26\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_88071071/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::Caching tool jdk 8.0.372 x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::source dir: /tmp/temp_88071071/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/8.0.372/x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::finished caching tool\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | writing /home/runneradmin/.m2/settings.xml\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \u2705  Success - Main Setup Java\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \u2699  ::set-env:: JAVA_HOME_8.0.372_x64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.372/x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \u2699  ::set-env:: JAVA_HOME_8_0_372_X64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/8.0.372/x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \u2699  ::set-output:: version=8.0.372\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/8.0.372/x64/bin\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ] \u2b50 Run Main Build with Gradle\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | Downloading https://services.gradle.org/distributions/gradle-7.6-all.zip\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | ...............10%................20%................30%................40%...............50%................60%................70%................80%...............90%................100%\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | Welcome to Gradle 7.6!\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | Here are the highlights of this release:\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   |  - Added support for Java 19.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   |  - Introduced `--rerun` flag for individual task rerun.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   |  - Improved dependency block for test suites to be strongly typed.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   |  - Added a pluggable system for Java toolchains provisioning.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | For more details see https://docs.gradle.org/7.6/release-notes.html\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | > Task :compileJava\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | Note: /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/cronn-reflection-util/src/main/java/de/cronn/reflection/util/immutable/ImmutableProxy.java uses or overrides a deprecated API.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | Note: Recompile with -Xlint:deprecation for details.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | Note: /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/cronn-reflection-util/src/main/java/de/cronn/reflection/util/RecordSupport.java uses unchecked or unsafe operations.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | Note: Recompile with -Xlint:unchecked for details.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | > Task :processResources NO-SOURCE\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | > Task :classes\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | > Task :jar\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | > Task :assemble\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage] \u2b50 Run Main actions/checkout@v2\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2705  Success - Main actions/checkout@v2\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage] \u2b50 Run Main Setup Java\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udc33  docker cp src=/tmp/act-cache/962201b2-7d19-4995-907d-ea717ba2c989/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | > Task :compileTestJava\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | > Task :processTestResources NO-SOURCE\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | > Task :testClasses\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | > Task :test\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | > Task :testCodeCoverageReport\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | > Task :check\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | > Task :build\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | BUILD SUCCESSFUL in 1m\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   | 5 actionable tasks: 5 executed\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \u2705  Success - Main Build with Gradle\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ] \u2b50 Run Post Setup Java\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ]   \u2705  Success - Post Setup Java\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::isExplicit: \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::explicit? false\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::evaluating 0 versions\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::match not found\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64.tar.gz\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::Downloading /tmp/323afae6-8a8e-4b66-a950-74c49d9e42be\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::download complete\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | [command]/usr/bin/tar --version\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | tar (GNU tar) 1.30\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | This is free software: you are free to change and redistribute it.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | There is NO WARRANTY, to the extent permitted by law.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Written by John Gilmore and Jay Fenlason.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_277838263 -f /tmp/323afae6-8a8e-4b66-a950-74c49d9e42be\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_277838263/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::Caching tool jdk 17.0.7 x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::source dir: /tmp/temp_277838263/zulu17.42.21-ca-crac-jdk17.0.7-linux_x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/17.0.7/x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/build          ] \ud83c\udfc1  Job succeeded\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::finished caching tool\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | writing /home/runneradmin/.m2/settings.xml\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2705  Success - Main Setup Java\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2699  ::set-env:: JAVA_HOME_17_0_7_X64=/opt/hostedtoolcache/jdk/17.0.7/x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2699  ::set-env:: JAVA_HOME_17.0.7_x64=/opt/hostedtoolcache/jdk/17.0.7/x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/17.0.7/x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/17.0.7/x64\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2699  ::set-output:: version=17.0.7\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/17.0.7/x64/bin\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage] \u2b50 Run Main Build with Gradle\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Downloading https://services.gradle.org/distributions/gradle-7.6-all.zip\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | ...............10%................20%................30%................40%...............50%................60%................70%................80%...............90%................100%\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Welcome to Gradle 7.6!\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Here are the highlights of this release:\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |  - Added support for Java 19.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |  - Introduced `--rerun` flag for individual task rerun.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |  - Improved dependency block for test suites to be strongly typed.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |  - Added a pluggable system for Java toolchains provisioning.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | For more details see https://docs.gradle.org/7.6/release-notes.html\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :compileJava\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Note: Some input files use or override a deprecated API.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Note: Recompile with -Xlint:deprecation for details.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Note: /tmp/3d783ea4-1661-11ee-8a50-bb14de238602/cronn-reflection-util/src/main/java/de/cronn/reflection/util/RecordSupport.java uses unchecked or unsafe operations.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Note: Recompile with -Xlint:unchecked for details.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :processResources NO-SOURCE\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :classes\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :jar\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :assemble\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :compileTestJava\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Note: Some input files use or override a deprecated API.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Note: Recompile with -Xlint:deprecation for details.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :processTestResources NO-SOURCE\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :testClasses\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :test\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :java-17-tests:compileJava NO-SOURCE\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :java-17-tests:processResources NO-SOURCE\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :java-17-tests:classes UP-TO-DATE\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :java-17-tests:jar\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :java-17-tests:compileTestJava\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :java-17-tests:processTestResources NO-SOURCE\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :java-17-tests:testClasses\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :java-17-tests:test\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :testCodeCoverageReport\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :check\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :build\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :java-17-tests:assemble\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :java-17-tests:check\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | > Task :java-17-tests:build\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | BUILD SUCCESSFUL in 51s\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | 8 actionable tasks: 8 executed\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2705  Success - Main Build with Gradle\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage] \u2b50 Run Main Upload coverage to Codecov\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udc33  docker cp src=/tmp/act-cache/962201b2-7d19-4995-907d-ea717ba2c989/act/codecov-codecov-action@v1/ dst=/var/run/act/actions/codecov-codecov-action@v1/\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v1/] user=0 workdir=\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v1/dist/index.js] user= workdir=\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | [command]/usr/bin/bash codecov.sh -n  -F  -Q github-action-v1.5.2 -f ./build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |   _____          _\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |  / ____|        | |\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | | |     ___   __| | ___  ___ _____   __\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |  \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |                               Bash-1.0.3\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \u001b[0;36m==>\u001b[0m git version 2.33.0 found\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \u001b[0;36m==>\u001b[0m curl 7.68.0 (x86_64-pc-linux-gnu) libcurl/7.68.0 OpenSSL/1.1.1f zlib/1.2.11 brotli/1.0.7 libidn2/2.2.0 libpsl/0.21.0 (+libidn2/2.2.0) libssh/0.9.3/openssl/zlib nghttp2/1.40.0 librtmp/2.3\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Release-Date: 2020-01-08\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | Features: AsynchDNS brotli GSS-API HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \u001b[0;90m==>\u001b[0m GitHub Actions detected.\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |     Env vars used:\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |       -> GITHUB_ACTIONS:    true\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |       -> GITHUB_HEAD_REF:   \n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |       -> GITHUB_REF:        refs/heads/main\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |       -> GITHUB_REPOSITORY: cronn/reflection-util\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |       -> GITHUB_RUN_ID:     1\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |       -> GITHUB_SHA:        95ee2e89bd61c7fd1295b46311697ba892d5ad48\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |       -> GITHUB_WORKFLOW:   b30d03db-8180-4d36-aa96-263fc6ff16a5\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |     \u001b[0;90mproject root:\u001b[0m .\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |     \u001b[0;32mYaml not found, that's ok! Learn more at\u001b[0m \u001b[0;36mhttp://docs.codecov.io/docs/codecov-yaml\u001b[0m\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |     \u001b[0;90m->\u001b[0m Found 1 reports\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \u001b[0;90m==>\u001b[0m Detecting git/mercurial file structure\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \u001b[0;90m==>\u001b[0m Reading reports\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |     \u001b[0;32m+\u001b[0m ./build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml \u001b[0;90mbytes=159361\u001b[0m\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \u001b[0;90m==>\u001b[0m Appending adjustments\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |     \u001b[0;36mhttps://docs.codecov.io/docs/fixing-reports\u001b[0m\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |     \u001b[0;90m->\u001b[0m No adjustments found\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \u001b[0;90m==>\u001b[0m Gzipping contents\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |         12K\t/tmp/codecov.b3WshA.gz\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \u001b[0;90m==>\u001b[0m Uploading reports\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |     \u001b[0;90murl:\u001b[0m https://codecov.io\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |     \u001b[0;90mquery:\u001b[0m branch=main&commit=95ee2e89bd61c7fd1295b46311697ba892d5ad48&build=1&build_url=http%3A%2F%2Fgithub.com%2Fcronn%2Freflection-util%2Factions%2Fruns%2F1&name=&tag=&slug=cronn%2Freflection-util&service=github-actions&flags=&pr=&job=b30d03db-8180-4d36-aa96-263fc6ff16a5&cmd_args=n,F,Q,f\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \u001b[0;90m->\u001b[0m  Pinging Codecov\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | https://codecov.io/upload/v4?package=github-action-v1.5.2-1.0.3&token=secret&branch=main&commit=95ee2e89bd61c7fd1295b46311697ba892d5ad48&build=1&build_url=http%3A%2F%2Fgithub.com%2Fcronn%2Freflection-util%2Factions%2Fruns%2F1&name=&tag=&slug=cronn%2Freflection-util&service=github-actions&flags=&pr=&job=b30d03db-8180-4d36-aa96-263fc6ff16a5&cmd_args=n,F,Q,f\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \u001b[0;31m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | 404\u001b[0m\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \u001b[0;90m==>\u001b[0m Uploading to Codecov\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100 11773  100   171  100 11602    353  23971 --:--:-- --:--:-- --:--:-- 26337\r100 11773  100   171  100 11602    353  23971 --:--:-- --:--:-- --:--:-- 26337\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   |     \u001b[0;32m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\u001b[0m\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2705  Success - Main Upload coverage to Codecov\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage] \u2b50 Run Post Setup Java\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage]   \u2705  Success - Post Setup Java\n[b30d03db-8180-4d36-aa96-263fc6ff16a5/publishCoverage] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/3d783ea4-1661-11ee-8a50-bb14de238602/cronn-reflection-util/.github/workflows/gradle-crawler.yml",
        "build_tool": "gradle",
        "elapsed_time": 242.46169304847717
    }
}